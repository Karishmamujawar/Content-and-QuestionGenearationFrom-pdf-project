Question_clean
"page_content=' \n GENERAL BACTERIOLOGY  \n \n1. Bacterial cell (morphology, staining reactions, classification of bacteria)  \nThe protoplast is bounded peripherally has a very thin, elastic and semi -permeable cytoplasmic membrane (a \nconventional phospholipid bilayer). Outside, and cl osely covering this, lies the rigid, supporting cell wall, \nwhich is porous and relatively permeable.  \nThe structures associated with the cell wall and the cytoplasmic membrane (collectively the cell envelope) \ncombine to produce the cell morphology and chara cteristic patterns of cell arrangement.  \nBacterial cells may have two basic shapes: spherical (coccus) or rod -shaped (bacillus); the rod -shaped \nbacteria show variants that are common -shaped (vibrio), spiral (spirillium and spirochetes) or filamentous.  \nThe c ytoplasm, or main part of the protoplasm, is a predominantly aqueous environment packed with \nribosomes and numerous other protein and nucleotide -protein complexes. Some larger structures such as \npores or inclusion granules of storage products occur in some  species under specific growth conditions.  \nOutside the cell wall there may be a protective gelatinous covering layer called a capsule.  \nSome bacteria bear, protruding outwards from the cell wall, one or more kinds of filamentous appendages: \nflagella, which are organs of locomotion, fimbriae, which appear to be organs of adhesion, and pili, which \nare involved in the transfer of genetic material. Because they are exposed to contact and interaction with the \ncells and humoral substances of the body of the host, the surface structures of bacteria are the structures most \nlikely to have special roles in the processes of infection.  \n \n     \n \nShape: this can be of 3 main types:  \nround (cocci)  \n- regular (staphylococci)  \n- flattened (meningococci)  \n- lancet shaped (pneumococci)  \nelongated (rods)  \n- straight (majority of them are like this; e.g. E.coli)  \n- short (coccobacilli; e.g acinetobacters)  \n- long (fibres) – these are mainly found in OLD cultures  \n- slender – mycobacterium tuberculosis  \n- robust – lactobacilli, b acillus  \n- with split ends - bifidobacteria  \n- branching - nocardiae, actinomycetes  \n- curved - campylobacters  \n- with flat ends – bacillus anthracis  \n- spindle -shaped - fusobacteria  \n- club-shaped - corynebacteria  \n- pleomorphic – haemophili  \n- spiral – helicobacter, spiri lium \n' metadata={'source': 'bio.pdf', 'page': 0}
"
"page_content=' \n Spiral bacteria (spirochetes): these are different to the spiral bacteria mentioned above! They are tightly \ncoiled bacteria.  \n- Thick: Spirillium  \n- Uneven: borrelia  \n- Delicate, regular: Treponema  \n- Slender with bent ends: Leptospira  \n \nSTAINING  \nTwo basic metho ds provide foundations for differential staining and detection of bacteria: the Gram stain \nand acid -fast stains.  \nBacteria are generally studied when fixed and stained. Smears or films of bacterial cultures and clinical \nspecimens are usually fixed by heat, the slide being first throughly dried in air and then heated gently in a \nflame. Vegetative bacteria are thereby killed, attached to the surface of the slide and preserve from \nundergoing autolytic changes.  \nDuring staining, the coloured, positively charged c ation of basic dyes such as methylene blue combines with \nnegatively changed groups in the cell protoplasm, specially with the phosphate groups in the abundant \nnucleic acids. Acid dyes, having coloured anions, do not stain bacteria strongly except at very a cid pH \nvalues, and thus can be used for ―negative staining‖.  \nNegative or background staining is of value as a rapid method for the simple morphological study of bateria \nand yeasts.  \nIn the case of bacteria, Gram’s stain has the widest application, distingui sinhg them as ―Gram -positive‖ or \n―Gram -negative‖, according to wether or not they resist decoloration with acetone, alcohol or aniline oil after \nstaining with a triphenyl methane dye, such as methyl violet, and subsequent treatment with iodine. The \nGram -positive bacteria resist decoloration and remain stained a dark purple colour. The Gram -negative \nbacteria are decolorized, and are then ounterstained light pink by the subsequent application of safranin, \nneutral red or dilute carbol fuschin.   \nGram reactivit y appears to reflect a fundamental aspect of cell structure and is correlated with many other \nbiological properties.  \nGram -positive bacteria are more susceptible than Gram -negative bacteria to the antibacterial actions of \npenicillin, acids, iodine, basic dy es, detergents and lysozyme, and less susceptible to alkalis, azide, tellurite, \nproteolytic enzymes, lysis by antibody and complement, and plasmolysis in solutes of high osmotic pressure.  \nThe probable mechanism of the Gram stain is attributed to difference s in the permeability of the two \nessential cell wall types. After staining with methyl violet and treatment with iodine, a dye -iodine complex is \nformed within the cell; this is insoluble in water but moderately soluble and dissociable in the acetone or \nalcohol use as the decolorizer. Under the action of the decolorizer, the dye and iodine diffuse freely out of \nthe Gram -negative cell, but not from the Gram -positive cell, presumably because the cell wall of the latter is \nless permeable. Gram -positive bacteria  become Gram -negative when their cell wall is ruptured or removed.  \n \n  G+ G- \n1. Fixation by flame  3 times    \n2. Gram stain  20 s   \n3. Lugol solution  20 s   \n4. Alcohol  máx. 20 s    \n5. Aqua fontis  rinse    \n6. Safranin  1 min    \n7. Aqua fontis  rinse    \n8 Dryi ng    \n ' metadata={'source': 'bio.pdf', 'page': 1}
"
"page_content=' \n 2. Anatomy of the bacterial cell I  – contents of cytoplasm, cytoplasmatic membrane  \nThe cytoplasm, or main part of the protoplasm, is a predominantly aqueous environment packed with \nribosomes and numerous other protein and nucleotide - protein complex es. \nBacterial nucleoid  \nThe genetic information of bacterial cell is mostly contain in a single, long molecule of double -stranded \ndeoxyribonucleic acid (DNA). The cell solves the problem of packaging this enormous macromolecule by \ncondensing and looping it into a supercoloid state.  \nThe bacterial nucleoid lies within the cytoplasm. This means that as DNA -dependent RNA polymerase \nmakes RNA, ribosomes may attach and initiate protein synthesis on the still attached (nascent) messenger \nRNA. Synthesis of mRNA and protein are therefore seen to be directly coupled  in bacteria.  \nCytoplasmic membrane  \nThe bacterial protoplasm is limited externally by a thin, elastic cytoplasmic membrane which is 5 -10nm \nthick and consists mainly of phospholipids and proteins.  \nIntegral, t ransmembrane and peripheral or anchored proteins occur in abundance and perform similar \nfunctions to those described in eukaryotes (e.g. transport and signal transduction).  \nProkaryotic cell membranes are relatively protein -rich, allowing relatively little space for phospholipids.  \n \n \n \n3. Anatomy of the bacterial cell II – cell wall, capsule, flagella, fimbriae, pili  \nCell wall  \nThe cell wall encases the protoplast and lies immediately external to the cytoplasmic membrane. It is 10 -\n25nm thick, strong and relatively rigid, tough with some elasticity, and openly porous, being freely \npermeable to small molecules. It supports the weak cytoplasmic membrane against the high internal osmotic \npressure of the protoplasm and maintains the character istic shape of the bacterium in its coccal, bacillar, \nfilamentous or spiral form.  \nCapsule  \nMany bacteria have been demonstrated to possess a more or less continuous but relatively amorphous layer \nexternal to the Gram -negative and Gram -positive envelopes.  \nThis layer is called a capsule. The capsular gel consists largely of water and has only a small content of \nsolids. In most species, the solid material is a complex polysaccharide, though in some species its main \nconstituent is polypeptide.  \nThe capsule have s ome role in interactions with the external environment. In some cases capsules have been \nshown to protect against phagocytosis, the lytic action of complement and bacteriophage invasion.  \nCapsules also appear to have a role in protecting cells against desic cation. The production of extracellular \npolysaccharides in general provides a matrix within which biofilm formation can take place.  \nFlagella  \nMotile bacteria possess filamentous appendages known as flagella, which act as organs of locomotion. The \nflagellum is a long, thin filament, twisted spirally in an open regular wave form. It originates in the bacterial \n' metadata={'source': 'bio.pdf', 'page': 2}
"
"page_content=' \n protoplasm and the structure projects throught the cell envelope. According to the species, there may be one, \nor up to 20 flagella per cell.  \nThe externa l portion of a flagellum is essentially a polymer of a single protein, flagellin, while the basal \nregion inserted into the cytoplasmic membrane comprises multiple subunits which anchor and power the \norgan.  \nMotility is clearly important to many bacteria and  probably serves mainly to place the cell in environments \nfavourable to growth and free from noxious influences.  \nIn some cases possession of flagella is thought to contribute to the pathogenesis of disease.  \nFimbriae and pili  \nMany bacteria possess filamento us appendages termed fimbriae or pili. These terms are often uses \ninterchangeably, although the latter was originally reserved for structures involved in genetic exchange \nbetween bacteria (sex pili). Fimbriae are far more numerous than flagella and more mu ch shorter and only \nabout half as thick.  \nIn contrast, sex pili are structurally similar to other fimbriae but are longer and confer the ability to attach \nspecifically to other bacteria that lack these appendages. Sex pili initiate the process of conjugatio n; they also \nact as receptor sites for certain bacteriophages.  \n \n4. Anatomy of the bacterial cell III – bacterial spores  \nSome bacteria, develop a highly resistant resting phase or endospore, whereby the organism can survive in a \ndormant state through a long pe riod of starvation or other adverse environmental conditions. The process \ndoes not involve multiplication: in sporulation, each vegetative cell forms only one spore, and in subsequent \ngermination each spore gives rise to a single vegetative cell.  \nIn the fa ce of sporulation stimuli, classically starvation or transition from growth to stationary phase, a \nprogramme of sequential expression of specific genes is triggered. The end result is a morphologically \ndistinct structure, the endospore, within the mother c ell. \nSpores are much more resistant than the vegetative forms to exposure to desinfectants, drying and heating.  \nIn the dry state, or in moist conditions unfavourable to growth, spores may remain viable for many years. \nThe marked resistance of spores has be en attributed to several factors in which they differ from vegetative \ncells: the impermeability of their cortex and outer coat, their high content of calcium and dipicolinic acid, \ntheir low content of water, and their very low metabolic and enzymic activit y.  \nReactivation of the spore is termed germination and it should be noted that this is not just a reversal of the \nprocess by which the spore was formed. Germination of the spore occurs in response to specific stimuli that \nare generally related to external  conditions favourable to growth. It is irreversible and involves rapid \ndegradative changes. The spore successively loses its heat resistance.  \nIn the process of germination, the spore swells, its cortex desintegrates, its coat is broken open and a single \nvegetative cell emerges.  \nThe initiation of germination is called activation. Activation is distinct from germination and is reversible if \ngermination does not proceed.  \nFollowing germination, cell growth leading up to the formation of the first vegetative ce ll and prior to the \nfirst cell division is referred to as outgrowth. The conditions required for successful outgrowth may differ \nmarkedly from those that allow germination.  \n   \n5. Microbial growth, incl. conditions required  \nBacteria reproduce by binary fission , which is a form of asexual reproduction and cell division.  \n- Period I (initiation): the cell grows and proteins that start the next step accumulate inside it.  \n- Period C (chromosome replication): begins in one spot and diverges out in opposite directions  \n- Period D (division): a supply of macromolecules is formed. The cytoplasmic membrane inserts \nbetween he replicated chromosomes and separates them. The cell wall grows into the cell at a \nparticular spot and forms a septum that ultimately divides the maternal ce ll into two daughter cells.  \nDivision of cocci can occur in one plane e.g. streptococci or in different planes e.g. staphylococci. Division \nof rods can occur in the transverse plane e.g. majority of chain rods or in the vertical plane, e.g. \ncorynebacteria, mycobacteria.  \nThe generation time is the time taken for the number of bacteria to double or duration of the growth cycle. \nOn average it is usually about 30 minutes.  \nSince the number of bacterium double generation time.  \nE.g. If the generation time is 30 min , after 24 hours theoretically one cell gives origin to 248=2,8 x 1014 cells. \nHowever the actual amount of cells produced, is approximately 5 orders less (i.e. around 109 cells). This ' metadata={'source': 'bio.pdf', 'page': 3}
"
"page_content=' \n amount of cells can be seen by the naked eye and in a liquid broth it ap pears cloudy or sedimentation occurs \nat the bottom or a pellicle is seen at the top. In a solid medium (agar), a bacterial colony is formed.  \nThe result 109 cells/24 hours applies for stationary cultures, in which nutrients are consumed and metabolites \naccumulate. The speed of multiplication changes depending on time and the growth of the bacterium can be \nillustrated by the use of a growth curve.  \nA growth curve depicts the number of viable cell in the logarithmic scale, depending on the age of culture.  \nThere  are 4 growth phases, and they gradually change from one to the other:  \n \n \n \n- Lag - microbes are growing but not dividing. During this phase, bacterial growth cycle, synthesis of \nRNA, enzymes and other molecules occurs.  \n- Log (exponen tial) - cells are dividing at a constant speed. The relation between the number of living \ncells and time is exponential. There are more than enough nutrients to allow the cells to grow.  \n- Stationary - the number of cells is stable - the number of cells being  produced - number of cells \ndying. Here the growth rate slows down duw to the lack of nutrients and the accumulation of \nmetabolites.  \n- Death - number of cells dying > number of cells being produced. Here the bacteria have run out of \nnutrients and die.  \nGrowth  conditions:  \n1) Temperature: most bacteria grow optimally at human body temperatures (37ºC).  e.g. E.coli, which is \npart of the normal human intestinal microflora. Some can survive at higher/lower temperatures than the \nhuman body temperature.  \n2) pH: optimal cond itions are between 6,7 -7,5. However some other bacteria, like vibrio cholera can \nsurvive in pH conditions as high as 9,0 and gastric helicobacter can survive in acidic pH.  \n3) NaCl concentration: should be about 0.9% (physiologic saline). Staphylococci can mul tiply on sweaty \nskin, where the concentrations are about 10% (used on BA -> selective media).  \n4) Nutrients: need to be in the correct balance of carbon, nitrogen, hydrogen, sulphur, iron, etc, for \nsynthesis of specific bacterial compounds. Some bacteria also require ―growth factors‖ i.e. organic \ncompounds they are unable to synthesise themselves.  \n5) Osmotic pressure: bacteria are about 80 -90% water; they require moisture to grow because they obtain \nmost of their nutrients from their aqueous environment.  \n6) Anaerobes /aerobes: oxygen may or may not be needed, depending on the species of bacteria and the \ntype of metabolism used to extract energy from food. In all cases, the initial breakdown of glucose to \npyruvic acid occurs during glycolysis, which produces a net gain of two molecules of ATP    \n \n6. Microbial metabolism  \nThis is the way in which a microbe obtains energy and nutrients it requires; to survive and reproduce. The \nprocesses can be anabolic (synthesis of compounds and the consumption of energy) or catabolic (brea k down \nof substrates to gain energy). Although some bacteria are able to obtain their resources for growth in many \nways. The basic details of glycolysis, the tricarboxylic acid cycle, oxidative phophorylation, ATP \nbiosynthesis and amino acid metabolism are  constant.  \nHuman pathogenic bacteria are always chemosynthetic, organotrophic bacteria (or chemoorganotrophs).  \n' metadata={'source': 'bio.pdf', 'page': 4}
"
"page_content=' \n Catabolic reactions:  \n- Digestion - bacterial exoenzymes split the nutrient substrates into smaller molecules outside the cell.  \n- Uptake - nutrients a re taken up by passive diffusion, or more usually active transport through the \nmembrane.  \n- Preparation for oxidation - phosphorylation, etc  \n- Oxidation - removal of electrons and H+ ions. The H 2 atoms are then transferred to the hydrogen \nacceptor.  \nThere are 3 types of catabolism:  \n1)  Fermentation - breakdown of nutrients without the need for oxygen. Only small amounts of energy are \nproduced. Products are lactate, ethanol, etc.  \n2) Aerobic respiration - uses oxygen and a small amount of nutrient provides a large amount  of energy. \nProducts are CO 2 and H 2O. \n3) Anaerobic respiration - another electron acceptor  \nThe type of catabolism is related to oxygen consumption:  \n- Facultative anaerobes: they oxidise nutrients by respiration and fermentation. They can grow in all \nconditions.  \n- Obligate (strict) aerobes: they can only reproduce in the presence of oxygen.  \n- Obligate (strict) anaerobes: they die in the presence of oxygen. Their vital enzymes are inhibited by \noxygen.  \n- Micro -aerophilic bacteria - grow in conditions with traces of oxyge n \n- Aerotolerant anaerobes - they don’t utilise oxygen for growth but can survive in its presence.  \n- Capnophilic bacteria - they need higher amounts of CO 2. \n \n7. Media for microbial growth - examples  \nThe objectives of early medium design were to grow pathogenic ba cteria, separate them from the other \norganisms present in samples and, ultimately, defferentiate their phenotypic properties so that they could be \nidentified.  \nMicrobes can be grown on a solid medium or in a liquid medium, usually called a liquid broth. The re are 2 \ntypesof liquid media.  \n- Multiplying media: the most common and universal one, e.g. broth for aerobic culture and VL broth \n(Viande -Levure)  \n- Selectively multiplying media: only some bacteria can grow in this, e.g. selenite broth for \nsalmonella.  \nLiquid broths are used when there is only a small amount of microbes in the specimen and when they \nmultiply quickly.  \nSOLID MEDIA: there are several types of this.  \n● Selective solid media: similar to the liquid broth, only certain bacteria can grow in this, from a mixture of \nseveral bacteria, e.g. blood agar with 10% NaCl is used for staphylococci.  \n● Diagnostic media: they don’t selectively grow any bacteria, since t hey don’t suppress the growth of any \nmicrobe. Their contents allow microbes to grow and they can be differentiated according to some properties, \ne.g. blood agar to observe haemolytic properties.  \nSpecial kinds of diagnostic media are chromogenic and fluorog enic media.  \n- Chromogenic media: they contain a dye with bound specific substrate. The dye loses colour and is no \nlonger a dye but a chromogen. Bacteria are able to break down this specific substrate and change the \nspecific substrate to the original dye. The  media can contain more chromogens, depending on the \nnumber of species you want to differentiate. It is used for yeast cultures.  \n- Fluorogenic media: works in the same way but uses a fluorescent dye instead.  \nBLOOD AGAR: on this you can see haemolysis of RBCs , whether it is absent, partial or total. It is also \npossible to see viridation (goes green). Total haemolysis shows up due to β -hemolytic activity, whereas \npartial haemolysis is due to α -hemolysis activity and it appears green. γ -hemolysis refers to the l ack of \nhaemolytic activity.  \nBA is an enriched medium, although it can also be classified as a diagnostic medium, therefore it can be \nclassified as both.  \nENDO AGAR: it is a selective and diagnostic medium, used to grow some G - bacteria. The growing bacteria  \ncan be divided into lactose positive or lactose negative. Lactose positive bacteria are usually milder \npathogens than lactose negative ones.  ' metadata={'source': 'bio.pdf', 'page': 5}
"
"page_content=' \n OTHER SELECTIVE MEDIA: McConkey media, XLD and MAL - these ones are selective and diagnostic \nmedia used to grow Sa lmonella.  \nHAJNA MEDIUM: is grown in test tubes, even though it is a solid medium. This is because it is used for \nbiochemical testing and to see the difference between the lower part (no oxygen access) and the upper part \n(surface of the medium).  \n \n  \n \n8. Sterilization  \nSterilization means the foreign of an article from all living organisms, including viruses, bacteria and their \nspores, and fungi and their spores. In practise, all processes of sterilization have a finite probability of \nfailure. An article may be regarded as sterile if it can be demonstrated that there is a probability of less than 1 \nin a miliion of there being viable microorganism on it.  \nUses:  \nSterilization is required for instruments and materials used in procedures that  involve penetration into \nnormally sterile parts of the body, e.g. in surgical operations, intravenous infusions, hypodermic injections \nand diagnostic aspirations. It is also required for media, reagents and equipment used in laboratory practice.  \nMETHODS:  \n \n- Heat - the only method of sterilization that is both reliable and widely applicable is by heating under \ncarefully controlled conditions at temperatures above 100ºC to ensure that bacterial spores are killed.  \n- Ionizing irradiation - both β (electrons) irrad iation and γ (photons) irradiation are employed \nindustrially for the sterilization of single -use disposable items such as needles and syringes, latex \ncatheters and surgical gloves, and in the food industry to reduce spoilage and remove pathogens.  \n- Filtratio n - filters are used to remove bacteria and all larger microorganisms from liquids that are \nliable to be spoiled by heating, e.g. blood serum.  \n- Sterilant gases - ethylene oxide is used mainly by industry for the sterilization of plastics and other \nthermolab ile materials that cannot withstand heating. Formaldehyde in combination with \nsubatmospheric steam is more commonly used in hospitals for reprocessing thermolabile equipment.  \n- Sterilant liquids - use of liquids such as glutaraldehyde is generally the least effective and the most \nunreliable method, only to be applied when no other sterilization method is available.  \nThe method to use for sterilization depends on the resistance of the materials to various temperatures, \nhumidity, chemicals, etc. Also, the temper ature and time has to be sufficient enough to kill the microbes.  \nTo check how effect the sterilization was, indicators that change colour can be used at certain temperatures. \nThis is the chemical method. There is a biological one as well, which consists of  using resistant strains of \nBacillus genus. Since they are resistant, their survival is assessed at the end  of the sterilization cycle.  \n \n' metadata={'source': 'bio.pdf', 'page': 6}
"
"page_content=' \n 9. Disinfection  \nDesinfection, the freeing of an article from some or all of its burden of contaminating microorganisms, i s a \nrelative term embracing a wide range of efficacy against particular viruses, vegetative bacteria and fungi, but \nnot usually including bacterial spores.  \nUses:  \nDesinfection is applied in circunstances in which sterility is unnecessary or sterilizing proc edures are \nimpracticable.  \nMETHODS:  \nDesinfection is achieved by means of processes similar to, although less severe than, those used for \nsterilization.  \n- Heat - various methods are available using steam or water; some incorporate a cleaning stage within \nan au tomatic controlled process.  \n- Ultraviolet radiation - this has limited application for the desinfection of surfaces and some piped -\nwater supplies, but lacks penetrative power for more widespread application.  \n- Gases - formaldehyde is used as a fumigant in labo ratory environments.  \n- Filtration - are supplied to operating theatres and other critical environments is filtered to removed \npotentially hazardous microorganisms.  \n- Chemicals - various chemicals with antimicrobial properties are used as desinfectants. They ar e all \nliable to be inactivated by excessive dilution and contact with organic materials. Nevertheless, they \nmay provide a convenient method for environmental desinfections and other specific applications.  \n- The effectivity of various desinfectants to various  organisms, can be found in booklets where they \nare divided into different groups, which are alphabetically arranged, e.g. A = effective to yeast and \nbacteria, B = effective against viruses, C = bacterial endospores, T = TB mycobacterium, M = \natypical myco bacterium and V = filamentous fungi  \n \n \n10. Mechanisms of antimicrobial drug action  \nBactericidal: kills all the cells. It is an irreversible process.  \nBacteriostatic: stops bacterial cell growth. It is a reversible process. It is used mainly in people with a \nfunctional/normal immune system.  \nEx: chloramphenicol inhibits growth of E.coli (bacteriostatic) and kills  haemophilus influenzae \n(bactericidal).  \nTypes:  \n- Antiparisital  \n- Antimycotics  \n- Antivirotic  \n- Antituberculotics  \n- Antibiotics  \n- Antiseptics  \nPrimary resistance bacteri a have innate resistance, all strains of a given species are resistant.  \nSecundary resistance: some bacteria have acquired resistance - non-susceptible mutants arise and due to \nselection pressure - their number increases.  \nMechanism of resistance:  \n1) Block entr ance of antibiotics into the cell: by alteration of target site e.g.: alteration of PBP and \nMRSA.  \n2) Active efflux of an antibiotic from a cell  \n3) A false receptor is offered to the antibiotic  \n4) Alteration of metabolic pathway: e.g. enzymes that modify/destroy th e antibiotic -> β-lactamic \nantibiotic.  \nSites of action and mechanisms of antimicrobial drugs.  \n- Prevention of cell wall synthesis (β -lactams)  \n- Prevention of protein synthesis (microlides, tetracyclines)  \n- Alteration of metabolic pathways (sulfonamid)  \n- Destructio n of nucleic acid (quinolones)  \n- Destruction of cytoplasmic membrane  \n ' metadata={'source': 'bio.pdf', 'page': 7}
"
"page_content=' \n 11. Inhibitors of bacterial cell wall synthesis  \n \nSince most bacteria possess a rigid cell wall that is lacking in mammalian cells, this structure is a prime \ntarget for agents that exhibit sele ctive toxicity, the ability to inhibit or destroy the microbe without harming \nthe host. However, the bacterial cell wall can also prevent access of agents that would otherwise be effective.  \nInhibitors of bacterial cell wall synthesis act on the formation o f the peptidoglycan layer.  \nβ-lactam agents  \nPenicillins, cephalosporins and other compounds that feature a β -lactam ring in their structure fall into this \ngroup. All these compunds bind to proteins situated at the cell wall - cell membrane interface. These \npenicillin -binding proteins are involved in cell wall construction.  \nOpening of the β -lactam ring by hydrolytic enzymes, collectively called β -lactamases, abolishes antibacterial \nactivity.  \nPenicillins: Benzylpenicillins (penicillin G) exhibits unrivalled ac tivity against staphylococci, streptococci, \nneisseriae, spirochetes and certain other organisms.  \nBenzylpenicillin revolutionized the treatment of infection caused by some of the most virulent bacterial \npathogens, but it also suffer from several shortcoming s. \n- breakdown by gastric acidity when given orally  \n- very rapid excretion by the kidney  \n- susceptibility to peni cillinase (β -lactamase)  \n-  a restricted spectrum of activity  \nMethicillin - resistant Staphylococcus aureus (MRSA) and other staphylococci that owe their resistance to \nalterations in the target penicillin -binding proteins are resistant to all penicillins and t o all other β -lactam \nantibiotics.  \nCephalosporins  \nCephalosporins are generally stable to staphylococcal penicillase but they lack activity against enterococci. \nThey exhibit a broader spectrum than most penicillins and are less prone to cause hypersensitivit y reactions.  \nOther β -lactam agents  \nMonobactams  - are monocyclic compounds with a spectrum that is restricted to aerobic Gram -negative \nbacteria.  \nCarbapenems  - have an unusually broad spectrum of activity, embracing most Gram -positive and Gram -\nnegative aerob ic and anaerobic bacteria.  \nOxo-cephems  - are broad -spectrum β -lactamase - stable compounds  \nThe clavam , clavulanic acid, exhibits poor antibacterial activity, but has proved useful as a β -lactamase \ninhibitor when used in combination with β -lactamase - susce ptible compounds.  \nThe sulphones  also act as β -lactamase inhibitors and are marketed combined with ampicillin.  \nGlycopeptides  \nVancomycin and teicoplanin are large molecules that are unable to penetrate the outer membrane of Gram -\nnegative bacteria, and the sp ectrum is consequently restricted to Gram -positive organisms. Their chief \nimportance resides in their action against Gram -positive cocci with multiple resistance the other drugs.  \n \n12. Inhibitors of bacterial protein synthesis  \nBacterial ribosomes are sufficient ly different from those mammalian cells to allow selective inhibition of \nprotein synthesis.  \nTetracyclines  \nThese are broad -spectrum agents with important activity against chlamydiar, rickettsiae, mycoplasms and, \nsurprisingly, malaria parasites, as well as m ost conventional Gram -positive and Gram -negative bacteria. \nThey prevent binding of amino -acyl transfer RNA (tRNA) to the ribosome and inhibit, but do not kill, \nsusceptible bacteria.  \nChloramphenicol  \nThis compound also possess a very broad antibacterial spec trum. They act by blocking the growth of the \npeptide chain. Use of chloramphenicol has been limited to typhoid fever, meningitis and a few other clinical \nindications because of the occurance of a rare but fatal side -effect, aplastic anaemia.  \nAminoglycoside s \nStreptomycin is predominantly active against enterobacteria and M. tuberculosis. Like other members of the \naminoglycoside family it has no useful activity against streptococci, anaerobes or intracellular bacteria. The \ngroup also has is common a tendency to damage the eight cranial nerve (ototoxicity) and the kidney ' metadata={'source': 'bio.pdf', 'page': 8}
"
"page_content=' \n (nephrotoxicity). They inhibit formation of the ribosomal initiation complex and also cause misreading of \nmessenger RNA (mRNA).  \nSuch compounds have been widely used, with which they interact sy nergically.  \nMacrolides  \nThey act by interfering with the translocation of mRNA on the bacterial ribosome. They are mainly used as \nantistaphylococcal and antistreptococcal agents, though some have wider applications. They have no useful \nactivity against ente ric Gram -negative bacilli.  \nLincosamides  \nIts spectrum includes staphylococci, streptococci and most anaerobic bacteria against which clindamycin has \nbeen tempered by an association with the occasional development of severe diarrhoea, which sometimes \nprogres ses to a life -threatning pseudo -membranous colitis.  \nLincosamides bind to the 50S ribosomal subunit at a site closely related to that at which microlides act.  \nFusidic acid  \nIt blocks factor G, which is involved in peptide elongation. Fusidic acid has an unus ual spectrum of activity \nthat includes corynebacteria, nocardia and M. tuberculosis, but the antibiotic is usually regarded simply as an \nantistaphylococcal agent. It penetrates well into bone and has been widely used (generally in combination \nwith a β -lactam antibiotic to prevent the selection of resistant variants) in the treatment of staphylococcal \nosteomyelitis.  \nOxazolidinones  \nThese compounds prevent the formation of the ribosomal initiation complex and are narrow -spectrum anti -\nGram -positive agents.  \nStreptogramins  \nThe combination exhibits bactericidal activity against most Gram -positive cocci, but has poor activity \nagainst Enterococcus faecalis.  \nMupirocin  \nIt blocks the incorporation of isoleuin into proteins . its useful activity is restricted to staphylo cocci and \nstreptococci.  \n \n13. Inhibitors of bacterial nucleic acid synthesis  \nA member of important antibacterial agents act directly or indirectly on DNA or RNA synthesis.  \nSulphonamides and diaminopyrimidines  \nThese agents affect DNA synthesis bacause of their r ole in folic acid metabolism. Sulphonamides are \nanalogues of para -aminobenzoic acid, and prevent the condensation of this compound with dihydropteridine \nduring the formation of folic acid. Diaminopyrimidines prevent the reduction of dihydrofolate to \ntetrah ydrofolate.  \nSulphonamides are broad -spectrum antibacterial agents, but resistance is common and the group also suffers \nfrom problems of toxicity.  \nQuinolones  \nThese drugs act on the α subunits of DNA gyrase. Their use is virtually restricted to urinary tract  infection, \nalthough they have also been used in enteric infections and, in the case of acrosoxacin, in gonorrhoea.  \nQuinolones are quite well absorbed when given orally and are widely distributed throught the body.  \nNitroimidazoles  \nAzole derivatives feature  prominently among antifungal, antiprotozoal and anthelmintic agents.  \nThe representative of the group most commonly used clinically is metronidazole.  \nNitrofurans  \nThe most familiar nitrofuran derivative is nitrofurantoin, an agent used exclusively in urinar y tract infection.  \nNovobiocin  \nThis compound acts on the β subunit of DNA gyrase. It was once widely used as a reserve \nantistaphylococcal agent, but is no longer favoured because of problems of resistance and toxicity.  \nRifamycins  \nThis group of antibiotics i s characterized by excellent activity against mycobacteria, although other bacteria \nare also susceptible; staphylococci in particular are exquisitely sensitive. These compounds act by inhibiting \ntranscription of RNA from DNA. Rifampicin, the best known mem ber of the group , is used in tuberculosis \nand leprosy.  \n \n14. The strategy of antimicrobial chemotherapy  ' metadata={'source': 'bio.pdf', 'page': 9}
"
"page_content=' \n Antimicrobial chemotherapy is the use of chemical agents for antimicrobial action, which work by either \nkilling it (bactericidal) or stopping its growth (b acteriostatic). The strategy of the antimicrobial agents is to \nhave a target site exclusively present on the microbe and not on the host cell -> SELECTIVE TOXICITY  \nSelective toxicity with desired properties of a new antimicrobial agent:  \n- Selectivity for mic robes rather than mammalian cells  \n- Bactericidal activity  \n- Slow emergence of resistance  \n- Narrow spectrum of activity  \n- Non-toxic side effects to the host  \n- Long plasma half -life (so, low dosage is possible)  \n- Good body distribution -> to reach harder places, i.e. ad ipose tissue  \n- Decrease in plasma protein -binding  \n- No interference with other drugs  \n- Easy administration  \nThe antimicrobial agents target cell wall, protein, and nucleic acid synthesis; metabolic pathways, and cell \nmembrane functions.  \n \n    Triangle relationship  \n    Antimicrobial agents  \n \n \n Human host       Microorganism  \n(Interfering with one side of the triangle will affect the other parts).  \n \n15. Bacterial genetics  \nGenetic organization and regulation of the bacterial cell  \nAll properties of a bacterial cell are determi ned ultimately by the genetic information contained within the \ncell genome. This information is normally encoded by the DNA of the cell.  \nMost of the bacterial      cell is arranged in the form of a single circular double -stranded chromosomes.  \nThe DNA is no t associated with protein or histone molecules as it is in eukaryotic cell chromosomes.  \nIn addition to the single main chromosome, bacterial cells may also carry one or more small circular \nextrachromosomal elements termed plasmids. Although dispensable, th ey often carry supplementary genetic \ninformation coding for beneficial properties (e.g. resistance to antibiotics) that enable the host cell to survive \nunder a particular set of environmental conditions.  \nProcesses leading to protein synthesis  \nThe DNA acts as a template for the transcription of RNA by RNA polymerase for subsequent protein \nproduction within the cell.  \nGene regulation  \nDuring normal bacterial life, some polypeptides will be required only at particular stages, while others will \nbe needed only whe n the cell is provided with a new or unusual growth substrate, or is confronted with a \nnew challange (e.g. antibiotic).  \nProtein production is an energy -intensive process, and therefore the expression of many genes is controlled \nactively within the cell to  prevent wasteful energy consumption.  \nIn prokaryotic bacteria the process of gene expression is regulated mainly at the transcriptional level.  \nThis is achieved by means of regularly elements that either inhibit or enhance the rate of RNA chain \ninitiation a nd termination for a particular gene. Related genes involved in a common regulatory system are \noften clustered on the bacterial chromosome. Such functional clusters are known as operons.  \nFor transcription to occur as the first stage in protein synthesis, R NA polymerase has to attach to DNA at a \nspecific promoter region. This process can be switched off by the attachment of a repressor molecule to a \nspecific region of the DNA. Known as operator.  \nThe repressor is often an allosteric molecule with two active s ites. One recognizes the operator region so that \nthe repressor can bind to it to prevent transcription. The other recognizes an inducer molecule. When the \ninducer is present it binds to the repressor and alters simultaneously the binding specificity at the  other side, \nso that the repressor no longer binds to the operator and transcription can resume.  \nMUTATION  ' metadata={'source': 'bio.pdf', 'page': 10}
"
"page_content=' \n Occasional rare inaccuracies produce a slightly altered nucleoide sequence in one of the progeny cells. Such \na mutation is heritable and will be passe d on stably to subsequent generations.  \nIn a small proportion of cases an enzyme with altered specificity for substrates, inhibitors or regulatory \nmolecules may be produced. This is the kind of mutation that is most likely to be of evolutionary value to an \norganism.  \nOther mutations may alter a gene so that a non -functional protein is formed; of this protein is essential to the \ncell than the mutation will be lethal.  \n- Phenotypic variation  \nPhenotypic variation occurs when the expression of genes is changed in re sponse to the environment. This is \nreversible, being dependent on environmental conditions and altering when these change.  \n- Types of mutation  \nMutations can be divided conveniently into multisite mutations, involving extensive chromosomal \nrearrangements such  as inversions, duplications and deletions, and point mutations, which are defined as \nonly affecting one, or very few, nucleotides. The structure of DNA is such that point mutations can be \ndivided into one of 3 basic types:  \n- the substitution of one nucleoti de for another  \n- the deletion of one or more nucleotides  \n- the insertion of one or more nucleotides  \nGENE TRANSFER  \nA change in the genome of a bacterial cell may be caused either by a mutation in the DNA of the cell or \nresult from the acquisition of additional DNA from an external source. DNA may be transferred between \nbacteria by 3 mechanisms:  \n- transformation  \n- conjugation  \n- transduction  \n◗ Transformation  \nBacteria in some genera have been shown to be capable pf taking up DNA either extracted artificially or \nreleased by lysis from cells of another strain.  \nOnce a piece of DNA has entered the cell by transformation, it has to become incorpored  into the existing \nchromosome of the cell by a process of recombination in order to survive.  \n◗ Conjugation  \nConjugation is a process in which one cell, the donor or male cell, makes contact with another, the recipient \nor female cell, and DNA is transferred directly from the donor into the recipient. Certain types of plasmids \ncarry the genetic information necessary for conjugation to occur. Only cells that contain such a plasmid can \nact as donors; those lacking a corresponding plasmid act as recipients.  \nPlasm ids capable of mediating conjugation carry genes coding for a pilus, on the surface of the donor cell. \nThe tip of he pilus attaches tot he surface of a recipient cell and holds the two cells together so that DNA can \nthen pass into the recipient cell.  \nThe D NA is replicated during transfer so that each cell receives a copy. As donor ability is dependent upon \nhaving a copy of the plasmid, the recipient strain becomes converted into a donor, able to conjugate with \nfurther recipients and convert them in turn. In  this way a plasmid may spread rapidly through a whole \npopulation of recipient cells, this process is sometimes described as infectious spread of a plasmid.  \n◗ Transduction  \nThe third known mechanism of gene transfer in bacteria involves the transfer of DNA between cells by \nbacteriophages.  \nTHE GENETIC BASIS OF ANTIBIOTIC RESISTANCE  \nWith regard to antibiotic resistance it is important to distinguish between intri nsic and acquired resistance. \nIntrinsic resistance is dependent upon the natural insusceptibility of an organism.  \n◗ Intrinsic resistance  \nThe most obvious determinant of bacterial response to an antibiotic is the presence or absence of the target \nfor the ac tion of the drug.  \n◗ In some cases the loss of sensitivity may be slight, but often organisms become resistant to clinically \nachievable concentrations of a drug. Once resistance has appeared, the continuing presence of an antibiotic ' metadata={'source': 'bio.pdf', 'page': 11}
"
"page_content=' \n exerts a selective press ure in favour of the resistant organisms. Three main factors affect the frequency of \nacquired resistance:  \n- the amount of antibiotic which is being used  \n- the frequency with which bacteria can undergo spontaneous mutations to resistance.  \n- the prevalence of plas mids able to tranfer resistance from one bacterium to another.  \nChromosomal mutations  \nRandom spontaneous mutations occur continuously at a low frequency in all bacterial populations, and some \nmutations may confer resistance to a particular antibiotic.  \nWith  single large -step mutations the drug target is altered by mutation so that it is totally unable to bind a \ndrug, although it can still carry out its normal biological functions sufficiently well to permit the continued \nsurvival of the cell.  \nOnce a slightly  resistant organism has been produced, additional mutational events - each confering an \nadditional small degree of resistance - can eventually lead to the production of organisms that are highly \nresistant that is called the multistep pattern resistance.  \n \n16. Pathogenicity and virulence  \n \nPathogenicity:  requires the attributes of transmissibility or communicability from one host or reservoir to a \nfresh host, survival in the new host, infectivity or the ability to breach the new host’s defences, and \nvirulence, a v ariable that is multifactorial and denotes the capacity of a pathogen to harm the host. Virulence \nis a sense of a parasite -host relationship in which the capacity of the organism to cause disease is considered \nin relation to the resitanc e of the host.  \nVirulence determination:  both opportunistic and primary pathogens possess virulence determinants or \naggressins that facilitate pathogenesis. Possession of a single virulence determinant is rarely sufficient to \nallow the initiation and production of pathology.  Many bacteria possess several virulence determinants, all of \nwhich play some part of various stages of the disease process.  \n!!! Different strains or species of bacteria may produce different types of fimbriae which can be indentified \non the basis of antig enic composition, morphology and receptor specificity.  \nAdhesion induces structural and functional changes in mucosal cells -> contributes to disease. Cell invasion \nconfers tha ability to avoid humural host defence mechanisms and potentially provides a nich e rich in \nnutrients and devoid of competition from other bacteria.  \nOther kind of invasion is penetration through or between epithelial cells.  \nUptake into host cells:  \n- bacteria inside membrane -bound vesicle. Haemolysin/listeriolysin destroy the membrane -> bacteria is \nfree in cell’s cytoplasm and inhibits the host protein synthesis  \n- bacteria inside membrane -bound vesicle. Several vesicles coalesce to form large intracellular vacuoles.  \nAvoidance of host defence mechanisms: Lysozyme is active primarily against G+ bacteria but potentiates the \nactivity of complement against G+ organisms. Transferrin and lactoferrin chelate iron in body fluids, and \nreduce the amount of free iron to levels that necessary for bacterial growth.  \nCAPSULES:  \n1. the hydrophobic nature of the  capsule may hinder uptake by phagocytes;  \n2. capsules prevent efficient opsonization  \n3. it makes more immunogenic surface components and reduce interactions with both complement and \nantibody  \nIM protein:  \nbinds fibrinogen and fibrin and covers the staph’s surface.   \nANTIGENIC VARIATION: variation in surface antigen composition during the course of infection provides \na mechanism of avoidance of specific immune responses. Another interesting mechanism of antigen \nvariation is the genetic rearrangements demonstrated in the fimbriae.  \nIRON ACQUISITION: Some staphylococci produce extracellular called siderophores and receptors for \ntransferrin and lactoferrin.  \n \nInfectious process can be divided into several stages:  \n1. entry into host, evasion host primary defenses  \n2. adhesions of microorganism to host cells  \n3. propagation of the organism  \n4. damage of host cells by bacterial toxins or inflammatory response of the host.  ' metadata={'source': 'bio.pdf', 'page': 12}
"
"page_content=' \n 5. evasion of host secondary defenses  \n \nVirulence: how many organisms are required to cause disease in 50% of those expose to  the pathogen.  \nVirulence factor: characteristic of bacteria that enhances its pathogenicity.  \n1. entry in to host: microorganism can enter host by the respiratory tract, GIT, urogenital tract or skin that \nhas been burned, cut or punctured. Once entered the pat hogen has to overcome host defences like \nphagocytosis, acidic environment of stomach and urogenital tract, hydrolytics + proteolytics enzymes \nformed in saliva, stomach and small intestine. Bacteria with outer polysaccharide capsule - more chance \nof survivi ng \n2. Adherence to host cell: can either be due to pilli (groups A strep, Neisseria) adhesion mollecules ( \ninteractions between specific receptors on the mammalian cell membrane -usually carbohydrates, and \nligands - usually proteins, on the bacterial surface)  or particularly hydrophobic cell walls, surface charge. \nAdherence enhances virulence by preventing bacteria from being carried away by peristalsis, mucus, \nsaliva, urine... Flagella can act as adhesin.  \n3. Invasiveness: invasiveness is facilitated by several e nzymes including collagenase, hyaluronidase... - \nliquifies tissue and facilitates invasion after - inflammation. Toxins, other aggressins and induction of \nintracellular signalling pathways mediated tissue damage at local or distant sites.  \n4. Bacterial toxins: exotoxins: proteins secreted by Gram+ and Gram - bacteria.  \n            endotoxins: lipopolysaccharides and are integral part of Gram - cells.             \nEndotoxins cause septic shock (fever, shock, hypotension, thrombosis)  \nPrimary pathogens: cause disease e ven in healthy poeple. Different strains of any bacterial species can vary \nin their genetic make up and virulence. Conversely, people vary in their genetic make up and susceptibility \nto invading bacteria.  \nOpportunistic pathogen: cause disease under certain  condition (decresed immunity of individuals or when it \nreaches other place in body) - normal members of flora. Rarely cause disease in individuals with intact \nimmunological and anatomical defences. Only when such defences are impaired or compromised are t hese \nbacteria able to cause disease. Also, normal huan flora, when introduced into anatomical sites in which they \nare not normally found may allow their localized multiplication and subsequent development of disease.  \n \n17. Colonization and Invasion  \nColonization  means the colonization of a nonpathogenic micro (or by a pathogen which does not cause \npathological symptoms at that area) on a bodily surface. It is the establishment of a stable population of \nbacteria on the host.  \nInvasion is when the microbe enters the  host, and it is usually through the mucosae. It is also commonly \npreceded by colonization (overcoming the possibility of commensalism). For successful entry of the microbe \nit needs to adhere to the epithelium by means of adherence factors, and penetrate t hrough the epithelium by \nmeans of penetration factors.  \n \nAdherence factors:  \n1) Fimbriae (pili) – their end reacts with a receptor on the epithelial surface.  \n2) Nonfimbrial adhesions – hemagglutinins of yersinae, bordetellae, F protein of streptococcus \npyogenes.  \n3) They can envelope projections (hemagglutinin) of influenza virus. Glycoprotein gp120 of HIV is \nalso an adherence factor.  \n4) Parasites – suck themselves to the mucosae.  \n5) Micromycetes – glucans and mannans of yeasts and keratophilia of dermatophytes (skin moulds ). \n \nPenetration factors:  \n· Direct penetration:  \n- Small cracks in skin  \n- Small cracks in mucosa  \n- Animal bite  \n- Arthropod bite  \n- Enzymes  \n· Forced penetration:  \n- Changing cellular framework (invasiveness)  \n- Ruffling (trouble) of epithelial surface (e.g. Salmonella)  ' metadata={'source': 'bio.pdf', 'page': 13}
"
"page_content=' \n - Unknown me chanisms.  \n \nMultiplication:  \n- Intracellular multiplication – better because of good nutrient supply, and defense against host \nimmunity. Examples of intracellular parasites are mycobacteria, rickettsiae, chlamydiae, usteriae, \nsalmonellae.  \n- Extracellular multipl ication – stopped by antibacterial substances (e.g. complement, lysozyme , \nantibodies) but mostly because of shortage of free iron (lactoferrin, transferring) and also high \ntemperature.  \n \nSpreading of the microbe in the body:  \n·Localized infections (common col d, salmonellosis, gonorrhea).  \n·Systemic infections (influenza, meningitis).  \n·Generalized infections (morbilli, typhoid fever, and even localized and systemic infections).  \n·Way of spreading:  \n- lymph  \n- blood  \n- per continuitatem along nerves  \n \nInvasion by transmission:  \n· The way of transmission – exit point of the body, and entry point of the host.  \n· Microbe tenacity – degree of resistance to the external environment. E.g. Clostridium tetani, \nGiardia  lamblia, and Helminthes  eggs (Taenia saginata) are all spore forming, so, that they can \nsurvive in the external environment.  \n· Minimum infectious dose – amount of microbes required to start infection. An immune person has \na high infectious dose Coxiella burnetii, which causes Q fever, has an extremely low infectious \ndose.  \n· Behavior  of the host - immune defense reflexes (cough, sneezing, diarrhea ). \n· Way of elimination - every biological substance is infectious.  \n· Amount of eliminated substance  \n· Portal of entry - better penetration through mucosa than skin. Some requires direct transmissi on \n(sexual contact, e.g. streptococci, treponemae), biological vector (tick, mosquitos -> arboviruses, \nborreliae), and transmission by water (leptospirae, shigellae).  \n \n18. Avoidance of host defense mechanism  \nThey can overcome innate immunity:  \n● Antigenic varia tion \n● Resisting complement (seroresistant) - ―O‖ side -chains in their LPS  \n- inhibiting its activation  \n- protecting their own surface (capsules, M protein)  \n● Resisting phagocytosis  \n- avoiding being engulfed (inhibitors of chemotaxis - leukocytins, lecithinase), capsule  \n- surviving inside phagocyte (blockage of phagolysosome; resistant to O2 species - by production \nof catalase)  \n● Interfering with cytokine function  \nThey can overcome acquired immunity  \n● Attempts to avoid antibodies or immune lymphocytes  \n- acquired repro duction  \n- attempts to deceive immune system  \n1. by hiding (in neural ganglions; intracellular membranes; infectious focuses in privileged \nsites)  \n2. changing ones own antigens (antigen mimicry, antigen camouflage, antigen variability)  \n3. induce tolerance (CNV, Rubella. ..) \n \n \n \n ' metadata={'source': 'bio.pdf', 'page': 14}
"
"page_content=' \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n● Attempts to suppress immune reaction  \n- Immunoglobulin A proteases  \n \nHost defences: Bacteria are surrounded by a cytoplasmic membrane and a peptidoglycan cell wall. \nAssociated with these basic structures there can be a variety of other components such as pro teins, capsules, \nlipopolysaccharides or teichoic acids. There are also structures involved in motility or adherence to the cells \nof the host. These are some of the components to which the immune system directs its response.  \nSpecific antibodies can bind to flagella or fimbriae, affecting their ability to function properly and can \ninactivate various bacterial enzymes and toxins.  \n \n19. Bacterial Toxins and aggressins  \n \nEndotoxins: G - lipopolysaccharide, also called LPS is a component of the outer membrane of G - bacteria, \nand is released from the bacterial surface via outer membrane vesicles. LPS is anchored into the bacterial \nouter membrane through a unique molecule termed lipid A.  \nEndotoxin is a potent activator of macrophages, resulting in the induction of a range of cytokines which are \ninvolved in the regulation of immune and inflammatory responses.  \n  \nExotoxins: are diffusible proteins secreted into the external medium by the pathogen. Most pathogens secrete \nvarious proteins molecules that facilitate adhesion to, o r invasion, of, the host. Many others cause damage to \nhost cells.  \nExotoxins vary in their molecular structure, biological function, mechanism of secretion and immunological \nproperties.  \n- type I toxins bind surface receptors and stimulate transmembrane signal s \n- type II toxins act directly on membranes, forming pores or disrupting lipid bilayers  \n- type III toxins translocate an active enzymatic component into the cell which modifies an intracellular \ntarget molecule.  \n \n- spreading factors (DNAse, hyaluronidase, collag enase)  \n- cytolysins (lecithinase, hemolysins)  \n- inhibitors of proteosynthesins (diphteria toxin)  \n- neurotoxins (botulinism, tetanus toxin)  \n- superantigens <8staphylococcal enterotoxin + axfolyatin + strep. pyogenes toxin)  \n \nAggressins  ' metadata={'source': 'bio.pdf', 'page': 15}
"
"page_content=' \n \nAny substance produced in the body by a pathogenic bacteria that enhances virulence of bacteria by \nparalyzing host defence mechanism (e.g. RRC, ureases, matalloprotease, mucinases, phospholipases, \nhyaluronidases).  \n \n20. Antigens including antigen recognition and bacterial antigens  \nAntigens are substances that are recognized by the immune system as foreigner and they trigger an immune \nresponse (they need to have a high mollecular weight and be chemically complex).  \nIn innate immunity antigens are attached non specifically by macrophages and ki lled by phagocytosis.  \nIn acquired immunity, in cell mediated one you have Antigen presenting cell (APC)  \n \nAPC - it includes macrophages, B cells and dendritic cells. These cells are equiped with speciallized cell \nmembrane proteins called Major Histocompabil ity Complex (MHC).  \nAPCs first phagocytize and partially degrade foreign mollecules then display a frequent peptide antigen that \nit is bound by MHC and triggers cytotoxic T cell response (presence of MHC reassures T cells that the \nantigen is non self).  \nMHC in humans = HLA - human leucocyte antigen  \n \nMHC:  \ntype I - presents peptide from proteins insidee cell (e.g. viral infection). All nucleated cells present them  \ntype II - peptides from extracellular and intravesicular proteins that enter cell by phagocytosis . Presented by \nmacrophages, dendritic cells, B cells.  \n \nAntigen recognition: an antibody is a glycoprotein produced by plasma cells and circulates in the blood and \nother body fluids. Antibody molecules will recognize free native antigen.  \nThis contrasts dram atically with the situation in cell -mediated immunity; the T lymphocyte antigen receptor \nwill only bind the fragments of antigen that are associated with products of the major histocompability \ncomplex (MHC). T cell recognition of antigen is said ti be MHC -restricted.  \n \nT cells express surface receptors that allow them to recognize unique, antigen derived peptide sequences \n(generally composed of α/β polypeptide chains joined by dissulfide bond).  \n \nE.g of bacterial antigens: O, H, K in Enterobacteria  \n \n21. Immunogl obulins  \nSoluble, globular proteins that are important components of \nacquired immunity. They are able to recognize a lot of \nepitopes (1 Ab -> 1 epitope).  \n \n5 subtypes: IgM, IgE, IgD, IgG and IgA  \n \nIgM - first immunoglobulin to appear after exposure to Ag \nhas pentamer structure. Normally restricted to intravascular \nspace, they have high molecular weight (but inflammation \ndue to increase capillary permeability may go to ISF). It \ncannot cross the placenta.  \nIgD - major surface component of mature naive B cells  \nIgG - predominant Ig in blood , lymph and peritoneal fluid.  \nIgG can cross placenta thus confering mothers humoral \nimmunity to infection to fetus and neonate. IgG can aid NK \ncells finding their targets (binds Fab to antigen Fc to NK).  \nIgA - primary Ig found i n external secretions (tears, mucous, saliva...). Its role is to prevent microbial \npathogens from attaching to and penetrating epithel (e.g. in breast milk provides newborn with protection \nagainst infection). It can cause agglutination and prevent viruses from entering cells.  \nIgE - important in allergies (type I hypersensitivity) + parasitic infection  \n \n \n ' metadata={'source': 'bio.pdf', 'page': 16}
"
"page_content=' \n Antibody structure: All antibody molecules have the same basic 4 chain structure composed of 2 light \nchains and 2 heavy chains. The heavy chains: α, δ, ε a nd μ. In light chains, one end of the chain is identical \nin all members of the same isotype, and is termed the constant region of the light chain, C2. The other end \nshows variation, and is known as the variable region, VL.  \nThe heavy chains also habe VH and  CH. The tertiary structure generated by the combination of the VL and \nVH regions determines the shape of the antigen -combining site pr paratope.  \n- Activation of complement system (IgG, IgM)  \n- Opsonization (particularly IgG)  \n- Neutralization of antigens (I gG, IgA, IgM)  \n- Adherence interference (IgA, IgG)  \n- Antibody dependent cellular cytotoxicity (ADCC)  \n- Agglutation, precipitation (IgG, IgM)  \n- Mast cells degranulation (IgE)  \n- Transport through placenta (IgG)  \n- Imunoregulation (mainly IgG)  \n \n22. Antibody functio n in infection  \n1. Neutralization of toxins  \nbacterial toxin can damage or kill susceptible host cell -> specific antibodies bind and neutralize bacterial \ntoxins. If the antibody is directed against surface antigens of particular material such as microorganisms  or \nerythrocytes then agglutination will occur. This results in a clump or aggregate that will isolate the potential \npathogen, stop its dissemination and stimulate its removal by other mechanisms - Ag-Ab complex is \nrecognized as foreign by phagocytes which  scavenge and degrade toxins.  \n \nIf the antigen is soluble then the size of the complex will determine its physical state. Small complexes will \nremain soluble while large complexes will form precipitates).  \n2. Opsonization of bacteria  \nspecific antibodies coat s urface of bacteria making it a more recognizable target for ingestion by \nmacrophages -> a specific conformation on the Fc receptors on the surface of the phagocyte. The important \nresidues are in the CH2 domain near the hinge region.  \n3. Activation of complemen t \nBacterium in plasma is coated with Antibodies -> The Fc portion of certain isotypes once antigen has been \nbound, will activate complement -> boun antibodies form a receptor for the 1st protein of the complement \nsystem -> This requires that C1q, a subunit  of the 1st complement component croos -links 2 antibody Fb \nportions. ->complement can form a lethal pore in cell membrane of some bacteria releasing cell contents -> \ncomplement binding also favours uptake and destruction of bacteria by phagocytes.  \n \n23. Immune system  \nInteracting set of specialized cells and proteins that are designed to identify and destroy foreign invadors or \nabnormal substances before they can destroy the body.  \nMost common introdurs are viruses, bacteria, parasites, fungi.  \nFor the immune syste m to mount a defense against foreign invaders, it must be able to differentiate ―self‖ \nfrom ―nonself‖. This discrimination between selffound nonself and subsequent destruction and removal of \nforeign bodies is accomplished by the 2 types of the immune syste m: innate and adaptative immune system.  \n- Innate immunity is fully operative the first time the body is in contact with foreign substance, it is present \nin some ways in all vertebrates and some invertebrates repeated exposure does not enhance it and \nresponse  is non specific.  \n- Adaptative immunity needs days to develop, the response is highly specific and will be enhanced or \nrepeated exposure exposure to pathogen.  \nAlthough it is convenient to define the immune system in terms of these 2 components in reality the ir \nresponsability overlaps.  \nThe immune system consists of a number of organs and several different all types.  \n \n ' metadata={'source': 'bio.pdf', 'page': 17}
"
"page_content=' \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nLYMPHOID CELLS  \nLymphocytes make up about 20% of the white blood cells present in the adult circulation. The mononuclear  \ncells comprise the T and B cell populations. The large cells are referred to as large granular lymphocytes \nbecause they contain cytoplasmic granules. Cells within this population are able to kill certain tumour and \nvirally infected cells (nature killing) and destroy cells coated with immunoglobulin (antibody -dependent cell -\nmediated cytotoxicity).  \nMYELOID CELLS  \n-Mononuclear phagocytes: the common myeloid progenitor in the bone marrow gives rise to monocytes that \ncirculate in the blood and migrate into organ s and tissues to become macrophages. This actively phagocytic \ncell has a ruffled membrane and many cytoplasmic granules. These lysosomes contain enzymes and \nmolecules that are involved in the killing of microorganisms.  \nTheir activities can be enhanced by m olecules produced by T lymphocytes, called lymphokines. \nMacrophages and monocytes are capable of producing various complement components, prostaglandins, \ninterferons and monokines such as interleukin (IL) -1 and tumor necrosis factor (TNF).  \n- Polymorphonuclea r leucocytes: neutrophils constitute 60 -70% of the leucocytes, but also migrate into \ntissues in response to injury or infection.  \n■ Neutrophils: their granules contain numerous microbicidal  molecules and the cells enter the tissues when \na chemotatic factor is produced, as the result of infection or injury.  \n■ Eosinophils: they are present in low numbers in a healthy normal individual  (1-2%), but their number raise \nin certain allergic conditions. The granule contents can be released by the appropriate signal, and the \ncytotoxic molecules can then kill parasites that are too large to be phagocytosed.  \n■ Basophils:  less that 0.2%. They re lease molecules that stimulate an inflammatory response.  \n \n24. Innate Immunity - characteristics and humoral mechanisms  \nCharacterictics:  \n- action is immediate  \n- non specific response  \n- response is not enhanced on repeated exposure to pathogen  \nThe innate system is act ive at the time of infection, restraining the microorganisms until the lymphocytes of \nthe adoptive immune system can eliminate the pathogen.  \nThe innate immune system consists of protective cellular and chemical components found on body surface as \nwell as w hite blood cells and their derivatives that often subsurface protection.  \n \n' metadata={'source': 'bio.pdf', 'page': 18}
"
"page_content=' \n \nResponse of innate immune system:  \n- Non inflammatory reaction: body’s static defences (e.g. skin, gastric pH, lysozyme in specialized body \nfluids).  \n- Acute response: local inflammation ( migration of phagocytes and plasma proteins to infected tissue)  \n \nHumural Mechanism  \nOne of the mechanisms by which the immune innate system defends body is by inflammatory reaction which \nis accompanied by increased concentration of serum proteins called acu te phase proteins (e.g. CRP is \nproduced by liver in response to tissue damage. It binds to cell walls of bacteria and fungi and activates the \ncomplement system.  \n  \n \n \n \n*Lysozyme - found high concentrations in most tissue fluids,  functioning as a mucolytic enzyme, splitting \nsugars of cell wall of many G+ bacteria causing their lysis.  \n \n \n25. Innate Immunity - barriers and cell mediated mechanically  \nBarriers: skin: sheets of dry cornified epithel that are highly impermeable to bacteria +  viruses unless \ndamaged (because keratin is indigestable by most microorganisms).  \nThe only place where the bacteria/viruses could enter in intact skin are hair follicles and sebaceous glands.  \nRespiratory tract: mucus traps the organism whilst cilia transpo rt the trapped microorganism back to the \nexternal openings. Cough propels organisms away from lungs.  \nGIT: digestive enzymes have antimicrobial action and gastric acid pH provides a chemical barriers against \nmicrobes.  \nGenitourinary tract: normal flow of uri ne may carry microbes away by low vaginal pH also provides an \nunhospitable environment for pathogens colonization.  \nTears, saliva, mucous: contain lysozime which protect against gram + infectious commensal organisms: the \nnon pathogenic microorganisms that c onstitute our normal microflora are beneficial because they compete \nwith potential pathogens and produce by -products that can inhibit the growth of other mechanisms.  \n \n \n \n' metadata={'source': 'bio.pdf', 'page': 19}
"
"page_content=' \n CELL MEDIATED MECHANISMS  \n \n \n1. Vasodilation: increased blood fl ow to injured area provides, increased delivery of plasma proteins, \nneutrophils and phagocytes.  \n2. Increased permeability: protein rich exudate with Igs + complement moves to injured area  \n3. Emigration of leucocytes  \n4. Chemotaxis - for phagocytic cells to be effect ive they must be attracted to the site of infection. Once they \nhave passed through the capillary walls they move through the tissues in response to a concentration \ngradient of molecules produced at the site of damage:  \n- products of injured tissue  \n- factors fro m the blood (C5a)  \n- leukotrienes, histamine (neutrophils and mast cells)  \n- bacterial products  \nSome of these cells destroy the invading microorganism by phagocytosis followed by intracellular digestion \n(-> phagocytes whilst others limit the infection by releasi ng compunds toxic to microorganisms -> K, natural \nkiller cells).  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n' metadata={'source': 'bio.pdf', 'page': 20}
"
"page_content=' \n Natural killer cells  \nThey destroy abnormal host cells such as virus -infected cells or neoplastic by released of compounds that are \nhighly cytotoxic causing the formation o f pores in the membrane of a target cell resulting in osmotic lysis or \ntriggering apoptosis.  \nThey can also cause apoptosis by surface contact with the target cell. They are stimulated by IFN and IL -2. \nEosinophils are no effiecient phagocytic cells but thei r granules contain molecules that are toxic to parasites \n(worms and others that cannot by phagocytosed). This release of molecules must be controlled so that tissue \ndamage is avoid.  \n \n26. Acquired immunity - general characteristics  \nMain characterictics:  \n- actions  requires days to develop  \n- response is specific  \n- response is enhanced on repeated exposure to pathogen  \n- exhibits memory  \nIt can be divided into humoral and cell mediated response.  \nHumoral immunity results from actions of soluble molecules such as antibodies in  body fluids while cell \nmediated immunity involves specialized lymphocytes and antigen presenting cell (APCs).  \n \n27. Acquired Immunity - humural immunity  \nB cells - they produce Abs that recognize epitopes and binds to these unprocessed Ags (with that need of \nAPCs). Important to mention B cell as APC tht might cause MHC II complex.  \n \nMHC II - antigen are bound to T helper cell -> cloning of this helper T cell -> cytokines activate killing of \nintracellular or organism ->(Th2 cells; IL -4,5,6) B cell division and dif ferentiation -> differentiation to \nplasma cells -> memory B cells  \n        -> production of Abs (primarily IgM are produced \nthen switching to IgG might occur) -> complement activation  \n               -> opsonization  \n               -> neutralization of toxins  \nT cell dependent activation of B cells.  \nMultivalent antigens cross -link B cell surface receptors which results in B cell clones -> Plasma cells -> \nAntibody production (no class switching + affinity mutations - no Th2)  \n \n \nAntibodies acquired by either immun ization or previous infection or given passively as antiserum are able to \nneutralize bacterial toxins.  \nMany bacterial exotoxins are enzymes, and protective antibody can prevent interaction of the enzyme with \nits substrate.  \nAntibody may also act by stopping  activation of a zymogen into an active enzyme.  \nThe direct binding of antibody to a bacterium can interfere with its normal functioning in numerous ways. \nAntibody can kill bacteria or its own or in conjunction with host factors and alls.  \nAntibodies that af fect the activity of specific transport system will deprive that bacteria of their supply and \nother essential chemicals.  \nInvasion can also be inhibited by antibody that attaches to the flagella of the microorganism in such a way as \nto affect their motility . Antibodies can agglutinate bacteria, and formation of the aggregate will impede the \nspread of the organism.  \nIn certain circumstances, antibodies in conjunction with other bactericidal molecules lead to more efficient \nbacterial destruction.  \n \n28. Acquired immu nity - cell mediated immunity  \nT cells  \ncytotoxic T -cell indentifies and kills cells infected with viruses, its receptor only recognizes peptides when \nthey are present on surface of nucleated cell in association with a class I MHC molecule.  \nHelper T cell ass ists the activation of killer T cell and signals B cells to start secreting antibody in response \nto presence of foreign antigen. They also activate phagocytes.  ' metadata={'source': 'bio.pdf', 'page': 21}
"
"page_content=' \n 1. Antigen is recognized by an antigen presenting cell that will partially degrade this antigen and  present a \nfragment peptide of the antigen on the MHC molecule on the membrane.  \n2.1 Specific T cell receptors of activated CD8+ T cells bind to class I MHC molecule complex with antigenic \npeptide fragment resulting in antigen driven clonal expanion of spec ific T cell and ultiately killing of the \nspecific presenting cell.  \n2.2 Class II MHC peptide fragment complex is presented on surface of APC (macrophage dendritic celss, B \ncells) and the complex is recognized by appropriate T cell receptor of CD4+ T cells. Antigen driven clonal \nexpansion of specific T cell occurs resulting in cytokine mediated helper T cell functions.  \n \nCD4 T cells activation and action  \nMacrophage engulphs and partially digests foreign antigen -> Macrophage displays antigen fragments bound \nto MHC II on cell surface -> Antigen specific CD4+ T -helper cells bind to antigen MHC -II complex and \ninitiates cytokine secretion -> T cells that bind to complex are induced to propagate creating T cell clone \nwith same receptor specific -> cytokines activate  the killing of intracellular organisms in macrophage -> (IL -\n2 released by Th1) NK cells  \n                -> (IL -4,5,6 released by \nTh2) B cell division and differentiation  \n \nCD8 T cells activation and action  \nVirus infected cells synthesizes viral proteins us ing viral mRNA -> hydrolyzed viral peptides are transported \nto ER there they are loaded to binding groove of MHC class I molecule to cell surface -> MHC I interacts \nwith CD molecules thereby restricting T cell receptor recognition to antigens displayed in groove of class I \nMHC -> cytotoxic CD8+ T cells proliferate forming a clone of cells with specific antiviral peptide recpetors \n-> cytotoxic T cells kill virus infected cells -> some T cells become memory cell  \n \n29. Immunodeficiency  \nCan be:  \n- primery - genetic, in born disorders  \n- secondary - acquired, due to presence of another disease (e.g. malnutrition)  \nCauses:  \n- defects in B cells or antibody production  \n- defects in T cells with or without concurrent B cells defect (Severe Combined Immunodeficiency = \nSCID)  \n- phagocyte a nd/or NK cell defect (chronic granulomatous disease)  \n- deficiencies in complement, cytokines or another mediator  \nThis might lead to really severe infections.  \nThe deficiency states seen are due either to defects in one of the components of the system itself, or are \nsecondary to some other diseases process affecting the normal functioning of some part of the lymphoid \ntissues.  \nThe compromised host is prone to infectious diseases that the normal individual would easily eradicate or not \nsuccumb to in the first pla ce. \n- Defective innate defense mechanisms:  \nDefects in phagocyte function takes 2 forms:  \n1. Where there is a quantitative deficiency of neutrophils which may be congenital (e.g. infantile \nagranulocytosis) or acquired as a result of replacement of bone marrow by tumor call or the toxic effects \nof drugs or chemicals.  \n2. Where there is a qualitative deficiency in the functioning of neutrophils which, while ingesting bacteria \nnormally, fail, because of an enzymatic defect, to digest them.  \n \nCharacteristic of these diseas es is a susceptibility to bacterial and fungal, but not viral or protozoan \ninfections.  \nThe complement system can also suffer from certain defects in function leading to increased susceptibility to \ninfection.  \n- Defective acquired immune defense mechanisms  \n■ Primary immunodeficiencies: arise through failure of any of the developmental processes from stem cell to \nfunctional end cell.  ' metadata={'source': 'bio.pdf', 'page': 22}
"
"page_content=' \n There are several types of B cell defect that give rise to hypogammaglobulinaemias, i.e. low levels of γ -\nglobulins (antibodies)  in the blood.  \nIn patients with dysgammaglobulinaemia there is a deficiency in only one antibody class.  \nIndividuals with T cell defects tend to have more severe and persistent infections than those with antibody \nlevels since TH cells are involved in the ge neration and control of humoral immunity.  \n■ Secondary immunodeficiency acquired deficiencies can occur secondarily to a number of disease states or \nafter exposure to drugs and chemicals.  \n \n30. Immunity in bacterial infections  \nSteps of bacerial infection:  \n1. attac hment of bacteria to host tissue  \n2. invasion to deeper host tissues and toxin prodution  \n3. inflammation at site of invasion  \na) antibodies bind to bacteria  \nb) complement activation  \nc) wound healing machanisms  \n \nImmunity to extracellular bacteria by antibiotics  \nGram - \n1. Opsonization  \n2. Antibodies activate classical complement pathway which will induce lysis of bacteria  \n3. ABCC: Antibody dependent cytoxicity is activated by antibodies and will evoke granulocytes which will \ndegrade bacteria.  \nGram+  \n1. Opsonization by antibodies and co mplement  \n2. No activation of complement system due to the thick cell wall  \n3. ABCC  \n \nImmunity to intracellular bacteria by cell -mediated immunity  \n1. Presentation of bacterial antigen to cytotoxic T cells on MHC I  \n2. Bacterial antigens present in endosomes of infected h ost cells processed via exogenous pathway and \npresented to helper T cell  \n3. Bacterial antigens can be present on the surface of the infected host cell and targeted for killing by NK \ncells \n \n       Microorganism  \n        ↓ \n       Attachment ← Innate defense mechanisms,  \n            Antibody to adhesins  \n        ↓ \n       Local proliferation ← Phagocytes  \n            Complement lysis  \n            Block metabolite transport  \n        ↓ \n- Invasion - Antibody to aggressins, ant ibody to organism, complement lysis, \nphagocytes  \n- Toxin production (toxigenic bacteria) - Antibody to toxin  \n- Intracellular growth (chronic bacterial infections) - cell-mediated immunity  \n \n31. Passive Immunization  \nAntibodies, which may be antitoxic, antibacterial o r antiviral, in preparations of human or animal serum are \ninjected to give temporary protection. Human preparations are injected to give temporary protection. Human \npreparations are referred to as homologous, and are much less likely to give rise to the ad verse reactions.  \nAn additional advantage is that, although they do not confer durable protection, their effect may present for \n3-6 months, whereas the protection afforded by a heterologous serum is likely to last for only a few weeks.  \nTypes os immunoglobul ins used to give passive immunization:  ' metadata={'source': 'bio.pdf', 'page': 23}
"
"page_content=' \n - Non-specific standard Igs: mixture of plasma proteins containing broad spectrum of antibiotics (IgG \npredominant). They contain mixture of Abs reflect previous exposures of plasma donors to various) either \nby natural i nfection or immunization. Prevention or attenuation of illness (e.g. HepA)  \n- Hyperimmune human immunoglobulin: high concentration of antibodies directed to specific pathogen or \ntoxin (e.g. varicella or diphteria)  \nMother gives passive immunity to baby trough IgG and IgA from mother’s milk.  \nAdverse effects: the recipient might mount an adverse reaction to antigenic determinants of foreign Abs \npotentially leading to systemic anaphylaxis (more true for non human source).  \n \n32. Active Immunization  \nActive immunization r equires several days to months to become effective. It leads to prolonged immunity.  \n- Toxoids: if the signs and symptoms of a disease can be attributed essentially to the effects of a single \ntoxin, a modified form of the toxin that preserves its antigenicity  but has lost its toxicity (a toxoid) \nprovides the key to successful active immunization against the disease.  \n- Innactivated vaccines: it may be possible to stimulate the production of protective antibodies by using the \nkilled (inactivated) organisms.  \n- Attenu ated vaccines: another approach is to use suspensions of living organisms that are reduced in their \nvirulence (attenuated) but still immunogenic.    \n- Microbial extracts: instead of using whole organisms, vaccines are composed only the antigen molecules. \nThe more effective vaccines are those that the vaccine antigen is present in all the organism strains \n(pneumococcal vaccine has 23 polysaccharides comprising the Ags produced by the mst common \nstrains).  \n- Vaccine conjugates: vaccines can produce humoral immunit y through B cell proliferation leading to Ab \nproduction which may or may not involve T helper cells. Hemophilus polysaccharide was conjugated to a \nprotein Ag suc as diphteria toxoid protein.  \n \n ' metadata={'source': 'bio.pdf', 'page': 24}
"
"page_content=' \n SPECIAL BACTERIOLOGY  \n \n1.Staphilococcus aureus  \nStaph. aureus is  a Gram -positive coccus. The cocci are mainly arranged in grape -like clusters, but some may \noccur as a single cell or pairs of cells.  \nPathogenesis: Staph. aureus is present in the nose of 30% of healthy people and may be found on the skin. It \ncauses infect ion most commonly at sites of lowered host resistance, e.g. damaged skin or mucous \nmembranes.  \nVirulence factors: there are plenty of virulence factors but only some of them are present in nearly 100% of \nstrains; others are produced just by one strain among  one thousand. Examples: hemolysisn, coagulase, \nhyaluronidase, protein A (antiphagocytic effect), fibronectin, cytolytic exotoxin, TSST -1. \nStaphylococcal toxins:  \n- ENTEROTOXINS: enterotoxins, types A -E, G, H, I and J are commonly produced by up to 65% of str ains \nof Staph. aureus. When ingested as preformed toxins in contaminated food, microram amounts of toxin can \ninduce within a few hours the symptoms of staphylococcal food poisoning: nausea, vomiting and diarrhoea.  \n- TOXIC SHOCK SYNDROME TOXIN (TSST -1): a mul tisystem disease caused by staphylococcal TSST -1 \nor enterotoxin, or both -> established with the use of highly absorbent tampons. TSST -1 and the \nenterotoxins are now recognized as superantigens, i.e. they are potent activators of T lymphocytes resulting \nin the liberation of cytokines such as tumour necrosis factor.  \n- EPIDERMOLYTIC TOXINS: two kinds of epidermolytic toxins (A and B) -> cause blistering diseases.  \nEpidemiology: the sources of infection are infected lesions -> large numbers of staphylococci are \ndisseminated in pus and dried exudate discharged from large infected wounds, burns, secondarily infected \nskin lesions, and in sputum coughed from the lung of a patient with bronchopneumonia. Direct contact is the \nmost important mode of spread.  \nDiseases:     \n- in skin        - musculoskeletal  \nfuruncle        osteomyelitis  \ncarbuncle        arthritis  \nimpertigo        - genitourinary  \ncellulitis        renal carbuncle  \nwound infection       UTI of the lower part  \nsuperficial abcesses (folliculitis)     - cardiovascular  \n         endocarditis    \nTreatment  \nIn staphylococci the drug of choice is Oxacilin.  \n- in UTI - cafalosporins of first generation  \n- allergic persons - macrolids  \n- locomotor system - lincosamids  \n- aminoglycosides in combination only  \n- glycopeptidic antibiotics (vankomycin  and teikoplanin) are a reserve. USed in MRSA and MRSKN  \nIn strains resistant even to glycopeptides, or in patients that have contraindications newer antibiotic linezolid \ncan be used.  \nMRSA -> methicilin resistant staphylococci are epidemiologically importan t starins, often causing serious \nhospital infections. They are caused by change of so named membrane penicillin binding proteins (PBP).  \n \n2. Coagulase negative staphylococci  \nAre commonly found on the surface of healthy persons in whom they are rarely the cause  of infection.  \nStaphilococcus epidermidis accounts for about 75% of all clinical isolates, probably reflecting its \npreponderance in the normal skin flora. Other species include Staph. haemolyticus, Staph. capitis and Staph. \nsaprophyticus.  \nCoagulase -negativ e staphylococci are morphologically similar to Staph. aureus. Coagulase -negative \nstaphylococci are opportunistic pathogens that cause infection indebilitated or compromised patients, often \nby colonizing biomedical devices such as prosthese, implants and in travascular lines.  \n \nPathogenesis  ' metadata={'source': 'bio.pdf', 'page': 25}
"
"page_content=' \n Production of an exopolyssacharide, allowing adherence and subsequent formation of a multi -layered \nbiofilm, appears to be essential for the pathogenesis of device related Staph. epidermidis infection.  \nAttachment is enhanced  by the presence of matrix proteins, such as fibronectin and fibrinogen. The \nsubsequent incorporation of teichoic acid appears to provide the biofilm with stability.  \n \nStaphilococcus epidermidis are sensitive to vancomycin and novobiocin.  \nStaphilococcus sap rophyticus are sensitive to G -penicillin but are resistant to novobiocin  \n \n3. Strepatococcus pyogenes  \nThis species, which consists of Lancefield group A streptococci, is among the most prevalent of human \nbacterial pathogens. It causes a wide range of suppur ative infections in the respiratory tract and skin, life -\nthreatening soft tissue infections, and certain types of toxin -associated reactions.  \n \nPathogenesis  \nVIRULENCE FACTORS: strains of Str. pyogenes express a large arsenal of virulence factors and, hence , \ntheir pathogenicity and the clinical signs that they induce are very diverse. The virulence factors are involved \nin adherence, evasion of host immunity and tissue damage.  \nADHESION: intercation with host fibroconectin, a matrix protein on eukoryotic cells , is considered the \nprincipal mechanism by which Str. pyogenes binds to epithelial cells of the pharynx and skin.  \nM PROTEINS: the ability of Str. pyogenes to resist phagocytosis is to a high degree due to the cell surface -\nexposed M protein.  \nCAPSULE: like o ther bacterial capsules it has an antiphagocytic effect.  \nC5a PEPTIDASE: it specifically cleaves, and thereby inactivates, human C5a, one of the principal \nchemoattractants of phagocytic cells.  \nSTREPTOLYSINS: Str. pyogenes produces two distinct haemolysins - streptolysins O (oxygene -labile) and \nS (serum -soluble), both of which lyse erythrocytes, polymorphonuclear leucocytes and platelets.  \nPYROGENIC EXOTOXINS: most strains of Str. pyogenes exotoxins because of their ability to induce \nfever.  \nHYALURONIDASE: stre ptococci use a secreted hyaluronidase to degrade hyaluronic the ground substance \nof host connective tissue. This property may facilitate the spread of infection along fascial planes.  \nSTREPTOKINASE: streptokinase, also known as fibrinolysin, is another spre ading factor. Once host \nplasminogen is bound to the bacterial surface, it is activated to plasmin by strptokinase. As a result, soft \ntissue infections due to Str. pyogenesare more diffuse, and often rapidly spreading, in contrast to the well \nlocalized absc esses that typify staphylococcal infections.  \nDEOXYRIBONUCLEASES (DNAases): the enzymes hydrolyse nucleic acids and may play a role as \napreading factors by liquefying viscous exudates.  \n \nClinical features  \nThe most common route of entry of Str. pyogenes is th e upper respiratory tract. Spread from person to \nperson is by respiratory droplets or by direct contact with infected wounds or sores on the skin.  \n- Non-invasive streptococcal diseases: the most common infections caused by Str. pyogenes are \nrelatively mild a nd non -invasive infections of the upper respiratory tract (pharyngitis) and skin \n(impertigo).  \n    Pharyngitis: clinical signs such as abrupt onset of sore throat, fever, malaise and headache generally \ndevelop 2 -4 days after exposure to the pathogen. The po sterior pharynx is usually diffusely reddned, with \nenlarged tonsils that may show patches of gray -white exudate on their surface and, sometimes, \naccumulations of pus in the crypts. The local inflammation results in swelling of cervical lymph nodes.  \n    Scarlet fever: pharyngitis caused by certain pyrogenic exotoxin -producing strains of Str. pyogenes \nmay be associated with a diffuse erythematous rash of the skin and mucous membranes.  \n    Skin infections: Str. pyogenes may cause several types of skin infectio n, sometimes in association \nwith Str. aureus. It primarily affects exposed areas on the face, arms or legs. The skin becomes colonized \nafter contact with an infected person and the bacteria enter the skin through small defects. Initially, clear \nvesicles de velop, which within a few days become pus -filled.  \n- Invasive soft tissue infections  \n    Necrotizing fasciitis: this infection pregresses very rapidly, destroying fat and fascia. Systemic \nshock and general deterioration occur very quickly.  ' metadata={'source': 'bio.pdf', 'page': 26}
"
"page_content=' \n     Streptococcal t oxic shock syndrome: patients with invasive and bacteraemic. Str. pyogenes \ninfections, and in particular necrotizing fasciitis, may develop streptococcal toxic shock syndrome. A \nstriking feature of this acute fulminating disease is severe pain at the site of initial infection, usually the soft \ntissues. The additional clinical signs resemble those of staphylococcal toxic shock syndrome and include \nfever, malaise, nausea, vomiting and diarrhoea, dizzines, confusion, and a flat rash over large parts of the \nbody. \n    Rheumatic fever: this manifest as an inflammation of the joints (arthritis), heart (carditis), central \nnervous system (chorea), skin (erythema marginatum), and/or subcutaneous nodules. Polyarticular arthritis is \nthe most common manifestation, wherea s carditis is the most serious as it leads to permanent damage, \nparticularly of the heart valves. The disease is autoimmune in nature and is believed to result from the \nproduction of autoreactive antibodies and T -lymphocytes induced by cross -reactive compo nents of the \nbacteria and host tissue.  \n    Acute post -streptococcal glomerulonephritis: the clicical manifestations include:  \n• coffee -coloured urine caused by haematuria  \n• oedema of the face and extremities  \n• circulatory congestion caused by renal impairment  \n \nTreatment  \n• penicillin (either G -penicillin for parenteral use or V -penicillin for oral use)  \n• macrolids - in penicillin allergic persons only  \n• vancomycin - is a reserve, 100% effective  \n• RESISTANT TO AMINOGLYCOSIDES (used as selective medium)  \n \n4. β-hemolytic streptoc occi other than Streptococcus pyogenes  \nStreptococcus agalactiae  \nStr. agalactiae is a primary habitant of human colon. It may be carried in the throat and importantly, 10 -40% \nof women intermitently carry in the vagina.  \nStr. agalactiae has become the leading  cause of neonatal infections in industrialized countries and is also an \nimportant cause of morbility among peripartum women and non -pregnant adults with chronic medical \nconditions. Among β -hemolytic streptococci, Str. agalactiae is the most frequent isola te from blood culture.  \nVirulence factors:  \nStr. agalactiae produces several virulence factors, including haemolysins, capsule polysaccharide, C5a \npeptidase, hyaluronidase and various surface proteins that bind humans IgA and serve as adhesins.  \nClinical feat ures \n- Infection in the neonate: two different entitis are recognized:  \n• early -onset disease, most cases of which present at or within 12h of birth.  \n• late-onset disease, presenting more than 7 days and up to 3 months after birth.  \nEARLY ONSET: this results from ascending spread of Str. agalactiae from the vagina into the amniotic \nfluid, which is then aspirated by the infant, and results in septicaemia in the infant or the mother or both. \nInfants borne by mothers carrying Str. agalactiae may also become colonized during passage through the \nvagina.  \nThe clinical symptoms include lethargy, cyanosis and apnoea, when septicaemia progresses, shock ensures \nand death will occur if treatment is not quickly instituted. Meningitis and pulmonary infection may be \nassociated.  \nRisk factors for neonatal colonization and infection are:  \n• premature rupture of membranes  \n• prolonged labour  \n• premature delivery  \n• low birth weight  \n• intrapartum fever  \nLATE -ONSET DISEASE: purulent meningitis is the most cmmon manifestation, but septic arthritis, \nosteomyelitis, conjunctivitis, sinusitis, otitis media, endocarditis and peritonitis also occurs.  \nMany cases are acquired in hospital. Mastitis in the mother has also been described as a source of infection.  \n- Infections in the adult: disease may manifest as sepsis, pneumonia, soft tissue infections such as cellulitis \nand arthritis, and urinary tract infections complicated by bacteraemia. The risk factors in these patients are \ndiabetes mellitus, liver cirrhosis, renal failure, stroke and cancer.   \n ' metadata={'source': 'bio.pdf', 'page': 27}
"
"page_content=' \n non A non B  streptococci  \nCause pharyngitis but can also be normal people’s throat.  \n \nTreatment  \nG+ penicillin and ampicilin sensitive  \n \n5. Sreptococcus pneumonia  \nStr. pneumoniae, commonly called the pneumococcus, is a member of the oropharyngeal flora of 5 -70% of \nthe popul ation. They are G+, encapsulated cocci, viridating and facultative anaerobes. Str. pneumonia \ngenerally occurs as characteristic diplococci. Str. pneumoniae is an important pathogen, which is largely \nascribed to its capsular polysaccharide. It primarily cau ses disease of the middle ear, paranasal sinuses, \nmastoids and the lung paranchyma, but may spread to other sites, such as the joints, peritoneum, \nendocardium and biliary tract and, in particularly, the meninges.  \n \nPathogenesis  \nVirulence factors:  \nCAPSULE: the capsule is antiphagocytic, inhibiting complement deposition and phagocytosis, where type -\nspecific opsonic antibody is absent.  \nIgA1 PROTEASE: pneumococci produce an extracellular protease that specifically cleaves human AgA1 in \nthe hinge region. This pr otease enables these pathogens to evade the protective functions of the principal \nimmunoglobulin isotype of the upper respiratory tract.  \nPNEUMOLYSIN: pneumococci produce an intracellular membrane -damaging toxin known as pneumolysin, \nwhich is released by au tolysis. Pneumolysin inhibits:  \n• neutrophil chemotaxis  \n• phagocytosis and the respiratory burst  \n• lymphocyte proliferation and immunoglobulin synthesis  \nAUTOLYSIN: autolysis enables the release of pneumolysin and, in addition, large amounts of cell wall \nfragments . The massive inflammatory response to these peptidoglycan fragments is an important component \nof the pathogenesis of penumococcal pneumonia and meningitis.  \n \nClinical features: person -to-person spread is common.  \nPneumonia results from aspiration of pneumoc occi contained in upper airway secretions into the lower \nrespiratory tract, for example, when the normal mechanisms of mucous entrapment and expulsion by an \nintact glottic reflex and mucociliary escalator are impaired. Human immunodeficiency virus (HIV) in fection \ncarries an increased risk of bacterial infections, including those caused by the pneumococcus.  \nPNEUMONIA: Str. pneumoniae is the most frequent cause of pneumonia. Peumococcal pneumonia follows \naspiration with subsequent migration through the bronqu ial mucosa to involve the peribronchial lymphatics. \nContiguous spread commonly results in inflammatory involvement ofpleura. Pericarditis is another \nuncommon but well recognized complication.  \nOTITIS MEDIA: middle ear infections: approximately 1/3 of cases are caused by Str. penumoniae. Disease \noccurs after acquisition of a new strain to which there is no pre -existing immunity.  \nMENINGIS: Str. pneumoniae is among the leading causes of bacterial meningitis. It is assumed that invasion \narises from the pharynx t o the meninges via the bloodstream.   \n \nTreatment  \nPenicillin. When resistance to penicillin is deveplod. vancomycin is used  \nVaccines: PPV (pneumococcal polysaccharide vaccine): risk individuals > 2 years old  \n        PCV (pneumococcal conjugated vaccine): ba bies and toddlers  \n \n6. Enterococci & alpha -haemolytic streptococci other than Streptococcus pneumoniae  \nThey are G+ cocci, occur in pairs or chains, the catalase test is negative, and they grow in BE + 6,5% NaCl.  \nViridans streptococci  \nThe viridans streptococci  are dominant members of the resident flora of the oral cavity and pharynx in all \nage groups. They play an important role by inhibiting the colonization of many pathogens, including \npyogenic streptococci. This is achieved by 2 different machanisms:  \n• product ion of bacteriocins  \n• production of hydrogen peroxide (also responsible from α -hemolysin)  ' metadata={'source': 'bio.pdf', 'page': 28}
"
"page_content=' \n Most strains secrete bacteriocins.  \n- Mitis group: colonize tooth surfaces as well as mucosal membranes. Because of their presence in the \nbacterial deposits (dental plaque ) on tooth surfaces, these species may enter the bloodstream during dental \nprocedures such as tooth extraction or vigorous tooth cleaning, particularly if the gengival tissue is \ninflamed. They are recognized as cause if iften fatal septicaemias in immunoco mpromized patients.  \n- Mutans group: colonize both enamel and do not occur until tooth eruption. Their proportions in dental \nplaque are closely related to sugar consumption. Like most other plaque streptococci they may cause \nsubacute bacterial endocarditis.  \n \nEnterococcus species  \nEnterococcus have their natural habitat in the human intestines. The species most commonly associated with \nhuman disease are E. faecalis and E. faecium. The diseases with which they are associated are:  \n• urinary tract infection  \n• infective  endocarditis  \n• biliary tract infections  \n• suppurative abdominal lesions  \n• peritonitis  \nE. faecalis and E. faecium are important causes of wound and urinary tract infection in hospital.     \n \nTreatment  \nThey are susceptible to penicillin in combination with aminogl ycosides. They are resistant to vancomycin.  \n \n7. Corynebacterium  \nThe term coryneform is used to describe aerobic, non -sporing and irregularly shaped Gram + rods.  \nCORYNEBACTERIUM DIPHTERIAE: the major disease caused by C. diphteriae is diphteria, an infect ion \nof the local tissue of the upper respiratory tract with the production of a toxin that causes sustemic effects, \nnotably in the heart and peripheral nerves.  \nC. diphtheriae are non -motile, non -spore forming, straight or slightly curved rods with tapered end s. \nSnapping division produces groups of cells in angular and palisade arrangements.  \nC. diphteriae is aerobic and facultative anaerobic.  \nTo cause disease C. diphtheriae must:  \n• invade, colonize and proliferate in local tissues  \n• be lysogenized by a special β -phag e, enabling it to produce toxin.  \nThe diphtheria toxin possibly assists colonization of the throat or skin by killing epithelial cells or \nneutrophils.  \nThe exotoxin is produced locally and is spread by the bloodstream to distant organs, with a special affini ty \nfor heart muscle, the peripheral nervous system and the adrenal glands.  \nThe diphtheria toxin binds to a specific receptor on susceptible cells and enters by receptor -mediated \nendocytosis.  \nInhibition of protein synthesis is probably responsible for both necrotic and neurotoxic effects of the toxin. \nProduction of toxin is enhanced considerably when the bacteria are grown in low iron conditions.  \nNontoxigenic strains of C. diphtheriae may cause pharyngitis and cutaneous abscesses.  \nDiphtheria antitoxin (hyper immune horse serum) is given, since antibiotics have no effect on preformed \ntoxin which rapidly diffuses from the local lesions and soon becomes irreversibly bound to tissue cells.  \n \nTreatment  \nTreatment with parenteral penicillin or oral erythromycin eradi cates the organism and terminated toxin \nproduction.  \n \nHigh population immunity achieved through mass immunization.  \n \nOther medically important corynobacteria  \nThey comprise strictly aerobic bacteria as well as facultative or preferantially anaerobic bacteria which are \ncommensals of the skin and mucous membranes.  \nCORYNEBACTERIUM ULCERANS: like C. diphtheriar and C. pseudotuberculosis, C. ulcerans can \nproduce diphtheria toxin. In man, C. ulcerans is almost exclusively seen in cases of exudative pharyngitis, \nbut occasional soft tissue infections occur.  ' metadata={'source': 'bio.pdf', 'page': 29}
"
"page_content=' \n Infection usually takes the form of acute pharyngitis with pseudomembranes, and cardiac or neurological \ncomplications can occur. Therapy involves administration of appropriate anti -biotics such as penicillins or \nerythromycin and administration of diphtheria antitoxin.  \nCORYNEBACTERIUM PSEUDOTUBERCULOSIS: human infections mainly occur in patients with \nanimal contact.  \nCORYNEBACTERIUM JEIKEIUM: C. jeikeium is part of the normal skin flora, particularly in inguinal, \naxillary and rectal areas.  \nMost infections are associated with skin damaged by wounds or invasive devices.  \nC. jeikeium are highly resistant to penicillins and cephalosporins in vitro. Even with susceptible isolates, \npenicillin isincompletely bactericidal. C. jeike ium is sensitive to glycopeptides and these antibiotics are \nbactericidal.  \nCORYNEBACTERIUM UREALYTICUM: C. urealyticum is a frequent skin colonizer, mainly in hospital \npatients. The groin is the most frequent skin site of colonization, followed by the abdom inal wall and axilla. \nThis microorganism is associated with urinary tract infections.  \nLike C. jeikeium, C. urealyticum is usually high resistant to most antimicrobial agents, except glycopeptides.  \n \n8. Listeria monocytogenes  \nThe are non -sporing Gram.positi ve bacilli, found usually in pairs or short chains. They have a positive \ncatalase test and can grow even in low temperatures and increased NaCl levels.  \n \nListeria is phagocytosed by macrophages -> phagolysosome is not formed because of the action of \nLystei olysin O -> Listeria escaps and multiplies -> bacteria on surface of macrophages -> pseudopod \nextension -> listeria infects other macrophage  \n  \nThe disease chiefly affects pregnant women, unborn or newly delivered infants, the immunosuppressed and \nelderly. It is predominantly transmitted by the consumption of contaminated food.  \nThe bacilli are non -motile at 37ºC, but exhibit characteristic ―tumbling‖ motility when tested at 25ºC.  \nMost cases of human listeriosis are caused by serovars 4b, 1/2a and 1/2b.  \nIt grows in a wide range of foods having relatively high water activities and over a wide range of \ntemperatures. Growth at refrigeration temperatures is relatively slow.  \n \nPathogenesis  \nL. monocytogenes is an intracellular parasite, and it is in this environment th at the pathogen gains protection \nand evades some of the host’s defences.  \nListerial surface protein, internalin is involved with the initial stages of invasion on all cell types. After \ninternalization, L.monocytogenes becomes encapsulated in a membrane -boun d comportment.  \nThe ability to polymerize actin by listeria all surface protein subverts the host cell’s cytoskeleton and confers \nintracellular motility to the bacterium.  \nL. monocytogenes principally causes intra -uterine infection, meningitis and septicaemia.  \nPregnant women often have very mild symptoms (chills, fever, back pain, sore throat and headache, \nsometimes with conjunctivitis, diarrhoea or drowsiness) but may be asymptomatic until the delivery of an \ninfected infant.  \nCultures from high vaginal swabs, st ool and midstream urine samples, together with pre - or postnatal \nantibody tests, are of little help in diagnosis.  \nWhile the outcome of infection for the mother is usually benign, the outcome for the infant is more variable. \nAbortion, stillbirth and early -onset neonatal disease are common.  \nEarly neonatal listeriosis is predominantly a septicaemic illness, contracted in utero.  \nEarly -onset disease represents a spectrum of mild to severe infection which can be correlated with the \nmicrobiological findings. The neonates who die of infection usually do so within a few days of birth and \nhave pneumonia, hepatosplenomegaly, petechiae, abscesses in the liver or brain, peritonitis and entercolitis.  \n \nTreatment  \nampicillin + sulfometoxazole  \n  \n9. Mycobacterium tuberculosis  \nM. tuberculosis are non -motile, non -sporing, non -capsulated, straight or slightly curved rods.  ' metadata={'source': 'bio.pdf', 'page': 30}
"
"page_content=' \n Tubercle bacilli are able to grow on a wide range of enriched culture media, but Lowenstein -Jensen (LJ) \nmedium is the most widely used in clinical practice.  \nAll myco bacteria are obligate aerobes.  \nTubercle bacilli survive in milk and in other organic materials and on pasture leand so long as they are not \nexposed to ultraviolet light, to which they are very sensitive. They are also heat -sensitive, and are destroyed \nby pasteurization. Mycobacteria are susceptible  to alcohol, formaldehyde.  \nThe tubercle bacillus owes its virulence to its ability to survive within the macrophage rather than to the \nproduction of a toxic substance. The nature of the immune responses following  infection changes with time \nso that human tuberculosis is divisible into the primary and post -primary forms with quite different \npathological features.  \n-Primary tuberculosis  \nThese bacilli are engulfed by alveolar macrophages. Some bacilli are carried to the hilar lymph nodes where \nadditional foci of infection develop.  \nWithin about 10 days of infection, clones of antigen -specific T lymphocytes are produced. These released \ncytokines, notably interferon -γ, which activate macrophages and cause them to form a compact cluster, or \ngranuloma, around the foci of infection.  \nGranuloma formation is usually sufficient to limit the primary infection: the lesions become quiescent and \nsurrounding fibroblasts produce dense scar tissue, which may become calcified. Not all b acilli are destroyed: \nsome remain in a poorly understood dormant form which, when reactivated, causes post -primary disease.  \n- Post-primary tuberculosis  \nEndogenous reactivation may occur spontaneously or after an intercurrent illness or other condition that \nlowers the host’s immune responsiveness.  \n \nCD4+ -> IFN -γ -> activation of macrophages -> macrophages engulf M. tb but aren’t able to destroy it -> \nepitheloid cells + Langerhans giant cells -> granulomas with central caseous necrosis are formed -> lesions \nmay arrest and become fibrotic and calcified  \n                  -> they may rupture leading to propagation of Tb to the rest of respiratory system + blood  \n \nTuberculin test is positive  \nInterferon -γ release test positive  \n \nTreatment  \ntakes 6 months or more and uses a combination of drugs (ethambutol, st reptomycin, pyrozinamide, isoniazid \n= RESPI)  \nBCG (bacille Calmette Guérin) vaccine is used in individuals under heavy sustained risk of infection.  \n \n10. Mycobacterium leprae  \nLeprosy bacilli resemble tubercle bacilli in their general morphology, but they are n ot so strongly acid -fast. \nThey are transmitted through human to human contac. They are typically found within macrophages in dense \nclumps. They have unlimited source of recombinant protein antigens. The principal target cell for the leprosy \nbacillus is the  Schwann cell. The resulting nerve damage is responsible for the main clinical features of \nleprosy: anaesthesia and muscle paralysis. Repeated injury to, and infections of the anaesthetic extremities \nleads to their gradual destruction. Infiltration of the skin and cutaneous nerves by bacilli leads to the \nformation of visible lesions, often with pigmentary changes.  \nBacilli are disseminated from the nasal secretions of patients with lepramatous leprosy. In addition, the blood \nof patients with lepromatous lepr osy contains enough bacilli to render transmission by blood -sucking \ninsectes a definite, though unproven, possibility.  \nLeprosy often commences during childhood or early adult life but, as the incubation period is usually 3 -5 \nyears, it is rare in children a ged ledd than 5 years.  \n- Tuberculoid leprosy: low infectivity, cell mediated immunity. The lesion is a large macullae in organs \nsuch as testis, skin or superficial nerve endings -> trophic changes of muscles  \n    Treatment: dapsone + rifampin  \n- Lepromatous le prosy: high infectivity, decreased immunity. There are extensive erythematous macules, \npapule or nodules -> extensive skin lesion: destruction of nasal bones, uveitis, corneal infections.  \n     Treatment: clofazamine  \n \nVaccine with BCG has some protective ef fect. ' metadata={'source': 'bio.pdf', 'page': 31}
"
"page_content=' \n Lepronin and leprosin are skin tests made for diagnosis.  \n \n11. Atypical mycobacteria  \nTermed environmental (or non -tuberculous) mycobacteria, some species occasionally cause opportunistic \ndisease in animals and man.  \n4 groups of mycobacteria associated wit h human disease according to their production of yellow or orange \npigment and their rate of growth.  \n• Photochromogens, which are colourless when incubated in the dark  \n• Scotochromogens, which produce pigmented colonies even when grown in the dark  \n• Non-chromogen s, which are unpigmented  \n• Rapid growers  \nPHOTOCHROMOGENS: Mycobacterium kansaii, M. simiae, M. marinum  \nSCOTOCHROMOGENS: M. gordonae, M. scrofulaceum, M. szulgai  \nNON -CHROMOGENS: M. avium, M. intracellulare  \nIn man, they are responsible for lymphadenitis, pulmo nary lesions and disseminated disease, notably in \npatients with the acquired immunodeficiency syndrome (AIDS).  \nRAPID GROWERS: M. chelonae, M. fortuitum  \nThey occsionally cause pulmonary or disseminated disease but are principally responsible for post -inject ion \nabscesses and wound infections, including corneal ulcers.  \nEnvironmental mycobacteria are of low virulence and, although man is frequently infected, overt disease is \nvery uncommon except in those who are prefoundly immunosuppressed. Four main types of o pportunistic \nmycobacterial disease.  \n- Lymphadenitis  \nIn most cases a single node, usually tonsillar, is involved, and most patients are children aged less than 5 \nyears.  \nLymphadenitis occasionally occurs as part of a more disseminated infection, particularly i n individuals with \nAIDS.  \n- Post-injection abscesses  \nAbscesses occur sporadically or in small epidemics when batches of injectable materials are contaminated by \nthese bacteria. They are painful, may become quite large - up to 8 or 10 cm in diameter - and may persist for \nmany months.  \n- Swimming pool granuloma  \nThose affected are mostly users of swimming pools, keepers of tropical fish and others involved in aquatic \nhobbies. The bacilli enter scretches and abrasions and cause warty lesions similar to those seen in skin \ntuberculosis.  \n- Buruli ulcer  \nThe 1st manfestation of the disease is a hard cutaneous nodule, which is often itchy. This enlarges and \ndevelops central softening and fluctuation owing to necrosis of the underlying adipose subcutaneous tissues \ncaused by a toxin. The overlying skin becomes anoxic and breaks down, the liquefied necrotic contents of \nthe lesions are discharged and one or more ulcers with deeply undermined edges are thereby formed.  \n- Pulmonary disease  \nThis is the most frequently seen in middle -aged or elderly men with lung damage caused by smoking or \nexposure to industrial dusts.  \n- Disseminated disease  \nUp to a half of all persons dying of AIDS in the USA has disseminated mycobacterial disease.  \n \nTreatment  \nMost environmental mycobacteria are resistant to many antituberculosis drugs in vitro although infections \noften respond to various combinations of these drugs.  \nRifampicin + Isoniazid + ethambutol -> given for up to 18 months  \n \n12. Actinomyces & Nocardia  \nActinomyces  \nA. israelii and A. propionica are part o f normal microflora of intestines and oral cavity. They are facultative \nanaerobes (but grow better in anaerobic condition), slight gram + bacilli, slight acid -fast. \nThey cause the following diseases:  \n- abscesses leading to scar and disfigurement  ' metadata={'source': 'bio.pdf', 'page': 32}
"
"page_content=' \n - cases associ ated to poor dental health or tooth extraction  \n- mycetoma - hard, red swalling filled with liquid, ruptures to surface discharging pus.  \nActinomycosis - is a chronic disease characterized by multiple abscesses and granulomata, tissue destruction, \nextensive fi brosis and the formation of sinuses.  \n \nLab ID  \nSulphur granules in pus.  \n \nTreatment  \nPenicillin G for weeks or months - surgical debridment is done  \nIf the patient is allergic - tetracyclines  \n \n \nNocardia  \nNocardia asteroides and Nocardia brasiliensis are oportuni stic human infection, inhaled or acquired by \ncontamination of skin wounds. Cutaneous nocardiosis starts with traumatic implantation - cellulite with \nswelling. In most cases there are multiple confluent abscesses with little or no surrounding fibrous reacti on \nand local spread may result in empyema.  \nThey are strict aerobe, grow in BA.  \nThey cause chronic pneumonia which is predisposed by lymphomas, drugs or immunocompromised patients.  \n \nTreatment  \nSulfonamides with or without trimethoprim.  \n  \n13. Bacillus  \nAre Gram+ r ods which form endospores (central), are encapsulated, facultative or strictly aerobic.  \n \nB. anthracis is a non -motile straight, sporing bacillus.  \nSpores are never found in the tissues. The spores are resistant to chemical desinfectants and heat.  \nContracted  by infected animals products, contaminated dust inhalation or by subcutaneous inoculation due to \nskin abrasion.  \nPathogenic factor:  \n- capsule: antiphagocytic  \n- 3 exotoxins that are plasmid coded: protective antigen, adema factor, lethal toxin.  \nCUTANEOUS ANTRAX : the resulting lesion is often described as a malignant postule.  \nRESPIRATORY ANTHRAX: this condition carries a high mortality due to the intense inflammation, \nhemorrhage and septicaemia which result from the multiplication of organisms in bronchi and spre ad to the \nlungs, lymphatics and bloodstream.  \nINTESTINAL ANTHRAX: an individual may suffer after a day or so from haemorrhagic diarrhoea, and dies \nrapidly from septicaemia.  \nB. cereus are Gram + bacillus, motile. The organism is found in most of raw foods, s pecially crerals like rice.  \n- Vomiting within 6h: preformed toxin  \n- Diarrhoea 8 -24h after ingestion: enterotoxin formed in the intestine  \n \nTreatment  \nPenicillin, erythromycin, doxycylin and ciprofloxacin  \nVaccine: cell free vaccine available for high risk occupat ions.  \n \n14. Clostridium botulinum  \nAre Gram+ rod, motile, strictly anaerobe grows in VL blood agar, spore forming.  \nTheir spores frequently infect vegetables, meat or fish.  \nPathogenic factor: botulinum absorbed in intestine from where it is going to pass through  circulation to nerve \nending, it is going to dissociated into a heavy and light chain preventing acetylcholine from being released \nfrom presynaptic nerve leading so to flaccid paralysis.  \nDiseases:  \n- Classic botulinism: difficulty foccusing vision then swallo wing then other cranial nerve function \nuntil patient succumbs with respiratory paralysis.  ' metadata={'source': 'bio.pdf', 'page': 33}
"
"page_content=' \n - Floppy child syndrome (infant botulism): colonization of infants large bowel -> constipation  , \nfeeding problem, poor muscle tone...  \n- wound botulism  \n \nTreatment  \nAntitox in (trivalent A, B, E) and inward botulism - penicillin  \n  \n15. Clostridium tetani  \nThey are straight, motile, slender rods with rounded ends capable of forming spores (terminal). They are \nobligate anaerobes which are commonly common in backyard, garden and othe r soils generally acquired \nthrough puncture wound (e.g.: splinter).  \nPathogenesis:  \nInfected locus -> retrograde neural flow (from peripheral to central, bacteria stays there and toxin is absorbed \nby blood and enters nerves) -> the heavy chain mediates attac hment to gangliosides and the toxin is \ninternalized -> Light chain blocks neurotransmitter release at inhibitory synapses (GABA) -> prolonged \nspasm  \nThis microorganism grows in VL BA:  \n- haemolysin  (tetanolysin)  \n- neurotoxin (tetanospasmin)  \nDisease:  \n- Tetanus: 4 days to several weeks incubation, muscle spasm firstly involving the site of infection then \npropagate to other muscles until reaching chest muscles.  \nPrevention:  \nActive immunization with tetanus toxoid in DPT vaccine and boosters every 10 years  \n \nTreatment:  \nPenicillin or metronidazole  + antitoxin + debridement of wound  \n \n16. Clostridia other than  Clostridium botulinum & Clostridium tetani  \nClostridium Difficile  \nThe organism is acquired from an exogenous source by a patient whose intestinal colonization resistance has \nbeen compromised by antibiotic exposure.  \nThey generally appear  as result of appliance of broad spectrum antibiotics which will make the intestinal \nflora disappear and make this species proliferate.  \nPathogenic factors:  \n- toxin A: increased secretion but a lso stimulation of inflammatory response  \n- toxin B: disrupts protein synthesis and causes disorganization of cytoskeleton  \nDiseases:  \n- AAD (antibiotic associated diarrhea)  \n- Pseudomembranous colitis  (seen better in endoscopy)  \nBoth cause by cephalosporins, ampicil in + clindamycin  \nTreatment:  \nDiscontinuance of drugs used + fluid replacement  \nVancomycin or metranidazole added  \n \nClostrisium Perfringens  \nThey are G+ bacillus with blunt dnes capsulated and non -motile. They are part of the normal flora of vagina \nand GIT.  \nPathogenic factors:  \n- exotoxins (at lest 12) from which the most important α toxin, lecithinase which degrades mammalian \ncell membranes causing lysis of endothelial cells, WBC, RBC and platelets – cytotoxic and necrotic \neffect.  \n- enterotoxin: acts in loer portmon  of small intestine by disrupting ion transport and leasing to loss of \nfluid and intracellular proteins.  \n- degradative enzymes: proteases, DNAses, collagenases which liquefy tissue and promote spread of \ninfection  \nDiseases:  ' metadata={'source': 'bio.pdf', 'page': 34}
"
"page_content=' \n Gas gang rene: the disease is charac terized by rapidly spreading oedema, myositis, necrosis of tissues, gas \nproduction and profound toxaemia occurring as a complication of wound infection.  \nThe main source of the organisms is animal and human excreta, and spores of the causative clostridia ar e \ndistributed widely.  \nIt may be indirectly derived from dirty clothing, street dust, and even the air of an operating theatre if the \nventilating system is poorly designated or improperly maintained. The skin often bears spores of C. \nperfringens, especially  in areas of the body that may be contaminated with intestinal organisms.  \nTreatment: penicillin + metronidazole + aminoglycoside  \n \nFood poisoning:  \nThe C. perfringens enterotoxin (CPE) mediating the disease is heat -labile (inactivated at 74ºC) and can be \ndetected in poor prepared meat and poultry.  \n  \n17. Neisseria gonorrhoeae  \nThey are G - diplococci, piliated, aerobic, and they grow on ChA and splits glucose.  \nPathogenic factors:  \n- pilli: confer resistence to phagocytosis, enhances attachment of organism to host epith elial cells and \nmucosal cell surfaces; they are also antigenic ( >20 gonococcal genes code for Pilli) \n- IgA protease which cleaves IgA1 helping pathogen to invade.  \nDiseases: classical venereal disease, being almost exclusively spread by sexual contact.  \n- it mos t often colonizes mucous membrane of genitourinary tract or rektum  \n- genitourinary tract infection:  \nin males: yellow purulent urethral discharge and painful urination (acute uretritis)  \nin females: infection in endocervix to urethra and vagina, greenish yell owish cervical discharge and \nintermenstrual bleeding -> uterus -> pelvic inflammatory disease -> fibrosis. Acute salpingitis -> can \nlead to sterility  \nRectal infections:  most common in gay people -> constipation painful defecation, purulent discharge  \nPharyn gitis:  purulent exudate -> sore throat  \nOphtalmia neonatorum:  infection of conjunctival sac, may lead to blindness  \n  \nLab ID:  \nNeutrophils that contain diplococci  \n \nTreatment:  \nPenicilin, 3rd generation cephalosporins  \nErythromycin also treste clamydia and is le ss toxic  \n \n18. Neisseria meningitides  \nMany serogroups A, B and C: epidemic and outbreak cerebrospinal meningitis  \nThey are non-motile , G- diplococci, piliated (allow attachment to nasopharynx mucosa where it is harbored \nin carriers and in those with meningococca l disease).  \nPathogenic factors:  \n- polysaccharide capsule – antiphagocytic + antigenic:  \n• LOS – 14 capsular polysacharide types = serogroups  \n• Outer membrane protein = serotype + LOS  \n \n19. Salmonella typhi  \nAmong the host -adapted serotypes, Typhi and Parathyphi A, B a nd C are primarily pathogens of humans. All \nstrains are placed under S. enterica, being Salmonella Typhi, one of the subtypes.  \nS. typhi is a facultatve anaerobe, G - rod with Hajna red +, oxidase -, lactose - on endo agar.  \nSalmonella enters intestinal cell by endocytosis -> pass through endothelial cell to submucosa where they are \ntaken up by macrophages -> macrophages carry Salmonella to reticulo -endothelial system where bacteria \nmultiply -> Lymphoid hyperplasia and hypertrophy -> reenters bowel via liver a nd gallbladder  \n \nSalmonella antigens:  \n- Long -chain lipopolysaccharide (LPS) comprises O antigens  ' metadata={'source': 'bio.pdf', 'page': 35}
"
"page_content=' \n - Salmonallae are usually highly motile when growing in laboratory media and flagellar protein \nsubunits contain the epitopes that form the basis of the flagella -based serotyping scheme generally \nknown as the H antigens.  \n    Certain serotypes of S. enterica express a surface polysaccharide, of which the Vi (virulence) antigen \nof S. Typhi is the most important example. Since the polysaccharide may encapsulate the entir e bacterium, \nantibodies designed to recognize the LPS  antigens may be prevented from binding, which can occasionally \nmake detection of the O antigens difficult.   \nDiseases:  \n- Enteric fever: fever + abdominal symptoms (nonspecific symptoms: chills, sweats, h eadache, \nanorexia, weakness, sore throat and diarrhoea/constipation) incubation 5 -21 days.  \n    Complications: intestinal, hemorrhages and focal infections and endocarditis  \n- Paratyphoid fever: transmitted by ingestion of focal or water contamined by human fe ces.  \nTreatment  \nβ lactams and fluoroquinolones. Prevention is done by accomplishing proper sewage disposal, correct \nhandling of food and good personal hygiene.  \nvaccination: Typhi, Paratyphi A and Paratyphi B (TAB) - for endemic level.  \n  \n20. Salmonellae other than Salmonel la Typhi  \nIt comprises S. enteritidis and typhimurium. Their mechanism is the same mechanism as S. typhi.  \nDiseases:  \n- Enterocolitis: also called salmonellosis. It is characterized by nausea vomiting and diarrhoea usually \nnon bloody which develops within 48h a fter ingesting contaminated food or water. In \nuncompromised patients, disease is generally self limiting (48 -72h).  \n  It may be acquired by eggs and poultry.  \nTreatment  \nAntibiotic are not needed and may prolong the convalescent carrier state.  \n \n21. Shigella  \nThis is a G - rod, with Hajna +, oxidase - and lactose - on endo agar. They are non -motile and non -capsulated \npathogens.  \nIt is spread from person to person with contaminated stools as major source of organisms (flies and \ncontaminated food also transmit the d isease) - low infectious dose (because Shigella has innate tolerance to \nlow pH).  \n40 serotypes of Shigella organized  into 4 groups  (A, B, C and D). Group D is Shigella sonnei.  \nShigella enters intestinal cells by endocytosis through Payer’s patches -> Shigel la escapes from endocytic \nvesicles and multiplies inside cell protected from macrophages -> Shigella invades neighboring cells (lamina \npropria) -> mucosal abscess  forms as cells die causing diarrhea  with blood mucous and painful abdomen \n(patches of necroti c epithelium are sloughed and ulcers form).  \n \nShigella invades and destroys mucosa of large intestine -> infection rarely penetrates deeper layers and does \nnot lead to bacteriemia.  \nPathogenic factor:  \n- exotoxin (Shigatoxin) - enterotoxin and cytotoxic effect (secondary role development of intestinal \nlesions)  \n- LPS - causes localized cytokine release and the resultant inflammatory response and cellular  \ndisruption enables bacteria to enter  \nDisease:  \n- bacillary disentery (diarrhoea with blood, mucous and painful abd ominal cramping)  \nTreatment:  \nAntibiotics like ciprofloxacin and ampicillin might be used to diminish duration of disease and period of \nshedding organism but use controversal.  \nProtection of water and flood supply and personal hygiene crucial!  \nMaintenance of hydration!  \n  \n22. Escherichia coli  \nG- rod, facultative pathogen which grows in endo agar, with Hajna red +, oxidase -, lactose + on endo agar. \nSome strains are hemolytic.  ' metadata={'source': 'bio.pdf', 'page': 36}
"
"page_content=' \n They are part of the normal flora of colon but can be pathogenous both inside and outs ide the GIT. \nSerotyping based on 3 structural antigens: O (cell wall Ag), H ( flagella  Ag, only flagellated bacteria have it) \nand K (capsule + fimbria Ag).  \nE. coli pathogenic factors:  \n- Polysaccharides O and K protect the organism form the bactericidal effect of  complement and \nphagocytosis in the absence of specific Ab.  \n- Many strains express haemolysin -> pathogenic mechanism for releasing essential ferric  ions bound \nto hemoglobin . \n- Expression of the aerobactin -mediated iron uptake system.  \nThey are transmitted by o ral-fecal route (indicator of fecal pollution of water sources).  \n- ETEC (EnteroToxigenic E. coli) - causes travelers’  diarrhea   \n person to person, water or food contaminated by waste  \n colonizes small intestine and its enterotoxins cause Cl - hypersecretion an d water by intestinal \nmucosal cells and inhibits reabsorption of Na+ -> diarrhea  \n                 it has a heat -labile enterotoxin and a heat -stable enterotoxin (treatment with fluoroquinolones)  \n         - EPEC (EnteroPathogenic E. coli) -> cause of diarrh ea in infants (infantile enteritis)  \n locations with poor sanitation and newborn  infection during birth  \n EPEC attaches to the mucosa of intestines, destroys microvilli and develops characteristic lesion \n(Shiga -like toxin) - watery diarrhea  \n         - EHEC ( EnteroHemorrhagic E. coli)  \n  binds to intestines where it produces an exotoxin causing a severe form of copious bloody \ndiarrhea  without invasion or inflammation (serotype O157:H7)  \n potential fatal renal failure (in children - hemolytic  uremic  syndrome)  \n          - EAggEC (Entero -aggregative E. coli)  \n  chronic diarrheal  disease in some developing countries  \n          - EIEC (EnteroInvasive E. coli)  \n similar to Shigella infection  \nExtraintestinal diseases:  \n- UTIs: more  common in female due to short urethra. High incidence in pregnant due to impairment of \nurine flow. In male, prostatic enlargement is a predisposing factor . They are caused by uropathogenic \nstrain of E. coli (non -complicated UTI -> mainly cause ascending manner)  \n- neonatal meningitis: in 1st month of l ife \n- nosocomial infections: sepsis, bacteremia ... \nCan be prevented by care in selection, preparation and consumption of food and water.  \nTreatment:  \nExtraintestinal diseases require antibiotics but susceptibility test has to be performed: ampicillin, \ncephalos porins , tetracyclines, quinolones...  \n  \n23. Facultative pathogenic Enterobacteriaceae (other than Escherichia  coli)  \nThey are G - rods which grow on endo agar, Hajna red +, oxidase - and lactate + in endo agar. They are \nfacultative pathogens.  \nThey include: E . coli, Proteus, Serratia, Klebsiella  \nThey generally don’t cause primary disease in humans but are common nosocomial infections, specially in \nassociation with antibiotic treatment in dwelling catheters or invasive procedures.  \n \nKlabsiella  \nThey are facultati ve anaerobic, non -motile but express fimbriae. They also possess K and O antigens and a \nlarge luxurious capsule ( -> mucoid appearance).  \nKlebsiella pneumonia and Klebsiella oxytoca cause necrotizing lobar pnuemonia in individuals \ncompromised by alcholism, d iabetes or COPD. Klebsiella penumonia might also cause UTIs and bacteriemia \nparticularly in hospitalized patients.  \nThey grow through enterobactin -mediated iron -sequestring  \n \nTreatment  \nampicillin, amoxacillin + β -lactamase inhibition  \n \nSerratia  ' metadata={'source': 'bio.pdf', 'page': 37}
"
"page_content=' \n Is a motile pathogen.  \nSerratia marcescens might infect humans and might cause lower respiratory infection, urinary tract \ninfections, meningitis, sepcticaemia, endocarditis.  \n \nProteus  \nHAS RAUS PHEN OMENON IN AGAR. They are motile pathogens and they cause nosocomial UTIs, \nwound infections, pneumonias and septicemias in compromised patients.  \nUrea is splitted (by urease) into ammonia and the resulting alkaline environment promotes precipitation of \nstruv ite stones.  \n \n24. Pseudomonas aeruginosa  \nThey are G - rods glucose non fermenters, which grow endo agar, Hajona red -, oxidase +and produce green \npigments. They are obligatory aerobe, non -capsulated and motile pathogens with a characteristic grape -like \nodour . \nThey are opportunistic pathogens and the major cause of nosocomial infections (pneumonia, UTIs, surgical \nsite infections, infections of severe burns and patients undergoing chemotherapy or antibiotic. Worsens \ngrately the status of patients with cystic fi brosis).  \nIn the community they may cause corneal infections due to contaminated lense, and jacuzzi rashes.  \nPilli mediated adherence to media and glycocalyx capsule reduces effectiveness of cleaning mechanisms. \nHost tissue damage facilitates this process. T oxins that promote local invasion and dissemination:  \n- exotoxin A  \n- exo-enzyme S  \n- proteases, phospholipases  \nInfections:  \n- localized: eye, ear, skin (wound sepsis), UTI (specially in catheterized patients), respiratory tract \n(pneumonia, congestive heart failure), GIT (diarrhoea), CNS (meningitis, brain abscess) - never \ndisseminates  \n- systemic (mainly in immunocompromised patients): bacteriemia (in immunocompromized patients), \nsecondary penumonia, bone and joint infections, endocarditis, CNS and skin infections.  \nTreat ment  \nDifficult to find antibiotics against due to its rapid development of resistance mutation. Aminoglycoside and  \nβ-lactam  \n \n25. Pseudomonas mallei & Pseudomonas  pseudomallei  \nPseudomonas mallei  \nThey differ from genus because it’s nonmotile.  \nEtiologic age nt of glanders - serious inflammation that affects primarily horses, donkeys and mules - rarely \nhumans.  \nIn humans, clinical presentation depends on route of transmission. It may be:  \n1) Localize suppurative infection leading to mucopurulent discharge. Common: eye, lips, nose  \n2) Acute pulmonary infection (lung abscesses, lobar pneumonia ) \n3) acute septicemic infection   \n \nPseudomonas pseudomallei  \nIt is a normal  inhabitant of soil and water. The transmission is done through wounds in skin, ingestion, and \ninhalation . \nIt causes melioidosis with varied presentations like P. mallei  \n \n26. Campylobacter  \nThey are G - rod, not growing on endo agar, curved or spiral S shaped with  a single polar flagellum grows in \nmicroaerophilic conditions. They grow on BA with antibiotics (to inhib it growth other fecal flora). It has O, \nH and K antigens.  \nThey adapted to colonize mucous membranes and are able to penetrate mucous with facility.  \nThey are transmitted via oral -fecal route or direct contact with contaminated water   \nCampylobacter jejunii:   ' metadata={'source': 'bio.pdf', 'page': 38}
"
"page_content=' \n - acute enteritis appears after 7 days incubation in healthy people and it is self-limiting . Symptoms \nmay be either systemic (fever, headache and myalgia) and intestinal (cramps and diarrhea  with or \nwithout blood)  \n- causes also travelers’  diarrhea  and pseud oappendicitis  \n- bacteremia  may occur in children and elderly people  \nThe jejunum and ileum are the 1st to become colonized, but the infection extends distally to affect the \nterminal ileum and usually the colon and rectum.  \nThey are invasive, similar to Salmone lla, Shigella or Yersinia infections.  \nDiarrhea  should be treated with fluid and electrolyte replacement unless for patients with severe symptoms ( -\n>erythromycin)  \nComplications:  \n- reactive arthritis  \n- Guillain -Barre  \n \n27. Helicobacter pylori  \nThey are G - rod, not  growing on endo agar. They grow in microaerophilic environment and are transmitted \nfrom person to person.  \nH. pylori penetrates the mucous layer lining the stomach attracted to the chemotatic substances hemin + urea \n-> H. pylori recruits and activates infl ammatory cells -> releases powerful urease: urea - ammonia which \nneutralizes acid secretion -> exposes underlying C. T. to stomach acid  \n \n- Patients taking antiacid are more at risk  \n- Acute gastritis (may lead to gastric ulcers + duodenal)  \n- Untreated may become chronic, lifelong or even develop to gastric carcinoma and gastric B -cell \nlymphoma.  \nLab ID  \nurea breath test +  \nurea splitting +  \n \nTreatment  \n2 or more antibiotics are applied due to rapid resistance of H. pylori, generally tetracyclin + metranidazole + \nbismut h salts.  \n \n28. Vibrio  \nThey are G - which grow on endo agar with Hajna red +, oxidase +. They are motile by meansof single \nflagellum, has O and H antigens but only O is important distinguishing strains that cause epidemics, \nfacultative anaerobe, which the gro wth is stimulated by NaCl.  \nVibrio cholerae  is transmitted by contaminated food or water, there are 2 biotypes of other species: Classic \nand El Tor (hemolysin, higher carriage rates and the ability to survive in water for long time).  \nVibrio cholerae infects  the small intestine. The organism is non invasive and causes disease through the \naction of an enterotoxin.  \nCholera toxin binds to a ganglioside receptor -> A subunit enters the cell membrane, activates Gs which will \nactivate adenylate cyclase -> Adenylate  cyclase produces elevated cAMP -> cAMP causes active secretion \nof ions and water. Inhibition of uptake of Na+ and Cl - and hypersecretion of Cl - and HCO3 -. \nDiseases:  \n-Cholera: characterized by massive loss of fluid and electrolytes (vomiting and watery dia rrhoea) from body \nincubation of hours to days is followed by a profuse watery diarrhoea. If untreated -> death from severe \ndehydratation followed by hepovolemic shock will ensue.  \nReplacement of fluids and electrolytes is crucial in preventing shock.  \n \nTreat ment  \nDoxyxyxlin  \n \nVibrio parahemolyticum  will not grow in the absence of NaCl. Outbreaks of GIT disease (explosive \ndiarrhoea, abdominal pain, nausea and vomiting) that results from ingestion of inadequately cooked seafood \ndisease is self limiting and antibi otics don’t alter cause of infection.   \n ' metadata={'source': 'bio.pdf', 'page': 39}
"
"page_content=' \n 29. Haemophilus  \nThey are G - rod, not growing on endo agar (Pasteurellacae grows on chocolate agar).  \nH. ducrey : sexually transmitted disease, chancroid (painful penile ilcers). X factor only in BA (H. \nparainfluenza: V factor).  \nH. influenza : may be encapsulated (6 capsular types) or uncapsulated. Satellite phenomena is visible in BA \nwith Staph. aureus. When cultured on ChA with factor V and X, if growing on both.  \nIt has an important virulence factor -> serious invasive  H. influenzae disease is associated with capsular type \nb. \nHib is particularly important in young children. Noncapsulated strains can also cause pneumonia among \nelderly people and people with chronic lung disease..  \nNormal component of upper respiratory tra ct flora, may colonize conjunctiva and genital tracts - humans \nonly natural hosts.  \n \nPathogenic factors:  \n- IgA protease - degrades secretory IgA, facilitating colonization of upper respiratory tract mucosa -> H. \ninfluenza enters the blood stream and dissemina tes to distant sites.  \n- Fimbriae which assists the attachment to epithelial cells - outer membrane components.  \nDiseases:  \n- Otitis media, sinusistis, epiglottitis, bronchopneumonia (contagious spread from its site of colonization in \nrespiratory tracts).  \n-  Meni ngitis, septic arthritis, cellulitis (invasion of blood stream)  \n \nTreatment  \n- vaccine against Hemophilus influenza type b, administrated to infants has helped decrease the frequency \nof bacterial meningitis (appeared with otitis media)  \n- 3rd generation cephalosp orins - ceftriaxone, for meningitis and epiglottitis  \n- amoxicillin for sinusitis, otitis media and upper RTIs  \n \n30. Bordetella  \nThey are G - rods which grows on BG (Bordet -Gengou) media, are encapsulated that grows singly or in pairs. \nThey are aerobic pathogens , transmitted by droplets via coughing but the organism survives only briefly \noutside RTI.  \nBordatella pertussis  \npathogenic factors:  \n- pertussis toxin: lymphocytosis, sensitization to histamine, activation of insulin production - \nhypoglycemia.  \n- agglutinogens: promote attachment of bacteria to host cells  \n- dermonecrotic toxin: vasoconstriction and ischemic necrosis  \n- tracheal cytoxin: inhibits cilia movement and regeneration of damaged cells.  \n- adenylate cyclase: decreases chemotaxis and phagocytosis of bacteria  \nTreat ment  \n- Erythromycin  \n- DPT vaccine  \n \nBordatella parapertussis  \nGrows on nutrient agar.  \nPertussis incubation period is 2 -3 weeks divided into 2 phases:  \n- catarrhal: rhinorrhea, mild conjunctival infection, malaise -> dry non productive cough  \n- paroxysomal: parox ysms of coughing followed by a whoop as patient inspired rapidly, causes \nleucocytosis  \nConvalescence requires at least 2 -3 weeks where 2nd infections might occur.  \n  \n31. Legionella  \nThey are G - rods which grow on BCYE (Buffered Charcoal Yeast Extract), aerobi c, facultative intracellular \nbacteria that causes respiratory tract infection.  \nTheir natural habitat is soil and water (including cooling towers and water distribution system).  ' metadata={'source': 'bio.pdf', 'page': 40}
"
"page_content=' \n Legionella Pneumophila most important subtype, may be acquired by inhalation of  aerosolized organisms \nbut may also be due to swimming in contaminated water. It is not transmitted from person to person. They \nare chlorine resistant.  \nOrganism enters upper RT by aspiration of water or inhalation of aerosol - failure to clear organism per mits \nthem to reach lungs alveolar macrophages in lung bed are an important line of defense - phagocytize L. \npneumophila but phagosome doesn’t fuse with lysosome - organism multiplies in phagosome until cell \nruptures - new crop of bacteria.  \nDiseases:  \n- RTI \n- Laegionaires disease: incubation 2 -10 days. Atypical acute lobar pneumonia that develop in 1 -5% of \npeople exposed to common source. Many LD patients have symptoms: fever, malaise, confusion, \nhallucinations, myalgia, respiratory distress.  \n- Pontiac fever: infle nza like that infects healthy people generally 90% of people exposed to same source \nare infected. 1 week - healed people, no therapy needed.  \nTreatment  \nmacrolides, erythromcin, azythromycin  \n \n32. Brucella  \nB. abortus - cattle  B. mellitensis - goat + sheep   B. suis - suine   B. canis - dog \nAll of them may cause disease in humans. Infections arise through direct contact with infected animals.  \nThey are G - rods, aerobic, intracellular parasites that can survive and multiply within host phagocytes.  \nCaused by contac t with cow, pig or goat or by consumption of dairy products. Brucella typically enters body \nby cuts and abrasions in skin ot through GIT and eventually inhalation of aerosols among abbatoir workers. \nOnce organisms enter; ther are transported via lymphatic system to reticulo -endothelial system and lymph \nnodes, spleen, bone marrow, liver, kidneys.  \nDisease  \nBrucellosis: incbation varies from 5 days to several months. Symptoms are nonspecific and flu like - malaise, \nsweats, fever anorexia, GI symptoms , headache . \nTreatment:  \nDoxycyclin + gentamycin (6 weeks treatment necessary)  \n \n33. Yersinia  \nThey belong to Enterobacteriaceae and are non -sporing, no -motile, facultative anaerobe, G - rods which grow \non endo agar, lactose -, Hajna red +, oxidase -. \nYersinia pestis  \nSquirrel   <->    flea   <->   rat \n sylvatic plague   ↓     urban plague  \n    bubonic plague  - Y. pestis produces a coagulase that causes blood to   \n   ↓      clot in the animals foregut - when animal next feeds,    \n  ↓      it regurgitates bacteria from fore gut to peoples skin  \n    bubonic plague  \n    \n  pneumonic   ↔  septicaemic plague  \nThe organisms are carried by lymphatic system to regional lymph nodes, where they are ingested by \nphagocytes. Organisms are resistant to killing by phagocytes so multiply inside of these cells. Bacteria \nreleased from lysed phagocyte has a new envelope antigen that confers increased resistance to phagocytosis. \nAffected lymph nodes - hemorrhagic necrosis  \nDiseases:  \n- Bubonic plague = pestis minor - 2-8 days incubation  \n    lymph nodes b ecome affected results in adenitis - typically localized in groin   \n  but may spread to all parts of  the body.  \n    high fever + chills + headache + myalgia + weakness  \n    Complications: bronchopneumonia, septicaemia, meningitis  \n- Pneumonic plague: purulent pneumonia that if untreated is fatal and might cause be contgious  \n- Plague meningitis: may occur following inadequatly treated bubonic plague. Purpura may develop in \nthe skin (―Black death‖) and disseminated intravascular coagulation .  \nTreatment  ' metadata={'source': 'bio.pdf', 'page': 41}
"
"page_content=' \n Intramuscula r streptomycin and chloramphenicol for plague meningitis. NOT PENICILLIN.  \nFormallin killed vaccine should be given for people at high risk.  \n \nYersinia Enterolitica and pseudotuberculosis  \nInfection via ingestion of food that was contaminated - raw meat. It c auses enterocolitis which results in \nulcerative lesions in terminal ileum, necrotic lesions in Payers patches and enlargement of mesenteric lymph \nnodes. The symptoms are fever, abdominal pain and diarrhoea.  \n \nTreatment  \nLimiting potential contamination of me at. \nAntibiotic therapy (ciprofloxacin) is essential for systemic diseases but questionable for endocarditis.  \n \n34. Francisella tularensis  \nIt is a non -motile, non -sporing G - rods, strict aerobes with lipid rich capsule, intracellular facultative \npathogens th at can infect macrophages.  \nWild, domestic mammals, birds and house pets can be infected. Biting or blood sucking arthropods can serve \nas vectors. Human infection occurs after contact with infected animal or bite of an infected arthropod.  \nTularemia is an oc cupational risk for vets, hunters, trappers, domestic lifestock workers and meat handlers.  \nIt is a very infectious pathogenic bacteria (biologic weapon)  \ncutaneous inoculation -> papules that ulcerates after several days -> regiona lymphatic nodes become la rger -\n> skin, lungs, liver, spleen, kidney, CNS  \nDiseases:  \n- ulceroglandular tularemia  \n- glandular tularemia: no ulcer visible but lymphadenopathy  \n- pharyngeal tularemia: organism enters in pharynx causing sore throat  \n- oculoglandular tularemia: organism enters thr ough conjunctva - pneumonic tularemia  \nTreatment  \nStreptomycin  \n \n35. Bacteroides  & other non -sporing anaerobes  \nThey obligate anaerobes, non -sporing G - rods, rounded ends, predominant anaerobe in human colon, \npolysaccharide capsule (antiphagocytic effect).  \nThey are transmitted from colon to blood or peritoneum after abdominal trauma (endogenous transmission).  \nB. fragilis  is major disease causing bacteroides:  \n- if to blood: bacteremia occurs  \n- if to abdominal cavity: peritonitis and/or abdominal abscess  \nTreatment  \nMetronidazole, surgical drainage of abscess is essential! Cefoxitin might be administered before surgery to \nprevent bacteroidesinfection.  \n \nPrevotella meraninogenicus  \nIt is an anaerobe. Normal gingival flora, respiratory and alimentary up tract. They provok e oral abscessi, \ndental and sinus infection, pulmonary tract infecion and abscess. brain abscess.  \nHeparinase leads to clotting in brain.  \n \nTreatment  \nPenicillin  \n \nFusobacterium  \nThey are G - rods, spindle shaped growing in mouth, female genital tract and colon.  They cause peritonitis, \nabdominal abscesses, pelvic inflammatory disease, emphysema, necrotizing aspiration pneumonia, \nperidontal disease and Vincent’s angina.  \n  \n36. Treponema pallidum  \nDoesn’t Gram stain because the wall is too thin - dark field fluoresce nce microscopy.  \nIt secretes hyaluronidase (a substance that disrupts ground substance), It is transmitted wither by sexual \ncontact or transplacentally (neonates may be infected during passage through the infected birth canal).  ' metadata={'source': 'bio.pdf', 'page': 42}
"
"page_content=' \n 3 stages of syphilis:  \n1) 1st sta ge (3 weeks after infection): T. pallidum enters tissues by penetration of intact mucosae or through \nabraded skin. Hard chancre appears in the place where treponema entered the organism (typically external \ngenitalia, cervix, peri -anal area or mouth) and sp read to lymph nodes:formation of a primary complex. \nHard chancre heals spontaneously.  \nassymptomatic period of 2 -12 weeks  \n2) 2nd stage: there is hematogenous spread and a non specific rash appears in the body. You might have \nsystemic involvement causing mening itis, glomerulonephritis or hepatitis. (highly infectious)  \nLatent period that can last many years (3 -30 days) - no clinical manifestations are evident  \n3) 3rd stage: gummatous syphilis (granulomatous lesions of the skeleton, skin or mucocutaneous tissue) and \nneurosyphilis  \n \nCongenital syphilis: after 10 -15 weeks of pregnancy, the fetus might be infected and might die or be aborted. \nThose who live have secondary syphilis.  \n \nLab ID  \n Screening tests  Confirmation  \ntreponema test - antigen \nfrom treponema  MHA -TP - agglutination on \ncarrier   \n \nELISA + Western Blotting  \nnon treponema test (with \ncardiolipin Ag)  RRR - rapid reagin test  \n \n \n \nTreatment  \nPenicillin single treatment for primary + secondary syphilis  \n \n37. Borrelia  \nThey have a linear rather then circular plasmid and chromosomal DNA.  \nTransmitted by Ixodes tick - becomes infected while feeding on infected animals and then bittes man.  \nBorrelia Burgdoferi  \nLyme disease is transmitted by a bite a Ixodes tick that needs to be attached at least for 24 hours before \ninfecting reason. Primary reservoirs are deers and rodents.  \n1) stage: 3 -32 days after bite, a characteristic red circular lesion with clear centre appears (erythema \nmigrans appears). Flu like symptoms accompany this erythema. The organism spreads via lymph or \nblood to musculoskeletal sites, skin or heart.  \n2) stage: arthritis, arthralgia, cardiac and neurologic complications  \nweeks to months later  \n3) chronic arthritis and CNS disease  \nRarely fatal but might cause poor level of life if untreated.  \nLab ID:  \nIgG and IgM determination  using ELISA and confirmation by W. blotting and PCR.  \n \nTreatment:  \nTetracyclines, cephalosporines, penicillin  \n \nBorrelia Recurrentis  \nResponsible for disease relapsing fever which is characterized by several cycles of recovery (development of \nspecific anti -spirochetes Ab) followed by relapse. The natural hosts for these organisms include rodents and \nother small mammals on which the ticks normally feed.  \nB. recurrentis is able to change its surface protein antigens (with each relapse a new antigenic variant \nappe ars). \nTransmitted from human to human by body lice.  \n ' metadata={'source': 'bio.pdf', 'page': 43}
"
"page_content=' \n Lab ID  \nDiagnosis is made by appearance in Giemsa stain.  \n \nTreatment  \ntetracyclins, erythromycin and penicillin  \n \n38. Leptospira  \nThey have an envelope composed of 3 -5 layers of protein, polysaccharide and li pid covers the bacteria and is \nthe main target for the host immune response.  \nLeptospira interrogans: Sensitive to drying and a broad range of desinfectants. Leptospirosis is primarily an \nanimal disease that is transmitted to humans primarily by water or f ood contaminated with animal urine. The \nleptospira can also enter the body via small skin abrasions or the conjunctiva, mucous membrane.  \n1-2 weeks after infection fever occurs at which time spirochets appear in blood. After 1 week symptoms \ndecrease. Howeve r in cases of biphasic diseases: spirochets reappear accompanied by invasion of liver, \nkidneys and CNS (results in jaundice, hemorrhage, tissue necrosis and or asseptic meningitis).  \nVasculitis resulting in damage to the endothelial cells of small blood ves sels is probably the main underlying \npathology.  \n \nLab ID  \nDiagnosis based on serologic agglutination test.  \nPenicillin + doxycyclin at first stage (24 -48h) but later uneffective   \n \n39. Chlamydia  \nThey are non -motile, small bacteria, which are obligate intracel lular parasite depending on host cell for \nenergy (ATP). They grow in cytoplasmic vacuoles. The genus is divided into: Chlamydia Trachomatis \n(genitourinary tract and eye diseases), Chlamydia passitaci and C. pneumonia cause infection in various \nlevels of RT . \n \nTreatment  \nMacrolide and tetracyclin sensitive  \n \nExtracellular infections form - elementary body (is the only infectious stage of the chlamydil developmental \ncycle), can survive extracellular cell to cell passage and initiate infection.  \nGrowth cycle: elem entary body taken up by phagocytosis into susceptible host cells (facilitated by proteins \nin chlamydial cell envelope that funcion as adhesins) -> elementary body prevents fusion of phagosome with \nlysosome - particle reorganizes in the next 8h into larger non infectious  reticulate body - metabolically \nactive non -infectious and will divide repeatedly by binary fission within cytoplasm of host cell -> inclusion \nbody -> after 48h multiplication ceases and reticulate body condenses to become new elementary bod y -> \nelementary bodies are released from cells by cytoplasmic ending in host cell death.  \n \nChlamydia trachomatis  \nMajor casual agent of non gonococcal urethritis and can also cause eye infections with symptoms ranging \nfrom irritation to blindness, ectopic pr egnancy or infertility in pelvic inflammatory disease.  \nNGU (non gonococcal urethritis) serotypes D -K - young sexually active individuals, in males the urethra is \nthe principal site of  infections while in females, cervicitis and urethritis are more common.  \nCervicitis - fallopian tubes infection - pelvic inflammatory disease  \nSame symptoms as gonorrhea but longer incubation, more mucoid and less purulent reaction. This \nprogresses to epididymitis or prostatitis.  \nLGV (lymphagranuloma venereum) - more invasive s exually transmitted disease transient papules  in \nexternal genitalia -> (1-2 months) painful swelling of inguinal and perirectal lymph nodes -> affected lymph \nnodes suppurate and chronic inflammation and fibrosis lead to ulceration  and blockage of lymph d rainage - \nperoscrotal elephantiasis  \n \nTrachoma  \nChronic keratoconjunctivitis that often results in blindness. It is trnasmitted by personal contact.  \nNeonatal conjunctivitis: acquired while passing through birth canal.  \nLab ID:  ' metadata={'source': 'bio.pdf', 'page': 44}
"
"page_content=' \n direct test by microscopic exami nation using direct fluorescent Ab that reveal cellular cytoplasmic \ninclusions.  \n \nTreatment  \nazythromycin and tetracyclin  \n \n40. Rickettsia, Coxiella & Ehrlichia  \n3 things in common:  \n- grow only inside living host cells (obligatory intracellular pathogen)  \n- most ar e transmitted by infected arthropods  \n- rickettsial diseases are generalized infections with rash sometimes being a predominant factor.  \nRickettsia  \nSmall, coccobacillary, double layered G - cell wall - poor staining so generally visualized with giemsa or \nmacchi avelo.  \nThe plasma membrane is leaky - permeable to host cell nutrients and coenzymes. Following the bite of an \narthropod (rat, fleas, ticks, lice...), the organisms are disseminated by blood and are taken into cells by \ninduced phagocytosis where the organi sm multiplies in nucleus and cytoplasm of host cells. They exit the \ncells like Listeria (by mobilizing host cell actins) - host cells are killed - rickettsia spreads via blood stream \nor lymphatics where focal thrombi may form, even in skin, small hemorrhag es and hemodynamic \ndisturbances.  \nRocky Mountain Spotted fever : caused by Rickettsia  Rickettsii  \n- caused by infected wood, dog or tick generally during warm months  \n- symptoms: 7 days after, high fever, malaise, severe headache, myalgia, anorexia, followed by f irst \nmacullar then petechial rash (on extremities palms or soles -> whole body).  \n- if untreated, vascular disturbances, myocardial or renal failure may occur.  \nOther Spotted fevers : they vary in severity. A very specific one is rickettsial pox caused by Ricke ttsia akari \nfor which the vector is a mite. At the site of bitting a eschar if formed -> scattered papulovesicles during few \ndays.  \nTyphus :   \n- EPIDEMIC TYPHUS: initial symptoms (headache and fever) start 6 -15 days after being exposed to \nR. prowazelii. A macu lar rash, often noted 4 -7days after patients become ill, first appears on the \ntrunk and axillary folds and then spreads to the extremities but in more severe cases it may last much \nlonger and become haemorrhagic. The mental state of the patient may progres s from dullness to \nstupor and, in very severe cases, even coma.  \n- SCRUB TYPHUS: human infection with scrub typhus rickettsiae may be mild or fatal. Symptoms \ndevelop 6 -18 days after being bitten by infected mite larvae (chiggers). An eschar is often apparent at \nthe site of the bite with enlargement of focal lymph nodes. Progression of the disease may be \naccompanied by interstitial pneumonitis, generalized lymphadenopathy, splenomegaly and rash. \nDeath may result from encephalitis, respiratory failure and circul atory failure.  \nTreatment:  \nDoxycyclin except for pregnant women (chloramphenicol)  \n \nEhrlichia  \nThey are G - bacilli which parasitize leucocytes and grow in cytoplasmic vacuoles, creating morulae \n(inclusions).  \n2 of its tick born forms are known:  \n- human monocyti c ehrliosis (HME) caused by E. chaffeensis  \n- human granulocytic anaplasmosis  (HGA) caused by E. equi  \nThey cause acute fever, myalgia, moderate to severe leucopeniaand thrombocytopenia.  \n \nTreatment  \nDoxycyclin  \n \nCoxiella  \nThey are obligatory intracellular, G - bacilli \nCoxiella burretii - causes Q fever  ' metadata={'source': 'bio.pdf', 'page': 45}
"
"page_content=' \n 1) it can resist hot degradative enzymes within cytoplasmic vacuoles  \n2) they are resistant to heat and drying and also can persist outside the host for a long time  \n3) human infection is caused by inhalation of infected dust in barnyards, slaughterhouse  \n4) It reproduces in respiratory tract  \nTreatment  \nDoxycyclin  \n \n41. Mycoplasma pneumoniae  \nIt lacks cell wall, can’t be classified as cocci or rod, smallest of known living things.  \nThey are facultative anaerobes which are transmitted by respiratory droplets and causes primary atypical \n(nonpurulent) pneumonia and milder infections such as bronchitis, pharyngitis and non purulent otitis media.  \nMore common in older children and young adults (6 -20 years)  \nPathogenic factors:  \n- P1 (citoadhesin ): in specialized organelle which binds sialic acid rich glycolipids found in some host \ncell membranes (e.g. ciliated bronchial epithelial cells) - organism grows attached to host cell luminal \nsurface and inhibit ciliary action - patches of affected mucosa  desquamate - inflammatory mucosa with \nmononuclear infiltrate starts.  \nExtrapulmonary manifestations include:  \n- arthralgia  \n- meningitis or encephalitis  \n- haemolytic anaemia  \n- myocarditis  \n- pericarditis  \nMain damages are created by host cells, not by the mycoplasma.  \nPrimary atypical pneumonia: on onset: headache, fever, chills, malaise - dry cough and earach.  \nWithout immune problems disease permits after 3 -10 days.  \n \nTreatment  \nDoxycylin or azythromycin - may persist in covalescence upper RT for week  \n \n42. Urogenital mycop lasmas  \nMycoplasma Hominis, Ureoplasma ureolyticum, Mycoplasma genitalium are common in urogenital tract. \nThey can be distinguished by their carbon utilization patterns.  \nM. hominis - arginine  Ureoplasma ureolyticum - urea \nM. hominis: found in the vagina of  women who have bacterial vaginosis; it may lead to pelvic inflammatory \ndisease. It causes postpartum or postabortal fever - resistant to erythromycin but tetracyclin sensitive.  \nU. ureolyticum: urethritis when neither gonococcus nor chlamydia can be demons trated in males. \nEndometritis and vaginal secretions of women who undergo premature labor or deliver low birth weight \nbabies.  ' metadata={'source': 'bio.pdf', 'page': 46}
"
"page_content=' \n VIROLOGY  \n \n1. Composition of viruses  \nViruses are complexes consisting of only proteins and nucleic acids (DNA or RNA).  \nThey lack cell ular structures and independent metabolic processes - therefore they have no metabolic system \nand so depend on synthetic mechanism of a living cell.  \nViruses deliver their nucleic acid into a host cell and proceed to produce components of new viruses in \naccordance with the genetic information they contains. They can infect bacteria (so called bacteriophages) \nplants, animals and humans.  \nMany viruses have an envelope composed of a protein containing lipid bilayer, whose presence or abscence \nfurther distinguish es on virus group from another.  \nA mature virus particle is also known as a virion.  \nIt consists of:  \n- Genome of DNA or RNA  \n- Capsid - virus coded proteins enclosing the nucleic acid of the virus, determining its antigenicity. \nThe capsid can have a cubic (rotati onal), helical or complex symmetry and is made of subunits \ncalled capsomers. In some cases an envelope surrounds the capsid, and it is always delivered from \ncellular membrane.  \n- Enzymes - e.g. neurominidase, required for invasion and release of myxoviruses; DNA polymerase \nin small pox virus.  \n \nThere are NA and DNA viruses. The nucleic acid of DNA virus is usually double -stranded and linear or \ncircular depending on the fmily. The nucleic acid of RNA viruses is usually single stranded with the \nexception of reovi ruses.  \nViruses with ssRNA are divided into 2 groups:  \n1. Sense/ positive strand virus: if genome RNA has same polarity as viral mRNA and can thus function \ndirectly as mRNA then it is called positive strand or sense stran.  \n2. Antisense/negative strand virus: if  genome RNA has polarity opposite to that of mRNA they have first to \nbe transcribed into a complementary strand, before it is translated into proteins.  \n3. The primary characteristic of virus is that replication is obligatorily intracellular  \n \n2. Virus -cell intera ctions  \nA virus -cell interaction is a very quick process involving fusion of the viral envelope with cell membranes.  \nProductive interactions:  viruses that infect and replicate within cells causing cells to lyse when the progeny \nvirions are released (this is  known as the cytolitic cycle).  \nNon-productive interactions:  viruses that infect cells but do not complete the replication cycle.  \nThe host cell is termed permissive or non -permissive depending on the outcome of the virus -cell interaction. \nInteraction of vi ruses with cells can result in:  \n- production of new virus particles with or without lysis of host cells  \n- abortive infection (a non -productive infection)  \n- latency, where the virus exists with limited expression of viral genes  \nCytolitic growth cycle - when virus  particles come into contact with the host cells, part of the capsid binds to \na specific receptor to initiate entry into the host cell. The virion then enters or penetrates into the host cell \nand is partially uncoated to reveal the viral genome, and so mac romolecular synthesis of virus components \ncan take place.  \nEarly mRNA is first transcribed and translated into proteins. The newly formed virus particles are assembled \nand released during cell lysis.  \n \n3. Antiviral Agents  \n \nDrugs  Site of action  \nAmantadine  Inhibition of early events (entry or uncoating of \nthe virus)  \nAciclovir, Gonciclovir, Ribavirin  Inhibition of viral nucleic acid synthesis  ' metadata={'source': 'bio.pdf', 'page': 47}
"
"page_content=' \n Drugs  Site of action  \nSaguinavir, Indinavir  Cleavage of precursor polypeptides  \nInterferons (naturally  occurring antiviral compounds)  Inhib ition of protein synthesis  \n \n \nInhibitors of herpes virus DNA Polymerases  \n Aciclovir, established record in treatment of HSV and V3V disease  \n Gonciclovir, works against cytomegalovirus  \n Ribavirin, for respiratory syncitial virus infection  \nnote: action exerted mainly during acute phase of viral infections  \n \nInhibitors of vira l uncoating  \n Amantadine, blocks ion channel formed by integral membrane protein  \n \nInhibitors of neuraminidase  \n Sanguinavir, blocks action of influenza virus neuraminidase  \n \n4. Interferons  \nType I: IFN α, IFN β : produced by the virus infected cells (fibrobla sts, macrophages). In the target cells \nthey inhibit viral replication by blocking translation of viral protein.  \nType II „Immune―: IFN γ: produced by activated T\nH1 cells in response to a specific antigenic signal, causes \nactivation of macrophages.  \nIFN-α and  IFN-β are produced in response to the presence of viruses and certain intracellular bacteria. \nDouble -stranded RNA may be the important inducer.  \nTo exert their biological effects these molecules must interact with cell surface receptors. IFN -α and IFN -β \nshare a common receptor while IFN -γ binds to its own specific receptor. After binding to the cell surface \nreceptors, interferons act by rapidly and transiently inducing or up -regulating some cellular genes and \ndown -regulating others. The overall effect is t o inhibit viral replication and activate host defence \nmechanisms.  \nThey can inhibit many stages of the virus life cycle - attachment and uncoating, early viral transcription, \nviral translation, protein synthesis and budding.  \nSome viral proteins can inhibit  the interferon response  \n5. Humoral immunity to viral infections  \n Antibodies cannot enter cells, and therefore are ineffective against latent viruses and those that \nspread directly from cell to cell. They will, however, bind to ectracellular viral epitopes . These epitopes can \nbe on intact virions or on the surface of infected cells. The binding of antibody to free virus can inhibit a \nnumber of processes essential to virus replication. Antibodies can block binding to the host cell membrane, \nand thus stop att achment and penetration.  \n Antibody can also work at stages after penetration. Uncoating, with the release of viral nucleic \nacid into the cytoplasm, can be inhibited if the virion is covered by antibody.  \nAntibody can also cause aggregation of virus particl es, thus limiting the spread of the infectious particles and \nforming a complex that is readily phaocytosed.  \n In some infections, viral proteins remain on the surface of the cell after entry or become associated \nwith the cell membrane during replication. An tibodies against these molecules can cause cell lysis by the \nclassical pathway but an intact alternative pathway is necessary to amplify the initial triggering by the \nantibody -dependent pathway.  \n In many situations, viruses seem to be able to escape the h umoral defence mechanisms. Some \nviruses become latent, e.g. herpesviruses, and are reactivated despite the presence of circulating antibody, as \nthey can pass directly from cell to cell. Other escape mechanisms include antigenic variation in which the ' metadata={'source': 'bio.pdf', 'page': 48}
"
"page_content=' \n antig enic structure of the virus  (e.g. influenza type A) changes so that antibodies formed to the previous \nstrain are no longer effective.  \n In viral infections the efficiency of antibody depends largely on whether the virus passes through \nthe blood -stream outs ide host cells to reach its target organ.  \n In comparison, in viral diseases such as influenza and the common cold, the viruses do not pass \nthrough the bloodstream. In this type of infections a high level of antibody in the blood will be relatively \nineffect ive in comparison with its effect on blood -borne viruses. In this case the antibody must be present in \nthe mucous secretions at the time of infection.  \n Humoralimmunity does play a major protective role in polio and a number of other viral \ninfections, and i s probably he predominant form of immunity responsible for protection from reinfection.  \n \n6. Cell-mediated immunity to viral infections  \n The destruction of virus -infected cells is an important mechanism in the eradication of virus from \nthe host. The destructio n of an infected cell before progeny particles are released is an effective way of \nterminating a viral infections. For this process to occur the immune system must recognize the infected cell.  \n As viral proteins are synthesized within the cell some of thes e molecules are processed into small \npeptides. These endogenously produced antigen fragments become associated with MHC class I molecules, \nand this complex is then transported to the cell surface where it acts as the recognition unit for cytotoxic T \n(TC) lymphocytes. Once these T C cells have bound to the infected cell they release molecules that induce \napoptosis.  \n CD4+ amd CD8+ T cells can produce various lymphokines when stimulated by antigen. These will \ninclude molecules that are active in the elimination  of virus, eg. IFN -y and TNF and others that generally \nincrease the effectiveness of the immune system by attracting cells to the site of inection, stimulating the \nproduction of more cells and supporting their growth. Macrophages will be activated, and thi s will lead to \nenhanced microbicidal activities and the production of monokines.  \n \n \n7, Immunopathology in viral infections  \nViruses have evolved a multitude of mechanisms for exploiting weaknesses in the host immune system \nand avoiding, and sometimes actual ly subverting, immune mechanisms.  \nOne of the most important strategies developed by viruses is to infect cells of the immune system itself. \nMany common human viruses, including rubella, mumps, measles and herpes viruses , infect cells of the \nimmune system, as does the human immunodeficiency virus (HIV). The consequences of viral infection of \ncells of the immune system have been categorized in two ways:  \n1. Infections that cause temporary immune deficiency to unrelated antigens and sometimes to the \nantigens of th e infecting virus.  \n2. Permanent depression of immunity to unrelated antigens and occasionally to antigens of the infecting \nvirus.  \nViruses have also developed other mechanisms to avoid the immune system. These include:  \n· Antigenic variation  \n· Release of antigens  \n· The production of antigens at sites that are inaccessible to the immune system  \n \n     A virus will remain relatively safe from immune destruction if it remains within the cell and allows only \nvery low or no viral antigen expression on the infected cell membr ane. \n    Viruses that move from cell to cell without entering the extracellular fluids will also escape the action of \nantibodies, as will those passed from to cell by cell division.  \n    A number of infections continually shed virus into external secretions , such as saliva, milk or urine. As \nlong as the infected cell only forms virus on the luminal surface of the mucosa then cells of the immune \nsystem and antibody will be unable to destroy the infected cell. IgA present in the secretions may neutralize \nthe v irus, but this class of antibody does not activated complement efficiently so the cell will not be lysed.  \n    Susceptibility to infection is generally greater in very young and very old people because of a weaker \nimmune response. However, the immunopatholo gy tends to be less severe.  \n   Physical and physiological differences may also contribute to age -related disease susceptibility. Certain \nviral infections produce a milder disease in children than in adults e.g. varicella.  \n \nAntigenic variation  ' metadata={'source': 'bio.pdf', 'page': 49}
"
"page_content=' \n    A micro -organism can avoid the acquired immune response by periodically changing the structure of \nmolecules that are recognized by the host immune system. The micro -organism will only be able to change a \ncomponent in a way that does not alter the functioning of the molecule.  \n   Antigenic variation is likely to be an important viral adaptation for overcoming host immunity in long -\nlived species such as humans where there is a need for multiple re -infection of the same individual if the \nvirus is to survive and the viru s is unable to become latent.  \n \nPersistence of virus  \n   Certain viruses give rise to a persistent infection, which is held in check as long as the immune system \nremains intact. In other persistent infections, the immune system contributes to the pathology o f the disease.  \n8. Adenoviruses  \n \nAre non -enveloped DNA viruseses, with icosahedral nucleocapsid and a single piece of double -stranded \nDNA. They belong to the Adenoviridae family, which consists of:  \n· Mastadenovirus – infects mammalians  \n· Aviadenovirus – infects av ian species  \nEpedemiology:  \n- The site of clinical syndrome is generally related to the mode of virus transmission Most \nadenoviruses are primary agents of respiratory diseases and assymptomatical diseases of the \nintestine and can be isolated from stool of both  healthy and people after they had a respiratory \nproblem. Two adenoviruses subtypes are associated with GI disease and are transmitted by fecal -\noral route.  \n- Ocular infections are transmitted by direct incoulation of the eye by virus contaminated hands, \nophtalmic instruments.  \nReplication:  \n1. Virus attaches to host cell receptors via knobs on the tips of viral fibres -> entry into cell by cell \nmediated endocytosis -> viral genome is uncoated whilst being transported to nucleus -> in \nnucleus there is transcriptio n of viral genes, genome replication and assembly occurs. The \nadenovirus encodes for early proteins such as:  \n- DNA polymerase and others that affect transcription and replication of viral genome.  \n- The ones that inactivate p53 and pRb that prevents progressio n towards the cell cycle  \n2. In the end of the productive cycle, the virus kills the host cell as cellular DNA, RNA and protein \nsynthesis are all shut off during infection.  \n \nRespiratory tract diseases:  \n- Infants and young children -> acute febrile pharyngitis (s ymptoms: cough, fever, sore throat, nasal \ncongestion)  \n- Pharyngoconjuntival fever -> same and conjunctivitis (can progress to viral pneumonia)  \n- Acute respiratory syndrome -> common among military recruits  \nAdenovirus infections are said to mimic whooping cough  in some patients and dual infections with \nBortadella pertussis have been found.  \n \nOcular diseases (usually associated with respiratory symptoms)  \n- Folicular conjunctivitis -> self limiting, no permanent sequelae  \n- Epidemic keratoconjunctivitis -> corneal epith el also involved and may be followed by corneal \nopacity  \n \nGI diseases  \n- Infantile gastroenteritis -> viral diarroheal disease (serotypes 40 and 41)  \nUT disease  \n- Hemorrhagic cystitis -> hematuria and virus can usually be identified in urine  \n \nLab ID  \n- Not done gen erally but may be done in epidemics or nosocomial outbreaks  \n- GIT type: ELISA direct test of stool specimen  ' metadata={'source': 'bio.pdf', 'page': 50}
"
"page_content=' \n - Serotype can be identified by agglutination inhibition using type specific antisera  \n \nTreatment  \n- Live attenuated adenovirus vaccine is used for protecti on of military population  \n- No antibiotics  \n \n9. Herpes simplex virus  \n \nLatent infection - a type of persistent infection in which the viral genome is present but infectious virus is not \nproduced except during intermittent episodes of reactivation.  \nReactivation – reactivation from the latent state may be restricted to asymptomatic virus shedding.  \nRecurrence or recrudescence – when reactivated virus produces clinically obvious disease.  \n \nOutside the capsid in mature particles is an amorphous proteinaceous layer, the tegument, surrounded by a \nlipid envelope derived from cell membranes.  \nThe genome of herpes virions is linear double -stranded DNA.  \nThe family Herpesviridae comprises three broad groups:  \n· Alphaherpesviruses, e.g, HSV, VZV; rapid growth, latency in sensory gan glia \n· Betaherpesviruses – CMV; slow growth, restricted host range  \n· Gammaherpesviruses, e.g. EBV; growth in lymphoblastoid cells  \n \nReplication  \nAfter attachment to receptors, the envelope of herpes virions fuses with the cell membrane. The \nnucleocapsids cross t he cytoplasm to the nuclear membrane; replication of viral DNA and assembly of \ncapsids take place within the nucleus. With HSV, it is known that tegument protein transactivates \nexpression of the first set of genes.  \nThese proteins are of 3 types:  \n1. Immediate early (α) – mainly regulatory functions  \n2. Early (β) – includes many enzymes invloved in DNA replication.  \n3. Late (γ) – structural proteins of capsid, glycoproteins  \n \nHerpes Simplex Virus  \nThere are two distinct types of HSV, named type 1 (HSV -1) and type 2 (HSV -2). These two types are \ngenerally associated with different sites of infection in patients; type 1 strains are associated primarily with \nthe mouth, the eye and the central nervous system, while type 2 strains are found most often in the genital \ntract.  \nPatho genesis  \nPrimary infection  \nThe typical lesion produced by HSV is the vesicle. The underlying layer of basal epithelium is usually intact, \nas vesicles only occasionally penetrate the subepithelial layer. The roof of the vesicle breaks down, and an \nulcer form s: this happens rapidly on mucous membranes and non -keratinizing epithelia; on the skin the ulcer \ncrusts over, forming a scab, and then heals.  \nAfter resorption or loss of the vesicle fluid the damaged epithelium is regenerated. Natural killer cells play a \nsignificant role in early defense  by recognizing and destroying HSV -infected cells.  \nDuring replication phase at the site of entry in the epithelium, virus particles enter through the sensory nerve \nendings and are transported along the axon to the nerve bod y in the sensory (dorsal root) ganglion by \nretrograde axonal flow. In some ganglion cells a latent infection is established in which the neurons survive \nbut continue to harbor the viral genome.  \nLatent infection  ' metadata={'source': 'bio.pdf', 'page': 51}
"
"page_content="" \n In latency, viral DNA exists as free circular  episomes. Very few virus genes are expressed in the latent state.  \nHSV -1 is regularly detected in:  \n· The trigeminal ganglion  \n· Other sensory and autonomic ganglion (e.g. vagus)  \n· Adrenal tissue and in the brain  \nHSV -2 latency in the sacral ganglia has been demon strated. Either type may become latent in other ganglia.  \nReactivation and recrudescence  \nHerpes viruses'  DNA passes along the nerve axon back to the nerve ending where infection of the epithelial \ncells may occur.  \nThe interval between the stimulus and the ap pearance of clinically obvious lesions is 2 -5 days.  \nOral infection  \nClassically, the first infection presents as an acute, febrile gingivostomatitis in children. Vesicular lesions \nulcerate rapidly and are present in the front of the mouth and on the tongue.  Gingivitis  is usually present. \nVesicles may also develop on the lips and skin around the mouth  and cervical lymphadenopathy occurs. \nThere may be an associated mononucleosis in the older patient; pharyngitis is also notable.  \nSkin infection  \nHerpetic whitlow : Hand infections with HSV are not uncommon. Three presentations may be seen:  \n· The classical primary lesion on the fingers or thumb of the toddler with herpetic stomatitis, due to \nautoinoculation  \n· Accidental inoculation in health care workers.  \n· Associated wit h HSV -2 and genital herpes and seen in young adults  \nEczema herpeticum: a severe form of cutaneous herpes. Extensive ulceration results in protein loss and \ndehydration, and viremia can lead to disseminated disease with severe, even fatal, consequences.  \nEye infection  \nThere may be conjunctivitis, or keratoconjunctivitis associated with corneal ulceration. The presence of \ntypical herpes vesicles on eyelid margins is a useful clinical guide but is not always seen. The majority of \neye infections are HSV -1. \nCentra l nervous system infection  \nHSV may reach the brain in several ways. Viremia has been detected during primary herpetic stomatitis, and \ninfection may be carried within cells into the brain and meningitis.  \nHSV encephalitis (HSVE): this is a rare condition, bu t is the commonest sporadic fatal encephalitis \nrecognized in developed countries. Fever and malaise is followed by headache and behavioral change \nsometimes associated with a sudden focal episode such as seizure, or paralysis; coma usually proceeds death.  \nCerebrospinal fluid (CSF) collected in the acute stages of HSVE should be sent to a laboratory.  "" metadata={'source': 'bio.pdf', 'page': 52}
"
"page_content=' \n Genital tract infection  \nGenital infection may be acquired by auto -inoculation from lesions elsewhere on the body, but most often \nresults from intimate sexual con tact, including oralgenital  contact. The lesions are vesicular at first but \nrapidly ulcerate:  \n· In the male, the glans and shaft of the penis are the most frequent sites of infection  \n· In the female, the labia and vagina or cervix may be involved  \nNeonatal herp es \nHSV -2 is acquired by passage through an infected genital tract at birth. Virus dissemination to internal \norgans is the most serious complication, in which the infant shows signs of general sepsis, including fever, \npoor feeding and irritability. Pneumoni a and jaundice develop, with or without signs of meningitis or \nencephalitis.  \nLab ID:  \nInoculation of human cell tissue culture with a sample of vesicle fluid or genital swab is the method to \ndemonstrate presence of HSV.  \nInfected cells can be detected within  24h by use of immunofluorescence or immunoperoxidase with Ab \nagainst viral early proteins.  \n \nTreatment:  \n Acyclovir (or famciclovir, and topical penciclovir)  \n \n10. Varicella -zoster virus  \n \nInfection with VZV presents in two forms:  \n· The primary infection varicella  (or chikenpox) is a generalized eruption  \n· The reactivated infection zoster (or shingles) is localized to one or a few dermatomes  \n \nThe enveloped virions released from the nucleus remain closely attached to microvilli along the cell surface \nand the infection  being passed from cell to cell.  \n \nPathogenesis  \n \nVaricella  \nThis is a disease predominantly of children. characterized by a vesicular skin eruption. Virus is thought to \nenter through the upper respiratory tract, or conjunctivae, and multiply in local lymph t issue for a few days \nbefore entering the blood and being distributed throughout the body. Following replication in reticulo -\nendothelial sites, a second viraemic stage procedes the appearence of the skin and mucosal lesions.  \nThe clearence of virus -infected cells is dependent on functional cell -mediated immune mechanisms, \ncytotoxic T cells and antibody -dependent cell cytotoxicity in particular.  \nClinical features: the incubation period averages 14 -15 days. The patient is infectious for 2 days before and \nup to 5 days after onset , while new vesicles are appearing. Initially macular, the rash rapidly evolves \nthrough papules to the characteristic clear vesicles. Sexondaru bacterial infection of skin lesions is the \ncommonest complcation.  \nA variety of organs may be affected, producing myocarditis, arthritis, glomerulonephritis and appendicitis. \nThe two most frequent problems are related to the lungs and the central nervous system.  \nPNEUMONIA:viral penumonitis is a most serious complication. Cough, dyspnoea, tachypnoea  and chest \npain begin a few days after the rash.  \nCENTRAL NERVOUS SYSTEM: neurological complications include the common but benign cerebellar \nataxia syndrome.  \nVARICELLA IN PREGNANCY: varicella virus canc ross the placenta following viraemia in the pregnant \nwoman, and infect the fetus. Two types of intra.uterine infection are noted:  ' metadata={'source': 'bio.pdf', 'page': 53}
"
"page_content=' \n 1. The fetal varicella syndrome is a consequence of fetal infections with VZV in the first half of \npregnancy.  \n2. Neonatal (congenital) varicella occurs when varicella develops within th e first 2 weeks of life, \nfollowing maternal varicella in late pregnancy.  \nZoster  \nThe latent virus is found in neurones and in satellite cells in sensory ganglia, and more than one region of the \ngenome is transcribed.  \nIt seems likely that virus reaches the g anglion from the periphery by travelling up nerve axons, as HSV does, \nbut there is also the possibility that during viraemia some vifrus enters ganglion cells.  \nReactivation of VZV manifested as zoster can occur at any age in a person who has experienced a primary \ninfection.  \nMore than one episode of zoster is uncommon in any individual. The stimulus to reactivation is not known, \nnor the details, but virus does appear to travel from sensory ganglia to the peripheral site. The zoster is \nusually limited to one dermatome.  \nClinical features: prodromal paraesthesia and pain in the area supplied by the affected sensory nerve are \ncommon before the skin lesions develop. The evolution of the rash is similar, with some new vesicles \nappearing while the earliest ones are crusting.  \nPOSTHERPETIC NEURALGIA: this is the most common complication of zoster. It is defined as intractable \npain persisting for 1 month or more after the skin rash. Constant pain at the site, or stabbing pains or \nparesthesiae may continue over 1 year or  much longer.  \nOPHTALMIC ZOSTER: involvement os th ophtalmic division of the trigeminal nerve occurs in up to one -\nquarter of zoster episodes, with ocular complications. Corneal ulceration, stromal keratitis and anterior \nuveitis may result in permanent scarr ing, so this complication may threaten sight when the nasociliary branch \nis involved. Ramsay -Hunt syndrome (facial palsy with aural zoster vesicles) suggest that motor neurones can \nalso be involved.  \n \nLab ID:  \nReacting epithelial cells scraped from base of v esicles with the strains described in HSV or hybridization \nwith specific VZV DNA probes.  \n \nTreatment:  \nIV adminitration of acyclovir  \nVaccine: live attenuated vaccine for children older than 1 or non immune adults at risk of being exposed  \n \n11. Epstein -Barr virus  \n \nEBV primary infection is:  \n- Most often asymptomatic and occurs early in childhood  \n- The classical infectious mononucleosis (glandular fever) of adolescents in the developed world  \nThis virus cannot be grown in human fibroblast or epithelial cell lines. This ly mphotropic virus is classified \nas a gammaherpesvirus.  \nThe full replication cycle of EBV is now known to take place in certain differentiated epithelial cells. EBV \nreceptors are expressed on mature resting B lymphocytes and similar receptors are present on cells of \nstratified squamous epithelium – in the oropharynx, salivary glands and ectocervix.  \nThe latent state of EBV infection is maintained in a subset of resting memory B lymphocytes, and perhaps in \ncertain epithelial cells. Specific EBV early RNA specie s are found in all cells infected with the virus. A \nvariable number of EBV genes are expressed in the latent state.  \nPathogenesis:  ' metadata={'source': 'bio.pdf', 'page': 54}
"
"page_content=' \n Infection of oropharyngeal epithelial cells occurs initially, then infection of B lymphocytes, which \ndisseminate through the circulation, with the potential to enter a productive phase and release virus \nelsewhere in the body. Most shedding of virus, however, takes place in the oral cavity.  \nA proportion of infected B lymphocytes undergoes transformation and continues to prolifera te. Activated B \nlymphocytes secrete immunoglobulin, and EBV is a potent polyclonal activator of antibody production by B \ncells.  \nRecovery from primary EBV infection is associated with humoral and cellular response. Thus, large initial \ninfective doses result  in high number of circulating infected B lymphocytes.  \nThe cytotoxic elements carry the ability to kill EBV -infected cells.  \nInfectious mononucleosis:  \nThe disease known as infectious mononucleosis or glandular fever  is a primary EBV infection seen \npredomina ntly in the 15 -25 year age group. The onset is abrupt with a sore throat, cervical lymphadenopathy \nand fever, accompanied by malaise, headache, sweating and gastrointestinal discomfort. Pharyngitis may be \nsevere, accompanied by a greyish -white membrane and  gross tonsillar enlargement.  \nComplications of glandular fever:  \nAcute airway obstruction, splenic rupture (rare) and neurological complications include meningitis, \nencephalitis and the Guillain -Barre  syndrome.  \nOther EBV -associated disease, tumors and immu nodeficiency:  \nEBV is associated with an increasing number of diseases, including malignant tumors.  \nLab ID:  \nAtypical lymphocytes may be observed in the blood smear of a person with IM.  \nPaul-Bennell test based upon the fact that polyclonal stimulation of B cells by EBV results in non -specific \nelevation of all Ig (agglutination test).  \nTreatment:  \nAcyclovir, but only inhibits replication of EBV.  \n12 Cytomegalovirus  \n \nIt is a member of the β -herpesviridae family.The full name for the virus infecting humans is human \ncytomagalovirus (HCMV). Tha name was chosen on account of the swollen state of infected cells as seen in \nculture and in tissues. The replication cycle is sig nificantly larger and the nuclei of productively infected \ncells contain a large inclusion body, giving a typical appearence.  \nIn vivo the virus replicates in epithelial cells in salivary glans, the kidney and in the respiratoty tract.  \n \nPathogenesis  \nGenerall y it is acquires during childhood (majority of people have Abs against it by agulthood).  \n- Ususally asymptomatic infection and children shed viruses by body fluids like tears or saliva, and \ninfection occurs by intimate contact with these fluids.  \n- In adults, t he virus can be also transmitted by semen and vaginal secretions, by organ transplants \n(specially of Ab+ donors, because the presence of Abs implies the presence of persistent virus), or \nby blood donors and breast milk.  \n- HCMV can also cross the placenta and  infect the fetus in utero.  ' metadata={'source': 'bio.pdf', 'page': 55}
"
"page_content=' \n - CMV persists in the host for life. Recurrent infections may follow reactivation of latent \n(endogenous) virus, or re -infection with another (exogenous) strain. Latency is probably \nestablished in monocytes and macrophages but also  n kidneys and liver.  \nMONONUCLEOSIS: primary infections as an adult is infectious monucleosis (hepatitis, fever and \nlymphocytosis but pharyngitis and lymphadenopathy are unusual) The difference would be the abscence of \nheterophile Abs. Can be associated wi th HIV infection.  \nCYTOMEGALIC INCLUSION DISEASE: HMCV is the most common interauterine virus infection. Of \ninfants born from women experiencing their first CMV infection during pregnancy, 35 -50% will become \ninfected. This problem ranges from fetal death to  various degrees of liver, spleen, blood forming organs or \nCNS damages (retardarion, teinites, encephalitis...).  \nINFECTION IN THE COMPROMISED PATIENT: the complications of CMV in cellular \nimmunodeficiency include: pneumonitis, encephalitis, retinitis, oeso phagitis/colitis, hepatitis, pancreatitis or \nadenitis.  \n \nHost responses  \nThe host response to primary CMV includes IgM, IgG and T cell responses. CMV early genes transactivate \nother viral and cellular genes and this may be an important interaction with HIV, leading to the production of \nHIV from latently infected cells. Because CMV infects mononuclear cells, there is a degree of \nimmunosuppression associated with the acute infection.  \nfrom recurrent infection by IgG seroconversion or HCMV specific IgM.  \n \nLab ID  \nELISA will distinguish primarily  \n \nTreatment:  \nInhibitors of HCMV DAN polymerase: genciclovir (generally), cidofovir (retinitis).  \n \n13. Poxviruses  \n \nIt belongs to the famili Poxviridae. Poxviruses are the largest  animal viruses. The DNA is envelopped and \ntheir vir ions are big enough to be seen as dots by light microscopy. It’s replication occurs in cytoplasm.  \nIt caused variola or small pox, which is the first infectious disease to be declared as erradicated from the \nworld (due to availability of very effective atte nuated vaccine, stable antigenic structure of variola, no \nassynptomatic cases...)  \n \nClinical features:  \nSMALL POX virus spreads from person to person by the respiratory route. After infecting mucosa cells in \nthe upper respiratory tract without producing symp toms it spreads to the regional lymph nodes and, after \ntransient viraemia, infected cells throughout the body. Multiplication of viruses in these cells led to a second \nand more intense viraemia which heralded the onset of clinical illness. During the first  few days of fever the \nvirus multiplied in skin epithelial cells, leading to the development of focal lesions and the characteristic \nrash. Macules progressed to papules, particularly on the face. There are two kinds of smallpox: variola major \nand variola m inor (very mild).  \n \nInfected upper RT -> regional LN and small vessels of skin -> first viraemia -> cells of all body -> second \nviraemia -> rash, bleeding, carsiovascular collapse  \n \nMOLLUSCUM CONTAGIOSUM: the lesions of this mild disease are small copper -coloured warty papules \nthat occur in the trunk, buttocks, arms and face. It is spread by direct contact or fomites. The lesion consists \nof a mass of hypertrophied epidermis that extends into the dermis. When material from the lesion is crushed, \nsome of the in clusions burst open, and from them large numbers of virions escape. Lesions can persist for as \nlong as 2 years, and re -infection is common.  \n \nLab ID  \nObservation of DNA containing intracytoplasmic inclusion bodies in cells scapped from lesion.  \n ' metadata={'source': 'bio.pdf', 'page': 56}
"
"page_content=' \n Immunization:  Vaccinia vaccine (attenuated cowpox) is gven nowadays only in military and laboratory \nworkers.  \n \n14. Papillomaviruses  \n \nPapillomavirus belongs to the Papovaviridae family. They are non envelopped and have icosahedral DNA. \nThey infect the squamous epithelia and mucous membranes and are responsible for many varietis of warts \nand fibropapillomata. Although the lesions are usually benign, their association with tumours is documented.  \n \nGene organixation and replication (correlates to appearance of malignancy)  \nIntegra tion of viral DNA into the host chromosomes -> colapse of the cellular cytoskeleton -> transforming \nactivity in some papillomavirus types -> E7 binds to tumour suppresor gene product, Rb, which is required \nfor terminal differentiation of keratinocytes -> E6 binds to the tumour suppressor gene porduct p53 and \ncauses its rapid degradation -> the cell can divide even with DNA damages.  \n \nClinical features  \nCUTANEOUS WARTS: cutaneous warts commonlyinfect the keratinized epithelium of the hands and feet, \nfrequently  seen in young children and adolescents.  \nThey usually disappear spontaneously but occasionally may be resistant to treatment.  \nANOGENITAL WARTS: these lesions are commonest in sexually active adults. In women they are found \non the vulve, within the vagina o r on the cervix.  \nIn men the most common sites for lesions are the shaft of the penis, peri -anal skin or the anal canal.  \nSubclinical and latent infections of the genital tract are common.  \nOROLARYNGEAL LESIONS:  \nRecurrent respiratory papillomatosis:  this is a rare condition characterized by the presence of benign \nsquamous papillomata on the mucosa of the respiratory tract. Peaks of incidence are in children under 5 \nyears if age and adults after the age of 15 years. Children axquire the disease by passage thro ugh an infected \nbirth canal, while adults acquire the disease from orogenital contact with an ifected sexual partner. The \ndisease presents with hoarseness of voice or, in children, with an abnormal cry. As the lesions grow they \nmay cause stridor and upper airway obstruction which can be life -threatening. Malignant conversion of \nlaryngeal paipllomas has been described.  \nOral papillomatosis:  a variety os paipllomata and binign lesions associated with HPV occur in the oral \nmucosa and tongue.multiple lesions may  develop on the buccal mucosa. It is axquired during orogenital \ncontact with an infected sexual partner.  \n \nHPV and cancer  \nPremalignant lesions of the genital tract:  Malignant disease of the cervix is preceded by neoplastic change in \nteh surface epithelium, a condition known as cervical intra -epithelial neoplasia (CIN).  \nUntreated CIN II/III can progress to invasive cancer in a large percentage of affected individuals while CIN I \nlesions are less likely to progress,    \nSquamous cell carcinoma:  the association o f wart viruses with invasive cancers of the skin, larynx and \ngenital tract is well documented.  \nThe commonest association with invasive cancer, however, is with tumour of the anogenital tract.  \n \nLab ID  \nDiagnosis of cutaneous warts done by inspection  \nImmunoas say for viral antigens or DNA hybridization – important to determine if it is benign or malignant.  \n \nTreatment:  \nWarts generally are eitehr surgically removed or destroyed by liquid N2. Laser vaporixation or cytotoxic \nchemicals.  \nCidofovir – applied topically  , inhibits DNA synthesis  \nInterferon – laryngeal papillomas  \nVaccine is present  \n \n15. Hepatitis B virus  \n ' metadata={'source': 'bio.pdf', 'page': 57}
"
"page_content=' \n  HBV is a major cause of chronic liver disease and hepatocellular carcinoma. The predominant form is a \nsmall, spherical particle. Fillaments are also presen t. Both types of particle are composed of lipid, protein \nand carbohydrate; they are not infectious and consist solely of surplus virion envelope. The third type of \nparticle, the virion or Dane particle is enclosed within the envelope, which contains the vi ral DNA.  \nHBV can be classified into at least six genotypes, A -F. Genotypes B and C are found in the Far East.  \n Replication of viral nucleic acid starts within the hepatocyte nucleus where the viral DNA can be \nfree-, extrachromosomal, or integrated at vario us sites within the host chromosomes.  \n \n             Deaths 1%, fulminat hepatitis  \n \nExposure           Infection                Recovery 90 -95%, Immune  \n \n             Persistent infection, asymptomatic              Clearance, immune  \n           Carrier , chronic persistent hepatitis           Chronic active hepatitis  \n                      Cirrhosis  \n                                                                                                                       Haptocellular carcinoma  \n \nThe incubation period varies widely, from 40 days to 6 months, but is often about 2 -3 months. A prodromal \nillness occurs in some patients, who complain of malaise and anorexia accompanied by weakness and \nmyalgia. Arthralgia also occurs and may be accompanied by an relate d to circulating immune complexes \ncontaining HBsAg.  \nIn the acute stage there are signs of inflammation in teh portal triads: the infiltrate is mainly lymphocytic.  \nIn chronic hepatitis, damage extends out from the portal tracts, giving the piecemeal necrosi s appearance. As \nthe disease progresses fibrosis develops and, eventually, cirrhosis.  \nInfectious HBV is present in all body fluids of infected person, so all of them can be a source of infection  \nACUTE DISEASE: HBV replicates in the hepatocytes. During repl ication HBcAg and HBeAg are also \npresent at the cytoplasmic membrane. These antigens induce both B and T cell responses; damage to the \nhepatocyte can result from antibody -dependent, NK and cytotoxic T cell action.  \nPERSISTENCE OF HBV: persistence of HBV is  indicated by the continued presence of HBsAg and HBV \nDNA in the blood for more than 6 months.  \nIn the neonate, infection occurs in the presence of maternal IgG anti -HBc and tolerance to HBeAg which can \ncross thew placenta. This will have the effect of mask ing HBcAg on hepatocyte membranes and thus will \nprevent its recognition by cytotoxic T cells and other immune mrchanisms. Carriers may continue to \nreplicate virus to high levels without evidence of liver damage. It ends with the disappearance of HBeAg and \nthe appearence of anti -HBe. The change happens at a variable time after infection, but each 5 -20% of \npatients go through this transition, usually associated with a period of liver cell damage. This is often, but not \nalways, accompanied by the disappearence  of HBV DNA from the blood, signalling a transition from high to \nlow infectivity carrier status. A carrier may undergo several episodes of hepatitis. Eventually, -hbv may \ndisappear in 1 -2% of carriers each year.  \nCHRONIC LIVER DIASEASE AND HEPATO CELLULAR C ARCINOMA: chronic liver damage results \nfrom continuing, immune -mediated destruction of hepatocytes expressing viral antigens.  \nHepatocellular carcinoma (HCC) is one of the 10 most frequent tumours in the world, anf there is \nconsiderable evidence that 80% a re caused by chronic infection with HBV. There may be an interval of 30 -\n40 years between infection and tumour development.  \nThe mechanism of carcinogenesis is not yeat clear, although it is usually associated with cirrhosis.  \nThe rate of progression to cirr hosis and HCC varies according to the age of infection and stage, the state of \nthe patient’s immune system, geographic factors and genetic factors.  \n \nLab ID  \nAntibodies against HBs, Hbe and HBc  \n \nTreatment  \nProlonged treatment with interferons  \nPrevention  \nActiv e immunization with HBsAg – children up 12 years old  \nPassive immunization with Hepatitis B immunoglobulin – contaminated people  \n ' metadata={'source': 'bio.pdf', 'page': 58}
"
"page_content=' \n 16. Non-A, non -B hepatitis viruses  \n \nHepatitis D virus  \n- Found in nature only as coinfection with HBV.  \n- Circular RNA with negative pola rity that code for δ antigen (HDAg)  \n- Enveloped which has HBV coded HBsAg -> HBV is thus a helper virus for HDV.  \nTransmission: same as HBV but less sexually transmitted  \nDiseases: simultaneous primary coinfection with HBV that will cause acute hepatitis simil ar to HBV one but \nwith more risk of developing fulminant hepatitis and the likelihood of its progression to chronic coinfection \nis greater and risk for HCC and cirrhosis are increased as well.  \nPrimary coinfection of HDV of chronically HBV infected individu als \nHBV ->incubation –> chronic HBV infection -> + HDV -> severe acute hepatitis -> chronic disease.  \n \nLab ID  \nDetermining δ antigen or antibodies against it.  \n \nHapatitis C virus  \nEnveloped virus with 3 structural proteins. Capsid protein, viral RNA, 2 other proteins are encelop \nassociated.  \n \n     Subclinical infection ->chronic hepatitis -> cirrhosis -> HCC  \n  75% \nInfections HCV   \n  25% \n     Acute hepatitis C -> resolution of disease  \n \nMost common  posttransfusion, intravenous drug users or on patients that are hemodyalised (also sexually \ntransmitted and from mother to child)  \n \nTreatment: α -IFN + ribavirin  \n \nLab ID  \nELISA  detection of IgM and IgG  \n \nHepatitis E virus (calicivirus)  \nNonenveloped RNA  \nMost common cause for fecal -oral transmitted, waterbourne hepatitis. It is frequent in young adults and it is \nspecially severe in pregnant women.  \nNo progression to dynamic hepatiti s seen. The signs and symptoms are similar to other hepatitis  \n \nLab ID  \nELISA detection of IgM and IgG  \n \n \n17. Parvoviruses  \n \nAre icosahedral andlack envelope. This family is divided into whether the virus is able of independent \nreplication (autonomous parvovirus) or requires coinfection with helper DNA virus (adenoassociated \nviruses).  \n \nReplication  \nThe virus attaches and penatrates into the host cell -> DNA released into the nucleus -> sysnthesis of non -\nstructural proteins –> sysnthesis of structural proteins and vi ral DNA -> assembly of virus + lysis of host cell  \nReplication of parvoviruses requires host cells in which DNA synthesis is in progress (the damage is limited \nto specific tissues that are mitotically active, soit is not surprising that disease of haemapoet ic system and the \nfetus frequently feature).  \n ' metadata={'source': 'bio.pdf', 'page': 59}
"
"page_content=' \n Dependoviruses  \nAdenoassociated viruses (AVV) were isolated from children with mild disease, usually in association with \nadenoviruses of different serotypes. It was first thought that only adenoviruses could sup ply the necessary \nhelper functions but more recently herperviruses, human paipllomaviruses (HPV) and vaccinia have all been \nshown to be able to provide helper functions for AVV replication.  \nThere is as yet no evidence if an association with an acute diseas e. \nAVV is highly prevalent in the female genital tract. Infectious virions have been found in cervical epithelium \nand HPV was also frequently present. AAV DNA has also been demonstrated in broncho -alveolar lavage \nsamples, again frequently together with HPV  DNA. Teh interaction with the helper virus is beneficial to \nAAV but usually inhibits the replication of the helper. AAV may therefore be beneficial to the host.  \n \nErythroviruses (B19)  \nThe virus is infectious when given in the form of nasal drops. One week later there is an intense viraemia \nand virus is excreted in the nasal secretions. The viraemia lasts for onle a few days before there is a brisk \nantibody response, initially of the IgM calss but followed rapidly by the appearence of IgG antibody.  \nErythroid  percursors are absent from the bone marrow and there is consequent disappearance of reticulocytes \nfrom the peripheral blood and a small fall in the hemoglobin level.  \nThe rash and arthralgia associated with B19 infection occur during the third week after i noculation. They \nfollow the disappearance of the viraemia and occur at a time when there is an easily detectable immune \nresponse it is assumed that the rash and arthralgia are immune mediated.  \nIn infected fetuses there appears to be a persistent infection with damage to hematopoietic cells, leading to \nanaemia, which is one of the factors responsible for hydrops fetalis. The reason is that sich indiciduals \nproduce only small  amounts of antibody in response to infection and none of it is capable of neutraliz ing the \nvirus.  \n \n18. Poliovirus  \n \nAre small , non enveloped, icosahedral virus with single -stranded RNA with positive polarity.  \nThe poliviruses. Coxsakieviruses and echoviruses are described as enteroviruses because they are all found \nin the intestines and are e xcreted in the feaces.  \nSpecific neutralizing antibodies are considered to be the major mechanism of protection against infection. \nEnteroviruses have a number of features in common:  \n- They attach to cells in the intestinal tract by specific receptor sites and  replicate in cells of the \nintestinal tract.  \n- Theu commonly cause asymptomatic immunizing infections, which protect against future \ninfectionswith the sme virus.  \n- They can give rise to viraemia  \n- They occasionally cause infection of the central nervous system a nd other target organs.  \n- They are commoner in children than in adults  \nPolioviruses have affinity for the nervous tissue. There are 3 types of poliovirus infection:  \n1. Asymptomatic infection or a mild, transient „influenza -like― illness. The virus us excreted i n the \nfaeces for a limited time, and an immunological response develops which portects against re -\ninfection with the same strain.  \n2. Infections with the same ssymptoms as above and evidence of the involvement of the central \nnervous system with headache, neck stiffness and back pain (meningitis).  \n3. Paralytic poliomyelitis in which the patient develops paralysis. The paralysis is usually flaccid due \nto the destruction of lower motor neurones, although invasion of the brain stem by the virus can \nlead to inco -ordina tion of muscle groups and painful spasms  \n \nPregnat women in the third trimester of pregnancy can have severe disease, but there is no firm evidence of \ncongenital defects in infants born to mothers with poliomyelitis. Maternal infection axquired late in \npregnancy may lead to perinatal infection and disease of the newborn.  \n \nTreatment: symptomatic  \nPrevention  \nLive attenuated (Sabin) or attenuated (Salk) poliovaccines  \n ' metadata={'source': 'bio.pdf', 'page': 60}
"
"page_content=' \n 19. Enteroviruses other than poliovirus  \nEchoviruses: most echovirus infections cause few or no clin ical symptoms. Infection can be widespread in a \ncommunity, although only a few suffer from clinical illness. Symptoms occur following a short incubation \nperiod of 3 -5 days (simple fever, upper respiratory symptoms or diarrhoea). Non -specific rashes of flee ting \nduration have been reported.  \nThe onset the meningitis is abrupt, with severe headache and vomiting. Symptoms are self -limiting, and after \na variable convalescent period a full recovery is made, although rare cases of paralysis have been recorded.  \nCertain types cause haemagglutination of human group O erythrocytes. The virus reacts with a receptor \npresent on group O cells. Temperature, pH and age of the red blood cell donor influence this property.  \n \nCoxsackieviruses:  \nGroups A – these viruses give rise t o a number of different illnesses. Aseptic meningitis, indistinguishable \nclinically from that caused by other enteroviruses. Herpangina is an acute feverish disease, usually in young \nchildren, characterized by lesion in the mouth cinsisting of papules on t he anterior pillars of the fauces.  \nHand, foot and mouth disease presents as a painful stomatitis with a vesicular rash on the hands and feet.  \nGroup B – Epidemic myalgia is characterized by fever and the sudden  onset of agonizing stich -like pains in \nthe mu scles of the chest, epigastrium and hypochondrium.  \n \n20. Hepatitis A virus  \nHepatitis A (HAV) is the causative agent of infectious hepatits. It is a non -enveloped virus, containing \nlinear, single -stranded RNA.  \nClinical features  \nTransmission by fecal -oral route. Although the incidence has fallen in the last decade, hepatitis A is till \nresponsible for almost 60% of acute viral hepatitis. The illness is usually mild, and occurs after an \nincubation period of 14 -45 days. There is a prodrome of malaise, muscle pain and  headache, and there may \nbe a low -grade fever. The symptoms usually improve and disappear as jaundice develops. Fulminating \nhepatitis and liver failure can also occur. There are no carriers of the virus. Infection is mildest in young \nchildren. Arthritis an d aplastic anaemia are rare complications.  \nPathogenesis  \nLike the enteroviruses, HAV probably infects cells in the gut initially and then spreads to the liver via the \nblood. The histopathology is similar to that of hepatitis B, with periportal necrosis and infiltration of \nmononuclear cells. Viral antigens are seen in the cytoplasm of the hepatocytes. Virus is excreted via the bile \ninto the gut 1 -2 weeks before the onset of jaundice, and excretion then declines rapidly over the next 5 -7 \ndays. Virus is also pr esent in the urine of clinical and subclinical cases during the same period.  \nLab ID  \nAnti-HAV IgM + IgG using ELISA or IgM and total Ig.  \nTreatment  \nVaccination available and recommended in people travelling to mediterranean countries  \n \n \n21. Orthomyxoviruses  \nEnvel oped RNA with its own RNA -dependent RNA transcriptase that synthesizes viral mRNA from RNA. \nIt has an helical nucleocapsid from which the segment contains not only  viral RNA but also 4 proteins: NP \n(nucleocapsid protein) and 3 proteins involved in the syn thesis and replication of viral DNA). Its replication \noccurs in the nucleus.  \nThe viruses are divided into Influenza A, B and C but only A and B have medical importance.  \nThey have haemaglutinin (H protein) and neuraminidase (N protein) as the 2 spikes prote ins on the surface.  ' metadata={'source': 'bio.pdf', 'page': 61}
"
"page_content=' \n Pathogenesis  \nThe virus is transmitted by respiratory droplets. The destruction of respiratory epithelial cells is attributed to \nhost immune response, specifically cytotoxic T -cells. The symptoms are chills, high fever, muscle aches and \nextreme drowsiness. The disease lasts 4 -5 days after which there is a gradual recovery. There is a risk of \ndevelopment of pneumonitis in elderly people, young people or people with chronic cardiac or pulmonary \nproblems.  \nTypes and subtypes  \nInfluenza virus i s classified as type A, B and C depending on their M and NP proteins. Thus all type A \nviruses share common internal antigens different from those shared by B.  \nClassification into subtypes depends on antigens associated with H and N proteins. Human influen za viruses \nare therefore classified into H1N1, H2N2, H3N2...  \nAntigenic drift: minor antigenic changes in H and N proteins that occur each year  \nAntigenic shift: involve change of subtype H1N1 -> H3N2 (occurs each 10 -20 years)  \nThe consequences of this antige nic variation is that people become immunologically unprotected which \nmight give rise to an epidemics or even pandemics.  \nIf there is antigenic shift a new vaccine needs to be taken. antibodies made against H protein are \nneutralizing.  \nTreatment  \nGiven before  disease or early stages: Amantadine and Rimantadine - they stop viral uncoating by inhibition \nof M2 membrane protein -> INFLUENZA A  \nFor uncomplicated acute illness in adults and adolescents 12 years or more. Zanamivir (inhalation) and \noseltamivir (orally)  are given. -> INFLUENZA A + B  \nPrevention  \nFormalin inactivated Influenza virus vaccine is recommended for the elderly people in high risk groups or \npatients with chronic pulmonary or cardiac disease.   \n22. Respiratory syncitial viruses and parainfluenza virus  \nRespiratory syncytial virus  \nRS virus is placed in the genus Pneumovirus because of a lack of a haemagglutinin, a haemolysin or a \nneuraminidase. The nucleic acid is negative -sense single -stranded RNA . RS virus has no haemagglutinin \nbut has a G glycoprotein  instead. It is a receptor for cell attachment but not red blood cells, and differs in \nchemical compisition from the HN protein of other paramyxoviruses. There are fusion (F), matrix (M), \npolymerase and nucleocapsid proteins. The F proteins is probably res ponsible for both virus penetration and \nspread in the host.  \nThere are two subtypes, A and B.  \nThe most serious illness caused by RS virus is bronchiolitis in young babies leading to hyperinflation of the \nlungs but it is also associated with minor upper tra ct infections. This infection is potentially life -threatening, \nparticularly in those who are immunosuppressed or immunodeficient.  \nRecovery is apparently complete, although it has been suggested that the infection predisposes to chronic \nrespiratory tract di sease (asthma, bronchiectasis, etc).  \nParainfluenza virus    \nParainfluenza is a negatively -stained virions. The outer surface of the virion is a pleomorphic envelope \nconsisting of a lipoprotein membrane derived from host cell membrane and covered by projecti ons. \nParamyxovirus particles are easily deformed by external forces, may assume a variety of shapes and break \nup more easily than orthomyxoviruses.  ' metadata={'source': 'bio.pdf', 'page': 62}
"
"page_content=' \n The envelope surface projections are of two kinds:  \n- The HN, with heamagglutinin (H) and neuraminidase (N) fun ctions.  \n- F glycoproteins, which cause cell membranes to fuse  \nThere are also matrix proteins, M which line the inner surface of the envelope. All the paramyxoviruses \ncarry an RNA -dependent RNA polymerase within the virion.  \nWithin the enveloped virion is a ge nome of single -stranded negative -sense RNA complexed with protein to \nform a helical nucleocapsid.  \nTherw are four types of parainfluenza viruses (1 -4) with antigenically distinct epitopes.  \nParainfluenza viruses attach via the haemagglutinin to sialic acid c ontaining receptors on the cell surface. \nThe F protein then fuses the viral envelope with the cell membrane. RNA -dependent RNA polymerase \ncarried within the virion is required to produce subgenomic -sized mRNA transcripts, which are translated to \nproduce so me of the early virus -specific polypeptides.  \nThe viral components are assembled beneath the cell membrane and the surface HN and F proteins are \nincorporated into a stretch of membrane, converting it to viral envelope. This evaginates and buds off, \nenclosin g a nucleocapsid.  \nThe parainfluenza viruses are mostly associated with:  \n- Croup, a harsh brassy cough in children. It is due to a combination of tracheitis and laryngitis  \n- Minor upper respiratory tract illness  \n- Some cases of bronchiolitis and ―failure to thriv e‖ \nThe incubation period is from 3 to 6 days, during which the virus spreads locally within the respiratory tract.      \nBoth viruses are transmitted by respiratory dropletsor contaminated hands carrying the viruses to nose or \nmouth.  \nTreatment  \nRibovirin adm intrated by aerosol.  \n23. Mumps virus  \nIt is an enveloped virus, with negative polarity RNA, which belongs to the paramyxoviridae family. The \nspikes on the envelope carry either a combined haemogglutinin and neuraminidase (HN) or a fusion (F) \nprotein. The envelo pe also contains a matrix (M).  \nInfection is probably by droplet into the respiratory tract. The incubation period is 14 -18 days and is \nfollowed by generalized illness with localization in the salivary gland, usually the parotids. The generalized \nphase is t he usual ―flu -like‖ illness with fever and malaise, followed by developing pain in the parotid \nglands, which then swell rapidly. Much of the swelling is due to the blockage of the efferent duct.  \nNeurological involvement is common in mumps though the majori ty of cases are not clinically apparent. \nHowever, clinical meningitis remains the most common serious complication of mumps.  \n Mumps meningitis is rarely fata and complete recovery is usual. Meningo -encephalitis has been described, \nbut is much rarer.  \nThe be st known complication, in postpubertal males, in orchitis. This, though painful and causing softening \nand atrophy of the affected testicle, is usually unilateral and rarely causes sterility. Oophoritis also occurs in \ngirls.  \nPrevention  \nLive attenuated vacci ne present (MMR)  \n ' metadata={'source': 'bio.pdf', 'page': 63}
"
"page_content=' \n 24. Measles virus  \nMeasles is an enveloped virus with single stranded RNA from the genus morbilivirus.  \nIt has some important functional differents. The virion structure includes:  \n- spikes, carrying a haemagglutinin but not a neuraminidase functi on \n- an F protein that is also a haemolysin  \n- a matrix protein, M, below an envelope lipid bilayer  \nThere is only one serotype of measles virus.  \nMeasles is an acute febrile illness, mostly in childhood, after an incubation period of 10 -12 days. The onset \nis the  ―flu-like‖, with high fever, cough and conjunctivitis. Koplik’s spots (red spots with a bluish -white \ncentre on the buccal mucosa) may be present at this stage. After 1 -2 days the acute symptoms decline, with \nthe appearance of a widespread maculopapular ra sh.  \nOver the next 10 -14 days, recovery is usually complete as the rash fades, with considerable desquamation. \nComplications include:  \n- giant cell pneumonia, more common in adults  \n- otitis media  \n- post-measles encephalitis  \nThe pneumonia is due to direct invasion  with virus, but the role of virus in the other two is uncertain. \nMeasles encephalitis can cause severe and permanent mental impairment in those it does not kill. It is rare \nbut disastrous.  \nOne further complication of measles is subacute sclerosing panence phalitis (SSPE), which occurs in \nchildren or early adolescents who have had measles ealy in life, usually under 2 years of age. It is a \nprogressive and inevitably fatal degenerative disease. Within infected cells is a defective form of measles \nvirus, which , because it is unable to induce the production os a functional M protein, is not released as \ncomplete virus from the cells. Patients deteriorate over several years, losing intellectual capacity before \nmotor activities.  \nTreatment  \nLife attenuated vaccine (M MR)  \n25. Arboviruses: alphaviruses  \nAlphaviruses are an enveloped, RNA virus. It has 3 structural proteins: C protein, E1 and E2 proteins \n(glycoproteins that form hemagglutinin containing spikes that project from lipid bilayer).  \nAlphaviruses ester cells by receptor -mediated endocytosis. The nucleocapsid id then released into the \ncytoplasm where it binds to ribosomes, and the non -structural proteins are translated directly from the \ngenomic RNA.  \nInfection by arboviruses is initiated when mosquitoes or other ar thropods deposit saliva in extravascular \ntissues while blood -feeding. The initial site of replication is the Langerhans cell. Alphavirus replication \nappears to stimulate:  \n- the migratory response of the Langerhans cell to the lymph nodes  \n- the accumulation of leucocytes in the draining lymph node, where local replication produces \nviraemia  \nArboviruses induce high titres of viraemia. 1 -4 days after parenteral  inoculation or following bites by \ninfected arthropods .  \nInoculation of α -viruses by mosquito -> patient has viraemia -> viruses may be seeded in various target \norgans (e.g. CNS in encephalitis virus)  \nInvasion of the central nervous system (CNS) via the olfactory nervous tract may ensue in some infections \nwhile other viruses cross the blood -brain barrier. In alphaviral infections accompanied by rash and arthritis, \nvirus replication and necrosis occurs in the epidermis and possibly the muscles, tendons and connective ' metadata={'source': 'bio.pdf', 'page': 64}
"
"page_content=' \n tissue. Infection of macrophages may mediate mu sculoskeletal pathology via suppression of cytokine \ninduction.  \nAntibodies are first detected when the fever subsides, usually within 5 -10 days after infection, and may \npersist for many years. Antibodies are of the IgM class for 1 -7 weeks after incubation;  subsequently they are \nof the IgG class.  \nArboviruses capable of producing encephalitis typically cause a spectrum of disease:  \n· in apparent  infection  \n· acute encephalitis  \nWithin the central nervous system, arboviruses multiply in and induce necrosis of neurons , which in turn \nbecome surrounded by microglia, forming glial knots.  \nPerivascular cuffing with mononuclear cells affects many cerebral blood vessels. Usually there is \nconcomitant meningitis with accumulation of mononuclear cells in the subarachnoid space a nd hyperemia  of \nadjacent capillaries.  \nThe tissue tropism of arboviruses can be divided into three categories:  \n· infections of the CNS (e.g. encephalitis, aseptic meningitis)  \n· infections of the visceral organs (e.g. hepatitis and hemorrhagic  fevers)  \n· febrile in fections  \n \nTreatment  \nVenezuelan equine encephalitis vaccine  \n \n26. Arboviruses: flaviviruses  \nMorphologically, flaviviruses are similar to alphaviruses but are smaller. The molecular biology of \nflaviviruses is different from the alphaviruses and has resulted i n the viruses being classified into different \nvirus families, the Flaviviridae and Togaviridae, respectively. Flavivirus virions have three structural \nproteins; the viral RNA genome is encapsulated  by a small core protein and there are two proteins, termed  \nthe membrane (M) and envelope (E), on the outside of the virus particles.  \nThe virus genome is one single -stranded, positive -sense RNA molecule. Flaviviruses replicate in the \ncytoplasm of cells.  \nPathogenesis  \nYELLOW FEVER: yellow fever is caused by a mosqu ito-borne flavivirus. The disease is characterized by \nthe sudden onset of headache and fever with temperatures exceeding 39ºC, and is accompanied by \ngeneralized myalgia, nausea and vomiting, after an incubation period of 3 -6 days. Jaundice may appear by \nthe third day of illness, but frequently this is mild or absent. Hematemesis  and melena  may occur from \nbleeding into the gastro -intestinal tract and epistaxis and bleeding gums may also be noted.  \nDENGUE: dengue is caused by four serologically related flavivi ruses called dengue -1, dengue -2, dengue -3 \nand dengue -4.  \nThe disease dengue presents as an acute febrile illness with chills, headache, retro -ocular pain, body aches \nand arthralgia in more than 90% of apparent cases, accompanied by nausea or vomiting and a  maculopapular \nrash. Illness usually persists for 7 days followed with fever remitting after 3 -5 days followed by relapse \n(―saddleback fever‖), and pains in the bones, muscles and joints sufficiently severe to earn the epithet \n―breakbone fever‖.  \nDENGUE HAE MORRHAGIC FEVER: this is a less manifestation of dengue, mainly affecting children, is \noccasionally accompanied by a shock syndrome, known as dengue shock syndrome. These two severe forms \nof dengue are observed in patients who undergo successive infection with two different dengue viruses. After \nan acute onset, fever of 40ºC, accompanied by vomiting and anorexia, enlarged liver and petechiae persists \nfor 5 -10 days. This is followed by a complete recovery unless shock supervenes.  \n \nTreatment  \nLive attenuated v accine yellow fever  \nFormalin inactivated vaccine  \n \n27. Arboviruses: bunyaviruses  \nBunyaviridae are icosahedral enveloped viruses. The genetic material of the viruse sis dividend between \nthree pieces of single -stranded RNA termed large (L), medium (M) and small ( S) segments.  \nUnlike alphaviruses and flaviviruses, the bunyaviruses have a negative -sense RNA geonome.  ' metadata={'source': 'bio.pdf', 'page': 65}
"
"page_content=' \n Arthropodes serve as vectors for the diseases transmitted to humans.  \nPathogenesis:  \nInitial infection by the virus and primary spread of the virus causes the onset of non-specific symptoms  such \nas headache and fever. Secondary spread and the multiplication of the virus in the CNS (central nervous \nsystem) causes symptoms such as stiff neck, lethargy  and seizures. It then can result in encephalitis, when \ninflammation of the brain, produced by infection by the virus, damages nerve cells, which affects signaling \nof the brain to the body.  \nAfter the virus enters the body via a mosquito bite, the virus undergoes local replication at the skin site \nwhere virus entered the body. A primary spread of virus occurs, with seeding of the reticuloendothelial  \nsystem, mainly in the liver, spleen, and lymph nodes. With the ongoing replication of the virus a secondary \nspread occurs, with the seeding of the CNS. Not all the cases reach this stage, depending on the efficiency of \nviral replication a t the different stages and the degree of virus spread. The California encephalitis virus \ninvades the CNS through either the cerebral capillary  endothelial  cells or the choroid plexus .  \n \n28. Rubella virus  \n \nRubella is a single -stranded RNA virus with an envelope and is the only member of the genus \nRubivirus. It an icosahedralcapsid and there  are 3 major virion plypeptides: C and the envelope \nglycoproteins E1 and E2.  \nOnly one antigenic type of rubella virus is recognized.  \nPOSTNATAL RUBELLA: the incubation period for postnatal primary rubella is 12 -21 days. Virus \nmay be excreted in the throat f or up to a week efore and after the rash. The characteristic clinical \nfeatures are:  \n· A macular rash, which usually appears first on the face and then spreads to the trunk and \nlimbs  \n· General features such as minor pyrexia, malaise and lymphadenopathy also occ ur, with the \nsuboccipital nodes being those most commonly enlarged and tender  \n· Arthralgia is uncommon in children but may occur in up to 60% of adult females. The joints \ncommonly involved are the fingers, wrists, ankles and knees  \n· Encephalitis and thrombocyt openia are rare complications of rubella and usually recovery is \ncomplete  \n \nRubella appears to prezent to prezent little danger to the immunocompromised patient, in whom the \nclinical features are similar to those seen in normal individuals.  \nCONGENITAL RUBEL LA: in the fetus is infected during a primary Materna infection a wide spectrum \nof abnormalities may occur. The classical congenital rubella syndrome (CRS) triad consists of \nabnormalities of the eyes, ears and heart.  \nAbnormalities of the eyes include catar acts, micro -ophtalmia, glaucoma and pigmentary retinopathy, \nwhich may result in blindness.  \nBilateral or unilateral sensorineural deafness may be present at birth.  \nThere are many possible heart defects, with a  patent ductus arteriosus, pulmonary artery and valvular \nstenosis, and ventricular septal defect being the most common  \nRarely, a persistent infection of the central nervous system occurs called progressive  rubella subacute \npanecephalitis, which is similar to the subacute sclerosing encephalitis cause b y measles  \n \nPathogenesis  \nRubella virus is transmitted by the air -borne route. Infection is established in the upper respiratory tract, \nand, towards the end of the incubation period, a viraemia occurs and seeds the target organs such as the \nskin and joints. Most of the clinical features are probably a consequence of the host’s immune response \nto the virus.  \nDuring the viraemia the virus is able to infect the differentiating cells of the fetus.  \n \nTreatment  \nLive attenuated rubella vaccine given routinely during c hildhood  \n ' metadata={'source': 'bio.pdf', 'page': 66}
"
"page_content=' \n 29. Arenaviruses  \nMembers of the family Arenaviridae have a single -stranded RNA genome. The genome has two segments: L \n(large) and S (small). The virions are spherical enveloped particles. The genome is encapsid in a helical \nnucleocapsid. The lip id envelope is derived from the plasma membrane.  \nThe virions contain not only virus genome but also host ribosomes.  \nThe arenaviruses that affect humans are grouped as New World and Old World viruses.  \n \nReplication  \nArenaviruses can replicate in a number of m ammalian hosts and in most tissues. Growth is restricted in \nterminally differentiated cells such as lymphocytes or macrophages.  \n \nClinical features and pathogenesis  \nLYMPHOCYTIC CHORIOMENINGITIS VIRUS: LCM virus has a worldwide distribution. Most human \ninfec tions are acquired by contact with laboratory mice or hamsters. LCM is a rare illness but may present \nas: \n• an undifferentiated febrile illness  \n• aseptic meningitis  \n• encephalitis  \nThe incubation period is 1 -2 weeks and the illness is of short duration.  \nLASSA FEV ER: this has an incubation period of 1 -3 weeks with a gradual onset of fever, headache and \nmuscle and joint pain. Pharyngitis with a non -productive cough is a common feature. In severe cases there is \nvomiting, diarrhoea and a raised hematocrit. Within a fe w days the patient will become increasingly febrile \nand complain of abdominal and retrosternal pain. The patient is lethargic, with oedema of the face and neck \nand enlarged lymph nodes. Oedema and bleeding may occur together or independently. Recovery take s 1-3 \nweeks.  \nSOUTHAMERICAN HAEMORRHAGIC FEVER:  \nArgentinian - Junin virus  \nBolivian - Machupo virus  \nVenezuelan - Guanarito virus  \nBrazilian - Sabia virus  \nYhe incubation is 1 -2 weeks and illness begins with a ―flu -like‖ prodrome. In severe disease petechiae \ndevelop and there can be bleeding from the gastro -intestinal tract. There is fluid leak through damaged \nvascular endothelium, leading to hypotension, oliguria and hypovolaemic shock.  \n \nTreatment  \nRibavirin benifits both lassa fever and southamerican haemorrh agic fever.  \n  \n30. Filoviruses  \nMarburg and Ebola, the two members of the Filoviridae, are enveloped viruses with a single -stranded, \nunsegmented, helical nengative sense RNA genome.  \nInfection was related directly or indirectly to blood or tissues of vervet monkeys.  \n \nReplication  \nFiloviruses can be grown in a variety of cell lines. The mode of entry is not known but is pressumed to \ninvolve membrane fusion. Filovirus replication takes place in the cytoplasm and the large inclusions are \nformed. Mature virus is r eleased as nucleocapsids bud through areas of plasma membrane.  \n \nClinical features and pathogenesis  \nAfter an incubation period of 4 -10 days there is a rapid onset of:  \n- fever    -malaise  \n- malaise    - severe frontal headaches  \nBradycardia and conjunctivitis o ccur early in the disease. It progresses rapidly with:  \n• Nausea, vomiting, abdominal pain and diarrhoea to heamatemasis and melaena  \n• Frank haemorrhagic manifectations, includng patechiae, ecchymoses, and uncontrollable bleeding from \nvenepuncture sites, within  5-7 days of onset.  \nOften maculopapular rash appears around day 5, which is followed by desquamation. Death to shock usually \noccurs 6 -9 days after onset. Infection of pregnant women usually results in abortion with fatal infection of ' metadata={'source': 'bio.pdf', 'page': 67}
"
"page_content=' \n the neonate. Recovery is survivors is slow, with weight loss, prostration and amnesia for the period of acute \ninfection.  \n \nLab ID  \nmade by ELISA of antiviral antibodies  \n \nTreatment  \nSupportive treatment is all that can be offered to patients.  \n \n31. Reoviruses & rotaviruses  \nFour out  of the nine genera of the Reoviridae family infect humans:  \n- Orthoreovirus  \n- Orbivirus and Coltivirus  \n- Rotavirus  \nAll reoviruses have a double -shelled capsid, no envelope double -stranded RNA. All reoviruses replicate in \nthe cytoplasm of infected cells and form intracytoplasmic inclusion bodies.  \nReoviridae were made from both respiratory secretions and faeces but could not be associated with disease - \nhence the name reoviruses (respiratory enteric orphan).  \n \nRotaviruses  \nRotavirus infections are usually mild to mod erately  severe in developed countries but can become very \nsevere and cause high mortality in developing countries. Rotavirus also cause diarrhoea.  \n \nTransmitted by fecal -oral route.  \nRotavirus activated by mild proteolysis in GIT  ->  infect epithelial cel ls of small intestine where they \nreplicate in cytoplasm   ->  causes shortening and atrophy of villi + ↓productio n of digestive enzymes   ->  (-) \nRNA strand used to produce RNAs that can serve both as mRNA and genomic RNA percursors -> structural \nproteins + viral enzymes + (+) strandRNA form core -like structure   ->  the (+) RNA is transcribed to produce \n(-)RNA → cisRNA  ->  get out of the cell  \n \nPathogenesis  \n \nRotaviruses replicate exclusively in the differentiated epithelial cells at the tips of the villi of t he small \nintestine. Progeny virus is released in large numbers into the intestinal lumen ready to infect other cells. \nBiopsies show atrophy of the villi with reactive crypt hyperplasia and lymphocytic infiltrates in the lamina \npropria. The cellular damage leads to malabsorption of nutrients, electrolytes and water, and the crypt \nhyperplasia to hypersecretion.  \nThe infection is followed by a local, humoral and cell -mediated immune response and s normally overcome \nwithin a week. Rotavirus -specific IgA enteric antibodies, which are secreted into the gut, are the best known \ncorrelate of protection.  \n \nClinical features  \nThe onset of symptoms is abrupt after a short incubation period of 1 -2 days. Diarrhoea and vomiting are seen \nin the majority of infected children an d last for 2 -6 days. Although symptoms of respiratory tract infection \nare frequently observed at the time of rotavirus infections.  \nRotavirus infections can be life -threatening if children are already malnourished.  \nLab ID  \nELISA for antiviral antibodies  \n \nTreatment  \nRapid and efficient replacement of fluids and electrolytes IV.  \n  \n32. Human immunodeficiency virus & other retroviruses  \nAll retroviruses have an outer envelope consisting of lipid and viral proteins; the envelope encloses the core, \nmade of other vira l proteins, within which lie two molecules of viral RNA and the enzyme reverse \ntranscriptase.  ' metadata={'source': 'bio.pdf', 'page': 68}
"
"page_content=' \n Viral stability. HIV is inactivated by:  \n* heat, in the autoclave or hot air oven  \n* glutaraldehyde 2%  \n* hypoclorite; 1 in 10 dilution of domestic bleach  \n* other de sinfectants, including alcohols.  \nReplication  \nRetroviruses differ from other RNA viruses in that they replicate and produce viral RNA from DNA copy of \nthe virion RNA. The best studied method of attachment of HIV to cells is by the interaction of the externa l \nenvelope glycoprotein gp120 with part of the CD4 molecule of T helper lymphocytes and other clls.  \nAfter this, entry of the virus occurs by fusion of the viral envelope with the cellular membrane. Once the \nRNA is released into the cytoplasm, the reverse t ranscriptase acts to form the double -stranded DNA copy, \nwhich is circularized, enters the nucleus and is spliced into the host cell DNA . Once inserted into the host \nDNA, infection with HIV is permanent. The virus may stay latent or enter a productive cycl e. \nClinical features  \nHTLV -1 infection  \nIt is associated with adult T cell leukemia/lymphoma. The disease is an acute T cell proliferative \nmalignancy; clinically, the features are leukemia, generalized lymphadenopathy and hepatosplenomegaly \nwith bone marrow and skin involvement. Also a non -Hodgkin T cell lymphoma is associated with HTVL -1. \nHTVL -1 is the cause of a neurological disease, tropical spastic paraparesis.  \n \nHIV and AIDS  \nThe acute seroconversion illness resembles glandular fever, with adenopathy and f lu-like symptoms.  \nPersistent generalized lymphadenopathy (PGL) is present in 25 -30% of patients who are otherwise \nasymptomatic.  \nThe acquired immune deficiency syndrome (AIDS) presents in many ways, all due to the underlying severe \nloss of the ability to re spond to infectious agents and to control tumours. Constitutional symptoms of fever, \nweight loss and diarrhoea and minor opportunistic infections. Without treatment, such patients will progress \nrapidly to AIDS.  \nOral hairy leucoplakia appears to be unique t o HIV -infected patients. AN association with Epstein -Barr virus \nand papilloma viruses has been proposed.  \nKaposi’s sarcoma was one of the earliest diseases used to define AIDS.  \nThe tumours arise from endothelial cells of blood vessels, causing bluish -purple , raised irregular lesions. The \naetiological agent is thought to be human herpes -virus 8.  \nPneumocystis carinii pneumonia was another presentation found in many of the first patients recognized.  \nToxoplasma gondii infections can manisfest at various sites, b ut are always associated with compromised \npatients. The brain is an important site.  \nHIV dementia develops in 25% of patients with AIDS and is marked by a gradual loss of cognition, \nprogressing to overt dementia.  \n \nPathogenesis of HIV infection and AIDS  \nThe incubation period in the acute stage is from 1 to 2 months. This is procededby a period of intense, \nunrestrained viral replication.  \nThe effectiveness of the immune system in controlling virus replication at this time forecasts when the virus \nwill escape co ntrol and symptoms appear.  \nPacients with AIDS are profoundly immunosuppressed.  \nThe proportion of infected CD4+ cells and the level of circulating virus rise as the infection progresses.  \n \nLab ID:  \nDetection of antibodies to the virus: tests for anti -HIV \nDete ction of the virus itself: PCR, tests for p24 anrtigen, virus isolation  \n \nTreatment  \n- HTVL -1 \nInterferon and inhibitors of reverse transcriptaase may have a role.  ' metadata={'source': 'bio.pdf', 'page': 69}
"
"page_content=' \n - HIV \nTherapy: combination of antiretrovirotics (HAART = highly active antiretroviral treatment ) \nzidovudin, lamivudin, nevirapin, saquinavir etc.  \n \n33. Caliciviruses, astroviruses & ""small round structured"" viruses  \nBased on differences in their genomic organization, human calciviruses have been, characterized within two \ngenera of the Caliciviridae:  \n- Sapporo -like viruses  \n- Norwalk -like viruses  \nThere are eight strains of astrovirus that have been identified with specific antisera. The use of a monoclonal \nantibody shown that all serotypes share a group antigen,  \nCaliciviruses and astroviruses have shown tha t some adults become infected  \nafter they had been challenged with faecal filtrates containing virus.  \nAstroviruses can be readily propagated in a human intestinal cell line provided trypsin in incorporated in the \nmedium. Replication occurs within the cytop lasm.  \n \nPathogenesis  \nReplication occurs in the jejunum. The villi in the proximal part of the small intestine were broadened and \nblunted, and the enterocytes covering the damaged villi were cuboidal and vacuolated. At the same time the \nnumbers of intra -epithelial lymphocytes and neutrophils were increased. Epithelial cells remained intact but \nthe microvilli were disarranged and reduced in length.  \nThe symptoms are similar between calicivirus and astrovirus, but vomiting, sometimes projectile, is more \nfrequent ly reported in calicivirus infection involving adults the illness resembles ―gastric flu‖, i.e. diarrhoea, \nheadache, fever, aching limbs and malaise.  \n \nTransmission  \nFecal -oral route folowing ingestion of contaminated food or water (cold foods, shellfish, wa ter, etc)  \n \nLab ID  \nantiviral antibodies by ELISA  \n \nTreatment  \nNo specific treatment for these infections.  \n \n34. Coronaviruses  \nThe most studied coronaviruses are IBV (infectious bronchitis virus) and MHV (mouse hepatitis virus). The \nparticles are pleomorphic a nd enveloped.  \nThe genome is encoded in non -segmented single -stranded positive -sense RNA.  \nIt is now accepted that there two species of human coronavirus (HCoV) causing respiratory disease. Human \nenteric coronavirus (HECV) is a likely third species.  \nThe conf irmed species os coronavirus may readily be distinguished from each other by their limited host \nrange. Serological studies of the N, M and S proteins have revealed antigenic relationships.  \nCoronavirus attach to either protein or carbohydrate on host cells.  The viruses replicate in the cytoplasm with \na growth cycle. They bud not from the plasma membrane but from the rough endoplasmic reticulum into \nintracytoplasmic vesicles. These are transported via the Golgi apparatus to the plasma membrane through \nwhich t hey are released by exocytosis.   \n \nClinical features  \nCoronavirus show:  \n- marked species specificity  \n- strong tissue tropism  \nThey usually infect via the gut and/or respiratory tract. Infections of the liver and CNS are well recognized. \nCoronaviruses can also in fect neural cells, in which they may persist, and macrophages.  \nHUMAN CORONAVIRUS: the only significant condition known to follow HCoV infection is upper \nrespiratory tract disease, and it is estimated that coronaviruses cause up to 30% of ―common colds‖.  \nCoronaviruses may cause severe lower respiratory tract infection in the very old and very young, including \npremature infants.  ' metadata={'source': 'bio.pdf', 'page': 70}
"
"page_content=' \n There is some evidence that they may cause pneumonia in immunocompromised patients. The incubation \nperiod is from 2 to 4 days. Sympt oms outlast virus shedding and typically persist for a week, probably as a \nresult of secondary -bacterial infection.  \n- CNS INVOLVEMENT: these viruses are undoubtedly neuro -invasive and they may have a role in the \naetiology of multiple sclerosis, but whether t heir presence is causative or incidental is presently unclear.  \n \nTreatment  \nSymptomatic only  \n  \n35. Rhabdovirus  \nMembers of the family must be enveloped, single -stranded RNA viruses. Two genera are known whose \nmembers have important roles in animal or human di sease.  \nThis genus has rabies virus as its prototype. Lyssavirus  has rabies virus as its prototype. Vesiculovirus, \nwhose members are associated with the disease vesicular stomatitis.  \nTransmission: raccoons, skunks, squirrels, foxes and bats work as reservo irs. Bite of an animal infects  \nhumans.  \nRabies is a distressing disease that develops rapidly into an acute encephalomyelitis, often frenzied initially, \nthen subsiding into delirium, coma and death. A prominent feature is hydrophobia.  \n \nRabies virus typicall y is bullet -shaped. Its inner nucleoprotein core of single -stranded RNA enclosed in \nnucleoprotein (N) with helical symmetry provides the group antigen for the genus.  \nThe viral membrane or matrix (M) protein lies between the core and the outer lipoprotein e nvelope. \nExtraction of the outer envelope releases a glycoprotein (G) that can induce the formation of neutralizing \nantibody.  \nVirus attaches via the glycoprotein of the envelope. In neural tissue virus attachment occurs at \nneuromuscular junctions via the a cetylcholine receptors. Entry is by endocytosis. Replication occurs in \ncytoplasm.  \nAccumulation of cytoplasmic viral protein inclusions (Negri bodies) may be visible by light microscopy after \nappropriate staining. This has long been a useful diagnostic feat ure. \n \nClinical features  \nRabies may present as a:  \n- Predominantly encephalitic disease – furious rabies  \n- Paralytic illness – dumb rabies  \nIn humans, about two -thirds suffer the encephalitic form and die within 7 days, the rest initially present as \nparalytic the  develop encephalitis, and death may not occur for 2 -3 weeks. Survival is exceedingly rare.  \nThe incubation period in humans can be very variable.  \nThe virus spreads to gain access to the nerves via the motor end plates. Once within the nerve fibers  it is ou t \nof reach of any circulating antibody as it travels along the axons towards the central nervous system. The \nmanifestations of illness are:  \n- Initially, fever, malaise and headache  \n- Then, symptoms related to the wound site e.g. tingling, pain, lumbar weakness  and ascending \nparalysis after leg bites, and numbness, hyperesthesia  and pain with increasing shoulder weakness \nafter hand or arm bites.  \n \nDiagnosis  \nPostmortem – Negri bodies  \nViral nucleic acid by PCR  \n \nPrevention  \nKilled rabies virus vaccine  \nPost exposure: thorough cleaning of wound + passive immunization with antirabies  immunoglobulins  \n \n36. Agents of spongiform encephalopathies (prions)  \nThe transmissible spongiform encephalopathies, or prion diseases, are a unique group of fatal \nneurodegenerative disorders occurring in humans and animals that take their name from two major \ncharacteristics:  ' metadata={'source': 'bio.pdf', 'page': 71}
"
"page_content=' \n 1. One hypothesis concerning these agents suggests that they are composed entirely of protein, \nwithout any nucleic acid, for which the term prion. No evidence of a convention al host immune \nreaction has been found in these diseases.  \n2. The diseases caused by these agents are characterized in all species by spongiform change in the \ncentral nervous system (CNS). This consists of numerous small vacuoles that are formed within \nneurona l cell bodies and their processes.  \nA noninfectious form of PrP (prion protein) is present in normal mammalian brains on surface of neurons \nand glial cells. PrP is host protein. Infectious (β sheets) ≠ noninfectious (α helical)  \nDiseases:  \n- Bovine spongiform encephalopathy (BSE or mad cow disease) occurred due to feeding of bovines \nwith processed animal parts from diseased sheep and cattle. Infection animal to human might be \npossible.  \n- Kuru: human -to-human transmission. Infectious agents acquired by an individu al’s exposure to \ndiseased brain tissue in a ritualistic cannibalism among members of tribe in New Guinea.  \n- Creutzfeldt -Jacobs disease: iatrogenic transmission of CDJ by use of prion contaminated human \npituitary derived GH. 15% inherited as mutation in PrP g ene. \n \nPathology  \nExtracerebral exposure to prions results in their multiplication in lymphoreticular and other peripheral tissues \nafter infection but infection of CNS results in typical clinical effects. Accumulation of PrP in form of \namyloid fibrils (cytop lasmic vesicles in neurons, extracellular amyloid plaque) -> extensive vacuolation, \nneuronal loss and microglial proliferation.  \nSymptoms: CDJ: rapidly progressive dementia, behavioral  disturbances ending in death within a year.  \n \nPrevention:  \nDecontamination  of CDJ brain specimen, animals showing signs of illness are killed.  \n ' metadata={'source': 'bio.pdf', 'page': 72}
"
"page_content=' \n MYCOLOGY / PARASITOLOGY  \n \n1. Fungi and fungal disease of men  \nFungi are saprophytes in the soil and on decaying plant material. They are eukaryotic, with a range of \ninternal membrane system s, membrane -bound organelles, and a well -defined cell wall which is composed \nlargely of polysaccharides  \n· MOULDS (filamentous fungi): moulds reproduce by means of spores produced by asexual cell \ndivision or as a result of sexual reproduction.  \n· YEASTS : which are predominantly unicellular. Most reproduce by an asexual process called \nbudding in which the cell develops a protuberance, which enlarges and eventually separates from \nthe parent cell.  \n· DIMORPHIC FUNGI: which are capable of changing their growth to eithe r a mycelial or yeast \nphase, depending on the growth conditions.  \n \nFungal diseases in man:  \nSome fungi can establish an infection in all exposed individuals. Others, such as Candida and Aspergillus \nspecies, are opportunist pathogens which ordinarily cause di sease only in a compromised host. In some \nmycoses the form and the severity of the infection depend on the degree of exposure to the fungus, the site \nand the method of entry into the body, and the level of immunocompetence of the host.  \nSome fungi may cause  serious, occasionally fatal, toxic effects in man, either following ingestion of \npoisonous toadstools or consumption of mouldy food that contains toxic secondary metabolites \n(mycotoxins). Allergic disease of the airways may result from inhalation o fungal  spores.  \n \nSome yeasts are commensals of man and cause endogenous infections when there is some imbalance in the \nhost. Only ringworm (dermatophyte) infections are truly contagious.  \n \nTypes of infection  \nSUPERFICIAL MYCOSES: diseases of the skin, hair, nail an d mucous membranes are the most common of \nall fungal infections.  \n· Ringworm is a complex of diseases affecting the keratinous tissues of hair, nail and the horny layer \nof the skin; it is caused by a group of closely related mould fungi called dermatophytes w hich can \ncolonize and digest keratin.  \n· Yeast infections affect the skin, nail and mucous membranes of the mouth and vagina, and are \nusually caused by commensal Candida species. Infection is generally endogenous in origin but \ngenital infection can be transmi tted sexually.  \nSUBCUTANEOUS MYCOSES: they result from the traumatic inoculation of saprophytic fungi from soil or \ndecaying vegetation into the subcutaneous mycoses are mycetoma, chromomycosis and sporotrichosis  \nSYSTEMIC MYCOSES: deep -seated fungal infectio ns generally result from the inhalation of air -borne \nspores produced by the casual moulds, present as saprophytes in soil and on plant material. They are mostly \ncaused by dimorphic fungi.  \n· Coccidioidomycosis  \n· Blastomycosis  \n· Histoplasmosis  \n· Paracoccidioidomycos is \nThese infections are being seen with increasing frequency in patients compromised by disease or drug \ntreatment. In transplant patients, for example, these fungi are among the most frequent causes of mortality \ndue to infection.  \n \nPathogenesis  \nIt is clear that infection most often arises due to deficiencies in the host rather than because of any inherent \npathogenic properties of the fungus.  \nAntigenic variation on the surface of Candida cells may help the organism to avoid host defenses . Cellular \nimmunity is  suppressed by cell wall mannan, the capsular mucopolysaccharide and melanin.  \n \n2. Dermatophytes and ringworm infections  \nRingworm infections are common diseases of the stratum corneum of the skin, hair and nail; they are also \nreferred to as dermatophytosis or tinea.  ' metadata={'source': 'bio.pdf', 'page': 73}
"
"page_content=' \n Ringworm infections are caused by about 20 species of dermatophyte fungi which are grouped into three \ngenera: Tricophyton, Microsporum and Epidermophyton.  \nMost ringworm infections in Europe are caused by Trichophyton rubrum, Epidermophyton floccosum  and \nMicrosporum canis.  \nInfections are spread by direct or indirect contact with an infected individual or animal. The infective particle \nis usually a fragment of keratin containing viable fungus. Indirect transfer may occur via the floors of \nswimming pool s and showers or on brushes, combs, towels and animal grooming implements.  \nIn addition to exposure to the fungus, some abnormality of the epidermis, such as slight peeling or minor \ntrauma, is probably necessary for the establishment of infection.  \nDermatoph ytes invade keratin by enzym atic digestion and mechanical pressure.  \nMany dermatophyte species produce two types of asexual spore: macroconidia and microconidia.  \n \nPathogenesis  \nSometimes there is only dry scaling or hyperkeratosis, but more commonly there is  irritation, erythema, \nedema  and some vesiculation. More inflammatory lesions with weeping vesicles, pustules and ulceration are \nusually caused by zoophilic species.    \n \n- Tinea pedis  (athlete’s foot): Trychophyton rubrum, Trichophyton mentagrophytes and \nEpidermophyton floccosum.  \nInfected tissue is generally between the toes but can spread to nails which become yellow and brittle.  \nSkin fissures can lead to secondary bacterial infections with consequent id reaction; skin lesions \ndevelop at sites distant from i nfected area.  \n- Tinea corporis (ringworm): epidemophyton floccosum, several species of Trochophyton and \nMicrosporum . \nLesions look like advancing annular  rings with scaly  centers periphery of the ring which is the site of \nactive fungal growth is usually infla med and vesiculated (lesions generally occur in non -hairy areas \nof the body).  \n- Tinea capitis (scalp ringworm): species of Trichophyton and Microspores  \nSmall scaling patches to envelopment of entire scalp with extensive hair loss.  \n- Tinea cruris (jock itch): E pidermophyton floccosum and Trichophyton rubrum.  \nLesions occur in the moist groin area where they spread from upper thighs to  genitals  \n- Tinea unguinum: most often Trichophyton rubrum.  \nNails are thickened, discolored  and brittle. 3 -4 months treatment  \n \nTreatm ent \nRemoval of infected skin, topical application of antifungal antibiotics such as miconazole or \nclotrimazole.  \nOral antifungals are required to treat infections of the nail and scalp.  \n \nSuperficial candidosis  \nSuperficial Candida infections involving the s kin, nails and the mucous membranes of the mouth and \nvagina are very common. Candida albicans accounts for 80 -90% of cases, but other species, notably \nC. tropicalis, C. krusei, C. glabrata, C. parapsilosis, C. guilliermondii and C. lusitaniae may occur.  \nCandida species, usually C. albicans, are found in small numbers in the commensal flora.  \nYeast overgrowth and infection occur when the normal microbial flora of the body is altered or when \nhost resistance to infection is lowered by disease.  \n \nPathogenesis  \nMucosal infection: this is the commonest form of superficial candidosis. Discrete white patches \ndevelop on the mucosal surface.  \nIn oral candidosis white flecks appear on the buccal mucosa and the hard palate and the surrounding \nmucosa is red and sore. Infecti on may spread to the tongue.  \nVaginal infection: itching, soreness and non -homogeneous white discharge accompany typical white \nlesions on the epithelial surfaces of the vulva, vagina and cervix. The perivulvar skin may become \nsore and small satellite pustul es may appear around the perineum and natal cleft. Vaginal candidosis \nis common, especially during pregnancy.  ' metadata={'source': 'bio.pdf', 'page': 74}
"
"page_content=' \n Chronic oropharyngeal candidosis: may extend to give esophageal  infection, is very common in \nAIDS patients.  \nSkin and nail infection: Candida infec tions of the skin almost invariably occur at moist sites such as \nthe axillae, groin, perineum, submammary folds and occasionally the toe clefts.  \nChronic mucocutaneous candidosis: this is a rare form of candidosis. Takes the form of a persistent, \nsometimes granulomatous, infection of the mouth, skin and nails.  \n \nLab ID  \nCandida species grow well on Sabouraud medium or on blood agar at 25 -37ºC.  \n \nTreatment  \nMost superficial infections respond well to topical therapy with an imidazole. In oral candidosis, \nmiconazo le is used.  \n   \n3. Superficial mycoses other than ringworm  & candidosis  \nPitryasis vesicolor  \nThis is a mild, chronic infection of the stratum corneum which produces a patchy discoloration of the skin. \nThe yeasts are common members of the normal skin flora. Dis ease is probably related to host or \nenvironmental factors.  \nOn normal skin and in conditions such as dandruff and seborrhoeic dermatitis.  \n \nPathogenesis  \nSmall, well demarcated, non -inflammatory, scaling macules are usually present on the upper trunk or neck;  \nthese may appear hypopigmented or hyperpigmented.  \n \nTreatment  \nPityriasis vesicolor responds well to selenium sulphide or azoles.  \n \nOTHER SUPERFICIAL INFECTIONS  \nSkin and nail  \nCertain non -dermatophyte moulds may cause infection of skin and nail. They are ofte n resistant to the agents \nused to treat ringworm and superficial candidosis. Scopulariopsis brevicaulis is the most common cause.  \nNon-dermatophyte mould infections do not respond to existing antifungal agents.  \nTinea nigra: This is a superficial, asymptoma tic skin disease characterized by pigmented macules of variable \nsize, usually on the palms and soles. It is caused by a black mould, Exophiala werneckii.  \nTinea nigra responds well to treatment with keratolytic agents such as Whitfield’s ointment.  \n \nHair \nWhite piedra: this disease, caused by the yeast Trochosporon beigelii, results in soft, white greyish or light -\nbrown nodules on the hair shafts, mainly in the axillae. The hair often breaks at the point of infection, \nleaving hairs with a clubbed or swollen en d. Shaving of the affected area is usually sufficient to effect a cure.  \nBlack peidra: caused by Piedraia hortae, is characterized by the presence of black, hard nodules up to 1 mm \nin diameter. Shaving to remove infected hairs is a satisfactory treatment.  \n \nOtomycosis  \nAbout 10 -20% of chronic ear infections are due to fungi. The commonest causes are species of Aspergillus, \nin particular A. niger. Treatment with topical antifungals is usually successful, although relapse is common.  \n \nMycotic keratitis  \nFungal inf ections of the cornea are secondary to injury, bacterial infection and treatment with antibacterial \nagents and steroids. They are caused by Aspergillus and Fusarium species. Treatment is with topical \nantifungal agents, in particular natamycin.  \n     \n4. Subc utaneous mycoses  \nMycetoma  \nMycetoma is a chronic, granulomatous infection of the skin, subcutaneous tissues, fascia and bone, which \nmost often affects the foot or the hand. It may be caused by one of a number of different actinomycetes ' metadata={'source': 'bio.pdf', 'page': 75}
"
"page_content=' \n (actinomycetoma) or m oulds (eumycetoma). Infection follows traumatic inocculation  of the organism into \nthe subcutaneous tissue from soil or vegetable sources, usually on thorns or splinters.  \nA large number of organisms have been implicated in this disease, including species o f Madurella, \nExophiala, Acremonium, Pseudallescheria, Actinomadura, Nocardia and Streptomyces. Within host tissues \nthe organisms develop to form compacted colonies.  \n \nPathogenesis  \nLocalized swollen lesions, which develop multiple draining sinuses, are usual ly found on the limbs.  \nThere is often a long period between the initial infection and formation of the characteristic lesions; spread \nfrom the site of origin is unusual but may occur.  \n \nTreatment  \nActinomycetoma responds well to rifampicin in combination wit h sulphonamides or co -trimoxazole. In \neumycetoma, chemotherapy is ineffective and radical surgery is usually necessary.  \n \nChromoblastomycosis  \nIs a chronic, localized disease of the skin and subcutaneous tissues, characterized by crusted, warty lesions \nusual ly involving the limbs. The principal causes are Fonsecaea pedrosoi, F. compacta, Phialophora \nverrucosa and Cladosporium carrionii.  \n \nTreatment  \nPromising results have been obtained with terbinafire and with itraconazole either alone or in combination \nwith f lucytosine.  \n \nPhaeohyphomycosis  \nNon-specific solitary subcutaneous lesions caused by any black fungus. Diagnosis is often made at surgery, \nand treatment is by excision.  \n \nSporotrichosis  \nIs a chronic, pyogenic granulomatous infection of the skin and subcutane ous tissues which may remain \nlocalized or show lymphatic spread. It is caused by Sporothrix schenckii.  \n \nPathogenesis  \nMost frequent presents as a nodular, ulcerating disease of the skin and subcutaneous tissues, with spread \nalong local lymphatic channels. T ypically, the primary lesion is on the hand with secondary lesions \nextending up the arm. The primary lesion may remain localized or disseminated to involve the bones, joints, \nlungs and, in rare cases, the CNS. Disseminated disease usually occurs in debilit ated or immunosuppressed \nindividuals.  \n \nTreatment  \nProlonged therapy is usually required. For the cutaneous form, treatment with potassium iodide or \nitraconazole is satisfactory. In disseminated disease, intravenous amphotericin B is required.  \n \nOther subcuta neous mycoses  \nRhinosporidiosis is a chronic, granulomatous disease of the mucocutaneous tissues, with the appearance of \nlarge polyps or wart -like lesions in the nose or conjunctiva. The organism responsible  is a primitive aquatic \nbacterium.  \nLoboa loboi, B asidiobolus haptosporus and Conidiobolus coronaus, occasionally  cause subcutaneous \ninfections. Surgical excision is often curative in rhinosporidiosis and L. loboi infections; antifungal therapy \nmay be use for the other infections.  \n \n  \n5.Coccidioidomycosis , histoplasmosis, blastomycosis & paracoccidioidomycosis  \nCoccidioidomycosis  \nThis is primarily an infection of the lungs caused by Coccidioides immitis. Recovery usually confers lifetime \nimmunity.  \n ' metadata={'source': 'bio.pdf', 'page': 76}
"
"page_content=' \n Pathogenesis  \nC. immitis usually causes an asymptomatic or self -limiting pulmonary illness, but a progressive and \nsometimes fatal secondary disease occasionally develops. Primary pulmonary coccidioidomycosis \ndevelops 7 -28 days after infection. Skin rashes develop in up to 20% of those with the primary disease \nand indi cate a good prognosis. In some cases primary infection may result in a chronic, cavitating, \npulmonary infection which may resolve after several years, or may progress to the disseminated form.  \n \nTreatment  \nIntravenous amphotericin B is the standard therapy, but oral fluconazole, itraconazole or ketoconazole are \nalso used.  \n \nHistoplasmosis  \nH. capsulatum is found in soil enriched with the droppings of birds and bats, and infection results from the \ninhalation of spores.  \n \nPathogenesis  \nMost infections arre asymptomati c. Sometimes an acute influenza -like illness develops with fever and a non -\nproductive cough. These infections are usually self -limiting, but patients are frequently left with discrete, \ncalcified lesions in the lung.  \n \n6. Cryptococcosis, aspergillosis, systemi c candidosis & zygomycosis  \nCryptococcosis  \nCryptococcosis, caused by the capsulate yeast Cryptococcus neoformans, is most frequently recognized as a \ndisease of the CNS, although the primary site of infection is the lungs.  \nThere are four serotypes of C. neof ormans (A, B, C, D) which represent two varieties of the organism, \nnamely, C. neoformans var. neoformans, which is commonly found in the excreta of wild and domesticated \nbirds.  \n \nPathogenesis  \nInfection follows inhalation of the cells or basidiospores of C. neoformans which, in nature, are thought to be \nsmall, allowing the organism to enter deep into the lung. The disease is more common in the men than \nwomen.  \nA mils, self -limiting pulmonary infection is believed to be the commonest form of cryptococcosis. Les ions \nmay take the form of small discrete nodules, which may heal with a residual scar or may become enlarged, \nencapsulated and chronic (cryptococcoma form).  \nThe meningeal form of cryptococcosis can occur in apparently healthy individuals, but occurs most \nfrequently in patients with abnormalities of T lymphocyte function.  \n \nTreatment  \nIn immunocompetent individuals, cryptococcosis may be treated with oral fluconazole or itraconazole. \nIntravenous amphotericin B in combination with flucytosine is usually the tre atment of choice for \nimmunocompromised individuals.  \n \nAspergillosis  \nThe most important are A. fumigatus, A. niger, A. flavus, A. terreus and A. nidulans  \n \nPathogenesis  \nALLERGIC ASPERGILLOSIS: Asthma with eosinophilia is a more chronic form, which manifests a s \nepisodes of lung consolidation and fleeting shadows on chest radiography; the fungus grows in the airways \nto produce plugs of fungal mycelium which may block off segments of lung tissue and which, when coughed \nup, are a diagnostic feature.  \nASPERGILLOMA: The fungus colonizes preexisting (often tuberculous) cavities in the lung and forms a \ncompact ball of mycelium, eventually surrounded by a dense fibrous wall.  \nPatients are either asymptomatic or have only a moderate cough and sputum production. Surgical re section is \nmost often used to treat this condition.  ' metadata={'source': 'bio.pdf', 'page': 77}
"
"page_content=' \n INVASIVE ASPERGILLOSIS: this form occurs in severely immunocompromised individuals who have \nserious underlying illness. Neutropenia is the most common predisposing factor and A. fumigatus is the \nspecies m ost frequently involved.  \nThe lung is the sole site of infection in 70% of patients, but dissemination of infection to other organs occurs \nin many cases. Fungus invades blodd vassels, causing thrombosis; septic emboli may spread the infection to \nother organ s, especially the kidneys, heart and brain.  \nPARANASAL GRANULOMA: A. flavus and A. fumigatus may colonize and invade the paranasal sinuses \nand the infection may spread through the bone to the orbit of the eye and brain.  \n \nTreatment  \nAllergic forms of aspergi llosis are treated with corticosteroids. Aspergilloma is treated by surgical excision. \nIn invasive aspergillosis, the treatment of choice is intravenous amphotericin B.  \n \nSystemic candidosis  \nAn iatrogenic infection encountered among certain groups of hospit al patients, who carry more yeasts in the \nmouth and gastro -intestinal tract than the normal population.   \nInfection may be localized, e.g. in the urinary tract, liver, heart valves (endocarditis), meningites or \nperitoneal cavity, or may be widely dissemina ted and associated with a septicaemia (candidaemia).  \nCandidaemia is seen mainly in postoperative or immunosuppressed patients; in some patients it clears \nspontaneously, or disappears when contaminated intravenous catheters are removed. However, some patien ts \nwith candidaemia, notably those treated with cytotoxic drugs or corticosteroids, develop generalized or \nlocalized deep -seated infection.  \nCommon sites of involvement in disseminated infection include the kidney, liver, spleen, brain and gastro -\nintestinal  tract; pulmonary infections are rare. One common sign of deep -seated candidosis is the presence of \nwhite lesions within the eye (Candida endophthalmitis). Candida endocarditis usually follows surgery for \nvalve replacement.  \nC. albicans accounts for most cases  of systemic candidosis.   \n \nTreatment  \nThe treatment of choice for most forms of systemic candidosis are:  \n- intravenous amphotericin B (conventional or liposomal)  \n- intravenous or oral fluconazole  \n \nZygomycosis  \nIa relatively rare, opportunistic infection caused by saprophytic mould fungi, notably species of Rhizopus, \nMucor and Absidia.  \nThe best known form of the disease is rhinocerebral zygomycosis, a rapidly fulminating infection which is \nalmost invariably associated with acute diabetes mellitus, or with debilit ating diseases such as leukaemia or \nlymphoma. There is extensive cellulitis with rapid tissue destruction, most commonly spreading from the \nnasal mucosa to the turbinate bones, paranasal sinuses, orbit and brain. The condition is rapidly fatal if \nuntreated . \nPulmonary and disseminated infections can occur in severely immunocompromised individuals.  \n \nTreatment  \nHigh doses of intravenous amphotericin B control of any diabetes and aggressive surgical intervention.  \n      \n \n7. Antifungal drugs  \n- Amphothericin B and Nysta tin bind to ergosterol present in cell membranes of fungal cell. There they \nform pores that disrupt membrane function, resulting in cell death.  \n- Imidazole antifungal drugs (= clotrimazole) and triazole antifungal drugs (fluconazole) block \ndemethylation of l anosterolto ergosterol  \n* amphotericin B + flucytosine - broad spectrum antimycotics  \n* nystatin, clotrimazole - local antimycotic  \n \n \n ' metadata={'source': 'bio.pdf', 'page': 78}
"
"page_content=' \n 8. Candida  \nSuperficial candidosis  \nSuperficial Candida infections involving the skin, nails and the mucous membranes of the mouth an d \nvagina are very common. Candida albicans accounts for 80 -90% of cases, but other species, notably \nC. tropicalis, C. krusei, C. glabrata, C. parapsilosis, C. guilliermondii and C. lusitaniae may occur.  \nCandida species, usually C. albicans, are found in sm all numbers in the commensal flora.  \nYeast overgrowth and infection occur when the normal microbial flora of the body is altered or when \nhost resistance to infection is lowered by disease.  \n \nPathogenesis  \nMucosal infection: this is the commonest form of super ficial candidosis. Discrete white patches \ndevelop on the mucosal surface.  \nIn oral candidosis white flecks appear on the buccal mucosa and the hard palate and the surrounding \nmucosa is red and sore. Infection may spread to the tongue.  \nVaginal infection: itc hing, soreness and non -homogeneous white discharge accompany typical white \nlesions on the epithelial surfaces of the vulva, vagina and cervix. The perivulvar skin may become \nsore and small satellite pustules may appear around the perineum and natal cleft. Vaginal candidosis \nis common, especially during pregnancy.  \nChronic oropharyngeal candidosis: may extend to give esophageal  infection, is very common in \nAIDS patients.  \nSkin and nail infection: Candida infections of the skin almost invariably occur at moist sites such as \nthe axillae, groin, perineum, submammary folds and occasionally the toe clefts.  \nChronic mucocutaneous candidosis: this is a rare form of candidosis. Takes the form of a persistent, \nsometimes granulomatous, infection of the mouth, skin and nai ls. \n \nLab ID  \nCandida species grow well on Sabouraud medium or on blood agar at 25 -37ºC.  \n \nTreatment  \nMost superficial infections respond well to topical therapy with an imidazole. In oral candidosis, \nmiconazole is used.  \n \nSystemic candidosis  \nAn iatrogenic infe ction encountered among certain groups of hospital patients, who carry more yeasts in the \nmouth and gastro -intestinal tract than the normal population.   \nInfection may be localized, e.g. in the urinary tract, liver, heart valves (endocarditis), meningites or \nperitoneal cavity, or may be widely disseminated and associated with a septicaemia (candidaemia).  \nCandidaemia is seen mainly in postoperative or immunosuppressed patients; in some patients it clears \nspontaneously, or disappears when contaminated intrave nous catheters are removed. However, some patients \nwith candidaemia, notably those treated with cytotoxic drugs or corticosteroids, develop generalized or \nlocalized deep -seated infection.  \nCommon sites of involvement in disseminated infection include the ki dney, liver, spleen, brain and gastro -\nintestinal tract; pulmonary infections are rare. One common sign of deep -seated candidosis is the presence of \nwhite lesions within the eye (Candida endophthalmitis). Candida endocarditis usually follows surgery for \nvalve replacement.  \nC. albicans accounts for most cases of systemic candidosis.   \n \nTreatment  \nThe treatment of choice for most forms of systemic candidosis are:  \n- intravenous amphotericin B (conventional or liposomal)  \n- intravenous or oral fluconazole  \n \n9. Pneumocystis ca rinii \nPneumocystis carinii is a fungus, but its morphology, behaviour and response to antimicrobial agents are \nmore typical of a protozoan.  \nThe organism was originally described as a cause of atypical pneumonia in malnourished infants and it is a \ncommon ca use of pneumonia, which is fatal in patients with AIDS.  ' metadata={'source': 'bio.pdf', 'page': 79}
"
"page_content=' \n Around 10 -40% of HIV -negative patients undergoing immunosuppressant treatments for malignancy, \nconnective tissue disease or organ transplantation also develop P. carinii pneumonia, with mortality rate s of \n40-50%.  \nIn addition to pneumonia, other as yet unrecognized forms of Pneumocystis infection may exist.  \nBroncho -alveolar lavage or biopsy may be needed to establish the ciagnosis.  \nP. carinii is sensitive to co -trimoxazole.  \n \n10. Malaria parasites  \nFour speci es are encountered in human disease: Plasmodium falciparum, which is responsible for most \nfatalities; P. vivax and P. ovale, both of which cause benign tertian malaria (febrile episodes typically \noccurring at 48h intervals); and P. malariae, which causes q uartan malaria (febrile episodes typically \noccurring at 72h intervals).  \nLife cycle: when an infected mosquito bites, sporozoites present in the salivary glands enter the bloodstream \nand are carried to the liver, where they invade liver parenchyma cells. Th ey undergo a process of multiple \nnuclear division, followed by cytoplasmic division and, when this is complete, the liver cell ruptures, \nreleasing several thousand individual parasities into the bloodstream. The merozoites penetrate red blood \ncell. \nIn the case of P. vivax and P. ovale, some parasites in the liver remain dormant, and the cycle is complete \nonly after a long delay.  \nIn the bloodstream, the young ring develop and start to undergo nuclear division. The red cell ruptures to \nrelease the individual merozoites, which then infect fresh red blood cells.  \n \nPathogenesis  \nMalaria is characterized by severe chills, high fever and sweating, often accompanied by headache, muscle \npains and vomiting. Falciparum malaria, unlike the other forms, may progress (espec ially in primary \ninfections) to coma, convolutions and death. This condition, cerebral malaria, is associated with the \nadherence of parasitized red blood cells to the endothelium of brain capillaries.  \n \nLab ID  \nThick blood stream with Giemsa stain  \nThin blood  smear is used when more detail is needed to determine the species involved  \n \nTreatment  \nThe standard treatment for acute malaria was chloroquine. However, resistance to that drug in P. falciparum \nis now widespread . The most reliable alternative to chloroqu ine is quinine (or quinidine).     \n \n11. Toxoplasma gondii & Cryptosporidium parvum  \nToxoplasma gondii  \nIt is a unicellular spore forming coccidian protozoa important in nosocomial infections. 2 species life cycle – \nlive in one, reproduce in another. Only reprodu ce in cats – often infected by rats. Human infected by \nundercooked meat (ingestion of mature oocytes) or by handling cat feces. Mature oocyst contains 2 \nsporocysts, tachyzoites develop from this.  \nMature oocyst excreted by cat – ingested by human/other mamm al – pass to blood & lymph – invade \nmacrophages – multiply inside macrophages – develop bradyzoites with slow metabolism.  \nIt is usually asymptomatic but affects immunocompromised people – fever maculopapulous exanthema, \ngeneralized lymphadenitis, hepatospl enomegaly, toxoplasma retinitis.  \nBoth oocysts and tissue cysts transform into tachyzoites  shortly after ingestion. Tachyzoites localize in \nneural and muscle tissue and develop into tissue cyst bradyzoids. If a pregnant women becomes infected, \ntachyzoites  can infect the fetus via bloodstream.  \n \nLAB ID  \nAcid fast – ZN stain, difficult to find  \nComplement fixing test (CFT)  \nSerological test – Abs to T. gondii (ELISA, one specific feature is that instead of IgM + IgG we mostly \nsearch for IgA + IgG antibodies. IgA antibodies are typical for recent infections, IgG for ―status after‖ an \ninfection.  \n ' metadata={'source': 'bio.pdf', 'page': 80}
"
"page_content=' \n Treatment  \nSpiramycin – during pregnancy  \nClindamycin – Cerebral toxoplasmosis  \n \nCryptosporidium parvum  \nFrom animals or water (fecal -oral route)  \nSevere diarrhea if immunocompr omised patients (acute, watery, non-bloody ) \nIt can also cause Cryptosporidiosis – parasitic disease of intestinal tract (anorexia, nausea, vomiting, \nabdominal pain)  \nIn healthy people is usually mild, self -limiting disease.  \n \nLAB ID  \nSee stool for oocysts – ZN method  \n \nTreatment  \nNitazoxanide and fluid replacement  \n \n12. Entamoeba histolytica  \nThis is the most important amoebic parasite of humans. The amoebae invade the colonic mucosa, producing \ncharacteristic ulcerative lesions and a profuse bloody diarrhoea (amoebic  dysentery). Systemic infection may \narise, leading to abscess formation in internal organs, notably the liver.  \n \nTransmission  \ningestion of cysts -> formation of trophozoites -> penetration of cell wall -> multiplication of trophozoides \nwithin colon wall -> may invade epithelia -> ulceration  ->systemic invasion (liver abscess) -> cysts \ndiscarded with feces    \n \nLab ID  \nexamination of stool sample  \n \nTreatment  \nNot all strains of E. histolytica are invasive. Nevertheless, it is not possible readily to distinguish p athogenic \nfrom non -pathogenic strains in asymptomatic cyst excreters.  \nAcute amoebiasis is usually effectively treated with metronidazole or tinidazole. Chloquine is also useful in \nameobic liver abscess.  \n   \n13. Giardia lamblia  \nThis intestinal parasite lives att ached to the mucosal surface of the upper small intestine. Vast numbers may \nbe present, and their presence may lead to malabsorption of fat and chronic diarrhoea. Young infants may be \nparticularly severely affected. Infection is usually water -borne.  \n \nTrans mission  \nIngested cyst (water) -> trophozoid formation in duodenum where they attach to wall but don’t invade  \n \nLab ID  \nfecal examination; ELISA test to measure giadia Ag  \n \nTreatment  \nGiardasis can be treated with 5 -nitroimidazoles such as metonidazole or, on rare occasions when this fails, \nwith mepacrine.  \n  \n14. Trichomonas vaginalis  \nT. vaginalis is a flagellate proto zoon with four anterior flagella and one lateral flagellum which is attached to \nthe surface of the parasite to form an undulating membrane. There is n o cyst form; the parasite is transmitted \nby sexual intercourse.  \nT. vaginalis is predominantly a vaginal parasite, although urethritis may occur in the male consorts of \ninfected women. The best pH for the pathogen is 6 so abnormal alkalinity favours acquisi tion of the disease.  ' metadata={'source': 'bio.pdf', 'page': 81}
"
"page_content=' \n  \nLab ID  \nEither there is a slide for Giemsa staining or a CAT swab (medium is cultured overnight and microscopied as \nwet mount).  \n \nTreatment  \nThe organism is responsible for a mild vaginitis, with discharge, which ordinarily responds to t reatment with \nmetronidazole or tinidazole.  \n \n15. Trypanosoma  \nTrypanosomes have a complex life cycle involving an insect vector. The diseases that are caused in humans, \nAfrican trypanosomiasis (sleeping disease) and South American trypanosomiasis (Chaga’s diseas e), are \nrestricted in distribution according to the habitat of the insect host.  \n \nAfrican trypanosomiasis  \nTsetse flies act as the insect vector. Cattle and wild antelope act as reservoirs of infection.  \n \nPathogenesis  \nFollowing the bit of an infected tsetse fly, a localized trypanosomal chancre may appear transiently, but \ninvasion of the bloodstream rapidly occurs. The parasites multiply in blood.  \nSwollen lymph glands in the posterior triangle of the neck are often present. In untreated, the disease \ninexorabl y progresses to involve the central nervous system (CNS) with the classic signs of sleeping sickness \nand, ultimatly, death.  \n \nSouth american trypanosomiasis  \nIn Chaga’s disease the trypanosomes are not transmitted by the bite, but are present in the bug’s fa eces, \nwhich the unwitting sleeper rubs into the bite wound. The trypanosomes enter the bloodstream, but do not \nmultiply there; instead, they invade the cells of the reticulo -endothelial system and muscle, where they lose \ntheir flagellum and associated undu lating membrane and adopt a more rounded shape. They multiply int he \nmuscle and are liberated from ruptured cells which disseminate the infection and provide the parasitaemia \nneeded to infect fresh bugs when they next feed.  \n \nPathogenesis  \nExtensive cardiomy opathy, sometimes with gross distension of other organs (mega -oesophagus and mega \ncolon). Death is usually from heart failure.  \n \nLab ID  \nDetection of motile trypanosomes in Giemsa staining smears of body fluids, CSF, blood and lymph nodes \naspiration and gene rally specific serological tests are used as confirmation.  \n \nTreatment  \nAfrican sleep disease: early stage -> suramin or pentamidine  \n    late stage -> melarsoprol  \nSouth American Chaga’s disease: nitrofuran has been used with modest success.  \n \n16. Leishmania  \nLeishmania species are intracellular parasites of the reticulo -endothelial system. There are only two \nmorphological forms: amastigostes (non -flagellate forms), which occur in the infected lesion, and \npromastigotes (flagellate forms that lack and undulating mem brane), which occur in the insect vector.  \nThe parasites are transmitted by sandflies.  \n \nPathogenesis  \nCutaneous leishmaniasis (oriental sore) causinga boil -like swelling on the face or other exposed oart of the \nbody. The central part of the lesion may become  secondarily infected with bacteria, but the leishmania \norganisms reside in the raised, indurated edge of the lesion. With some species a more severe disseminated \ncutaneous leishmaniasis may occur. Parasites of the Leishmania mexicana complex may cause a d estructive \nlesion of the outer ear (Chiclero’s ulcer).  ' metadata={'source': 'bio.pdf', 'page': 82}
"
"page_content=' \n In mucocutaneous leishmaniosis (espundia), which is associated with the l. braziliensis complex, disifguring \nlesions of the mouth and nose may be caused. The most serious form of leishmaniasis is visce ral \nleishmaniasis which is a life -threatening disease involving the whole of the reticulo -endothelial system.  \n \nLab ID  \nExamination of Giemsa stained tissue and fluid samples for amastigote. Cutaneous and mucocutaneous \ndisease can be diagnosed from tissue sa mples.  \n \nTreatment  \nDifficult because available drugs have high toxicity and failure rates. Prevalent antimonials are conventional \ntherapy.  \n   \n17. Ascaris lumbricoides & other intestinal nematodes  \nInfection with intestinal roundworms is generally associates with  conditions of poor hygiene. Low worm \nburdens are generally asymptomatic, but heavy infections may cause problems, especially in young children \nwhere they have been associated with impaired development.  \n \nAscaris lumbricoides  \nThis is the common roundworm.  \nIn warm, moist condition, infective larvae develop within fertile eggs, but do not hatch. Such eggs can \nsurvive for long periods in soil. If ingested, the eggs hatch in the duodenum and the larvae penetrate the gut \nmucosa to reach the bloodstream. They are carried to the pulmonary circulation, where they gain access to \nthe lung and undergo two moults before migrating via the trachea to the intestinal tract. Havng completed \ntheir round -trip, theuy mature in the gut lumen and live for several years.  \nPneumonic  symptoms may accompany the migratory phase and the adult worms may invade the biliary and \npancreatic ducts. Moreover, heavy infection with those large worms can cause intestinal obstruction. Allergy \nis also sometimes a problem.  \n \nThe dog ascarid, Toxocara canis, may accidentally infect man. Larvae hatch in the small intestine and \npenetrate the gut wall, but they are unable to complete their migratory phase. Instead, they find their way to \nremote parts of the bidy, a condition known as visceral larva migrans . \n \nTrichuris trichuria  \nThis is the common whipworm. Like those of ascaris, they develop infective larvae in warm, moist \nconditions, but the ova do not hatch outside the body. However, after ingestion and hatching, there is no \nmigratory phase and adult worm s develop directly in the large intestine.  \nInfection is usually trivial, though massive infections can cause rectal prolapse in young children, and a form \nof dysentery is described.   \n \nHookworm  \nThe two species produce indistinguishable thin -walled eggs whi ch hatch in soil. The larvae undergo several \nmoults before infective larvae are produced. These are capable of penetrating unbroken skin, and in this way \nthey gain access to the bloodstream to begin a migratory phase similar to that of ascaris. When they r each the \ngut they attach by their mouthparts to the mucosa of the small intestine.  \nHookworms ingest blood and, moreover, move from site to site in the gut mucosa, leaving behind small \nbleeding lesions. These two facts are responsible for the chief patholog ical manifestation of heavy infection \nwith hookworms: iron deficiency anaemia.  \n \nStrongyloides stercoralis  \nHuman infections arise after penetration of infective larvae through skin and there is a migratory phase \ninvolving the lungs. However, human infection  appears to be restricted to female worms, which attach to the \ngut mucosa and produce eggs that contain fully developed larvae; these hatch within the intestinal lumen so \nthat larvae, not eggs, are found in faecal samples.  \nSymptoms are usually benign.  \n  \nEnterobius vermicularis  ' metadata={'source': 'bio.pdf', 'page': 83}
"
"page_content=' \n This is the common threadworm, which infects children. Adults live in the large intestine and are \noccasionally found in the appendix. Mature, gravid females crawl through the anus at night and lay their \neggs in the peri -anal area. The se eggs contain fully developed larvae. Ingestion of these eggs initiates a fresh \ninfection. Symptoms are restricted to itching (pruritus ani) associated with the deposition of eggs.  \nSince eggs are not discharged by the worm into faeces, faecal examination  is not appropriate in the \nlaboratory diagnosis of the threadworm infection.  \n \nTreatment  \nMost effective are the benzimidazole derivatives, especially albendazole and mebendazole.  \n \n18. Tissue nematodes  \nThis group includes the filarial worms, the Guinea worm (Dra cunculus medinensis) and Trichinella spiralis.  \n \nWuchereria bancrofti  \nThis filarial worm is transmitted by the bite of various species of mosquito throughtout the tropical belt of \nthe world. The larvae invade the lymphatics, usually of the lower limbs, wher e they develop into adult \nworms. Presence of the adult worms causes lymphatic blockage and gross lymphoedema, which sometimes \nleads to the bizarre deformaties associated with bancroftian filariasis, elephantiasis.  \nEmbryonic forms (microfilariae) are libera ted liberated into the bloodstream. Microfilariae remain in the \npulmonary circulation during the day, emerging into the peripheral circulation only at night, to coincide with \nthe bitting habits of the insect vector.  \n \nLoa loa  \nIt is transmitted by biting fli es (Chrysops species). The adult worms live in subcutaneous tissue and wander \nround the body, provoking localized reactions known as Calabar swellings an sometimes migrating across \nthe front of the eye.  \nThe sheath microfilariae of Loa loa exhibit diurnal p eriodicity, so that, unlike those of W. bancrofti, they \nappear in peripheral blood only during the day.  \n \nBrugia malayi  \nCan cause elephantiasis. Microfilaraemia usually shows a nocturnal periodicity.  \n \nOnchocerca volvulus  \nIt is transmitted by species of blac k-fly. Adult worms develop in subcutaneous and connective tissue, and \noften become encapsulated in nodules, which form on bony parts of the body, such as the hip, elbow and the \nhead. The microfilariae are not found in blood, but live in the superficial lay ers of the skin causing itching \nand, in heavy chronic infections, gross thickening of the skin. The eye is commonly invaded by \nmicrofilariae, which may cause corneal and retinal lesions that lead to blindness. The condition is known as \nriver blindness.  \n \nMansonella species  \nThey are transmitted by biting midges. The unsheathed microfilariae appear in the bloodstream and exhibit \nno periodicity. They are generally regarded as non -pathogenic.  \nM. streptocera causes skin infections similar tot hose of O. volvulus.  \n \nTreatment  \nDiethylcarbamazine (DEC) has been used for many years for the treatment of all forms of filariasis. It \neffectively kills microfilariae, but is not reliably lethal to adult worms.  \nSuramin kills the adult worms, but is much more toxic than DEC.  \n  \nDracunculus medinensis  \nThis is the Guinea worm. The infective larvae develop within water fleas and human infection is normally \nacquired through infected drinking water. The larvae penetrate the gut mucosa and grows to maturity in \nconnective tissue.  \nAfter fe rtilzation, the female worm incubates the larvae to maturity and, when ready to give birth, emerges to \nthe skin surface to provoke an intensely irritating blister.  \n ' metadata={'source': 'bio.pdf', 'page': 84}
"
"page_content=' \n Trichinella spiralis  \nTrichinella spiralis has an extremely wide host range. Human infection s are usually acquired by eating \nundercooked pork products. The infected larvae lie dormant in skeletal muscle and are related when the meat \nis digested. Male and female worms develop to maturity attached to the mucosa of the small intestine. The \nlarvae pe netrate the gut wall and migrate to skeletal muscle, where they enter the quiescent phase. Most of \nthe symptoms of trichinosis, which can be severe, even life -threatening, are associated with the migration of \nlarvae.  \n \n19. Trematodes  \nThe flukes are a diverse g roup of worms that share a similar life cycle involving a snail host and, often, a \nsecond intermediate host that provides the vehicle for the transmission of infection.  \n \nLife cycle  \nWhen excreted, trematode eggs often contain a fully developed ciliated orga nism called a miracidium. In \nwater, the miracidium escpes, either through a lid -like operculum in the egg shell, or by osmotic rupture of \nthe egg. The miracidium penetrates the appropriate species of snail and undergoes several stages of asexual \nreproducti on before emerging as a free -swimming body called a cercaria. The cercariae encyst in the muscle \nof fish, crabs. Men become infected by ingesting the encysted metacercariae.  \n \nClonorchis sinensis  \nInfection is acquired from uncooked freshwater fish, notably carp. The metacercariae excyst in the small \nintestine and pass into the bile ducts, where they mature.  \nInfection is commonly asymptomatic, but fibrosis of the bile ducts with impairment of liver function may \noccur in heavy, chronic infections.  \n \nFasciola he patica  \nHuman infections have usually been associated with eating wild watercress from infected sheep pastures. \nThe adult worm can cause biliary fibrosis and obstructive jaundice.  \nUnlike other trematode infections, fascioliasis does not reliably respond to praziquantel, and treatment with \nantihelminthic triclabendazole or the more toxic chlorophenol derivative bithionol may be required.  \n \nParagonimus westermani  \nHuman infection follows ingestion of raw, infected muscle of freshwater crabs and crayfish. The \nmetacercariae penetrate through the gut wall and diaphragm to reach the lung, where they develop to \nmaturity. Occasionally the larvae find their way to the brain. Pulmonary infection usually provokes the \nproduction of sputum, in which the characteristic large  eggs can be found, often associated whith flecks of \naltered blood. Praziquantel is used for treatment.  \n \nIntestinal flukes  \nInfection is often acquired by the habit of opening water chestnuts with the teeth. The adult flukes live \nattached to the wall of the  small intestine, and produce a large number of eggs that resemble those of F. \nhepatica.  \nInfection is usually asymptomatic unless the worm burden is large.  \n \nSchistosoma species  \nHuman infection follows exposure to cercaria in water harbouring infected snail s. The cercariae penetrate the \nskin, often causing a transient dermatitis, called swimmer’s itch. Once in the bloodstream, the schistosomula \nmigrate to the liver, where they develop into mature male and female worms.  \nThe mature worms migrate to the small v eins of the rectum or the bladder. Eggs, which contain a fully \ndeveloped miracidium, are passed through the bladder wall into the urine.  \n \nPathogenesis  \nMost of the serious manifestations of schistosomiasis are associated with the deposition of eggs, with th e \nformation of granuloma and fibrotic lesions of the liver, bladder or other organs. Such effects may herald \nmalignant changes.  \n \nTreatment  ' metadata={'source': 'bio.pdf', 'page': 85}
"
"page_content=' \n Praziquantel is effective against all the human schistosomes and is the drug of choice.  \n  \n20. Cestodes  \n \nTaenia species  \nTaenia saginata, the beef tapeworm, is much more prevalent than the related T. solium, the pork tapeworm. \nHuman infection is acquired by eating raw and undercooked beef or pork conatining the encysted larval \nstage, the cysticercus. The larvae hatch in the sm all intestine, and attach to the mucosal surface. The worm \ngrows backwards from the head. Eggs start to be produced in the uterine canal. This becomes grossly \ndistended as more eggs are produced, so that the fully gravid segments at the end of the worm bec ome \nnothing more than bags full of eggs.  \nEggs are not laid. They are retained within the proglottids, which become detached from the end of the worm \nand are passed with the faeces. Animals become infected by ingesting the eggs.  \nConsidering the size of the worm, infection, is usually remarkably asymptomatic. However, in the case of T. \nsolium, eggs may hatch in the human host and form cysticerci. When the lodge in the brain, they may cause \na serious epileptiform disease, cerebral cysticercosis.  \n \nDiphylloboth rium latum  \nThis is the fish tapeworm. The mature adult worm lays numerous operculate eggs within which a ciliated \nbody called a coracidium develops. This hatches in water and is ingested by the water flea. After a period \ndevelopment, the larva awaits inges tion by a freshwater fish in which it invades the muscle.  \nHuman infection is usually asymptomatic, although a form of pernicious anaemia caused by competition for \ndietary vitamin B12 has been described.  \n \nTreatment  \nNiclosamide or praziquantel is used for tr eatment.  \n \nHymenolepsis nana  \nHymenolepsis nana is only 2 -4 cm long - dwarf tapeworm. It has a very simple life cycle with no known \nintermediate host.  \n \nTreatment  \nInfection is usually asymptomatic; heavy infections can be treated with praziquantel or niclosam ide. \n \nEchinococcus granulosus  \nThis is the tapeworm of the dog and other canine species and usually, humans are an intermediate host.  \nSheep are the usual intermediate host.  \nAfter ingestion of the eggs, larvae hatch in the small intestine, penetrate the gut  mucosa and are carried by \nthe bloodstream to various organs (commonly the liver), where they are filtered out by the capillaries. The \nlarva starts to grow, eventually forming a cystic cavity.  \nThe cyst may die and calcify, but it often continues to grow in exorably, eventually seriously compromising \nthe function of the organ in which it is situated.  \n \nTreatment  \nCysts of E. granulosus can often be removed surgically. Some success has been obtained with benzimidazole \nderivatives, notably albendazole, and with p raziquantel.      ' metadata={'source': 'bio.pdf', 'page': 86}
"
"page_content=' \n CLINICAL MICROBIOLOGY  \n \n1. Etiology and laboratory diagnosis of upper respiratory tract infections  \nUpper respiratory tract infections are infections that occur in the nose, nasopharynx, oropharynx including \ntonsils, paranasal sinuses, middle  ear and conjunctiva.  \nPHYSIOLOGICAL FLORA:  \n- nasal cavity: staphylococcus epidermidis it can also be sterile and rarely contains coryneform rods, \nStaphylococcus aureus and pneumococcus  \n- pharynx: always Neisseria and Streptococci (viridans group), usual hemoph ylus.  \nRhinitis & Nasopharyngitis  \n● virus: the most common is the ―common cold‖ virus or rhinovirus being followed by the coronavirus and \nthen other respiratory viruses.  \n● bacteria: acute infections: usually secondary Staph. aureus, Hemophilus influenza, St reptococcus \npneumonia, Moraxella catarrhalis.  \n    chronic infections: Klebsiella ozaenae, Kl. rhinoscleromatis  \nTreatment: generally no antibiotic is required and even no bacteriological exam if necessary (pus full of \npolymorphonuclears, ↑CRP level - bacter ial infection).  \n \nAcute sinusitis + otitis media  \nusually started by respiratory viruses or S. pneumoniae. Secondary pyogenic infections are due to S. \npneumoniae, H. influenza type B, Moraxella catarrhalis, Staph. aureus, Strep. pyogenesand even anaerobes \nsuch as Bacteroides, Prevotella, Porphyromonas.  \n!Complications: mastoiditis , purulent meningitis  \n \nChronic sinusitis + otitis media and externa  \nSinusitis maxillaris or frontalis chronica : Staph. aureus and genus peptostreptococcus  \nOtitis media chronica: Pse udomonas aeruginosas, Proteus mirabilis  \nOtitis externa acuta: Staph. aureus  \nTreatment: not recommended to perform bacteriological exam in otitis media and sinusitis except when a \nrelevant specimen is available. aminopenicilin or 1st generation cephalospori ns \n \nConjunctivitis  \nusually of viral origin and accompanies acute upper respiratory tract infection  \n- in adenovirus: follicular conjunctivitis, pharyngoconjunctival fever, epidemic hematoconjunctivitis  \n- it can have other origins such as herpetic keratoconjunct ivitis or hemorrhagic conjunctivitis \n(enterovirus)  \nTreatment: local  \nbacterial origin:  \n- acute: suppurative such as with Strep. pneumoniae. S. aureus and in children other causes might be \npossible while inclusion C. trachomatis.  \n- chronic: Staph. aurus, C. trac homatis  \n- allergic  \n \nOropharyngeal infections  \nacute tonsilitis and pharyngitis:  \n- usually viral (rhinovirus, coronavirus, adenovirus, EBV and coxsackievirus - herpangina)  \n- bacterial: acute tonsilitis or tonsillopharyngitis due to Strep. pyogenes, rare but signif icant: N. \ngonorrhoeae + C. diphteria  \nTreatment: bacteriological exam is recommended in all cases including ―typical tonsilitis‖. When \nStreptococcus pyogenes are found - penicilin G  \n!azythromycin + erythromycin should only be used in allergic people. beside s bactriological exam, CRP \nshould also be determined.  \n \n2. Etiology and laboratory diagnosis of pneumonias  \nPhysilogical flora: generally sterile but materials from these sites are often contaminated with upper \nrespiratory tract flora.  ' metadata={'source': 'bio.pdf', 'page': 87}
"
"page_content=' \n 1. acute community acquired pneumonia - in original healthy pople.  \nadults:  there is bronchopneumonia and lobar pneumonia, for which the causative agents can be \nStreptococcus pneumonia Staph. aureus and Hemophylus influenza type B  \nThere is also atypical pneumonia:  mycoplasma pneumoni a, Chlamydia pneumonia and Influenza A.  \nchildren:  bronchopneumonia might be caused by Hemophylus influenza, Strep. pneumonia or Moraxella \ncatarrhalis and in case f newborns Strp. agalactiae or enterobacter. Atypical pneumonia is caused by \nrespiratory virus es (RSV, adenoviruses) but can also be caused by bacteriae (Mycoplasma pneumonia or \nChlamydia pneumonia)    \nIn debilitated individuals:  pneumococci, staphylococci, hemophylus, klebsiella pneumoniae or legionella \npneumophyla.  \nIn more serious immunodeficienc ies: pneumocystis jirovecii, CMV, atypical mycobacteria, nocardia \nasteroides, aspergillus or candida.  \nAfter contact with an animal:  bronchopneumonia: Pasteurella multocida, Francisella tularensis  \n     atypical pneumonia: Chlamydia psittaci and Coxiella bu rnetii (Q fever)  \n2. Acute nosocomial - ventilator associated pneumonia  \nearly (up tp 4th day of hospitalization) is due to community strains of respiratory agents.  \n    Late ( >5th day on) is due to resistant hospital strains  \n3. Subacute and chronic  \naspiration pnu emonia and lung abscesses due to prevotella melanogenica, bacteroides fragilis or \npeptostreptococci. Lung TB or mycobacteriosis due to Mycobacter TB, bovils or atypical.  \n \n3. Etiology and laboratory diagnosis of ear infections  \ncheck question 1  \n \n4. Etiology and la boratory diagnosis of eye infections  \ncheck question 1  \n \n5. Etiology and laboratory diagnosis of gastro -intestinal infections  \nNormal colonic flora: 99% anaerobes (Bacteroides, Fusobacter, Clostridium, Peptostreptococci) + 1% \nEnterobacter (mainly E.coli) and Ent erococci  \nNormal mouth flora: Streptococci viridans, oral Neisseria or Hemophylus of very low pathogenicity such as \nparainfluenza.  \nStomach infection: generally stomach works as sterilization chamber killing most of swallowed microbes by \nmeans of HCl but doe sn’t kill Helicobacter pylori that causes chronic gastritis and peptic ulcers.  \nEnteric fever - Salmonella Typhii, Salmonella Paratyphii A, B and C.  \nListeriosis - Listeria Monocytogenes  \nPeritonitis - generally colonic flora after appendicitis or injury  \nSaml l + large intestine infections . after surgery, during depressed peristalsis bacteria may grow in the \nintestines causing steatorrhea, diarrhoea and malabsorption of vitamins.  \nDiarrhoea: increase in daily amount of stool water  \nDisentery: acute inflammation of colon - abdominal pain and small volume of stool with blood, pus or \nmucous (Shigella or amoeba).  \n1. Diarrheal diseases: - infectious (bacterias, viruses, parasitis...)  \n   - noninfectious (food poisoning)  \n \n6. Etiology and laboratory diagnosis of food poisoning  \n1. Intoxication due to a toxin preformed in food: Cl. perfringens, Bacilus cereus, Cl. botulinum (heat labile \nneurotoxin)  \n2. Intoxication due to infection with an invasive microoganism: Salmonella gastroenteritis, ETEC/EHEC, \nListeria monocytogenes  \n \n7. Etiology and  laboratory diagnosis of liver infections  \n1. Acute cholecystitis: obstruction due to gall stones  \n    Ethiology: intestinal bacteria (E.coli)  \n    Complication: ascending cholangitis  \n2. Chronic cholecystitis  \n    the most dangerous agent is Salmonella Typhii  ' metadata={'source': 'bio.pdf', 'page': 88}
"
"page_content=' \n 3. Granul omatous Hepatitis  \n    Q fever, Tbc, brucellosis  \n4. Parasitic infections of liver  \n   Amoebiasis (liver abscesses), Malaria (life cycle of plasmodia), Leishmaniasis (L. donovani), \nSchistomyasis (eggs of Schistosoma japonium)  \n5. Viral hepatitis  \n     HAV, HBV, HCV, HDV, HEV  \n \n8. Etiology and laboratory diagnosis of acute purulent meningitis  \nPurulent is nearly always of bacterial origin. Generally the doctor has to take a good anamnesis, clinical \ndisease and the laboratory is suspecting for acute purulent meningitis needs  to examine CSF, cytology \n(appearance and number of cells), biochemistry (glc + proteins) and microbiology (microscopy, Ags and \nculture).  \nIn purulent meningitis cells have an incresed number, proteins as well but glucose level is decreased.  \nNewborns: group  B streptococci and Listeria monocytogenes  \nInfants: H. influenza b, Neisseria meningitidisand Strep. penumonia  \nYoung adults: N. meningitidis, Strep. pneumonia  \nAdults: Strep. pneumonia, N. menigitidis  \nElderly: Strep. pneumonia, Listeria Monocytogenes  \n \n9. Etiol ogy and laboratory diagnosis of acute aseptic meningitis  \nAseptic is neraly always of virus origin. In aseptic meningitis, the cells are in increased numbers, so are \nproteins but glucose stays at the same level.  \nThe causative agents can be:  \n- mumps virus - more common before vaccination  \n- enterovirus (echovirus + coxsackievirus)  \n- thick borne encephalitis - highly common in Czech Rep.  \n- rarely some bacteria can also cause it  \nWest Nile virus might also be found.  \nOther european pathogenic arboviruses might be importe d to Czech Rep.  \n \n10. Etiology and laboratory diagnosis of chronic meningitis & brain abscesses  \nChronic meningitis:  \nbacteria - M. tuberculosis  \nMoulds and yeasts - Aspergillus or Cryptococcus neoformans  \nEncephalitis (acute of viral origin):  \nTick borne encephalit is \nHSV  \nAcute brain abscesses (only bacterial):  \nMixed aerobic + anaerobic flora  \nStaphylococcus  \nStreptococcus  \nChronic brain abscesses:  \nbacteria: M. TB, Nocardia Asteroides  \nparasite: Cysticercus cellulosae (T. solium)  \n! Punction or excision for bacteriology, mycology and histology  \n \n11. Etiology and laboratory diagnosis of urinary tract infections  \nIt is the 2nd most common type of infections (after respiratory) -> in adults it is the most common specially \nin females due to shorter urethra.  \n \nCystitis  \n- most common UTI , generally caused by intestinal microflora, ascendent infection.  \n- symptoms: dysuria, pollakiuria (urgent need to pee but peeing just a little bit)  \nPyelonephritis  \n- can be ascendent or hematogenous  \n- EPEK = E. cole, Proteus, Enterobacter and Klabsiella  ' metadata={'source': 'bio.pdf', 'page': 89}
"
"page_content=' \n Urethri tis -> STDs  \nUTIs can be:  \n● non -complicated: generally caused by E. coli (80%), Enterococcus (15%), Proteus mirabilis and the rest is \nother Enterobacter.  \n● accompanying structural abnormalities (e.g.: prostate hypertrophy, urinary stones, pregnancy, cathete r) \n● accompanying functional disorders (vesicouretral reflux, DM...)  \n \n- complicated UTIs are 80% of the tissue caused by EPPEK, enterococcus. Proteus miribilis , \nPseudomonas aeruginosa and the E. coli while the rest is caused by other Enterobacter, Candida.. . \nHow to take a urine sample:  1. through cleaning of genitalia  \n    2. middle stream of urine only  \n    3. use sterile vessel  \n    4. pour urine into a sterile tube  \n    5. if not possible to process it within 2h -> place specimen into 4ºC for 18h.  \nMicrobiolo gists are interested in the kind of microbes prescut in urine sample but also the amount of \nmicrobes present (increased number = UTI; decreased number = contamination)  \n- urine is inoculated on culture media by means of a calibrated loop usually taking 1 μl of urine.   \nCFU = colony forming unit = 1 bacterial /yeast cell  \nType of specimen, \nsymptoms  Type of microbe  Significant number \n(CFU/ml)  \nMiddle stream, symptoms \npresent  Primary urine pathogen  \nDubious urine pathogen  103 \n105 \nMiddle stream, no symptoms  Any 105 \nSuprapubic punction  Any 101 \n \n \n \n \n \n \n \n \nGenerally for urine exam you use blood agar but chromogenic media may also be used (oriented for the most \nfrequent urinary path ogens and their colonies have different colors) and according to requirements further \nmedia might be used.  \n \nPrimary urine pathogens: E.coli + other Enterobacter, Enterococci, S. agalactiae, Staphylococci, yeasts \n(mainly Candida) and Pseudomonas aeruginosa . \n \n12. Etiology and laboratory diagnosis of traditional venereal diseases  \nGonorrhea: caused by Neisseria Gonorrhoeae  \nThey can either be infections of lower parts of urogenital tract, or upper parts of urogenital tract or even \nlocalized infections or, rarel ly, disseminated infections.  \n \n- infections of lower UGT:  \n females: cervicites (most common)  \n males: urethritis  \n- infection of upper UGT:  \n females: salpingitis up to adnexitis (Pelvic inflammatory disease -> sterility)  \n males: epidimymitis  \n- other localized infec tions:  \n females and males: proctitis/pharyngitis/ blennorrhoea neonatorum  \n females: peritonits/perinepatitis  ' metadata={'source': 'bio.pdf', 'page': 90}
"
"page_content=' \n - disseminated infections  \n female and male: skin postulae, joints (purulent arthritis, septic arthritis)  \n \nLab: generally samples are taken from uret hra (males and females) and cervix (in females) and microscopy \nor culture is performed.  \n2 swabs are made, 1 to inoculate directly onto the warmed culture media and another is used to make a film \non the slide.  \nMicroscopy: it is important specially in acute gonorrhoea in males and symptomatic gonorrhoea in females.  \nMedia: combine ChA + medium with antibiotics  \nBiochemistry: oxidase +, glucose+, maltose - \nTherapy: many strains are now resistant to penicilin and tetracyclines so ceftriaxone is used.  \n \nSyphilis  \n- early syphilis: primary . secondary - latent - tertiary  \nTreatment: penicillin (one dose of benzathin penicillin in 1ry syphilis, 3 times after a week in 3rd syphilis of \nbenzathin penicillin)  \nLab: direct detection: darkfield microscopy from exudative lesions (ulcus durum)  \n      indirect detection: nontreponema test (cardiolipin Ag) - RRR (fast, cheap, early positive, reflects activity) \nor treponema test - MHA -TP, ELISA, WB (sensitive, more expensive more specific)  \n \nHemophylus Ducreyi  \n- causes ulcus molle, more  common in tropical countries  \n- it causes genital ulcerations (more easy to catch HIV) and purulent lymphadenitis  \n- cultured on enriched media (ChA + suplements)  \n \nChlamydia Trachomatis  \n- causes lymphogranuloma venereum, more common in tropical + subtropical carriers.  \n- purulent lymphadenitis with fistulae + scarring devastating pelvic region in females  \n- serology - CFT (complement fixation test) with Chlamydia antigen  \n \n13. Etiology and laboratory diagnosis of non -specific sexually transmitted diseases  \nPapillomavi rus \n- causes urogenital warts in both males and females  \n- genotypes 16, 18 and 32 causes infection of the cervix in women leading to carcinogen  \n- cultivation is impossible and diagnosis in performed mollecular methods  \nChlamydia Trachomatis, serotypes D to K  \n- male s: nongonococcal or post gonococcal urethritis  \n- females: cervicitis ->ophtalmia neonatorum  \n- treatment: macrolides + tetracyclines  \n- laboratory: detection of Ag or DNA  \nYeasts - Candida albicans  \n- female: vaginal mycosis  \n- treatment: clotrimazole or fluconazole  \n- laboratory: microscopy and cultivation (Soboraud agar)  \nTrichomonas vaginalis  \n- females: vaginitis  \n- treatment: metronidazole (both partners must be treated)  \n- lab diagnosis: microscopy (wey mount + giemsa)  \n           culture on special media  \nMycoplasmas - Mycoplasma  Hominis + Ureoplasma ureolyticum  \n- male and female: urethritis  \n- female: postpartum fever  \n- treatment: macrolides  \n- laboratory: direct only  \nHSV -2 ' metadata={'source': 'bio.pdf', 'page': 91}
"
"page_content=' \n - female and male: herpes genital that can be primary or recurrent  \n- treatment: acyclovir  \n- laboratory: detection of DNA on  PCR  \n    isolation on cell culture  \nHCV  \n- ♂ & ♀: viral hepatitis C, acute and chronic  \n- Therapy: pegylated interferon + ribavirin Lab. dg: detection of viral RNA detection of antibodies (anti -\nHCV)  \n \nHIV \n- laboratory: detection of antibodies, antigens and viral load  \n- treatement: HAART  \n \n14. Etiology and laboratory diagnosis of wound  infections  \nCommon superficial injuries - Staphylococcus aureus, Streptococcus pyogenes, β hemolytic streptococci  \n! in case there are foreign bodies in the wound or deeper stab wounds consider Cl. Tetanii  \nSevere contused w ounds  \n- agents of Clostridium myonecrosis (Cl. perfrigens, Cl. histiolyticum)  \n- gas gangrene or malignant edema  \n- Clostridium tetani, Staphylococcus aureus, Strep. pyogenes  \nWounds susteined in water  \n- fresh water: Pseudomonas aeruginosas and Aeromonas aerophilas  \n- salt water: Vibrio parahemolyticus, Mycobacter marinum (also in tanks + aquarius)  \nInjuries susteined on tropics (mainly feet)  \n- soil Nocardia (Dermatophilus congolensis, Rhodococcus equi)  \n- Atypical mycobacter (Mycobacter ulcerans, Mycobacterium haemophilus)  \n- Micromycetes (Sporothrix schenckii, Paracoccidioides brasiliensis)  \nSurgical wounds  \n- Staphylococcus aureus, Staphylococcus epidermiditis  \nBurns  \n- Pseudomonas aureginosa, Staphylococcus aureus  \nMan inflicted bites  \n- members of oral microflora like anaerobes, S. aure us, oral Streptococci  \nAnimal bites  \n- Pasteurella multocida (dogs + cats), Staphylococcus aureus (any animal)  \nOther injury by animals  \n- Francissella tularensis, Bacillus anthracis, Burkholderia mallei  \n \n15. Etiology and laboratory diagnosis of sepsis  \nBacteriemia    x   Sepsis  \nPresence of bacteria in blood   Suspect or proved infection + systemic inflammatory response   \n   syndrome (SIRS) -> interaction of microbial products with     \n macrophages releases a lot of cytokines ( fever, accelerates      pulse \nand breath ing, leukocytosis)  \nSevere sepsis: sepsis + organ dysfunction (metabolic acidosis, confusion...)  \nSeptic shock: severe sepsis + hypotension (despite adequate of fluids)  \nWound originated sepsis: Staphylococcus aureus, Sreptococcus pyogenes  \nUrosepsis: mainly E .coli but also Proteus mirabilis  \nAbdominal sepsis: Anaerobes + facultative anaerobes (E.coli + P.mirabilis)  \nFulminant sepsis: Neisseria meningitides (death in 24h) also S. pyogenes, Yersinia pestis  \nTreatment: At ICU only!  \n- control of infection :  \n1. antibiotics  (first broad spectrum -> oriented)  \n2. removal of all infected tissues or devices  \n- support of breathing and hemodynamics (artificial ventilation of O2, fluids...)  \n ' metadata={'source': 'bio.pdf', 'page': 92}
"
"page_content=' \n 16. Etiology and laboratory diagnosis of bone & joint infections  \n \nOSTEOMYELITIS  \nIt is the name given to infections of the bone. It may be either acute or chronic in nature.  \n \nAcute osteomyelitis...  \nOver 90% of acute osteomyelitis cases are caused by Staphylococcus aureus but Streptococcus pyogenes and \nHaemophilus influenzae may also cause  acute infection of the bone although infection with Haemophilus \ninfluenzae is rare due to the widespread use of Hib vaccine.  \nBone is infected by bacteria circulating in the blood stream, which seed the infection. Typically, acute \nosteomyelitis affects the  growing points of long bones since blood flow is sluggish through these regions. \nThis allows opportunity for bacteria in the circulation to settle and to set up an infection at these sites. \nAlthough rare, it is most often seen in children and adolescents who are growing rapidly. Sometimes is may \nbe caused by spread of infection from adjacent tissues and in these cases the infection is likely to be \npolymicrobial.  \n \nChronic osteomyelitis..  \nThe bacterium Mycobacterium tuberculosis is the most common cause of c hronic osteomyelitis. This \ncondition results from the secondary spread from a pulmonary infection. Unlike acute osteomyelitis, chronic \nosteomyelitis caused by mycobacterium tuberculosis is most likely to affect the vertebrae. Other bones, \nincluding those o f the hip and knee and bones of the hands and feet may be involved in chronic \nosteomyelitis. Pressure on the spinal cord caused by chronic osteomyelitis may be sufficient to cause \nparalysis below the affected region.  \nOther bacteria causing chronic osteomye litis include salmonellas and other coliform bacteria, pseudomonas \naeruginosa and spirochaete Treponema pallidum. T. Pallidum may cause bone lesions in children suffering \nfrom congenital syphilis.  \n \nLab ID  \nIn Acute osteomyelitis bone culture is the definiti ve test. Open bone biopsy has the highest detection rate but \nculture can be performed on samples obtained by needle aspiration. Any pus obtained should be collected in \na sterile syringe or container and sent to the lab for urgent Gram staining. Joint fluid  can also be collected for \nculture. In biochemical tests the ESR and CRP are elevated and the white cell count is increased but the \ncount rarely rises above 15,000/mm3.  \nIn chronic osteomyelitis bone biopsy performed through non -infected soft tissue provide s the best specimen. \nBlood cultures are rarely positive. Raised ESR/CRP may be the only alteration in lab values in chronic \nosteomyelitis.  \nSupporting evidence may be obtained from x -rays and various other radiological techniques.  \n \nARTHRITIS  \nIn arthritis, t he affected joint becomes swollen, painful and red. This may be a direct consequence of \ninfection of the joint or because of an immunological reaction. In septic arthritis, joints become infected by \nbacteria that spread either through the bloodstream or th rough direct inoculation of the joint, for example \nthrough trauma.  \nThe most common cause of septic arthritis in otherwise healthy joints is Staphylococcus aureus. Salmonellas \nand Haemophilus influenzae may cause septic arthritis in children. Septic arthrit is is also a rare complication \nof gonorrhoea and is most often seen in women who otherwise have an asymptomatic Neisseria gonorrhoeae \ninfection. Although septic arthritis typically affects one joint, a monoarthritis, in gonococcal arthritis several \njoints may be affected simultaneously; it is polyarthritis. Arthritis may occasionally be caused by \nMycobacterium tuberculosis. This chronic condition typically affects the hip or the knee joints.  \nJoints may become inflamed because of an immunological reaction to  infection elsewhere in the body. A \nnumber of viruses cause reactive arthritis through generation of circulating immune complexes. Hepatitis B \nvirus and rubella virus are notable causes of reactive polyarthritis. Rheumatic fever is a rare complication of \ninfection caused by streptococcus pyogenes. It is an immunological disease affecting joints and endothelial \ntissues. Streptococcal antigens that cross -react with host tissues provoke an immune response following \ninfection. These initiate the damage seen in rheumatic fever.  \n \nLab ID  ' metadata={'source': 'bio.pdf', 'page': 93}
"
"page_content="" \n Several lab tests are used to diagnose infectious arthritis. The definitive test involves culturing the fluid from \nthe involved joint after aspiration or incision and drainage. Gram stains are often unreliable, although they \nprovid e initial clues. Synovial fluid analysis usually reveals a turbid fluid with leukocyte counts greater than \n100,000 mm3 in 30 -50% of cases. In bacterial arthritis, the level of polymorphonuclear leukocytes often \napproaches 90%. Low joint fluid glucose level s and high lactate levels are indicative of septic arthritis, but \nare non specific. Peripheral blood leukocyte counts are usually elevated in children, but are often within \nnormal limits in adults. Radiography may show joint space widening and soft tissue swelling in infections \nmore than 2 weeks old.  \n \n17. Etiology and laboratory diagnosis of skin infections  \nPrimary skin infection  \n- acute bacterial  \nacne vulgaris, carbunculus nuchae, erysipelas, folliculitis, furuncles, impertigo, paranychium  \n- chronic bacteria  \nactinomycosis, skin granulomas, leprosy, lupus vulgaris, chronic subcutaneous abscess  \nSecondary skin infection  \ndecubitus, trophic ulcer, infected atheroma, infected intertrigo, infected wounds  \nSystemic bacterial infections  \nRoseola, disseminated gonorrhoea, erythema migrans, infected endocarditis, meningococcemia, scarlet fever, \nSSSS (Staph. Skin Scalded Syndrome), toxic shock syndrome, syphilis  \nSuperficial mycosis, mucocutaneous mycosis, cutaneous mycoses, subcutaneous mycoses, suppurative skin \nmycoses  \nSkin symptoms in viral diseases : morbillivirus, rubellavirus, erythema infectiorum  \n \n18. Etiology and laboratory diagnosis of immunodeficiencies & opportune infections  \nImmunodeficiency disorders involve malfunction of the immune system, resulting in infections t hat develop \nand recur more frequently, are more severe, and last longer than usual.  \n-lasting serious disorder (such \n People usually have frequent, unusual, or unusually severe \nncy based on symptoms and do blood tests to identify the \n transplantation may \nbe done.  \nImmunodeficiency disorders impair the immune system's ability to defend the body against foreign or \nabnormal cells that invade or attack it (such as bacteria, viruses, fungi, and cancer cells). As a result, unusual \nbacterial, viral, or fungal infections and rare cancers may develop.  \nThere are two types of immunodeficiency disorders:  \n Congenital (primary): These disorders are present at birth and are usually hereditary. They typically \nbecome evident during infancy or childhood. All are relatively rare.  \n Acquired (secondary): These disorders develop later in life and often result from  use of a drug or from \nanother disorder, such as diabetes or human immunodeficiency virus (HIV) infection. They are more \ncommon than congenital immunodeficiency disorders.  \nSome immunodeficiency disorders shorten life span. Others persist throughout life bu t do not affect life \nspan, and a few resolve with or without treatment.  \n \nCauses  \nCongenital immunodeficiency: These disorders are caused by a genetic abnormality (often X - linked -only \nboys are affected). As a result, about 60% of people with congenital immu nodeficiency disorders are male.  \nCongenital immunodeficiency disorders are classified by which part of the immune system is affected:  \n \n \nvarious immune functions, such as killing bacteria and other foreign cells and making foreign cells easier for \nother immune cells to identify and ingest. The affected component of the immune system  may be missing, \nreduced in number, or abnormal and malfunctioning. Problems with B cells are the most common congenital \nimmunodeficiency disorders, accounting for more than half.  "" metadata={'source': 'bio.pdf', 'page': 94}
"
"page_content="" \n Acquired immunodeficiency disorders:These most commonly result from drugs (m ainly \nimmunosuppressants, which are used to treat serious disorders). Immunosuppressants are used to \nintentionally suppress the immune system. For example, some are used to prevent rejection of a transplanted \norgan or corticosteroids, a type of immunosuppr essant,  are used to suppress inflammation due to various \ndisorders, such as rheumatoid arthritis.  However, immunosuppressants also suppress the body's ability \nto fight infections and perhaps to destroy cancer cells. Chemotherapy and radiation therapy can also suppress \nthe immune system, sometimes leading to immunodeficiency disorders.  \nImmunodeficiency disorders may result from almost any prolonged serious disorder. For example, diabetes \ncan result in an immunodeficiency disorder because white blood cells d o not function well when the blood \nsugar level is high. Human immunodeficiency virus (HIV) infection results in acquired immunodeficiency \nsyndrome (AIDS), the most common severe acquired immunodeficiency disorder.  \nUndernutrition —whether of all nutrients or  only one —can impair the immune system. When undernutrition \ncauses weight to decrease to less than 80% of recommended weight, the immune system is often impaired. A \ndecrease to less than 70% usually results in severe impairment.  \n \nSymptoms  \nPeople with an im munodeficiency disorder tend to have one infection after another. Usually, respiratory \ninfections develop first and recur often. Most people eventually develop severe bacterial infections that \npersist, recur, or lead to complications. For example, sore thr oats and head colds may progress to pneumonia. \nHowever, having many colds does not suggest an immunodeficiency disorder.  \nInfections of the skin and the membranes lining the mouth, eyes, and digestive tract are common. Thrush, a \nfungal infection of the mout h, may be an early sign of an immunodeficiency disorder. Sores may form in the \nmouth. Ear infections and skin infections by bacteria or viruses are also common. Bacterial infections (for \nexample, with staphylococci) may cause pus -filled sores to form (pyod erma). Warts (caused by viruses) may \nform.  \nMany people lose weight.  \nInfants or young children may have chronic diarrhea and may not grow and develop as expected (called \nfailure to thrive). The earlier symptoms begin in children, the more severe the immunod eficiency.  \nOther symptoms vary depending on the severity and duration of the infections.  \n \nDiagnosis  \nDoctors must first suspect that an immunodeficiency exists. Then they do tests to identify the specific \nimmune system abnormality.  \nDoctors suspect immunodef iciency when a severe or an unusual infection recurs often or when an organism \nthat normally does not cause severe infection (such as Pneumocystisor cytomegalovirus) causes severe \ninfection. The results of a physical examination may also suggest immunodefi ciency. Rashes, hair loss, \nchronic cough, weight loss, and an enlarged liver and spleen are often present. Lymph nodes and tonsils may \nbe extremely small in some forms of immunodeficiency, whereas in other types the lymph nodes may be \nswollen. Certain symp toms may suggest a particular disorder to doctors.  \nTo help identify the type of immunodeficiency disorder, doctors ask at what age the person began to have \nrecurring or unusual infections. Infections in infants younger than 6 months usually indicate an abn ormality \nin T cells. Infections in older children usually indicate an abnormality in B cells and antibody production. \nThe type of infection may also help doctors identify the type of immunodeficiency disorder.  \nDoctors ask the person about risk factors, suc h as diabetes, use of certain drugs, exposure to toxic \nsubstances, and the possibility of having close relatives with immunodeficiency disorders (family history). \nThe person is asked about past and current sexual activity and use of intravenous drugs to de termine whether \nHIV infection could be the cause.  \nTests: Laboratory tests are needed to confirm the diagnosis of immunodeficiency and to identify the type of \nimmunodeficiency disorder. A blood sample is taken and analyzed to determine the total number of w hite \nblood cells and the percentages of each main type of white blood cell. The white blood cells are examined \nunder a microscope for abnormalities. Antibody levels, the number of red blood cells and platelets, and the \nlevels of complement proteins are det ermined. If any results are abnormal, additional tests are usually done.  \nSkin tests may be done if the immunodeficiency is thought to be due to a T -cell abnormality. The skin test \nresembles the tuberculin skin test, which is used to screen for tuberculosis . Small amounts of proteins from \ncommon infectious organisms such as yeast are injected under the skin. If a reaction (redness, warmth, and \nswelling) occurs within 48 hours, the T cells are functioning normally. No reaction suggests a T -cell \nabnormality.  "" metadata={'source': 'bio.pdf', 'page': 95}
"
"page_content="" \n People whose families are known to carry a gene for a hereditary immunodeficiency disorder may wish to \nhave genetic testing to learn whether they carry the gene for the disorder and what the chances of having an \naffected child are. Talking with a genetic co unselor before testing is helpful. Several immunodeficiency \ndisorders, such as X -linked agammaglobulinemia, Wiskott -Aldrich syndrome, severe combined \nimmunodeficiency, and chronic granulomatous disease, can be detected in a fetus by testing a sample of the  \nfluid around the fetus (amniotic fluid) or the fetus's blood (prenatal testing). Such testing may be \nrecommended for people with a family history of an immunodeficiency disorder when the mutation has been \nidentified in the family.  \nOpportunistic infections : Infections that take advance of the debility of the immune system and in normal \nindividuals do not have a clinical manifestation.  \nCandidiasis  \nHerpes Zoster – Generally constitutes one of the first clinical associations to HIV infection. The clinical \ndiagnosis is done by the observation of cutaneous lesions over the nerve tracks (which can or not be \naccompanied by pain or hemorrhagic process).  \nPneumocytis carinii – see question D9  \nTB (pulmonary) – Pulmonary tuberculosis (TB) is a contagious bacterial infe ction that mainly involves the \nlungs, but may spread to other organs. It is caused by the bacteria Mycobacterium tuberculosis (M. \ntuberculosis). You can get tuberculosis by breathing in air droplets from a cough or sneeze of an infected \nperson. he primary stage of the disease usually doesn't have symptoms.  \nWhen symptoms do occur, they may include:  \n \n  \n \n  \n  \nCerebral toxoplas mosis - Toxoplasmosis is an infectious disease caused by the one -celled protozoan parasite \nToxoplasma gondii. Can be fatal. Cats, the primary carriers of the organism, become infected by eating \nrodents and birds infected with the organism. When symptoms do  occur, they may include:  \n \n  \n  \nVisceral leishmaniose - also known as kala -azar, black fever, and Dumdum fever, is the most severe form of \nleishmaniasis. Leishmaniasis is a disease caused by protozoan paras ites of the Leishmania genus. The \nclinical symptoms are ferver, asthenia, weight loss, anemia, change in hepatic functions.  \n \n19. Etiology and laboratory diagnosis of congenital & neonatal infections  \nCongenital infections are infections that occur prenatall y and neonatally.  \nInfections can either be perinatal (closely before and during delivery) and postnatal (up to 4 weeks of life).  \nThese are generally caused by agents unusual in older children.  \nFetuses are generally protected by the placenta and amnion, the  maternal IgG (actively transported through \nplacenta, IgG against capsular polysaccharides are active only up to 3 months after delivery and against \nviruses up to 12 -15 months) and colostral IgA.  \nGravity of the affliction is generally the highest in 1st tr imester when being able to cause abortion!  \n "" metadata={'source': 'bio.pdf', 'page': 96}
"
"page_content=' \n Agent  Trimester  Congenital \ndefects  Postnatal \npersistence  \n1 2 3 \nT. pallidum  - ✓ ✓ ✓ ✓ \nL. \nmonocytogenes  - - ✓ - - \nRubellavirus  ✓✓ ✓ - ✓ ✓ \nCMV  ✓ ✓ ✓ ✓ ✓ \nParvovirus  ✓/ ✕ ✓ ✓ / ✕ - - \nVZV ✓ - - ✓ / ✕ ✓ \nHSV    - ✓ \nToxoplasma \ngondi  ✓ /✕ ✓ ✓✓ ✓ ✓ \n \n \n \nDiagnosis: prenatal infection  \nmother should be examined for syphilis and toxoplasmos is. Newborns should have their IgM examined \n(antibodies aren’t their mother’s since they cannot pass through placenta) or if possible direct detection \nshould be done (CMV in urine).  \nTreatement: for the mother: penicillin for syphilis and spiramycin in toxo plasmosis  \nPrevention: healthy mother  \nInfections proceeding more severelly in pregnancy  \n- Malaria, Virus Hepatitis, Influenza (during pandemics), Polyomyelitis, UTIs (pressure of ureter), \nCandidosis and Listeriosis.  \n- Agents that might activate themselves in pr egnancy: CMV, JC and BK virus, HSV -2, EBV  \nPerinatal Infections  \n- during delivery  \n- Chl. trachomatis D -K, E.coli and other enteric rods, N. gonorrhoea, Listeria monocytogenes, H. \ninfluenza, Mycoplasma hominis, Candida albicans, HSV -2 -> Agents originating in v agina, cervix or \nrectum  \nPostnatal infections  \nfrom mother (group β Streptococci, Staph. aureus, Mycobacter Tb, CMV and HIV)  \n \n20. Etiology and laboratory diagnosis of nosocomial (hospital) infections  \nNosocomial = hospital aquired = NIs 5% of patients gets this in connection with stay in medical instit ution  \nExogenous Source – other patients, environment, personnel(mostly neglect of washing hands)  \nEndogenous - From the patient  \n40% higer death rate Longer hospitalization More medicines 1/3 can be avoided  \n1.UTIs – from catheters about 40% 2.RTIs – about 20 %  \nEarly respirator -assosciated pneumonia (early VAP) Late respiratory -assosciated pneumonia: aspiration \npneumonia, other respiratory infections  \n3.Purulent infections in surgical wounds – about 20 %  \n4.Blood -stream infections – sepsis from iv - catehers 1 5% \nEtiology: E. coli 25% , other enteric bacs  20%, Enterococci 15%, P. aeruginosa 10%, Other G( -) non -\nfermenting rods 10%, Yeasts 5%  ' metadata={'source': 'bio.pdf', 'page': 97}
"
"page_content=' \n Etiology of respiratory: early VAP  S. aureus 25%, Str. Pneumoniae 20%, Heamophilus influenzae 15%, \nEnteric bacs  10%, other aerobic 5%, Anaerobes 1%,  \nMonomicrobial etiology: agents originate in community  \nEtiology of respiratory: late VAP  G- non-fermenting rods 40%, Enteric bacteria 30%, Staphs, mainly aureus \n20%, Yeasts 5%  \nPolymicrobial origin – hospital origin  \nEtiology Aspira tion: pneumonia same as in VAP but more G - rods, non -fermenting rather than enteric  \nPneumonia in febrile neutropenia  \nIntial days: G+ cocci(staphs and peneumococci) occure 2x more than G -rods(enteric bacteria & \npseudomonads)  \nLater: fewer G+ cocci, more Cand idae and aspergilli Allogenic transplantation of BM: mainly CMV, also \nCandida  \nSurgical wounds (depend on type of surgery) S.aureus Coagulase( -) staphs Str. pyogenes Enteric bacteria \nE.coli Bacteroids, prevotellae, peptostreptococci G - non fermenting rods C\ngangrene  \nEtiology of sepsis by i.v. catheter Coagulase ( -) staphylococci > 50% Because of biofilm Enterococci – \nbecause of cephalosposrins S. aureus  \nEnteric bacs E.coli, Klebsiella Pseudomaonas aeruginosa Acinteobacter spp. Candi da spp.  \nEtiology of nosocomial VIRAL infections: Influenza virus – infants and elderly; RSV – newborns and \nsuckling infants; Adenoviruses – ophthalmic wards; CMV – after cytotoxic treatment; Rubella virus – \nchildren (vaccination available); Rotaviruses – children mainly; VHB – risk elevated if longer \nhospitalization; HIV – in developing countries mostly  \nRisk factors: Age – older & newborns; Treatment – cytotoxic drugs, steroids, antibiotics Underlying disease: \nHepatic, DM, Cancer, Renal failure, Skin disord ers, Neutropenia, Trauma – including surgery  \n4 main strategies to prevent NIs  \n1. Elimination of sources of infection: Sterile instruments, dressings, mediacaments and iv -fluids, screen \nblood for infection, clean linen, uncontaminated food, avoid contact wi th infected staff – carriers and acutely \nill \n2. Break chain of infection – disinfection, hygiene, isolation  \nFacilities: ventilation systems & air flow ( legionella in air condition, aspergilli in building work). Water \nsystems – hot water – legionella. Isolat ion of patients – keep susceptible from contaminated people: aseptic \nbehaviour of staff, wash hands  \n3. Improve host resistance:  \nImmunization: influenza in elderly, Pneumococcal infections before transplant or splenectomy, VHB if \nseronegative before haemodial ysis, Varicella  \nATB prophylaxis: ―dirty‖ surgery, ―super clean surgery‖ orthopaedics and neurosurgery.  \nRedu ce postoperative risk of infections: Correct operating technique, care of invasive devices and iv -fluids, \ncorrect nursing techniques, pressure sores, physiotherapy  \n4. Investigating hospital infection  \nSurveillance: monitoring allows early recognition, investi gation of outbreaks, epidemiological and \nmicrobiological, establish procedures for this.  ' metadata={'source': 'bio.pdf', 'page': 98}
"
"page_content='Department of CSE                                                                                                                      Page 1 of 26 \n UNIT – I \n \nCloud  Computing  Fundamentals:  Definition  of Cloud  computing,  Roots  of Cloud  Computing, \nLayers and Types of Clouds, Desired Features of a Cloud, Cloud Infrastructure  Management,  \nInfrastructure  as a Service  Providers,  Platform  as a Service  Providers.  Computing  Paradigms:  \nHigh -Performance  Computing,  Parallel  Computing,  Distributed  Computing,  Cluster  Computing,  \nGrid Computing.  \n \nIntroduction  to Cloud  Computing:  \nWhat  is the cloud:  ""The  cloud""  refers  to servers  that are accessed  over the Internet,  and the \nsoftware  and databases  that run on those  servers.  Cloud  servers  are in data centres  all over the \nworld.  By using  cloud  computing,  users  and companies  do not have to manage  physical  servers  \nthemselves  or run software  applications  on their own machines.  \n \n \n \n \nThe cloud enables users to access the same files and applications from almost any device,  because  \nthe computing  and storage  takes  place  on servers  in a data centre,  instead  of locally  on the user \ndevice.  Therefore, a  user can log into  their Instagram  account  on a new phone  after their old \nphone breaks  and still find their old account in place, with  all their photos,  videos,  and \nconversation  history.  It works  the same  way with cloud  email  providers  like Gmail  or Microsoft \nOffice 365, and  with cloud  storage providers  like Dropbox or Google  Drive.  \n \nFor businesses,  switching  to cloud  computing  removes  some  IT costs  and overhead:  for instance, \nthey no  longer  need to update and  maintain  their own servers,  as the  cloud  vendor  they are using \nwill do that. This especially makes an impact for small businesses that may not  have been  able to \nafford  their own internal  infrastructure  but can outsource  their infrastructure needs affordably  \nvia the cloud. The cloud can also  make it easier for companie s to operate internationally, because \nemployees and customers can access the same files and  applications  from  any location.  \n \nDefinition  of Cloud  Computing:  \nThe term “Cloud Computing” refers to services provided by the cloud that is responsible for  \ndelivering of computing services such as servers, storage, databases, networking, software,  \nanalytics,  intelligence,  and more,  over the Cloud  (Internet).  \n' metadata={'source': 'ccpdf.pdf', 'page': 0}
"
"page_content='Department of CSE                                                                                                                      Page 2 of 26 \n  \nCloud  computing  applies  a virtualized  platform  with elastic  resources  on demand  by provisioning \nhardw are, software,  and data sets dynamically  \n \n \nCloud  Computing  provides  an alternative  to the on-premises  data center.  With  an on- premises  \ndata center,  we must  manage  everything,  such as purchasing  and installing  hardware, \nvirtualization, installing the operating system, and any other required applications,  setting  up the \nnetwork,  configuring  the firewall,  and setting  up storage  for data.  After  doing  all the set-up, we \nbecome  responsible  for maintaining  it through  its entire  lifecycle.  \n \nHowever, if we choose Cloud Computing, a cloud vendor is responsible for the hardware  purchase \nand maintenance. They also provide a wide variety of software and platform as a  service. We can \ntake any required services on rent. The cloud computing services are charged  based on usage.  \n \n \nThe cloud  environment  provides  an easily  accessible  online  portal  that makes  handy  for the \nuser to manage the compute, storage, network, and application resources. Some of the cloud  \nservice providers  are in the following  figure.  \n \n' metadata={'source': 'ccpdf.pdf', 'page': 1}
"
"page_content=""Department of CSE                                                                                                                      Page 3 of 26 \n  \n \n \n \nAdvantages  of cloud  computing:  \n1. Cost:  It reduces  the huge  capital  costs  of buying  hardware  and software.  \n2. Speed:  Resources  can be accessed  in minutes,  typically  within  a few clicks.  \n3. Scalability:  We can increase or decrease  the requirement  of resources  according to  the \nbusiness  requirements.  \n4. Productivity: While using cloud computing, we put less operational effort. We do not  \nneed to apply patching, as well  as no need to maintain hardware and software. So, in  this \nway,  the IT team  can be more  productive  and focus  on achieving  business  goals.  \n5. Reliability: Backup and recovery of data are less expensive and extremely fast for  \nbusiness  continuity.  \n6. Security: Many cloud vendors offer a broad set of policies, technologies, and controls  that \nstrengthen  our data s ecurity.  \nCloud  computing  shares  characteristics  with:  \n \n1. Client–server  model —Client–server  computing  refers  broadly  to any distributed  \napplication  that distinguishes  between  service  providers  (servers)  and service  \nrequestors  (clients).  \n2. Grid  computing —A form  of distributed  and parallel  computing,  whereby  a 'super  \nand virtual  computer'  is composed  of a cluster  of networked , loosely  coupled  \ncomputers  acting  in concert  to perform  very large  tasks.  \n3. Fog computing —Distributed  computing  paradigm  that provides  data,  compute,  storage  \nand application  services  closer  to the client  or near-user edge devices,  such as network  \nrouters.  Furthermore,  fog computing  handles  data at the network  level,  on smart  devices  \nand on the end-user client -side (e.g.,  mobile  devices),  instead  of sending data  to a remote  \nlocation  for processing.  \n4. Mainframe computer —Powerful  computers used  mainly  by large organizations for  \ncritical  applications,  typically  bulk data processing  such as census;  industry  and \nconsumer  statistics;  police  and secret  intelligence  services;  enterprise  resource  planning;  \nand financial  transaction  processing.  \n5. Utility  computing —The packaging  of computing  resources,  such as computation  and \nstorage,  as a metered  service  similar  to a traditional  public  utility,  such as electricity.  \n"" metadata={'source': 'ccpdf.pdf', 'page': 2}
"
"page_content='Department of CSE                                                                                                   P age 4 of 26 \n 6. Peer -to-peer—A distributed architecture without  the need  for central coordination.  \nParticipants  are both suppliers  and consumers  of resources  (in contrast  to the \ntraditional  client -server  model).  \n7. Green  computing —Study  and practice  of environmentally  sustainable  computing  or \nIT. \n8. Cloud  sandbox—A live, isolated  computer  environment  in which  a program,  code or \nfile can run without  affecting  the application  in which  it runs.  \n \nCharacteristics  of Cloud  Computing  \n1. Agility  for organizations  \n2. Cost reductions,  Centralization  of infrastructure  in locations  with lower  costs.  \n3. Device  and location  independence,  which  means  no maintenance,  required.  \n4. Pay-per-use means  utilization  and efficiency  improvements  for systems  that are often  \nonly 10–20% utilized.  \n5. Performances  are being  monitored  by IT experts  i.e., from  the service  provider  end. \n6. Productivity  increases  which  results  in multiple  users  who can work  on the same  data \nsimultaneously.  \n7. Time  may be saved  as information  does not need to be re-entered  when  fields  are \nmatched  \n8. Availability  improves  with the use of multiple  redundant  sites \n9. Scalability and elasticity via dynamic (""on -demand"") provisioning of resources on a  fine-\ngrained, self -service basis in near real-time without users having to engineer for  peak  \nloads.  \n10. Self-service  interface.  \n11. Resources  thatare  abstracted  or virtualized.  \n12. Security  can improve  due to centralization  of data \n \nThe National  Institute  of Standards  and Technology\'s  definition  of cloud  computing  \nidentifies  ""five  essential  characteristics"":  \n1. On-demand  self-service.  \n2. Broad  network  access.  \n3. Resource  pooling.  \n4. Rapid  elasticity.  \n5. Measured  service.  \n \nROOTS  OF CLOUD  COMPUTING  \nWe can track the roots of clouds computing by observing the advancement of several  \ntechnologies,  especially  in hardware  (virtualization,  multi -core chips),  Internet  \ntechnologies  (Web  services,  service -oriented  architectures,  Web  2.0),  distributed  \ncomputing  (clusters,  grids),  and systems  management  (autonomic  computing,  data  center  \nautomation).  Figure  1.1 shows  the convergence  of technology  fields  that \nsignificantly  advanced  and contributed  to the advent  of cloud  computing.  ' metadata={'source': 'ccpdf.pdf', 'page': 3}
"
"page_content='Department of CSE                                                                                                   P age 5 of 26 \n The emergence of cloud computing itself is closely linked to the maturity of such  \ntechnologies. We present a closer look at the technologies that form the base of cloud  \ncomputing,  with the aim of providing  a clearer  picture  of the cloud  ecosystem.  \n1. From  Mainframes  to Clouds  \nWe are currently experiencing a switch in the IT world, from in -house generated  \ncomputing  power  into utility -supplied  computing  resources  delivered  over the \nInternet as  Web services. This trend is like what occurred about a century ago  when \nfactories, which  used  to  generate  their  own electric  power, realized that it  is was \ncheape r just plugging  their  machines  into  the  newly  formed  electric  power  grid.  \nComputing delivered as a utility can be defined as “on demand delivery of  \ninfrastructure,  applications,  and business  processes  in a security -rich,  shared,  \nscalable,  and based  computer  environment  over  the Internet  for a fee”  \n \n2. SOA,  Web  Services,  Web  2.0,  and  Mashups  \nThe emergence  of Web  services  (WS)  open  standards  has significantly  con- tributed \nto advances  in the  domain  of software integration.  Web  services  can  glue together \napplications running on different messaging product plat - forms,  enabling \ninformation from one application to be made available to others, and  enabling  \ninternal  applications  to be made  available  over the Internet.  \nWS standards  have  been  created  on top  of  existing  ubiquitous  technologies \nsuch as HTTP and XML, thus providing a common mechanism for  delivering  \nservices,  making  them  ideal  for implementing  a service -oriented  architecture (SOA). \nThe purpose of a SOA is to address requirements of loosel y coupled, standards -\nbased, and protocol -independent distributed computing. In a  SOA, software  \nresources  are packaged  as “services,”  which  are  well -defined,  self- contained  \nmodules  that provide  standard  business  functionality  and are independent  of the \nstate  or context  of other  services.  Services  are described     in a standard  definition  \nlanguage  and have  a published  interface  \n \n \n \nMany  service  providers,  such  as Amazon,  delicious,  Facebook,  and  Google,  \nmake  their  service  APIs  publicly  accessible  using  standard  protocols  such as \n' metadata={'source': 'ccpdf.pdf', 'page': 4}
"
"page_content='Department of CSE                                                                                                   P age 6 of 26 \n SOAP and REST. Consequently, one can put an idea of a fully functional  Web  \napplication  into practice  just by gluing  pieces  with few lines  of code.  \n \n1. Grid  Computing  \nGrid computing enables aggregation of distributed resources and transparently  \naccess to them. Most production grids such as TeraGrid and EGEE seek to share  \ncompute  and storage  resources  distributed  across  different  administrative  domains,  \nwith their  focus  being  speeding  up a broad  range  of scientific  applications,  such  as \nclimate  modeling,  drug  design,  and protein  analysis.  \nA key aspect  of the grid vision  realization  has been  building  standard  Web  \nservices -based protocols that allow distributed resources to be “discovered,  \naccessed, allocated, monitored, accounted for, and billed for, etc., and in  \ngeneral  managed  as a single  virtual  system.”  The Open  Grid  Services  \nArchitecture (OGSA) addresses this need for standardization by defining a set  of \ncore capabilities  and behaviors  that address  key concerns  in grid systems.  \n \nVirtualization technology has been identified as the perfect fit to issues that have  \ncaused frustration when using grids, such as hosting many dissimilar software  \napplications  on a single  physical  platform.  In this direction,  some  research  projects \n(e.g., Globus Virtual Workspaces) aimed at evolving grids to support an  additional  \nlayer  to virtualize  computation,  storage,  and network  resources.  \n2. Utility  Computing  \n \nWith increasing popularity and usage, large grid installations have faced new  \nproblems,  such as excessive  spikes  in demand  for resources  coupled  with strategic  \nand adversarial  behavior  by users.  Initially,  grid resource management  techniques  did \nnot ensure fair and equitable access to resources in many systems. Traditional  metrics \n(throughput, waiting time, and slowdown) failed to capture the more subtle  requirements \nof users. There were no real incentives for users to be flexible about  resource \nrequirements or job deadlines, nor provisions to accommodate users with  urgent  work.  \nIn utility computing environments, users assign a “utility” value to their jobs,  \nwhere  utility  is a fixed  or time-varying  valuation  that captures  various  QoS constraints \n(deadline, importance, satisfaction). The valuation is the amount they are  willing to pay \na service provider to satisfy their demands.   The service  providers  then attempt to \nmaximize their own utility, where said utility may directly correlate  with their profit. \nProviders can choose to prioritize high yield (i.e., profit per unit of  resource) user  jobs,  \nleading to  a scenario where  shared  systems  are viewed  as a marketplace,  where  users  \ncompete  for resources  based  on the perceived  utility  or value of their jobs. Further \ninformation and comparison of these utility computing  environments  are available  in an \nextensive  survey  of these  platforms  \n \n \n3. Hardware  Virtualization  \nCloud computing services are usually backed by large -scale data centers  ' metadata={'source': 'ccpdf.pdf', 'page': 5}
"
"page_content='Department of CSE                                                                                                   P age 7 of 26 \n composed of thousands of computers. Such data centers are built to serve many  \nusers  and host many  disparate  applications.  For this purpose,  hardware  virtualization \ncan be considered as a perfect fit to overcome most operational  issues  of data center  \nbuilding  and maintenance.  \n \nThe idea of virtualizing a computer system resources, including processors,  \nmemory,  and I/O devices,  has been  well established  for decades,  aiming  at improving \nsharing and  utilization of computer systems. Hardware virtualization  allows  running  \nmultiple  operating  systems  and software  stacks  on  a  single  physical platform. As \ndepicted in Figure 1.2, a software layer, the virtual machine  monitor  (VMM),  also \ncalled  a hypervisor,  mediates  access  to  the  physical  hardware  presenting  to each  \nguest  operating  system  a  virtual  machine  (VM),  which  is a set of virtual  platform  \ninterfaces  \n \nEmail Server     Facebook  App \nFIGURE  1.2. A hardware  virtualized  server  hosting  three  virtual  machines,  each  one running  distinct  operating  \nsystem  and user level  software  stack.  \nSeveral VMM platforms exist that are the basis of many utilities or cloud computing  \nenvironments.  The most  notable  ones,  VMWare,  Xen,  and KVM,  are outlined  in the following  \nsections.  \nVMWare ESXi – VMware is a pioneer in the virtualization market. Its ecosys - tem of tools  \nranges  from  server  and desktop  virtualization  to high-level  management  tools.  ESXi  is a VMM \n(Virtual  Machine  Manager) from  VMWare.  It is a bare-metal  hypervisor, meaning  that it \ninstalls directly on the physical server, whereas others may require a h ost operating  system.  It \nprovides  advanced  virtualization  techniques  of processor,  memory,  and I/O. Especially, through \nmemory ballooning and page sharing, it can overcommit memory, thus  increasing  the density  of \nVMs  inside  a single  physical  server.  \nXen—The Xen hypervisor started as an open -source project and has served as a base to other  \nvirtualization  products,  both commercial  and open -source.  It has pioneered  the para- \nvirtualization concept, on which the guest operating system, by means of a specializ ed kernel,  can \ninteract  with the hypervisor,  thus significantly  improving  performance.  In addition  to an \n \n \n \nopen -source distribution, Xen currently forms the base of commercial hypervisors of several  \nvendors,  most  notably  Citrix  XenServer  and Oracle  VM. \nVirtual  Machine  1 Virtual  Machine  2 Virtual  Machine  N \nUser  software  User  software  \nFacebook  App User  software  \nApp A App X \nData  \nbase  Web  \nServer  Java  Ruby on  \nRails  App B App Y \nLinux  Guest  OS \nVirtual  Machine  Monitor  (Hypervisor)  \n \nHardware  ' metadata={'source': 'ccpdf.pdf', 'page': 6}
"
"page_content='Department of CSE                                                                                                   P age 8 of 26 \n KVM—The kernel -based virtual machine (KVM) is a Linux virtualization subsystem. Is has  been \npart of the mainline Linux kernel since version 2.6.20, thus being natively supported by  several \ndistributions. In addition, activities such as memory management and scheduling are  carried  out \nby existing  kernel  features,  thus making  KVM  simpler  and smaller  than hypervisors  that take \ncontrol  of the entire  machine.  \nKVM  leverages  hardware -assisted  virtualization,  which  improves  performance  and allows  \nit to support  unmodified  guest  operating  systems.  currently,  it supports  several  versions  of \nWindows,  Linux,  and UNIX.  \n \n4. Virtual  Appliances  and  the Open  Virtualization  Format  \nAn application  combined  with the environment  needed  to run  it  (operating  system,  \nlibraries,  compilers,  databases,  application  containers,  and so  forth)  is  referred to as  a \n“virtual appliance.  Packaging application environments  in the shape  of virtual \nappliances eases software customization, configuration, and patching and  improves \nportability . Most commonly, an appliance is shaped as a VM disk image  associated  with \nhardware  requirements,  and it can be readily  deployed  in  a  hypervisor.  \nOVF’s extensibility has encouraged additions relevant to management of data  \ncenters  and clouds.  Mathews  et al. have  devised  virtual  machine  contracts  (VMC)  as \nan extension to OVF. A VMC aids in communicating and managing the complex  \nexpectations that VMs have of their runtime environment and vice versa. A simple  \nexample  of a VMC  is when  a cloud  consumer  wants  to specify  minimum  and maximum \namounts of a resource that a VM needs to function. similarly, the cloud  provider  could  \nexpress  resource  limits  to bound  resource  consumption  and costs.  \n \n5. Autonomic  Computing  \nAutonomic  or self-managing,  systems  rely on monitoring  probes  and gauges  \n(sensors),  on an adaptation  engine  (autonomic  manager)  for  computing  optimizations \nbased on monitoring data, and on effectors to carry out changes on the  system. IBM’s \nAutonomic Computing Initiative has contributed to define the four  properties of \nautonomic systems: self -configuration, self - optimization, self -healing,  and self-\nprotection.  IBM  has also suggested  a  reference  model  for  autonomic  control  loops  of \nautonomic  managers,  called  MAPE -K (Monitor  Analyze  Plan Execute —Knowle dge) \n \nLAYERS  AND  TYPES  OF CLOUDS  \nCloud  computing  services  are divided  into three  classes,  according  to the abstraction  level  \nof the capability  provided  and the service  model  of providers,  namely:  \n1. Infrastructure  as a Service,  \n2. Platform  as a Service,  and Software  as a Service.  \n \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 7}
"
"page_content='Department of CSE                                                                                                   P age 9 of 26 \n  \nInfrastructure  as a Service  \nA cloud  infrastructure  enables  on-demand  provisioning  of servers  running  several  \nchoices  of operating  systems  and a customized  software  stack.  Infrastructure  services  are \nconsidered  as the bottom  layer  of cloud  computing  systems.  Offering  virtualized  resources  \n(computation,  storage,  and communication)  on demand  is known  as Infrastructure  as a Service  \n(IaaS).  \nOne of the best examples  is Amazon  Web  Services  mainly  offers  IaaS,  which  in the \ncase of its EC2 service  means  offering  VMs  with a software  stack  that can be customized  \nsimilar  to how an ordinary  physical  server  would  be customized.  \nPlatform  as a Service  \nA cloud platform offers an environment on which developers create and deploy  \napplications and do not necessarily need to know how many processors or how much  \nmemory  that applications  will be  using.  In addition, multiple  program -  ming models  and \nspecialized services (e.g., data access, authentication, and payments) are offered as  building  \nblocks  to new applications.  \nGoogle  AppEngine,  an example  of Platform  as a Service,  offers  a scalable  \nenvironment for developing and hosting Web applications, which should be written in  \nspecific  programming languages  such  as Python  or Java,  and use the serv ices’  own \nproprietary  structured  object  data store.  \nSoftware  as a Service  \nTraditional  desktop  applications  such as word processing  and spreadsheet can  now \nbe accessed  as a service  in the Web.  This model  of delivering  applications,  known  as \nSoftware  as a Service  (SaaS),  alleviates  the burden  of software  maintenance  for customers  \nand simplifies  development  and testing  for providers.  \nSalesforce.com,  which  relies  on the SaaS  model,  offers  business productivity  \napplications  (CRM)  that reside  completely  on their servers,  allowing  customers  to \ncustomize  and access  applications  on demand.  \n' metadata={'source': 'ccpdf.pdf', 'page': 8}
"
"page_content='Department of CSE                                                                                                   P age 10 of 26 \n Deployment  Models  \nAlthough  cloud  computing  has emerged  mainly  from  the appearance  of public  \ncomputing utilities, other deployment  models, with variations in physical  location  and \ndistribution, have been adopted. In this sense, regardless of its service class, a  cloud can \nbe classified as public, private, community, or hybrid based on model of  deployment  as \nshown  figure below.  \nPublic cloud & Private cloud: Public cloud as a “cloud made available in a pay -as- \nyou-go manner to the general public”. Private cloud as “internal data center of a  \nbusiness  or other  organization,  not made  available  to the general  public.”  \nIn most  cases,  establishing  a private  cloud  means  restructuring  an existing  infrastructure \nby adding virtualization and cloud -like interfaces. This allows users to  interact with the \nlocal data center while experiencing the same advantages of public  clouds, most  notably \nself-service interface, privileged access to virtu al servers, and  per-usage  metering  and \nbilling.  \nA community cloud is “shared by several  organizations  and supports a  specific  \ncommunity that has shared concerns (e.g., mission, security requirements, policy, and  \ncompliance  considerations).”  \nA hybrid  cloud  takes  shape  when  a private  cloud  is  supplemented  with  computing  \ncapacity  from  public  clouds.  The approach  of temporarily  renting  capacity  to handle  \nspikes  in load is known  as “cloud -bursting”  \nDESIRED  FEATURES  OF A CLOUD  \nCertain features of a cloud are essential to enable services that truly represent the  \ncloud -computing  model  and satisfy  expectations  of  consumers,  and  cloud  offerings  must  \nbe having  following  features:  \n \n1. Self-service  \n2. Per-usage  metered  and billed  \n3. Elastic,  \n4. Customizable.  \nThe following  are the features  that are explained  in detail.  \n \n \n \n \n' metadata={'source': 'ccpdf.pdf', 'page': 9}
"
"page_content='Department of CSE                                                                                                   P age 11 of 26 \n 1. Self -Service  \nConsumers  of cloud  computing services  expect on -demand, nearly  instant  access  to \nresources. To support this expectation, clouds must allow self -service access so  that \ncustomers can request,   customize,  pay, and use services  without intervention  of \nhuman  operators.  \n \n2. Per -Usage  Metering  and  Billing  \nCloud  computing  eliminates  up-front  commitment  by users,  allowing  them  to request  \nand use only the necessary  amount.  Services must  be priced  on a   short - term  basis  \n(e.g.,  by the hour),  allowing  users  to release  (and not pay for) resources  as soon  as \nthey are not needed. For  these reasons, clouds must implement features  to allow  \nefficient  trading  of service  such  as pricing,  accounting,  and billing.  Metering should \nbe done accordingly for different types of service (e.g., storage,  processing, and \nbandwidth) and usage promptly reported, thus providing greater  transparency.  \n \n3. Elasticity  \nCloud computing gives the illusion of infinite computing resources available on  \ndemand.  Therefore,  users  expect  clouds  to rapidly  provide  resources  in  any  quantity  \nat any time.  In particular,  it is expected  that the additional  resources  can be (a) \nprovisioned,  possibly  automatically,  when  an application  load increases  and \n(b) released  when  load decreases  (scale  up and down).  \n \n4. Customization  \nIn a multi -tenant  cloud  a great  disparity between  user needs  is  often  the  case.  Thus, \nresources rented from the cloud must be highly customizable. In the case of  \ninfrastructure services, customization means allowing users to deploy specialized  \nvirtual appliances and to be given privileged (root) access to the virtual servers.  Other \nservice classes (PaaS and SaaS) offer less flexibility and are not suitable for  gene ral-\npurpose  computing,  but still are expected to  provide  a certain level  of customization.  \n \nCLOUD  INFRASTRUCTURE  MANAGEMENT  \n \nA key challenge IaaS providers face when building a cloud infrastructure is managing  \nphysical and virtual resources,  namely servers, storage, and net - works, in a holistic  fashion.  \n \nThe software toolkit responsible for this orchestration is called a virtual infrastructure  \nmanager (VIM). This type of software resembles a traditional operating system —but \ninstead  of dealing  with a single  computer,  it aggregates  resources  from  multiple  computers,  \npresenting  a uniform  view  to user and applications.  Other  terms  include  infrastructure  \nsharing software  and virtual  infra - structure engine.  \n \n \n \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 10}
"
"page_content='Department of CSE                                                                                                   P age 12 of 26 \n There  are two categories  of tools  used  to manage  cloud  they are \n \n5. Cloud toolkits —includes those that “expose a  remote and secure interface for  \ncreating,  controlling  and monitoring  virtualize  resources,”  but do not specialize  in \nVI management.  \n \n6. The virtual  infrastructure  managers —provide  advanced  features  such  as automatic  \nload balancing  and server  consolidation,  but do not expose  remote  cloud -like \ninterfaces.  \n \nThe availability of a remote cloud -like interface and the ability of managing many users  and \ntheir  permissions are the primary features that would distinguish “cloud toolkits”  from  \n“VIMs.”  However,  here we place  both categories  of tools  under  the same  group  (of the \nVIMs)  and, when  applicable,  we highlight  the availability  of a remote  interface  as a \nfeature.  \n \nVirtually  all VIMs  we investigated  present  a set of basic  features  related  to managing  \nthe life cycle of VMs, including  networking groups of VMs together and  setting up virtual \ndisks for VMs. These basic features pretty much define whether a tool  can be used in \npractical cloud  deployments or not. On the other hand, only a handful of  software present \nadvanced  features (e.g., high availability) which allow  them to be used  in large -scale  \nproduction  clouds.  \n \nFeatures  \nWe now present  a list of both basic  and advanced  features  that are usually  available  in \nVIMs.  \n \nVirtualization Support — The multi -tenancy aspect of clouds requires multiple customers  with \ndisparate requirements to be served by  a single hardware infrastructure. Virtualized  resources  \n(CPUs,  memory,  etc.) can be sized  and resized  with certain  flexibility.  These  features make \nhardware virtualization, the ideal technology to create a virtual infrastructure  that partitions  a \ndata center  among  multiple  tenants.  \n \nSelf-Service, On -Demand Resource Provisioning — Self-service access to resources has  been \nperceived as one the most attractive features of clouds. This feature enables users to  directly  \nobtain  services  from  clouds,  such as spawning  the creation  of a server  and tailoring  its \nsoftware, configurations, and security pol icies, without interacting with a human system  \nadministrator.  This capability  eliminates  the need for more  time-consuming,  labor - intensive,  \nhuman - driven  procurement  processes  familiar  to many  in IT. Therefore,  exposing a self -\nservice interface, through  which  users can  easily interact with the system, is  a highly  desirable  \nfeature  of a Vi manager . \n \nMultiple Backend Hypervisors — Different virtualization models and tools offer different  \nbenefits,  drawbacks,  and limitations.  Thus,  some  Vi managers  provide  a uniform  management  \nlayer  regardless  of the virtualization  technology  used.  \nThis characteristic  is more  visible  in open -source  Vi managers,  which  usually  provide  \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 11}
"
"page_content='Department of CSE                                                                                                   P age 13 of 26 \n pluggable  drivers  to interact  with multiple  hypervisors.  In this direction,  the aim of libvirt  is \nto provide  a uniform  API that Vi managers  can use to manage  domains  (a VM or container \nrunning an instance of an operating system) in virtualized nodes using standard  operations  that \nabstract  hypervisor  specific  calls.  \n \nStorage  Virtualization — Virtualizing  storage  means  abstracting  logical  storage  from  physical \nstorage. By consolidating all available storage devices in a data center, it allows  creating virtual \ndisks independent from device and location. Storage devices are commonly  organized  in a \nstorage area network  (SAN) and  attached  to servers  via protocols  such as  Fibre  Channel,  \niSCSI,  and NFS;  a storage  controller  provides  the layer  of abstraction  between  virtual  and \nphysical  storage.  \nIn the VI management  sphere,  storage  virtualization  support  is often  restricted  to commercial  \nproducts  of companies  such as VMWare  and Citrix.  \n \nInterface to Public Clouds — Researchers have perceived that extending the capacity of a  local  \nin-house  computing  infrastructure  by borrowing  resources  from  public  clouds  is advantageous.  \nIn this fashion, institutions can  make good use of  their available  resources  and, in case of \nspikes  in demand,  extra  load can be offloaded  to rented  resources.  \nA VI manager can  be used in a hybrid cloud setup if it  offers  a driver t o manage the life  cycle \nof virtualized resources obtained  from  external cloud providers. To  the applications,  the use of \nleased  resources  must ideally  be transparent.  \n \nVirtual Networking — Virtual networks  allow creating  an isolated network on top  of a physical \ninfrastructure independently from physical topology and locations. A virtual LAN  (VLAN)  \nallows  isolating  traffic  that shares  a switched  network,  allowing  VMs  to be grouped into the \nsame broadcast domain. Additionally, a VLAN can be configured to b lock traffic  originated  \nfrom  VMs  from  other  networks.  Similarly,  the VPN  (virtual  private  network) concept is used to \ndescribe a secure and private overlay network on top of a public  network  (most  commonly  the \npublic  Internet)  \nSupport  for creating  and configuring  virtual  networks  to group  VMs  placed  throughout  a \ndata center is provided by most VI managers. Additionally, VI managers that interface with  \npublic  clouds  often  support  secure  VPNs  connecting  local  and remote  VMs.  \n \n \nDynamic  Resource  Allocation — In cloud  infrastructures,  where  applications  have variable \nand dynamic needs, capacity management and demand prediction are especially  complicated.  \nThis fact triggers  the need for dynamic  resource  allocation  aiming  at obtaining  a timely  match  \nof supply  and demand.  \nEnergy  consumption  reduction  and better  management  of SLAs  can be achieved  by dynamically  \nremapping  VMs  to physical machines at  regular  intervals. Machines  that are not assigned  any \nVM can be turned  off or put on a low power  state.  \nA number of VI  managers include a dynamic resource allocation feature that continuously  \nmonitors utilization across resource pools and reallocates avail - able resources among VMs  \naccording  to application  needs.  \n \nVirtual  Clusters— Several  VI managers  can holistically  manage  groups  of VMs.  This \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 12}
"
"page_content='Department of CSE                                                                                                   P age 14 of 26 \n feature is useful for provisioning computing virtual clusters on demand, and interconnected  \nVMs  for multi -tier Internet  applications.  \n \nReservation  and Negotiation  Mechanism — When  users  request  computational  resources  to \navailable at a specific  time, requests are termed  Advance reservations (AR), in contrast  to \nbest-effort requests, when users request resources whenever available [54]. To support  complex  \nrequests,  such as AR, a VI manager  must  allow  users  to “lease”  resour ces expressing more \ncomplex terms (e.g., the period of time of a reservation). This is especially  useful  in clouds  on \nwhich  resources  are scarce;  since  not all requests  may be satisfied  immediately,  they can \nbenefit  of VM placement  strategies  that support  queues,  priorities,  and Advance reservations.  \nAdditionally, leases may be negotiated and renegotiated, allowing provider and consumer to  \nmodify a lease or present counter proposals until an agreement is reached. This feature is  \nillustrated by the case in which an AR request for a given slot cannot be satisfied, but the  \nprovider  can offer  a distinct  slot that is still satisfactory  to the user.  \n \nHigh  Availability  and Data  Recovery — The high availability  (HA)  feature  of VI managers  \naims at minimizing application downtime and preventing business disruption.  A few VI \nmanagers accomplish this  by providing a failover mechanism, which  detects failure  of both \nphysical  and virtual servers and restarts  VMs  on healthy physical  servers. This style  of HA \nprotects  from  host,  but not VM,  failures.  \nData  Recovery  means  data backup  in clouds  should  consider  the high data volume  involved \nin VM management. Frequent backup of a large number of VMs, each one with  multiple virtual \ndisks attached, should be done with minimal  interference in the systems  performance.  In this \nsense,  some  VI managers  offer  data protection  mechanisms  that perform  incremental backups  \nof VM images.  The backup  workload  is often  assigned  to proxies,  thus offloading  production  \nserver  and reducing  network  overhead.  \n \nCase  Studies  \nIn this section,  we describe  the main  features  of the most  popular  VI  managers  available.  \nOnly  the most  prominent  and distinguishing  features  of each  tool  are  discussed  in detail.  \nA detailed  side-by-side feature  comparison  of VI managers  is presented  in Table 1.1.  \n \nApache  VCL:  The Virtual  Computing  project  has been  incepted  in  2004  by  researchers \nat the  North Carolina State University as a way  to provide customized  environments to \ncomputer lab users. The software compo - nents that support NCSU’s  initiative  have  been  \nreleased  as open -source  and incorporated  by the  Apache  Foundation.  \nSince its inception, the  main objective of VCL  has been providing  desktop (virtual  lab) \nand HPC computing environments anyti me, in a flexible cost - effective way and  with \nminimal  intervention  of IT staff.  In this sense,  VCL  was one of the first projects  to \ncreate a tool with features such as: self -service Web portal, to reduce administrative  \nburden;  advance  reservation  of capacity,  to provide  resources  during  classes;  and \ndeployment of customized machine images  on multiple computers, to provide clusters  on \ndemand.  \n \n \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 13}
"
"page_content='Department of CSE                                                                                                   P age 15 of 26 \n In summary,  Apache  VCL  provides  the following  features:  (i) multi -platform  \ncontroller,  based  on Apache/PHP;  (ii) Web  portal  and XML -RPC  interfaces;  \n(iii) support  for VMware  hypervisors  (ESX,  ESXi,  and Server);  (iv) virtual  networks;  \n(v) virtual  clusters;  and (vi) advance  reservation  of capacity.  \n \nAppLogic:  AppLogic is a commercial VI manager, the flagship product of 3tera Inc.  from  \nCalifornia,  USA.  The company  has labeled  this product  as a Grid  Operating  System.  \nAppLogic provides a fabric to manage clusters of virtualized servers, focusing  \non managing multi -tier Web applications. It views an entire  applica - tion as a  \ncollection  of components  that must  be managed  as a single  entity.  Several  \ncomponents such as firewalls, load balancers, Web servers, application servers, and  \ndatabase servers can be set up and linked together. Whenever the application is \nstarted,  the system  manufactures  and assembles  the virtual  infrastructure  required  to \nrun it. Once the application is stopped, AppLogic tears down the infrastructure  \nbuilt  for it. \nAppLogic offers dynamic appliances to add functionality such as Disaster Recovery  and \nPower optimization to applications. The key differential of this approach is that  additional \nfunctionalities are implemented as another pluggable appliance instead of  being  added  as a \ncore functionality  of the VI manager.  \nIn summary,  3tera  AppLogic  provides  the  following  features:  Linux -based  controller;  \nCLI and GUI interfaces;  Xen  backend;  Global  Volume  Store  (GVS)  storage \nvirtualization; virtual networks; virtual clusters; dynamic resource allocation;  high \navailability;  and data protection.  \n \nCitrix  Essentials:  The Citrix  Essentials  suite is one the most  feature  complete  VI management  \nsoftware  available,  focusing  on management  and automation  of data centers.  It is essentially  a \nhypervisor -agnostic  solution,  currently  supporting  Citrix  XenServer  and Microsoft  Hyper -V. \nCitrix  Essentials  provides  the following  features:  Windows - based  controller;  GUI,  CLI, Web \nportal,  and XML -RPC  interfaces which support for  XenServer  and Hyper -V hypervisors.  \nCitrix  Storage  Link storage  virtualization;  virtual  networks;  dynamic  resource  allocation;  three -\nlevel  high avail - ability (i.e.,  recovery  by VM restart,  recovery by activating paused duplicate \nVM, and running duplicate VM continuously) [58];  data protection  with Citrix  Consolidated  \nBackup.  \n \nEnomaly  ECP:  The Enomaly Elastic Computing Platform,  in its  most  complete  edition,  offers  \nmost  features  a service  provider  needs  to build  an IaaS cloud.  \nMost notably, ECP Service Provider Edition offers a Web -based customer dashboard  \nthat allows users  to fully control  the life cycle of VMs. Usage accounting  is performed in  real \ntime and can be viewed  by users.  Similar  to the functionality  of virtual  appliance  marketplaces,  \nECP allows  providers  and users  to package  and exchange  applications.  \nIn summary, Enomaly ECP provides the following features: Linux -based controller;  \nWeb portal  and Web services  (REST)  interfaces;  Xen back-end; interface to the  Amazon  EC2 \npublic  cloud;  virtual  networks;  virtual  clusters  (ElasticValet).  \n \nEucalyptus:  The Eucalyptus  framework  was one of the first open -source  projects  to focus  \non building  IaaS clouds.  It has been developed  with the intent  of providing  an open -source  \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 14}
"
"page_content='Department of CSE                                                                                                   P age 16 of 26 \n implementation nearly identical in functionality to Amazon Web Services APIs. Therefore,  users \ncan interact with a Eucalyptus cloud using the same tools they use to access Amazon  EC2. It \nalso distinguishes itself from other tools because it provides a storage cloud API — emulating  \nthe Amazon  S3 API—for storing  general  user data and VM images.  \nIn summary,  Eucalyptus  provides  the following  features:  Linux -based con - troller  with \nadministration  Web portal;  EC2-compatible  (SOAP,  Query)  and S3- compatible  (SOAP,  \nREST)  CLI and Web portal  interfaces;  Xen,  KVM,  and VMWare  backends;  Amazon  EBS-\ncompatible  virtual  storage  devices;  interface  to the Amazon  EC2 public  cloud;  virtual  \nnetworks.  \n \nNimbus3:  The Nimbus  toolkit  is built on top of the Globus  framework.  Nimbus  provides  \nmost features in common with other open -source VI managers, such as an EC2 -compatible  \nfront -end API, support  to Xen,  and a backend  interface  to Amazon  EC2.  However,  it \ndistinguishes  from  others  by providing  a Globus  Web  Services  Resource  Framework  (WSRF) \ninterface. It also provides a backend service, named Pilot, which spawns VMs on  clusters  \nmanaged  by a local  resource  manager  (LRM)  such as PBS and SGE.  \nNimbus’ core was engineered around the Spring framework to be easily extensible,  thus \nallowing several internal components to be replaced and also eases the integration with  other  \nsystems. \nIn summary, Nimbus provides the following features: Linux -based control - ler; EC2 - \ncompatible (SOAP) and WSRF interfaces; Xen and KVM backend and a Pilot program to  spawn \nVMs through an LRM; interface to the Amazon EC2 public cloud; virtual networks;  one-click  \nvirtual  clusters.  \n \nOpenNebula:  OpenNebula is one of the most feature -rich open -source VI managers. It was  \ninitially  conceived  to manage  local  virtual  infrastructure,  but has also included  remote  interfaces \nthat make it viable to build public clouds. Altogether, four programming APIs are  available: \nXML -RPC and libvirt for local interaction; a subset of EC2 (Query) APIs and the  OpenNebula  \nCloud API  (OCA)  for public  access.  \nOpenNebula  provides  the following  features:  Linux -based  controller;  CLI, XML - RPC, \nEC2-compatible  Query  and OCA  interfaces; Xen, KVM, and VMware backend;  interface to \npublic clouds (Amazon EC2, ElasticHosts); virtual networks; dynamic resource  allocation;  \nadvance  reserva - tion of capacity.  \n \nOpenPEX:  OpenPEX  (Open  Provisioning  and EXecution  Environment)  was constructed  around \nthe notion of using advance reservations as the primary method for allocating VM  instances.  \nOpenPEX  provides  the following  features:  multi -platform  (Java)  controller;  Web portal  \nand Web services  (REST)  interfaces;  Citrix  XenServer  backend;  advance  reservation  of \ncapacity  with negotiation.  \n \noVirt:  oVirt is an open -source VI manager, sponsored by Red Hat’s Emergent Technology  \ngroup.  It provides  most  of the basic  features  of other  VI managers.  \noVirt provides the following features: Fedora Linux -based controller packaged as a  \nvirtual  appliance;  Web portal  interface;  KVM  backend.  \n \nPlatform  ISF:  Infrastructure  Sharing  Facility  (ISF)  is the VI manager  offering  from  \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 15}
"
"page_content='Department of CSE                                                                                                   P age 17 of 26 \n  \nPlatform Computing. The company, mainly through its LSF family of products, has been  \nserving  the HPC  market  for several  years.  \nISF provides  the following features:  Linux -based  controller  packaged  as a virtual  \nappliance;  Web  portal  interface;  dynamic  resource  allocation;  advance  reservation  of capacity;  \nhigh availability.  \n \nVMWare  vSphere and  vCloud:  vSphere is VMware’s suite of tools  aimed at transforming  IT \ninfrastructures into private clouds. In the vSphere architecture, servers run on the ESXi  platform. \nA separate server runs vCenter Server, which centralizes control over the entire  virtual  \ninfrastructure.  Through  the vSphere  Client  software,  administrators  connect  to vCenter  Server \nto perform  various  tasks.  \nThe Distributed  Resource  Scheduler  (DRS)  makes  allocation  decisions  based  on \npredefined rules and policies. It continuously monitors the amount  of resources available to  VMs \nand, if necessary, makes allocation changes to meet VM requirements. In the storage  \nvirtualization  realm, vStorage VMFS is  a cluster file system to provide agg regate several  disks \nin a single volume.  VMFS is especially  optimized to store VM images and  virtual  disks.  It \nsupports  storage  equipment  that use Fibre  Channel  or iSCSI  SAN.  \nvSphere  provides  the following  features:  Windows -based  controller  (vCenter  Server); \nCLI, GUI, Web portal, and Web services interfaces; VMware ESX, ESXi backend;  VMware  \nvStorage  VMFS  storage  virtualization;  interface  to external  clouds  (VMware  vCloud  partners);  \nvirtual  networks  (VMWare  Distributed  Switch);  dynamic  resource  allocat ion (VMware  DRM);  \nhigh availability;  data protection  (VMWare  Consolidated  Backup).  \n \nINFRASTRUCTURE  AS A SERVICE  PROVIDERS  \nPublic  Infrastructure  as a Service  providers  commonly  offer  virtual  servers  containing  \none or more  CPUs,  running  several  choices  of operating  systems  and a customized software \nstack. In addition, storage space and communication facilities are often  provided.  \n \nFeatures  \nIAAS  offers  a set of specialized  features  that can influence  the cost benefit  ratio to be \nexperienced  by user applications  when  moved  to the cloud.  \nThe most  relevant  features  are: \n1. Geographic  distribution  of data centers.  \n2. Variety  of user interfaces  and APIs  to access  the system.  \n3. Specialized  components  and  services  that aid  Particular  applications  (e.g.,  \nload- balancers,  firewalls).  \n4. Choice  of virtualization  platform  and operating  systems  and \n5. Different  billing  methods  and period  (e.g.,  prepaid  vs. postpaid,  hourly  vs. \nmonthly).  \n \nGeographic  Presence— To improve  availability  and responsiveness,  a provider  of worldwide \nservices would typically build several data centers distributed around the world.  For example,  \nAmazon  Web Services  presents  the concept  of availability  zones  and regions  \n ' metadata={'source': 'ccpdf.pdf', 'page': 16}
"
"page_content='Department of CSE                                                                                                   P age 18 of 26 \n  \nfor its EC2 service.  Availability  zones  are distinct  locations  that are engineered  to be insulated  \nfrom  failures  in other  availability  zones  and provide  inexpensive,  low-latency  network \nconnectivity to other availability zones in the same region. Regions, in turn, are  geographically  \ndispersed  and will be in separate  geographic  areas  or countries.  \n \nUser  Interfaces  and Access  to Servers — Ideally,  a public  IaaS provider  must  provide  multiple \naccess means to its cloud, thus catering for various users and their preferences.  Different  types  \nof user interfaces  (UI) provide  different  levels  of abstraction,  the most  common being graphical \nuser interfaces (GUI), command -line tools (CLI), and Web service  (WS)  APIs.  \n \nGUIs are preferred by end users who need to launch, customize, and monitor a few virtual  \nservers and do not necessarily need  to repeat the process several times. On the other hand,  CLIs  \noffer  more  flexibility  and the possibility  of automating  repetitive  tasks  via scripts  (e.g.,  start \nand shutdown  a number  of virtual  servers  at regular  intervals).  \n \nAdvance Reservation  of Capacity — Advance reservations allow users  to request for an  IaaS \nprovider to reserve resources for a specific time frame in the future, thus ensuring that  cloud  \nresources  will be available  at that time.  However, most  clouds  only support  best- effort  \nrequests  that means  users  can request  server  whenever  resources  are available  . \nAmazon Reserved Instances is a form of advance reservation of capacity, allowing  users  \nto pay a fixed  amount  of money  in advance  to guarantee  resource  availability  at anytime  during  \nan agreed  period  and then paying  a discounted  hourly  rate when  resources  are in use. \nHowever, only long periods of 1 to 3 years are offered; therefore, users cannot  express  their \nreservations  in finer granularities —for example,  hours  or days.  \nAutomatic Scaling and Load  Balancing — Automatic scaling is a highly  desirable  feature  of \nIaaS clouds.  It allows  users to  set conditions  for when they  want  their applications to  scale up \nand down, based on application -specific metrics such as transactions p er second,  number of  \nsimultaneous  users,  request  latency,  and so forth.  \nWhen the number of virtual servers is  increased by  automatic scaling, incoming traffic must  be \nautomatically  distributed  among  the available  servers.  This activity  enables  applications  to \npromptly  respond  to traffic  increase  while  also achieving  greater  fault tolerance.  \nService -Level  Agreement . Service -level agreements  (SLAs) are offered  by IaaS providers  to \nexpress  their commitment  to delivery  of a certain  QoS.  To customers  it serves  as a warranty. An \nSLA usually include availability and performance guarantees. Additionally,  metrics  must  be \nagreed  upon  by all parties  as well as penalties  for violating  these  expectations.  \nMost  IaaS providers  focus  their SLA terms  on availability  guarant ees, specifying  the minimum  \npercentage  of time the system  will be available  during  a certain  period.  For instance,  Amazon \nEC2 states that “if the annual uptime Percentage for a customer  drops  below  99.95%  for the \nservice  year,  that customer  is eligible  to receive  a service  credit  equal  to 10% of their bill.3”  \nHypervisor  and Operating  System  Choice— Traditionally,  IaaS offerings  have been based  \non heavily  customized  open -source  Xen deployments.  IaaS providers  needed  expertise  in \nLinux,  networking,  virtualization,  metering,  resource  management,  and many  \n \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 17}
"
"page_content='Department of CSE                                                                                                   P age 19 of 26 \n other  low-level  aspects  to successfully  deploy  and maintain  their cloud  offerings.  \nMore  recently,  there  has been an emergence  of turnkey  IaaS platforms  such as VMWare \nVCloud and Citrix Cloud Center (C3) which have lowered the barrier of entry for  IaaS \ncompetitors,  leading  to a rapid  expansion  in the IaaS marketplace . \nCase  Studies  \nAmazon Web Services:  Amazon WS4 (AWS) is one of the major players in the cloud  \ncomputing market. It pioneered the introduction of IaaS clouds in 2006. It offers a variety  cloud  \nservices,  most  notably:  S3 (storage),  EC2 (virtual  servers),  Cloudfront  (content  delivery), \nCloudfront Streaming (video streaming), Simple DB (structured datastore), RDS  (Relational \nDatabase), SQS (reliable messaging), and Elastic MapReduce (data processing).  The \nElasticCompute Cloud (EC2) offers Xen -based virtual servers (instances) that can be  \ninstantiated from Amazon Machine Images (AMIs). Instances are available in a variety of  sizes, \noperat ing systems, architectures, and price. CPU capacity of instances is measured in  Amazon \nCompute Units and, although fixed for each instance,  vary among instance types  from  1 (small \ninstance) to 20 (high CPU instance). Each instance provides  a certain amount  of non persistent  \ndisk space;  a persistence  disk service  (Elastic  Block  Storage)  allows  attaching virtual disks to \ninstances with space up to 1TB. Elasticity can be achieved by  combining  the Cloud  Watch,  \nAuto  Scaling  and Elastic  Load  Balancing  features,  which  allow  the number  of instances  to \nscale  up and down  automatically  based  on a set of customizable rules, and traffic to be \ndistributed across available instances. Fixed IP address  (Elastic  IPs) are not available  by \ndefault,  but can be obtained  at an additional  cost. \nFlexiscale:  Flexiscale is a UK -based provider offering services similar in nature to Amazon  \nWeb Services.  Flexiscale  cloud  provides  the following  features:  available  in UK; Web  services  \n(SOAP),  Web-based  user interfaces;  access  to virtual  server  mainly  via SSH (Linux)  and \nRemote  Desktop  (Windows);  100%  availability  SLA  with automatic  recovery  of VMs  in case \nof hardware  failure;  per hour pricing;  Linux  and Windows  operating  systems;  automatic  \nscaling (horizontal/vertical).  \nJoyent:  Joyent’s  Public  Cloud  offers  servers  based  on Solaris  containers  virtualization  \ntechnology.  These  servers,  dubbed  accelerators,  allow  deploying  various  specialized  software - \nstack based on a customized version of Open - Solaris operating system, which  include  by \ndefault  a Web-based  configuration  tool and several  pre-installed  software,  such as Apache,  \nMySQL, PHP,  Ruby on Rails, and  Java.  Software load balancing is available as  an accelerator \nin addition to hardware load balancers. A notable feature of Joyent’s vir tual servers  is \nautomatic  vertical  scaling  of CPU  cores,  which  means  a virtual  server  can make  use of \nadditional CPUs automatically up to the maximum number of cores available in the  physical  \nhost.  \nThe Joyent public cloud offers the following features: multiple geographic locations  \ninthe United States; Web -based user interface; access to virtual server via SSH and Web - based  \nadministration  tool; 100%  availability  SLA;  per month  pricing;  OS-level  virtualization  \nSolaris  containers;  Open - Solaris  operating  systems;  automatic  scaling(vertical).  \nGoGrid:  GoGrid, like many other IaaS providers, allows its customers to utilize a range of  pre- \nmade Windows  and Linux  images, in a  range of  fixed instance sizes. GoGrid also  offers  \n“value - added”  stacks  on top for applications  such as high- volume  Web serving,  e- \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 18}
"
"page_content='Department of CSE                                                                                                   P age 20 of 26 \n Commerce, and database stores. It offers some notable features, such as a “hybrid hosting”  \nfacility,  which  combines  traditional  dedicated  hosts  with auto-scaling  cloud  server  \ninfrastructure. As part of i ts core IaaS offerings, GoGrid also provides free hardware load  \nbalancing,  auto-scaling  capabilities,  and persistent  storage,  features  that typically add an  \nadditional  cost for  most  other  IaaS providers.  \nRackspace  Cloud  Servers:  Rackspace  Cloud  Servers  is an IaaS solution  that provides  fixed \nsize instances in the cloud. Cloud Servers offers a range of Linux - based pre -made  images. A \nuser can request different -sized images, where the size is measured by requested  RAM,  not \nCPU.  \n \nPLATFORM  AS A SERVICE  PROVIDER S \nPublic  Platform  as a Service  providers  commonly  offer  a development  and deployment  \nenvironment that allow users to create and run their applications with little or no concern to  low- \nlevel  details  of the platform.  In addition,  specific  programming  languages  and frameworks  are \nmade  available in  the platform, as well  as other services  such as persistent  data storage  and in \nmemory  caches.  \nFeatures  \nProgramming  Models,  Languages,  and Frameworks:  Programming  models  made  \navailable by  IaaS providers  define how users can express  their applications using  higher  levels  \nof abstraction  and efficiently  run them  on the cloud  platform.  \nEach model aims at efficiently solving a particular problem. In the cloud computing  \ndomain, the most common activities that require specialized models are: processing of large  \ndataset in clusters of computers (MapReduce model), development of request -based Web  \nservices and applications; definition and orchestration of business processes in the form of  \nworkflows  (Workflow  model);  and high-performance  distributed  execution  of various  \ncomputational  tasks.  \nFor user convenience,  PaaS  providers  usually  support  multiple  programming  languages.  \nMost  commonly  used languages  in platforms  include  Python  and Java (e.g.,  Google  \nAppEngine),  .NET  languages  (e.g.,  Microsoft  Azure),  and Ruby  (e.g.,  Heroku).  Force.com  has \ndevised  its own programming  language  (Apex)  and an Excel -like query  language,  which  \nprovide  higher  levels  of abstraction  to key platform  functionalities.  \nA variety of software framew orks are usually made available to PaaS developers,  \ndepending  on application  focus.  Providers  that focus  on Web and enterprise  application  hosting  \noffer  popular  frameworks  such as Ruby  on Rails,  Spring,  Java EE, and .NET.  \nPersistence Options:  A persistence  layer is essential  to allow applications  to record their  state \nand recover it in case of crashes, as well as to store user data. Web and enterprise  application  \ndevelopers  have chosen  relational  databases  as the preferred  persistence  method.  These  \ndatabases  offer  fast and reliable  structured  data storage  and transaction  processing,  but may lack \nscalability  to handle  several  peta bytes  of data stored  in commodity  computers.  In the cloud  \ncomputing  domain,  distributed  storage  technologies  have emerged,  which seek to be robust \nand highly scalable, at the expense of relational  structure  and convenient  query languages.  \n \n \n \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 19}
"
"page_content='Department of CSE                                                                                                   P age 21 of 26 \n CASE  STUDIES  \nAneka:  Aneka  is a .NET -based  service -oriented  resource  management  and development  \nplatform. Each server in an Aneka deployment (dubbed Aneka cloud node) hosts the Aneka  \ncontainer, which provides the base infrastructure that consists of services for persistence,  \nsecurity (authorization, authentication and auditing), and communication (message handling  and \ndispatching). C loud nodes can  be either physical server, virtual  machines  (Xen Server  and \nVMware are supported), and instances rented from Amazon EC2. The Aneka container  can also \nhost any number  of optional  services  that can be added  by developers  to augment  the \ncapabilities of an Aneka Cloud node, thus providing a single, extensible framework for  \norchestrating  various  application  models.  \nSeveral  programming models are supported by  such task models to enable execution  of \nlegacy HPC applications and Map Reduce, whi ch enables a variety of data -mining and  search \napplications. Users request resources via a client to a reservation services manager of  the Aneka \nmaster node, which manages all cloud nodes and contains scheduling service to  distribute  \nrequest  to cloud  nodes . \nApp Engine:  Google App Engine lets you run your Python and Java Web applications on  \nelastic  infrastructure  supplied  by Google.  App Engine  allows  your applications  to scale  \ndynamically  as your traffic  and data storage  requirements  increase  or decrease.  It gives  \ndevelopers  a choice  between  a Python  stack  and Java.  The App Engine  serving  architecture  is \nnotable in that it allows real -time auto - scaling without virtualization for many common  types  of \nWeb applications.  However,  such auto-scaling  is dependent  on the application  developer using a \nlimited subset of the native APIs on each platform, and in some instances  you need to use \nspecific  Google  APIs  such as URLFetch,  Data store,  and mem  cache  in place of certain \nnative API calls. For example, a deployed App  Engine application cannot  write to the file \nsystem directly (you must use the Google Data store) or open a socket or  access another host \ndirectly (you must use Google URL fetch service). A Java application  cannot  create  a new \nThread  either.  \nMicrosoft Azur e: Microsoft Azure Cloud Services offers developers a hosted. NET Stack  (C#, \nVB.Net,  ASP.NET).  In addition,  a Java & Ruby  SDK  for .NET  Services  is also available. The \nAzure system consists of a number of elements. The Windows Azure Fabric  Controller provides \nauto-scaling and reliability, and it manages memory resources and load  balancing. The .NET \nService Bus registers and connects applications together. The .NET  Access  Control  identity  \nproviders  include  enterprise  directories  and Windows  LiveID.  Finally, the .NET  Workflow  \nallows  construction  and execution  of workflow  instances.  \nForce.com:  In conjunction  with the Salesforce.com  service,  the Force.com  PaaS  allows  \ndevelopers to create add -on functionality that integrates into main Salesforce CRM SaaS  \napplication. Force.com offers developers two approaches to create applications that can be  \ndeployed  on its SaaS  plaform:  a hosted  Apex  or Visualforce  application.  Apex  is a proprietary  \nJava-like language  that can be used to create Salesforce  applications.  Visual  force is an XML -\nlike syntax for building UIs in HTML, AJAX, or Flex to overlay over the  Salesforce hosted \nCRM system. An application store called App Exchange is also provided,  which  offers a  paid &  \nfree application directory.  \nHeroku:  Heroku  is a platform  for instant  deployment  of Ruby  on Rails  Web applications.  In the \nHeroku system, servers are invisibly  managed by  the platform and are never exposed  to users.  \nApplications  are automatically  dispersed  across  different  CPU  cores  and servers.  \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 20}
"
"page_content='Department of CSE                                                                                                   P age 22 of 26 \n maximizing performance  and minimizing contention. Heroku has an  advanced logic  layer  than \ncan automatically route around failures,  ensuring seamless  and uninterrupted service at  all \ntimes.  \n \nCHALLENGES  AND  RISKS  \nDespite the initial success and popularity of  the cloud computing paradigm and  the \nextensive  availability  of providers  and tools, a significant  number  of challenges  and risks are \ninherent  to this new model  of computing.  Providers,  developers,  and end users  must  \nconsider  these  challenges  and risks to take good  advantage  of cloud  computing.  Issues  to be \nfaced include user privacy, data security, data lock -in, availability of service, disaster  recovery,  \nperformance,  scalability,  energy - efficiency,  and programmability.  \nSecurity,  Privacy,  and Trust:  Secur ity and privacy  affect  the entire  cloud  computing  stack, \nsince there is a massive use of third -party services and infrastructures that are used to  host \nimportant  data or to perform  critical  operations.  In this scenario,  the trust toward  providers is \nfundamental to ensure the desired level of privacy for applications hosted in the  cloud. Legal \nand regulatory issues also need attention. When data are moved into the Cloud,  providers may \nchoose to locate them anywhere on the planet. The physical location of data  centers  determines  \nthe set of laws that can be applied  to the management  of data.  For example,  specific  \ncryptography  techniques  could  not be used because  they are not allowed  in some countries. \nSimilarly, country laws can impose that sensitive data, such as patient  health  records,  are to be  \nstored  within  national  borders.  \nData Lock -In and Standardization:  A major concern of cloud computing users is about  \nhaving  their data locked -in by a certain  provider.  Users  may want  to move  data and applicati ons \nout from a provider that does not meet their requirements. However, in their  current  form,  cloud  \ncomputing  infrastructures  and platforms  do not employ  standard  methods  of storing user  data \nand applications.  Consequently, they do not  interoperate and  user data are not portable.  \nThe answer to this concern is standardization. In this direction, there are efforts to  create \nopen standards for cloud computing. The Cloud Computing Interoperability Forum  (CCIF) was \nformed by organizations such as  Intel, Sun, and Cisco in order to  “enable a  global  cloud  \ncomputing  ecosystem  whereby  organizations  are able to seamlessly  work  together for the \npurposes for wider industry adoption of cloud computing technology.” The  development of the  \nUnified Cloud Interface (UCI)  by CCIF aims  at creating a  standard  programmatic  point  of \naccess  to an entire  cloud  infrastructure.  In the hardware  virtualization  sphere,  the Open  \nVirtual  Format  (OVF)  aims at facilitating  packing  and distribution of software to be run on \nVMs so that virtual appliances can be made portable — that is, seamlessly  run on hypervisor  of \ndifferent  vendors.  \nAvailability, Fault -Tolerance, and Disaster Recovery:  It is expected that users will have  \ncertain  expectations  about  the service  level  to be provided  once their applications  are moved  \nto the cloud.  These  expectations  include  availability  of the service,  its overall  performance,  and \nwhat  measures are to  be taken when something goes wrong in the  system  or its components.  \nIn summary,  users  seek for a warranty  before  they can comfortably  move  their business  to \nthe cloud.  SLAs,  which  include  QoS requirements,  must  be ideally  set up between  customers  \nand cloud  computing  providers  to act as warranty.  An SLA specifies  the details  of the service  \nto be provided,  including  availability  and performance  \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 21}
"
"page_content='Department of CSE                                                                                                   P age 23 of 26 \n guarantees.  \nAdditionally,  metrics  must  be agreed  upon  by all parties,  and penalties  for violating  the \nexpectations  must  also be  approved.  \nResource  Management  and Energy -Efficiency:  One important  challenge  faced  by providers \nof cloud computing services is the efficient management of virtualized resource  pools. Physical \nresources such as CPU cores, disk space, and network bandwidth must be  sliced  and shared  \namong  virtual  machines  running  potentially  heterogeneous  workloads.  The multi -dimensional \nnature of virtual machines complicates the activity of finding a good  mapping  of VMs  onto \navailable  physical hosts  while  maximizing  user utility. Dimensions  to be considered include: \nnumber of CPUs, amount of memory, size o f virtual disks, and  network bandwidth. Dynamic \nVM mapping policies may leverage the ability to suspend,  migrate, and resume VMs as an easy \nway of preempting low -priority allocations in favor of  higher -priority ones. Migration of VMs \nalso brings additional  challenges such as detecting  when to  initiate  a migration,  which  VM to \nmigrate,  and where  to migrate.  In addition,  policies  may take  advantage  of live  migration  of \nvirtual  machines  to relocate  data center  load without significantly disrupting running  services. \nIn this  case, an  additional concern is  the trade -off between  the negative  impact  of a live \nmigration  on the performance  and stability of a service and the benefits to be achieved with \nthat migration. Another challenge  concerns  the outstanding  amount  of data to be managed  in \nvarious  VM management  activities. Such data amount is a result  of particular abilities of  \nvirtual machines,  including  the ability of traveling through space (i.e., migration) and time (i.e., \ncheck pointing and  rewinding),  operation s that may be required  in load balancing,  backup,  and \nrecovery  scenarios.  In addition,  dynamic  provisioning  of new VMs  and replicating  existing  \nVMs  require efficient mechanisms to make VM block storage devices (e.g., image files) quickly  \navailable  at selected  hosts.  Data centers  consumer  large  amounts  of electricity.  According  to \na data published by HP, 100 server racks can consume 1.3MWof power and another 1.3  MW \nare required by the cooling system, thus costing USD 2.6 million per year. Besides the  monetary \ncost, data centers significantly impact the environment in terms of CO2 emissions  from  the \ncooling  systems.  \n \nCOMPUTING  PARADIGMS:  \nHigh -Performance  Computing:  \nFor many years, HPC systems emphasize the raw speed performance. The speed of  HPC \nsystems has increased from Gflops in the early 1990s to now Pflops in 2010. This  improvement  \nwas driven  mainly  by the demands  from  scientific,  engineering,  and manufacturing  \ncommunities.  \nTop 500 most powerful  computer systems in the world  are measured by floating - point \nspeed in Linpack benchmark results. However, the number of supercomputer users  is limited to \nless than 10% of all  computer  users.  \nToday, the majority of computer users are using desktop computers or large servers  \nwhen  they conduct  Internet  searches  and market -driven  computing  tasks.  \nThree  New  Computing  Paradigms  \n\uf0b7 With  the introduction  of SOA,  Web  2.0 services  become  available.  \n \n \n \n ' metadata={'source': 'ccpdf.pdf', 'page': 22}
"
"page_content='Department of CSE                                                                                                   P age 24 of 26 \n \uf0b7 Advances in virtualization make it possible to see the growth of Internet clouds as a new \ncomputing  paradigm.  \n\uf0b7 The maturity  of radio -frequency  identification  (RFID),  Global  Positioning  System  (GPS),  \nand sensor  technologies  has triggered  the development  of the Internet  of Things  (IoT).  \nComputing  Paradigm  Distinctions  \n\uf0b7 Centralized  computing  \n\uf0b7 Parallel  computing  \n\uf0b7 Distributed  computing  \n\uf0b7 Cluster  omputing  \n\uf0b7 Cloud  computing  \n\uf0b7 Grid computing  \n \n \nCentralized  computing:  \nThis is a computing  paradigm  by which  all computer  resources  are centralized  in \none physical  system.  \nAll resources  (processors,  memory,  and storage)  are fully shared  and tightly  coupled  \nwithin one integrated OS.Many data  centers  and supercomputers  are centralized  systems,  but \nthey are used inparallel,  distributed,  and cloud  computing  applications  \n \nParallel  Computing:  \nParallel  computing  is defined  as a type of computing  where  multiple  computer  systems  \nare used simultaneously.  Here  a problem  is broken  into sub-problems  and then further  broken  \ndown  into instructions.  These  instructions  from  each sub-problem  are executed  concurrently  \non different  processors.  \nHere  in the  below diagram, you can see how the  parallel  computing system  consists  of \nmultiple processors that communicate with each other and perform multiple tasks over a  shared  \nmemory  simultaneously.  \n \n \n \nDistributed  Computing:  \n \n \n' metadata={'source': 'ccpdf.pdf', 'page': 23}
"
"page_content='Department of CSE                                                                                                   P age 25 of 26 \n  \n \nDistributed  computing  is defined  as a type of computing  where  multiple  computer  \nsystems work on  a single  problem.  Here all  the computer systems  are linked  together, and  the \nproblem is divided into sub -problems where each part is solved by different computer  systems.  \nThe goal of distributed  computing  is to increase  the performance  and efficiency  of the \nsystem and ensure fault tolerance. In the below diagram, each processor has its own  local  \nmemory,  and all the processors  communicate  with each other  over a network.  \n \n \nCluster  Computing : \nA cluster  is a group  of independent  computers  that work  together  to perform  the tasks  \ngiven.  Cluster  computing  is defined  as a type of computing  that consists  of two  or more  \nindependent computers, referred  to as nodes,  that work together to  execute  tasks as a single  \nmachine.  \nThe goal of cluster  computing is to  increase  the performance, scalability  and simplicity  of the \nsystem. As  you can  see in the  below diagram,  all the nodes,  (irrespective  of whether  they are \na parent  node  or child  node),  act as a single  entity  to perform  the tasks.  \n \n \n \n \n \n \n \nCloud  computing  : \nAn Internet cloud of resources can be either a centralized or a distributed computing  \nsystem. The cloud applies parallel or distributed computing, or both. Clouds can be built with  \nphysical  or virtualized  resources  over large  data centers  thatare  centralized  or distributed  \n \n \n \n \n \n' metadata={'source': 'ccpdf.pdf', 'page': 24}
"
"page_content='Department of CSE                                                                                                   P age 26 of 26 \n  \n \n \n \nGrid  Computing:  \nGrid computing  is defined as  a type of  computing where  it is constitutes  a network  of \ncomputers  that work  together  to perform  tasks  that may be difficult  for a single  machine  to \nhandle.  All the computers  on that network  work  under  the same  umbrella  and are termed  as a \nvirtual  supercomputer.  \nThe tasks  they work  on is of either  high computing  power  and consist  of large  data \nsets. All communication between  the computer  systems in  grid computing is  done on  the “data \ngrid”.The  goal of grid computing  is to solve more high computational  problems  in less time \nand improve  productivity.  \n \n \n \n' metadata={'source': 'ccpdf.pdf', 'page': 25}
"
"page_content=' 1 Contents \n \n1- INTRODUCTION TO INORGANIC CHEMISTRY  \n1- What is Inorganic Chemistry? \n1- Contrasts with Organic Chemistry  \n  \n2-ATOMIC STRUCTURE  \n1- The Periodic Table  \n2-The Aufbau Principle  \n3- Shielding  \n4- Periodic Properties of Atoms \n5- Ionization Energy \n6- Electron Affinity  \n7- Covalent and Ionic Radii  \n \n3-SIMPLE BONDING THEORY  \n1- Lewis Electron-Dot Diagrams  \n2- Resonance  \n3- -2 Expanded Shells  \n4- Formal Charge \n5- Multiple Bonds in Be and B Compounds  \n6- Multiple Bonds  \n7- Electronegativity and Atomic Size Effects  \n8- Polar Molecules \n9- Hydrogen Bonding  \n \n4 - SYMMETRY AND CROUP THEORY  \n1- Symmetry Elements and Operations  \n2- Point Groups \n \n5 - MOLECULAR ORBITALS  \nFormation of Molecular Orbitals from Atomic Orbitals  \n1- Molecular Orbitals from s Orbitals \n2- Molecular Orbitals from p Orbitals  \n3- Molecular Orbitals from d Orbitals  \n4- Nonbonding Orbitals and Other Factors  \nHomonuclear Diatomic Molecules  \n1- Molecular Orbitals  \n2- Orbital Mixing  ' metadata={'source': 'cpdf.pdf', 'page': 0}
"
"page_content=' 2 3- First and Second Row Molecules  \n4- Photoelectron Spectroscopy  \n5- Correlation Diagrams2 \nHeteronuclear Diatomic Molecules  \n1- PolarBonds 134 \n2- Ionic Compounds and Molecular Orbitals  \nMolecular Orbitals for Larger Molecules  \n1- Molecular Shapes  \n2- Hybrid Orbitals  \nExpanded Shells and Molecular Orbitals  \n \n6- ACID-BASE AND DONOR-ACCEPTOR CHEMISTRY 165 \n1- Acid-Base Concepts as Organizing Concepts  \n2- History  \n3- Major Acid-Base Concepts  \n4- Arrhenius Concept  \n5- Bronsted-Lowry Concept  \n6- Solvent System Concept  \n7- Lewis Concept  \n8- Frontier Orbitals and Acid-Base Reactions  \n9- Hydrogen Bonding  \n \nTHE CRYSTALLINE SOLID STATE  \nFormulas and Structures  \n1- Simple Structures  \n \nReferences \n1. GARY L. MIESSLER  \n2. DONALD A. TARR \n3. ROSETTE M. ROAT-MALONE  \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 1}
"
"page_content=' 3 Inorganic \nChemistrv            \n \n \n1-1 WHAT IS INORGANIC CHEMISTRY? \n \nIf organic chemistry is defined as the chemistry of hydrocarbon compounds and \ntheir derivatives, inorganic chemistry can be described broadly as the chemistry of \n""every-thing else."" This includes all the remaining elements in the periodic table, as well \nas carbon, which plays a major role in many inorganic compounds. Organometallic \nchemistry, a very large and rapidly growing field, bridges both areas by considering \ncompounds containing direct metal-carbon bonds, and includes catalysis of many organic \nreactions. Bioinorganic chemistry bridges biochemistry and inorganic chemistry, and \nenvironmental chemistry includes the study of both inorganic and organic compounds. As \ncan be imagined, the inorganic realm is extremely broad, providing essentially limitless \nareas for investigation. \n \n1-2 CONTRASTS  WITH ORGANIC  CHEMISTRY  \n \nSome comparisons between organic and inorganic compounds are in order. In both \nareas, single, double, and triple covalent bonds are found, as shown in Figure 1-1; for \ninorganic compounds, these include direct metal-metal bonds and metal-carbon bonds. \nHowever, although the maximum number of bonds between two carbon atoms is three, \nthere are many compounds containing quadruple bonds between metal atoms. In addition \nto the sigma and pi bonds common in organic chemistry, quadruple bonded metal atoms \ncontain a delta bond (Figure 1-2); a combination of one sigma bond, two pi bonds, and \none delta bond makes up the quadruple bond. The delta bond is possible in these cases \nbecause metal atoms have d orbitals to use in bonding, whereas carbon has only s and p \norbitals available. In organic compounds, hydrogen is nearly always bonded to a single \ncarbon. In inorganic compounds, especially of the Group 13 (IIIA) elements, hydrogen is \nfrequently encountered as a bridging atom between two or more other atoms. Bridging \nhydrogen atoms can also occur in metal cluster compounds. In these clusters, hydrogen \natoms form bridges across edges or faces of polyhedral of metal atoms. Alkyl groups may \nalso act as bridges in inorganic compounds, a function rarely encountered in organic \nchemistry (except in reaction intermediates). Examples of terminal and bridging \nhydrogen atoms and alkyl groups in inorganic compounds are shown in Figure 1-3. \n ' metadata={'source': 'cpdf.pdf', 'page': 2}
"
"page_content=' 4 \n \n \n \n \n \n \nSome of the most striking differences between the chemistry of carbon and that of \nmany other elements are in coordination number and geometry. Although carbon is \nusually limited to a maximum coordination number of four (a maximum of four atoms ' metadata={'source': 'cpdf.pdf', 'page': 3}
"
"page_content=' 5 bonded to carbon, as in CH4), inorganic compounds having coordination numbers of \nfive, six, seven, and more are very common; the most common coordination geometry is \nan octahedral arrangement around a central atom, as shown for [TiF 6]-3  in Figure  1-4. \n \n \n \nFurthermore, inorganic compounds present coordination geometries different from \nthose found for carbon. For example, although 4-coordinate carbon is nearly always \ntetrahedral, both tetrahedral and square planar shapes occur for 4-coordinate compounds \nof both metals and nonmetals. When metals are the central atoms, with anions or neutral \nmolecules bonded to them (frequently through N, 0, or S), these are called coordination \ncomplexes; when carbon is the element directly bonded to metal atoms or ions, they are \ncalled organometallic compounds. \n \nThe tetrahedral geometry usually found in 4-coordinate compounds of carbon also \noccurs in a different form in some inorganic molecules. Methane contains four hydrogens \nin a regular tetrahedron around carbon. Elemental phosphorus is tetratomic (P 4) and also \nis tetrahedral, but with no central atom. Examples of some of the geometries found for ' metadata={'source': 'cpdf.pdf', 'page': 4}
"
"page_content=' 6 inorganic compounds are shown in Figure 1-4. Aromatic rings are common in organic \nchemistry, and aryl groups can also form sigma bonds to metals. However, aromatic rings \ncan also bond to metals in a dramatically different fashion using their pi orbitals, as \nshown in Figure 1-5. The result is a metal atom bonded above the center of the ring, \nalmost as if suspended in space. In many cases, metal atoms are sandwiched between two \naromatic rings. Multiple-decker sandwiches of metals and aromatic rings are also known. \n \n \n \nCarbon plays an unusual role in a number of metal cluster compounds in which a \ncarbon atom is at the center of a polyhedron of metal atoms. Examples of carbon-\ncentered clusters of five, six, or more metals are known; two of these are shown in Figure \n1-6. The contrast of the role that carbon plays in these clusters to its usual role in organic \ncompounds is striking, and attempting to explain how carbon can form bonds to the \nsurrounding metal atoms in clusters has provided an interesting challenge to theoretical \ninorganic chemists. \n In addition, during the past decade, the realm of a new class of carbon clusters, the \nfullerenes, has flourished. The most common of these clusters, C 60, has been labeled \n""buckminsterfullerene"" after the developer of the geodesic dome and has served as the \ncore of a variety of derivatives (Figure 1-7). \nThere are no sharp dividing lines between subfields in chemistry, such as acid-base \nchemistry and organometallic reactions, are of vital interest to organic chemists. Others, ' metadata={'source': 'cpdf.pdf', 'page': 5}
"
"page_content=' 7 such as oxidation-reduction reactions, spectra, and solubility relations, also interest \nanalytical chemists. Subjects related to structure \ndetermination, spectra, and theories of bonding appeal to physical chemists. Finally, the \nuse of organometallic catalysts provides a connection to petroleum and polymer \nchemistry, and the presence of coordination compounds such as hemoglobin and metal-\ncontaining enzymes provides a similar tie to biochemistry. This list is not intended to \ndescribe a fragmented field of study, but rather to show some of the interconnections \nbetween inorganic chemistry and other fields of chemistry. \n \n \nNUCLEAR REACTIONS AND RADIOACTIVITY \n          Some nuclei were formed that were stable, never undergoing further reactions. \nOthers   have lifetimes ranging from 1016 years to 10-l6 second. The usual method of \ndescribing nuclear decay is in terms of the half-life, or the time needed for half the nuclei \nto react. Because decay follows first-order kinetics, the half-life is a well defined value, \nnot dependent on the amount present. In addition to the overall curve of  nuclear stability, \nwhich has its most stable region near atomic number Z = 26, combinations of protons and \nneutrons at each atomic number exhibit different stabilities. In some elements such as \nfluorine ( 1 9 F ) , there is only one stable isotope (a specific combination of protons and \nneutrons). In others, such as chlorine, there are two or more stable isotopes. 35CI has a     \nnatural abundance of 75.77%, and 37CI has a natural abundance of 24.23%. Both are \nstable, as are all the natural isotopes of the lighter elements. The radioactive isotopes of \nthese elements have short half-lives and have had more than enough time to decay to \nmore stable elements. 3H, 14C, and a few other radioactive nuclei are continually being \nformed by cosmic rays and have a low constant concentration. \n Heavier elements (Z = 40 or higher) may also have radioactive isotopes with longer \nhalf-lives. As a result, some of these radioactive isotopes have not had time to decay \ncompletely, and the natural substances are radioactive. Further discussion of isotopic \nabundances and radioactivity can be found in larger or more specialized sources.  \nAs atomic mass increases, the ratio of neutrons to protons in stable isotopes \ngradually increases from 1 : 1 to 1.6 : 1 for 238\n92U. There is also a set of nuclear energy \nlevels similar to the electron energy levels described in Chapter 2 that result in stable \nnuclei with 2, 8, 20, 28, 50, 82, and 126 protons or neutrons. In nature, the most stable \nnuclei are those with the numbers of both protons and neutrons matching one of these \nnumbers; 4 2 He, 16 8 0, 40 20 ca, and ;208 82 pb are examples. \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 6}
"
"page_content="" 8 \n \n \nThe theories of atomic and molecular structure depend on quantum mechanics to \ndescribe atoms and molecules in mathematical terms. Although the details of quantum \nmechanics require considerable mathematical sophistication, it is possible to understand \nthe principles involved with only a moderate amount of mathematics. This chapter \npresents the fundamentals needed to explain atomic and molecular structures in \nqualitative or semiquantitative terms. \n \n \n2-1-1 THE PERIODIC TABLE \n \nThe idea of arranging the elements into a periodic table had been considered by \nmany chemists, but either the data to support the idea were insufficient or the \nclassification schemes were incomplete. Mendeleev and Meyer organized the elements in \norder of atomic weight and then identified families of elements with similar properties. \nBy arranging these families in rows or columns, and by considering similarities in \nchemical behavior as well as atomic weight, Mendeleev found vacancies in the table and \nwas able to predict the properties of several elements (gallium, scandium, germanium, \npolonium) that had not yet been discovered. When his predictions proved accurate, the \nconcept of a periodic table was quickly established . The discovery of additional elements \nnot known in Mendeleev's time and the synthesis of heavy elements have led to the more \ncomplete modern periodic table, shown inside the front cover of this text. \n In the modern periodic table, a horizontal row of elements is called a period, and a \nvertical column is a group or family. The traditional designations of groups in the United \nStates differ from those used in Europe. The International Union of Pure and Applied \nChemistry (IUPAC) has recommended that the groups be numbered I through 18, a \nrecommendation that has generated considerable controversy. In this text, we will  use the \nIUPAC group numbers, with the traditional American numbers in parentheses. Some \nsections of the periodic table have traditional names, as shown in Figure 2-1. "" metadata={'source': 'cpdf.pdf', 'page': 7}
"
"page_content="" 9 \n \n \n \n2-1-2 DISCOVERY OF SUBATOMIC PARTICLES AND THE BOHR ATOM \n \nDuring the 50 years after the periodic tables of Mendeleev and Meyer were \nproposed, experimental advances came rapidly. Some of these discoveries are shown in \nTable 2-1. Parallel discoveries in atomic spectra showed that each element emits light of \nspecific energies when excited by an electric discharge or heat. In 1885, Balmer showed \nthat the energies of visible light emitted by the hydrogen atom are given by the equation \n \n \n \nwhere \nnh = integer, with nh > 2 \nRH = Rydberg constant for hydrogen = 1.097 X lo7 m-' = 2.179 X 10-18J and the energy \nis related to the wavelength, frequency, and wave number of the light, as given by the \nequation \n "" metadata={'source': 'cpdf.pdf', 'page': 8}
"
"page_content=' 10\n \n \nThe Balmer equation was later made more general, as spectral lines in the \nultraviolet and infrared regions of the spectrum were discovered, by replacing 22 by nf, \nwith the condition that nl < nh . These quantities, ni, are called quantum numbers. \n(These are the principal quantum numbers; other quantum numbers are discussed in \nSection 2-2-2.) The origin of this energy was unknown until Niels Bohr\'s quantum theory \nof the atom,"" first published in 1913 and refined over the following 10 years. This theory \nassumed that negative electrons in atoms move in stable circular orbits around the \npositive nucleus with no absorption or emission of energy. However, electrons may \nabsorb light of certain specific energies and be excited to orbits of higher energy; they \nmay also emit light of specific energies and fall to orbits of lower energy. The energy of \nthe light emitted or absorbed can be found, according to the Bohr model of the hydrogen \natom, from the  equation  \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 9}
"
"page_content="" 11This equation shows that the Rydberg constant depends on the mass of the nucleus \nas well as on the fundamental constants. Examples of the transitions observed for the \nhydrogen atom and the energy levels responsible are shown in Figure 2-2. As the \nelectrons drop from level nh to nl (h for higher level, 1 for lower level), energy is \nreleased in the form of electromagnetic radiation. Conversely, if radiation of the correct \nenergy is absorbed by an atom, electrons are raised from level nl to level nh. The inverse-\nsquare dependence of energy on nl results in energy levels that are far apart in energy at \nsmall nl and become much closer in energy at larger nl. In the upper limit, as nl \napproaches infinity, the energy approaches a limit of zero. Individual electrons can have \nmore energy, but above this point they are no longer part of the atom; an infinite quantum \nnumber means that the nucleus and the electron are separate entities. \n \n \nEXERCISE 2-1  \nFind the energy of the transition from nh = 3 to nl = 2 for the hydrogen atom in both \njoules and cm-' (a common unit in spectroscopy). This transition results in a red line in \nthe visible emission spectrum of hydrogen.  \n \n \nWhen applied to hydrogen, Bohr's theory worked well; when atoms with more \nelectrons were considered, the theory failed. Complications such as elliptical rather than \ncircular orbits were introduced in an attempt to fit the data to Bohr's theory.' The \ndeveloping experimental science of atomic spectroscopy provided extensive data for \ntesting of the Bohr theory and its modifications and forced the theorists to work hard to \nexplain the spectroscopists' observations. In spite of their efforts, the Bohr theory \neventually proved unsatisfactory; the energy levels shown in Figure 2-2 are valid only for \nthe hydrogen atom. An important characteristic of the electron, its wave nature, still \nneeded to be considered. According to the de Broglie equation,12 proposed in the 1920s, \nall moving particles have wave properties described by the equation \n \n \n \nParticles massive enough to be visible have very short wavelengths, too small to be \nmeasured. Electrons, on the other hand, have wave properties because of their very small \nmass. Electrons moving in circles around the nucleus, as in Bohr's theory, can be thought \nof as forming standing waves that can be described by the de Broglie equation. However, "" metadata={'source': 'cpdf.pdf', 'page': 10}
"
"page_content="" 12we no longer believe that it is possible to describe the motion of an electron in an atom so \nprecisely. This is a consequence of another fundamental principle of modern physics, \nHeisenberg's uncertainty principle , which states that there is a relationship  \n \n \n \n "" metadata={'source': 'cpdf.pdf', 'page': 11}
"
"page_content=' 132-2-2 QUANTUM NUMBERS AND ATOMIC WAVE FUNCTIONS \n \nThe particle in a box example shows how a wave function operates in one \ndimension. Mathematically, atomic orbitals are discrete solutions of the three-\ndimensional Schrodinger equations. The same methods used for the one-dimensional box \ncan be expanded to three dimensions for atoms. These orbital equations include three  \nquantum numbers, n, 1, and ml. A fourth quantum number, m,, a result of relativistic \ncorrections to the Schrodinger equation, completes the description by accounting for the \nmagnetic moment of the electron. The quantum numbers are summarized in Tables 2-2, \n2-3, and 2-4. \n \n \n \n \n \nNodal surfaces \nAt large distances from the nucleus, the electron density, or probability of finding \nthe electron, falls off rapidly. The 2s orbital also has a nodal surface, a surface with zero \nelectron density, in this case a sphere with r = 2ao where the probability is zero. Nodes \nappear naturally as a result of the wave nature of the electron; they occur in the functions \nthat result from solving the wave equation for 9. A node is a surface where the wave \nfunction is zero as it changes sign (as at r = 2ao, in the 2s orbital); this requires that = 0, \nand the probability of finding the electron at that point is also zero. If the probability of \nfinding an electron is zero (q2= O), 9 must also be equal to zero. Because  \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 12}
"
"page_content="" 142-2-3 THE AUFBAU PRINCIPLE \n \nLimitations on the values of the quantum numbers lead to the familiar aufbau \n(German, Auflau, building up) principle, where the buildup of electrons in atoms results \nfrom continually increasing the quantum numbers. Any combination of the quantum \nnumbers presented so far correctly describes electron behavior in a hydrogen atom, where \nthere is only one electron. However, interactions between electrons in polyelectronic \natoms require that the order of filling of orbitals be specified when more than one \nelectron is in the same atom. In this process, we start with the lowest n, 1, and ml, values \n(1, 0, and 1 0, respectively) and either of the rn, values (we will arbitrarily use - 3 \nfirst). Three rules will then give us the proper order for the remaining electrons as we \nincrease the quantum numbers in the order ml, m,, I , and n. \n \n1. Electrons are placed in orbitals to give the lowest total energy to the atom. \nThis means that the lowest values of n and I are filled first. Because the \norbitals within each set (p, d, etc.) have the same energy, the orders for values \nof ml and m, are indeterminate. \n2. The Pauli exclusion principle requires that each electron in an atom have a \nunique set of quantum numbers. At least one quantum number must be \ndifferent from those of every other electron. This principle does not come \nfrom the Schrodinger equation, but from experimental determination of \nelectronic structures. \n3. Hund's rule of maximum multiplicity  requires that electrons be placed in \norbitals so as to give the maximum total spin possible (or the maximum \nnumber of parallel spins). Two electrons in the same orbital have a higher \nenergy than two electrons in different orbitals, caused by electrostatic \nrepulsion (electrons in the same orbital repel each other more than electrons in \nseparate orbitals). Therefore, this rule is a consequence of the lowest possible \nenergy rule (Rule 1). When there are one to six electrons in p orbitals, the \nrequired arrangements are those given in Table 2-6. The multiplicity is the \nnumber of unpaired electrons plus 1, or n + I. This is the number of possible \nenergy levels that depend on the orientation of the net magnetic moment in a \nmagnetic field. Any other arrangement of electrons results in fewer unpaired \nelectrons. This is only one of Hund's rules. \n \n \n \n \n \n \n \n \n \n \n \n "" metadata={'source': 'cpdf.pdf', 'page': 13}
"
"page_content=' 15\n \n \nFig. 1. Showing the order of filling of orbitals in the periodic table.  \n \n \n \n \n \n \nThis rule is a consequence of the energy required for pairing electrons in the same orbital. When two \nelectrons occupy the same part of the space around an atom, they repel each other \nbecause of their mutual negative charges with a Coulombic energy of repulsion, II, \nper pair of electrons. As a result, this repulsive force favors electrons in different orbitals \n(different regions of space) over electrons in the same orbitals. In addition, there is \nexchange  energy, II, which arises from purely quantum mechanical considerations. \nThis energy depends on the number of possible exchanges between two electrons with ' metadata={'source': 'cpdf.pdf', 'page': 14}
"
"page_content=' 16the same energy and the same spin. For example, the electron configuration of a carbon \natom is 1S2 2S2 2P2. Three arrangements  of the 2p electrons can be considered: \n \n \n \nThe first arrangement involves Coulombic energy, Πc, because it is the only one that \npairs electrons in the same orbital. The energy of this arrangement is higher than that of \nthe other two by Πc, as a result of electron-electron repulsion. \nIn the first two cases there is only one possible way to arrange the electrons to give the \nsame diagram, because there is only a single electron in each having + or - spin. \nHowever, in the third case there are two possible ways in which the electrons can be \narranged: \n \n \n \nThe exchange energy is n, per possible exchange of parallel electrons and is negative. \nThe higher the number of possible exchanges, the lower the energy. Consequently, the \nthird configuration is lower in energy than the second by Πe .The results may be \nsummarized in an energy diagram: \n ' metadata={'source': 'cpdf.pdf', 'page': 15}
"
"page_content=' 17\n \nThese two pairing terms add to produce the total pairing energy, n:  \n \nThe Coulombic energy, IT,, is positive and is nearly constant for each pair of \nelectrons. The exchange energy, n,, is negative and is also nearly constant for each \npossible exchange of electrons with the same spin. When the orbitals are degenerate \n(have the same energy), both Coulombic and pairing energies favor the unpaired \nconfiguration over the paired configuration. If there is a difference in energy between the \nlevels involved, this difference, in combination with the total pairing energy, determines \nthe final configuration. For atoms, this usually means that one set of orbitals is filled \nbefore another has any electrons. However, this breaks down in some of the transition \nelements, because the 4s and 3d (or the higher corresponding levels) are so close in \nenergy that the pairing energy is nearly the same as the difference between levels.  ' metadata={'source': 'cpdf.pdf', 'page': 16}
"
"page_content="" 18\n \n \n \nMany schemes have been used to predict the order of filling of atomic orbitals. One, \nknown as Klechkowsky's rule, states that the order of filling the orbitals proceeds from \nthe lowest available value for the sum n + 1. When two combinations have the same \nvalue, the one with the smaller value of n is filled first. Combined with the other rules, \nthis gives the order of filling of most of the orbitals. One of the simplest methods that fits \nmost atoms uses the periodic table blocked out as in Figure 2-9. The electron \nconfigurations of hydrogen and helium are clearly 1s' and 1s2. After that, the elements in \nthe first two columns on the left (Groups 1 and 2 or IA and IIA) are filling s orbitals, with \n1 = 0; those in the six columns on the right (Groups 13 to 18 or IIIA to VIIIA) are filling \np orbitals, with 1 = 1; and the ten in the middle (the transition elements, Groups 3 to 12 \nor IIIB to IIB) are filling d orbitals, with 1 = 2. The lanthanide and actinide series \n(numbers 58 to 71 and 90 to 103) are filling f orbitals, with 1 = 3. Either of these two \nmethods is too simple, as shown in the following paragraphs, but they do fit most atoms \nand provide starting points for the others. \n \n "" metadata={'source': 'cpdf.pdf', 'page': 17}
"
"page_content=' 19\n \n \n \n2-2-4 SHIELDING \n \nIn atoms with more than one electron, energies of specific levels are difficult to \npredict quantitatively, but one of the more common approaches is to use the idea of \nshielding. Each electron acts as a shield for electrons farther out from the nucleus, \nreducing the attraction between the nucleus and the distant electrons. \nAlthough the quantum number n is most important in determining the energy, 1 \nmust also be included in the calculation of the energy in atoms with more than one \nelectron. As the atomic number increases, the electrons are drawn toward the nucleus and \nthe orbital energies become more negative. Although the energies decrease with \nincreasing Z, the changes are irregular because of shielding of outer electrons by inner \nelectrons. The resulting order of orbital filling for the electrons is shown in Table 2-7.  \nAs a result of shielding and other more subtle interactions between the electrons, \nthe simple order of orbitals (in order of energy increasing with increasing n) holds only at \nvery low atomic number Z and for the innermost electrons of any atom. For the outer \norbitals, the increasing energy difference between levels with the same n but different 1 \nvalues forces the overlap of energy levels with n = 3 and n = 4, and 4s fills before 3d. In \na similar fashion, 5s fills before 4d, 6s before Sd, 4f before Sd, and 5f before 6d       \n(Figure 2-10).  \nSlater  formulated a set of simple rules that serve as a rough guide to this effect. He \ndefined the effective nuclear charge Z* as a measure of the nuclear attraction for an \nelectron. Z* can be calculated from Z* = Z - S, where Z is the nuclear charge and S is the \nshielding constant. The rules for determining S for a specific electron are as follows: \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 18}
"
"page_content=' 201. The electronic structure of the atom is written in groupings as follows:                         \n(1s) (2s,2 p) (3s,3 p) ( 3 4 ( 4s,4 p) ( 4 4 ( 4 f )( 5s,5p) etc . \n2. Electrons in higher groups (to the right in the list above) do not shield those in .lower \ngroups. \n3. For ns or np valence electrons: \na. Electrons in the same ns, np group contribute 0.35, except the Is, where 0.30 works \nbetter. \nb. Electrons in the n - 1 group contribute 0.85. \nc. Electrons in the n - 2 or lower groups contribute 1.00. \n4. For nd and nf valence electrons: \na. Electrons in the same nd or nf group contribute 0.35. \nb. Electrons in groups to the left contribute 1.00. \n \nThe shielding constant S obtained from the sum of the contributions above is \nsubtracted from the nuclear charge Z to obtain the effective nuclear charge Z* affecting \nthe selected electron. Some examples follow. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 19}
"
"page_content=' 21\n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 20}
"
"page_content=' 22\n \n \n \n \n \n \n \n  ' metadata={'source': 'cpdf.pdf', 'page': 21}
"
"page_content=' 23\n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 22}
"
"page_content=' 24Justification for Slater\'s rules (aside from the fact that they work) comes from the \nelectron probability curves for the orbitals. The s and p orbitals have higher probabilities \nnear the nucleus than do d orbitals of the same n, as shown earlier in Figure 2-7. \nTherefore, the shielding of 3d electrons by (3s, 3p) electrons is calculated as 100% \neffective (a contribution of 1.00). At the same time, shielding of 3s or 3p electrons by (2s, \n2p) electrons is only 85% effective (a contribution of0.85), because the 3s and 3p orbitals \nhave regions of significant probability close to the nucleus. Therefore, electrons in these \norbitals are not completely shielded by (2s, 2p) electrons.  \nA complication arises at Cr (2 = 24) and Cu (2 = 29) in the first transition series and \nin an increasing number of atoms under them in the second and third transition series. \nThis effect places an extra electron in the 3d level and removes one electron from the 4s \nlevel. Cr, for example, has a configuration of [Ar] 4 S l  3d 5 (rather than [Ar ] 4 S 2 3d 4) . \nTraditionally, this phenomenon has often been explained as a consequence of the ""special \nstability of half-filled subshells."" Half-filled and filled d and f subshells are, in fact, fairly \ncommon, as shown in Figure 2-11. A more accurate explanation considers both the \neffects of increasing nuclear charge on the energies of the 4s and 3d levels and the \ninteractions (repulsions) between the electrons sharing the same orbital. This approach \nrequires totaling the energies of all the electrons with their interactions; results of the \ncomplete calculations match the experimental results.  \n \n \n \n اﻟﺸﻜﻞ ﯾﻮﺿﻊ  ھﻨﺎ) ٢ -٠١ ( \n \n \nPERIODIC PROPERTIES OF ATOMS \n \n 2-3-1 IONIZATION ENERGY  \n \nThe ionization energy, also known as the ionizationp otential, is the energy required \ntoremove an electron from a g aseous atom or ion:  \n \n \n \n \nwhere n = 0 (first ionization energy), 1, 2, . . . (second, third, . . . ) \n \nAs would be expected from the effects of shielding, the ionization energy varies \nwith different nuclei and different numbers of electrons. Trends for the first ionization \nenergies of the early elements in the periodic table are shown in Figure 2- 13. The general \ntrend across a period is an increase in ionization energy as the nuclear charge increases. A \nplot of Z""/r, the potential energy for attraction between an electron and the shielded \nnucleus, is nearly a straight line, with approximately the same slope as the shorter \nsegments (boron through nitrogen, for example) shown in Figure 2- 13 (a different \nrepresentation is shown later, in Figure 8-3). However, the experimental values show a \nbreak in the trend at boron and again at oxygen. Because the new electron in B is in a ' metadata={'source': 'cpdf.pdf', 'page': 23}
"
"page_content=' 25new p orbital that has most of its electron density farther away from the nucleus than the \nother electrons, its ionization energy is smaller than that of the 2s2 electrons of Be. At the \nfourth p electron, at oxygen, a similar drop in ionization energy occurs. Here, the new \nelectron shares an orbital with one of the previous 2p electrons, and the fourth p electron \nhas a higher energy than the trend would indicate because it must be paired with another \nin the same p orbital. The pairing energy, or repulsion between two electrons in the same \nregion of space, reduces the ionization energy. Similar patterns appear in lower periods. \nThe transition elements have smaller differences in ionization energies, usually with a \nlower value for heavier atoms in the same family because of increased shielding by inner \nelectrons and increased distance between the nucleus and the outer electrons. \n \n \n \n \nMuch larger decreases in ionization energy occur at the start of each new period, \nbecause the change to the next major quantum number requires that the new s electron \nhave a much higher energy. The maxima at the noble gases decrease with increasing Z \nbecause the outer electrons are farther from the nucleus in the heavier elements. Overall, \nthe trends are toward higher ionization energy from left to right in the periodic table (the \nmajor change) and lower ionization energy from top to bottom (a minor change). The \ndifferences described in the previous paragraph are superimposed on these more general \nchanges. \n \n2-3-2 ELECTRON AFFINITY \nElectron affinity can be defined as the energy required removing an electron from a \nnegative ion: \n   A- (g)                               A (g) + e- electron affinity = AU(or EA) \n \n(Historically, the definition is -AU for the reverse reaction, adding an electron to the \nneutral atom. The definition we use avoids the sign change.) Because of the similarity of \nthis reaction to the ionization for an atom, electron affinity is sometimes described as the \nzero ionization energy. This reaction is endothermic (positive AU), except for the noble \ngases and the alkaline earth elements. The pattern of electron affinities with changing Z \nshown in Figure 2-13 is similar to that of the ionization energies, but for one larger Z \nvalue (one more electron for each species) and with much smaller absolute numbers. For ' metadata={'source': 'cpdf.pdf', 'page': 24}
"
"page_content=' 26either of the reactions, removal of the first electron past a noble gas configuration is easy, \nso the noble gases have the lowest electron affinities. The electron affinities are all much \nsmaller than the corresponding ionization energies because electron removal from a \nnegative ion is easier than removal from a neutral atom. \n \n2-3-3 COVALENT AND IONIC RADII \n \nThe sizes of atoms and ions are also related to the ionization energies and electron \naffinities. As the nuclear charge increases, the electrons are pulled in toward the center of \nthe atom, and the size of any particular orbital decreases. On the other hand, as the \nnuclear charge increases, more electrons are added to the atom and their mutual repulsion \nkeeps the outer orbitals large. The interaction of these two effects (increasing nuclear \ncharge and increasing number of electrons) results in a gradual decrease in atomic size \nacross each period. Table 2-8 gives nonpolar covalent radii, calculated for ideal \nmolecules with  no polarity. There are other measures of atomic size, such as the van der \nWaals radius, in which collisions with other atoms are used to define the size. It is \ndifficult to obtain consistent data for any such measure, because the polarity, chemical \nstructure, and physical state of molecules change drastically from one compound to \nanother. The numbers shown here are sufficient for a general comparison of one element \nwith another. There are similar problems in determining the size of ions. Because the \nstable ions of the different elements have different charges and different numbers of \nelectrons, as well as different crystal structures for their compounds, it is difficult to find \na suitable set of numbers for comparison. Earlier data were based on Pauling\'s approach, \nin which the ratio of the radii of isoelectronic ions was assumed to be equal to the ratio of \ntheir effective nuclear charges. More recent calculations are based on a number of \nconsiderations, including electron density maps from X-ray data that show larger cations \nand smaller anions than those previously found. Those in Table 2-9 and Appendix B were \ncalled ""crystal radii"" by Shannon and are generally different from the older values of \n""ionic radii"" by + 14 pm for cations and - 14 pm for anions, as well as being revised \nbecause of more recent measurements. The radii in Table 2-9 and Appendix B-1 can be \nused for rough estimation of the packing of ions in crystals and other calculations, as long \nas the ""fuzzy"" nature of atoms and ions is kept in mind. Factors that influence ionic size \ninclude the coordination number of the ion, the;  covalent character of the bonding, \ndistortions of regular crystal geometries, and delocalization of electrons (metallic or \nsemiconducting character). The radius of the anion is also influenced by the size and \ncharge of the cation (the anion exerts a smaller influence on the radius of the cation).  \n ' metadata={'source': 'cpdf.pdf', 'page': 25}
"
"page_content=' 27\n \n \n \nThe values in Table 2-10 show that anions are generally larger than cations with \nsimilar numbers of electrons (F- and Na+ differ only in nuclear charge, but the radius of \nfluoride is 37% larger). The radius decreases as nuclear charge increases for ions with the \nsame electronic structure, such as 02-, F -, Na+ and Mg2+, with a much larger change with \nnuclear charge for the cations. Within a family, the ionic radius increases as Z increases \nbecause of the larger number of electrons in the ions and, for the same element, the radius \ndecreases with increasing charge on the cation. Examples of these trends are shown in \nTables 2- 10, 2- 11, and 2- 12. ' metadata={'source': 'cpdf.pdf', 'page': 26}
"
"page_content=' 28\n \n \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 27}
"
"page_content=' 29\n \n \n \nWe now turn from the use of quantum mechanics and its description of the atom to \nan elementary description of molecules. Although most of the discussion of bonding in \nthis book uses the molecular orbital approach to chemical bonding, simpler methods that \nprovide approximate pictures of the overall shapes and polarities of molecules are also \nvery useful. This chapter provides an overview of Lewis dot structures, valence shell \nelectron pair repulsion (VSEPR), and related topics. General chemistry texts include \ndiscussions of most of these topics; this chapter provides a review for those who have not \nused them recently. Ultimately, any description of bonding must be consistent with \nexperimental data on bond lengths, bond angles, and bond strengths. Angles and \ndistances are most frequently determined by diffraction (X-ray crystallography, electron \ndiffraction, neutron diffraction) or spectroscopic (microwave, infrared) methods. For \nmany molecules, there is general agreement on the bonding, although there are alternative \nways to describe it. \n \n \n \n \n \n \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 28}
"
"page_content=' 30LEWIS ELECTRON DOT DIAGRAMS  \n \nLewis electron-dot diagrams, although very much oversimplified, provide a good \nstarting point for analyzing the bonding in molecules. Credit for their initial use goes to \nG. N. Lewis, an American chemist who contributed much to thermodynamics and \nchemical bonding in the early years of the 20th century. In Lewis diagrams, bonds \nbetween two atoms exist when they share one or more pairs of electrons. In addition, \nsome molecules have nonbonding pairs (also called lone pairs) of electrons on atoms. \n \nThese electrons contribute to the shape and reactivity of the molecule, but do not \ndirectly bond the atoms together. Most Lewis structures are based on the concept that \neight valence electrons (corresponding to s and p electrons outside the noble gas core) \nform a particularly stable arrangement, as in the noble gases with s2p6 configurations. An \nexception is hydrogen, which is stable with two valence electrons. Also, some molecules \nrequire more than eight electrons around a given central atom. Simple molecules such as \nwater follow the octet rule, in which eight electrons surround the oxygen atom. The \nhydrogen atoms share two electrons each with the oxygen, forming the familiar picture \nwith two bonds and two lone pairs: \n \n \n \n \n \nShared electrons are considered to contribute to the electron requirements of both \natoms involved; thus, the electron pairs shared by H and 0 in the water molecule are \ncounted toward both the 8-electron requirement of oxygen and the 2-electron requirement \nof hydrogen. Some bonds are double bonds, containing four electrons, or triple bonds, \ncontaining six electrons: \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 29}
"
"page_content=' 313-1 -1 RESONANCE \n \nIn many molecules, the choice of which atoms are connected by multiple bonds is \narbitrary. When several choices exist, all of them should be drawn. For example, as \nshown in Figure 3-1, three drawings (resonance structures) of CO 32- are -needed to show \nthe double bond in each of the three possible C-0 positions. In fact, experimental \nevidence shows that all the C-0 bonds are identical, with bond lengths (129 pm) between \ndouble-bond and single-bond distances (116 pm and 143 pm respectively); none of the \ndrawings alone is adequate to describe the molecular structure, which is a combination of \nall three, not an equilibrium between them. This is called resonance to signify that there \nis more than one possible way in which the valence electrons can be placed in a Lewis \nstructure. Note that in resonance structures, such as those shown for CO 32- in Figure 3-1, \nthe electrons are drawn in different places but the atomic nuclei remain in fixed positions.  \nThe species CO 32-, NO 3-, and SO 3, are isoelectronic (have the same electronic \nstructure). Their Lewis diagrams are identical, except for the identity of the central atom. \nWhen a molecule has several resonance structures, its overall electronic energy is \nlowered, making it more stable. Just as the energy levels of a particle in a box are \nlowered by making the box larger, the electronic energy levels of the bonding electrons \nare lowered when the electrons can occupy a larger space.  \n \n \n \n \n \n \n3-1-2 EXPANDED SHELLS \n \nWhen it is impossible to draw a structure consistent with the octet rule, it is \nnecessary to increase the number of electrons around the central atom. An option limited \nto elements of the third and higher periods is to use d orbitals for this expansion, although \nmore recent theoretical work suggests that expansion beyond the s and P orbitals is \nunnecessary for most main group molecules. In most cases, two or four added electrons \nwill complete the bonding, but more can be added if necessary. Ten electrons are required \naround chlorine in ClF 3 and 12 around sulfur in SF 6 (Figure 3-2). The increased number \nof electrons is described as an expanded shell or an expanded electron count. \n ' metadata={'source': 'cpdf.pdf', 'page': 30}
"
"page_content=' 32There are examples with even more electrons around the central atom, such as IF 7 \n(14 electrons), [TaF]-8  (16 electrons), and [ XeF 8 ]-2  (18  electrons). There are rarely \nmore than 18 electrons (2 for S, 6 for P , and 10 for d orbitals) around a single atom in the \ntop half of the periodic table, and crowding of the outer atoms usually keeps the number \nbelow this, even for the much heavier atoms with f orbitals energetically available. \n \n \n3-1-3 FORMAL CHARGE \n \nFormal charges can be used to help in the assessment of resonance structures . The \nuse of formal charges is presented here as a simplified method of describing structures, \njust as the Bohr atom is a simple method of describing electronic configurations in atoms. \nBoth of these methods are incomplete and newer approaches are more accurate, but they \ncan be useful as long as their limitations are kept in mind. Formal charges can help in \nassigning bonding when there are several possibilities. This can eliminate the least likely \nforms when we are considering resonance structures and, in some cases, suggests \nmultiple bonds beyond those required by the octet rule. It is essential, however, to \nremember that formal charge is only a tool for assessing Lewis structures, not a measure \nof any actual charge on the atoms. Formal charge is the apparent electronic charge of \neach atom in a molecule, based on the electron-dot structure. The number of valence \nelectrons available in a free atom of an element minus the total for that atom in the \nmolecule (determined by counting lone pairs as two electrons and bonding pairs as one \nassigned to each atom) is the formal charge on the atom:  \n \n \nIn addition, \nCharge on the molecule or ion = sum of all the formal charges Structures minimizing \nformal charges, placing negative formal charges on more electronegative (in the upper \nright-hand part of the periodic table) elements, and with smaller separation of charges \ntend to be favored. Examples of formal charge calculations are given in Appendix D for \nthose who need more review. Three examples, SCN-, OCN-, and CNO-, will illustrate the \nuse of formal charges in describing electronic structures. \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 31}
"
"page_content=' 33\n \n3-1-4 MULTIPLE BONDS IN Be AND B COMPOUNDS  \n \nA few molecules, such as BeF 2, BeC1 2, and BF 3, seem to require multiple bonds to \nsatisfy the octet rule for Be and B, even though we do not usually expect multiple bonds \nfor fluorine and chlorine. Structures minimizing formal charges for these molecules have \nonly four electrons in the valence shell of Be and six electrons in the valence shell of B, \nin both cases less than the usual octet. The alternative, requiring eight electrons on the \ncentral atom, predicts multiple bonds, with BeF 2 analogous to C0 2 and BF 3 analogous to \nSO 3 (Figure 3-7). These structures, however, result in formal charges (2- on Be and 1 + \non F in BeF2, and 1 - on B and I + on the double-bonded F in BF 3), which are unlikely by \nthe usual rules. \nIt has not been experimentally determined whether the bond lengths in BeF 2 and \nBeC1 2 are those of double bonds, because molecules with clear-cut double bonds are not \navailable for comparison. In the solid, a complex network is formed with coordination \nnumber 4 for the Be atom (see Figure 3-7). BeC1 2 tends to dimerize to a 3-coordinate \nstructure in the vapor phase, but the linear monomer is also known at high temperatures. \nThe monomeric structure is unstable; in the dimer and polymer, the halogen atoms share \nlone pairs with the Be atom and bring it closer to the octet structure. The monomer is still \nfrequently drawn as a singly bonded structure with only four electrons around the \nberyllium and the ability to accept more from lone pairs of other molecules (Lewis acid \nbehavior). ' metadata={'source': 'cpdf.pdf', 'page': 32}
"
"page_content=' 34Bond lengths in all the boron trihalides are shorter than expected for single bonds, so the \npartial double bond character predicted seems reasonable in spite of the formal charges. \nMolecular orbital calculations for these molecules support significant double bond \ncharacter. On the other hand, they combine readily with other molecules that can  \ncontribute a lone pair of electrons (Lewis bases), forming a roughly tetrahedral structure with four \nbonds:  \n \n \n \n \n \n \nBecause of this tendency, they are frequently drawn with only six electrons around the \nboron. Other boron compounds that do not fit simple electron-dot structures include the \nhydrides, such as B 2H6, and a large array of more complex molecules.  \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 33}
"
"page_content=' 35VALENCE SHELL ELECTROI REPULSION THEORY  \n \nValence shell electron pair repulsion theory (VSEPR) provides a method for \npredicting the shape of molecules, based on the electron pair electrostatic repulsion. It \nwas described by Sidgwick and powe in 1940 and further developed by Gillespie and \nholm in 1957. In spite of this method\'s very simple approach, based on Lewis electron-\ndot structures, the VSEPR method predicts shapes that compare favorably with those \ndetermined experimentally. However, this approach at best provides approximate shapes \nfor molecules, not a complete picture of bonding. The most common method of \ndetermining the actual structures is X-ray diffraction, although electron diffraction, \nneutron diffraction, and many types of spectroscopy are also used.  \nElectrons repel each other because they are negatively charged. The quantum \nmechanical rules force some of them to be fairly close to each other in bonding pairs or \nlone pairs, but each pair repels all other pairs. According to the VSEPR model, therefore, \nmolecules adopt geometries in which their valence electron pairs position themselves as \nfar from each other as possible. A molecule can be described by the generic formula \nAX mEn where A is the central atom, X stands for any atom or group of atoms surrounding \nthe central atom, and E represents a lone pair of electrons. The steric number (SN = m + \nn) is the number of positions occupied by atoms or lone pairs around a central atom; lone \npairs and bonds are nearly equal in their influence on molecular shape. \n \n \nCarbon dioxide is an example with two bonding positions (SN = 2) on the central \natom and double bonds in each direction. The electrons in each double bond must be \nbetween C and 0, and the repulsion between the electrons in the double bonds forces a \nlinear structure on the molecule. Sulfur trioxide has three bonding positions (SN = 3), \nwith partial double bond character in each. The best positions for the oxygen\'s in this \nmolecule are at the comers of an equilateral triangle, with 0 - S - 0 bond angles of 120"". \nThe multiple bonding does not affect the geometry because it is shared equally among the \nthree bonds. \nThe same pattern of finding the Lewis structure and then matching it to a geometry \nthat minimizes the repulsive energy of bonding electrons is followed through steric \nnumbers four, five, six, seven, and eight, as shown in Figure 3-8. The structures for two, \nthree, four, and six electron pairs are completely regular, with all bond angles and \ndistances the same. Neither 5- nor 7-coordinate structures can have uniform angles and \ndistances, because there are no regular polyhedra with these numbers of vertices. The 5-\ncoordinate molecules have a trigonal bipyramidal structure, with a central triangular ' metadata={'source': 'cpdf.pdf', 'page': 34}
"
"page_content=' 36plane of three positions plus two other positions above and below the center of the plane. \nThe 7-coordinate molecules have a pentagonal bipyrami- &a1 structure, with a \npentagonal plane of five positions and positions above and below with the top and bottom \nfaces twisted 45 into the antiprism arrangement, as shown in Figure 3-9. It has three \ndifferent bond angles for adjacent fluorines. [ TaF 8 ]3- square antiprism symmetry, but is \ndistorted from this ideal in the solid. (A simple cube has only the 109.5 and 70.5 bond \nangles measured between two corners and the center of the cube, because all edges are \nequal and any square face can be taken as the bottom or top.) \n \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 35}
"
"page_content=' 37\n \n \n3-2-1 LONE PAIR REPULSION \n \nWe must keep in mind that we are always attempting to match our explanations to \nexperimental data. The explanation that fits the data best should be the current favorite, \nbut new theories are continually being suggested and tested. Because we are working \nwith such a wide variety of atoms and molecular structures, it is unlikely that a single, \nsimple approach will work for all of them. Although the fundamental ideas of atomic and \nmolecular structures are relatively simple, their application to complex molecules is not. \nIt is also helpful to keep in mind that for many purposes, prediction of exact bond angles \nis not usually required. To a first approximation, lone pairs, single bonds, double bonds, \nand triple bonds can all be treated similarly when predicting molecular shapes. \nHowever, better predictions of overall shapes can be made by considering some \nimportant differences between lone pairs and bonding pairs. These methods are sufficient \nto show the trends and explain the bonding, as in explaining why the H - N - H angle in \nammonia is smaller than the tetrahedral angle in methane and larger than the H- 0 - H \nangle in water.  \n \n ' metadata={'source': 'cpdf.pdf', 'page': 36}
"
"page_content=' 38\n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 37}
"
"page_content=' 39Steric number = 4 \n \nThe isoelectronic molecules CH 4, NH 3, and H 20 (Figure 3-10) illustrate the effect of \nlone pairs on molecular shape. Methane has four identical bonds between carbon and \neach of the hydrogens. When the four pairs of electrons are arranged as far from each \nother as possible, the result is the familiar tetrahedral shape. The tetrahedron, with all    \nH- C - H angles measuring 109.5, has four identical bonds.  \n \nAmmonia also has four pairs of electrons around the central atom, but three are \nbonding pairs between N and H and the fourth is a lone pair on the nitrogen. The nuclei \nform a trigonal pyramid with the three bonding pairs; with the lone pair, they make a \nnearly tetrahedral shape. Because each of the three bonding pairs is attracted by two \npositively charged nuclei (H and N), these pairs are largely confined to the regions \nbetween the H and N atoms. The lone pair, on the other hand, is concentrated near the \nnitrogen; it has no second nucleus to confine it to a small region of space. Consequently, \nthe lone pair tends to spread out and to occupy more space around the nitrogen than the \nbonding pairs. As a result, the H-N-H angles are 106.6, nearly 3 smaller than the angles \nin methane. The same principles apply to the water molecule, in which two lone pairs and \ntwo bonding pairs repel each other. Again, the electron pairs have a nearly tetrahedral \narrangement, with the atoms arranged in a V shape. The angle of largest repulsion, \nbetween the two lone pairs, is not directly measurable. However, the lone pair-bonding \npair (lp-bp r) repulsion is greater than the bonding pair-bonding pair (bp-bp) \nrepulsion, and as a result the H-0-H bond angle is only 104.5, another 2.1 decrease from \nthe ammonia angles. The net result is that we can predict approximate molecular shapes \nby assigning more space to lone electron pairs; being attracted to one nucleus rather than \ntwo, the lone pairs are able to spread out and occupy more space. \n \nSteric number = 5 \n \nFor trigonal bipyramidal geometry, there are two possible locations of lone pairs, \naxial and equatorial. If there is a single lone pair, for example in SF 4, the lone pair \noccupies an equatorial position. This position provides the lone pair with the most space \nand minimizes the interactions between the lone pair and bonding pairs. If the lone pair \nwere axial, it would have three 90 interactions with bonding pairs; in an equatorial \nposition it has only two such interactions, as shown in Figure 3-11. The actual structure is \ndistorted by the lone pair as it spreads out in space and effectively squeezes the rest of the \nmolecule together.  \nClF 3 provides a second example of the influence of lone pairs in molecules having a \nsteric number of 5. There are three possible structures for ClF 3, as shown in Figure 3-12. \nLone pairs in the figure arc designated lp and bonding pairs are bp. In determining the \nstructure of molecules, the lone pair-lone pair interactions are most important, with the \nlone pair-bonding pair interactions next in importance. In addition, interactions at angles \nof 90 or less are most important; larger angles generally have less influence. In ClF 3, \nstructure B can be eliminated quickly because of the 90"" Lp-lp angle. The Lp-lp \nangles are large for A and C, so the choice must come from the lp-bp and bp-bp ' metadata={'source': 'cpdf.pdf', 'page': 38}
"
"page_content=' 40angles. Because the Lp-bp angles are more important, C, which has only four 90"" lp-\nbp interactions, is favored over A, which has six such interactions. \n \n \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 39}
"
"page_content=' 41Experiments have confirmed that the structure is based on C, with slight distortions \ndue to the lone pairs. The lone pair-bonding pair repulsion causes the lp-bp angles to \nbe larger than 90"" and the bp-bp angles less than 90 (actually, 87.5). The C1 -F bond \ndistances show the repulsive effects as well, with the axial fluorines (approximately 90"" \nLp-bp angles) at 169.8 pm and the equatorial fluorine (in the plane with two lone pairs) \nat 159.8 pm.8 Angles involving lone pairs cannot be determined experimentally. The \nangles in Figure 3-12 are calculated assuming maximum symmetry consistent with the \nexperimental shape. \nAdditional examples of structures with lone pairs are illustrated in Figure 3-13. \nNotice that the structures based on a trigonal bipyramidal arrangement of electron pairs \naround a central atom always place any lone pairs in the equatorial plane, as in SF 4, BrF 3, \nand XeF 2. These are the shapes that minimize both lone pair-lone pair and lone pair-\nbonding pair repulsions. The shapes are called teeter-totter or seesaw (SF 4), distorted T \n(BrF 3), and linear (XeF 2) \n \n  \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 40}
"
"page_content=' 423-2-2 MULTIPLE BONDS \n \nThe VSEPR model considers double and triple bonds to have slightly greater \nrepulsive effects than single bonds because of the repulsive effect of a electrons. For \nexample, the H 3C-C-CH 3 angle in (CH 3)2C=CH 2 is smaller and the H 3C-C=CH 2 angle is \nlarger than the trigonal 120 (Figure 3-14).~ Additional examples of the effect of multiple \nbonds on molecular geometry are shown in Figure 3-15. Comparing Figures 3-14 and 3-\n15 indicates that multiple bonds tend to occupy the same positions as lone pairs. For \nexample, the double bonds to oxygen in SOF 4, C1O 2F3, and XeO 3F2 are all equatorial, as \nare the lone pairs in the matching compounds of steric number 5, SF 4, BrF 3, and XeF 2. \nAlso, multiple bonds, like lone pairs, tend to occupy more space than single bonds and to \ncause distortions that in effect squeeze the rest of the molecule together. In molecules that \nhave both lone pairs and multiple bonds, these features may compete for space; examples \nare shown in Figure 3-16.  \n \n \n \nPOLAR MOLECULES  \n \nWhenever atoms with different electronegativities combine, the resulting molecule \nhas polar bonds, with the electrons of the bond concentrated (perhaps very slightly) on \nthe more electronegative atom; the greater the difference in electronegativity, the more \npolar the bond. As a result, the bonds are dipolar, with positive and negative ends. This \npolarity causes specific interactions between molecules, depending on the overall \nstructure of the molecule. Experimentally, the polarity of molecules is measured \nindirectly by measuring the dielectric constant, which is the ratio of the capacitance of a \ncell filled with the substance to be measured to the capacitance of the same cell with a \nvacuum between the electrodes. Orientation of polar molecules in the electric field ' metadata={'source': 'cpdf.pdf', 'page': 41}
"
"page_content=' 43partially cancels the effect of the field and results in a larger dielectric constant. \nMeasurements at different temperatures allow calculation of the dipole moment for the \nmolecule, defined as  \n \nWhere Q is the charge on each of two atoms separated by a distance, r. Dipole moments \nof diatomic molecules can be calculated directly. In more complex molecules, vector \naddition of the individual bond dipole moments gives the net molecular dipole moment. \nHowever, it is usually not possible to calculate molecular dipoles directly from bond \ndipoles. Table 3-7 shows experimental and calculated dipole moments of \nchloromethanes. The values calculated from vectors use C-H and C-CI bond dipoles of \n1.3 and 4.9 X 10-30 C m, respectively, and tetrahedral bond angles. Clearly, calculating \ndipole moments is more complex than simply adding the vectors for individual bond \nmoments, but we will not consider that here. For most purposes, a qualitative approach is \nsufficient. \n \n \n \n \nThe dipole moments of NH 3, H 20, and NF 3 (Figure 3-17) reveal the effect of lone \npairs, which can be dramatic. In ammonia, the averaged N - H bond polarities and the \nlone pair all point in the same direction, resulting in a large dipole moment. Water has an \neven larger dipole moment because the polarities of the 0 -H bonds and the two lone pairs \nresults in polarities all reinforcing each other. On the other hand, NF 3 has a very small \ndipole moment, the result of the polarity of the three N-F bonds opposing polarity of the \nlone pair. The sum of the three N-F bond moments is larger than the lone pair effect, and \nthe lone pair is the positive end of the molecule. In cases such as those of NF3 and SO 2, \nthe direction of the dipole is not easily predicted because of the opposing polarities. SO 2 \nhas a large dipole moment (1.63 D), with the polarity of the lone pair prevailing over that \nof the S - 0 bonds. Molecules with dipole moments interact electrostatically with each \nother and with other polar molecules. When the dipoles are large enough, the molecules \norient themselves with the positive end of one molecule toward the negative end of \nanother because of these attractive forces, and higher melting and boiling points result.  \nOn the other hand, if the molecule has a very symmetric structure or if the polarities \nof different bonds cancel each other, the molecule as a whole may be nonpolar, even \nthough the individual bonds are quite polar. Tetrahedral molecules such as CH4 and \nCC1 4 and trigonal molecules and ions such as SO 3, NO 3-, and CO 3- are -all nonpolar. The ' metadata={'source': 'cpdf.pdf', 'page': 42}
"
"page_content=' 44C - H bond has very little polarity, but the bonds in the other molecules and ions are quite \npolar. In all these cases, the sum of all the polar bonds is zero because of the symmetry of \nthe molecules, as shown in Figure 3-18. Nonpolar molecules, whether they have polar \nbonds or not, still have intermolecular attractive forces acting on them. Small fluctuations \nin the electron density in such  \n \n \n \n \nmolecules create small temporary dipoles, with extremely short lifetimes. These dipoles \nin turn attract or repel electrons in adjacent molecules, setting up dipoles in them as well. \nThe result is an overall attraction among molecules. These attractive forces are called \nLondon or dispersion forces, and make liquefaction of the noble gases and nonpolar \nmolecules such as hydrogen, nitrogen, and carbon dioxide possible. As a general rule, \nLondon forces are more important when there are more electrons in a molecule, because \nthe attraction of the nuclei is shielded by inner electrons and the electron cloud is more \npolarizable. \n \nHYDROGEN BONDING  \n \nAmmonia, water, and hydrogen fluoride all have much higher boiling points than other \nsimilar molecules, as shown in Figure 3-19. In water and hydrogen fluoride, these high \nboiling points are caused by hydrogen bonds, in which hydrogen atoms bonded to 0 or F \nalso form weaker bonds to a lone pair of electrons on another 0 or F. Bonds between \nhydrogen and these strongly electronegative atoms are very polar, with a partial positive \ncharge on the hydrogen. This partially positive H is strongly attracted to the partially \nnegative 0 or F of neighboring molecules. In the past, the attraction among these \nmolecules was considered primarily electrostatic in nature, but an alternative molecular \norbital approach, gives a more complete description of this phenomenon. Regardless of \nthe detailed explanation of the forces involved in hydrogen bonding, the strongly positive \nH and the strongly negative lone pairs tend to line up and hold the molecules together. ' metadata={'source': 'cpdf.pdf', 'page': 43}
"
"page_content=' 45Other atoms with high electronegativity, such as C1, can also form hydrogen bonds in \nstrongly polar molecules such as chloroform, CHC1 3. \n \n \n \nIn general, boiling points rise with increasing molecular weight, both because the \nadditional mass requires higher temperature for rapid movement of the molecules and \nbecause the larger number of electrons in the heavier molecules provides larger London \nforces. The difference in temperature between the actual boiling point of water and the \nextrapolation of the line connecting the boiling points of the heavier analogous \ncompounds is almost 200 C. Ammonia and hydrogen fluoride have similar but smaller \ndifferences from the extrapolated values for their families. Water has a much larger \neffect, because each molecule can have as many as four hydrogen bonds (two through the \nlone pairs and two through the hydrogen atoms). Hydrogen fluoride can average no more \nthan two, because HF has only one H available. \nHydrogen bonding in ammonia is less certain. Several experimental studiesz4 in the \ngas phase fit a model of the dimer with a ""cyclic"" structure, although probably \nasymmetric, as shown in Figure 3-20(b). Theoretical studies depend on the method of \ncalculation, the size of the basis set used (how many functions are used in the fitting), and \nthe assumptions used by the investigators, and conclude that the structure is either linear \nor cyclic, but that in any case it is very far from rigid. The umbrella vibrational mode \n(inverting the NH 3 tripod like an umbrella in a high wind) and the interchange mode (in \nwhich the angles between the molecules switch) appear to have transitions that allow \neasy conversions between the two extremes of a dimer with a near-linear N - H - N \nhydrogen bond and a centrosymmetric dimer with C2h symmetry. Linear N-H-N bonds \nseem more likely in larger clusters, as confirmed by both experiment and calculation. \nThere is no doubt that the ammonia molecule can accept a hydrogen and form a \nhydrogen bond through the lone pair on the nitrogen atom with H 20, HF, and other polar \nmolecules, but it does not readily donate a hydrogen atom to another molecule. On the ' metadata={'source': 'cpdf.pdf', 'page': 44}
"
"page_content=' 46other hand, hydrogen donation from nitrogen to carbonyl oxygen is common in proteins \nand hydrogen bonding in both directions to nitrogen is found in the DNA double helix. \n \n \n \n \n \n \n  \nWater has other unusual properties because of hydrogen bonding. For example, the \nfreezing point of water is much higher than that of similar molecules. An even more \nstriking feature is the decrease in density as water freezes. The tetrahedral structure \naround each oxygen atom with two regular bonds to hydrogen and two hydrogen bonds to \nother molecules requires a very open structure with large spaces between ice molecules \n(Figure 3-21). This makes the solid less dense than the more random liquid water \nsurrounding it, so ice floats. Life on earth would be very different if this were not so. \nLakes, rivers, and oceans would freeze from the bottom up, ice cubes would sink, and ice \nfishing would be impossible. The results are difficult to imagine, but would certainly \nrequire a much different biology and geology. The same forces cause coiling of protein \nand polynucleic acid molecules (Figure 3-22); a combination of hydrogen bonding with \nother dipolar forces imposes considerable secondary structure on these large molecules. \n \nIn Figure 3-22(a), hydrogen bonds between carbonyl oxygen atoms and hydrogens \nattached to nitrogen atoms hold the molecule in a helical structure. In Figure 3-22(b), \nsimilar hydrogen bonds hold the parallel peptide chains together; the bond angles of the \nchains result in the pleated appearance of the sheet formed by the peptides. These are two \nof the many different structures that can be formed from peptides, depending on the side-\nchain groups R and the surrounding environment. \n \nAnother example is a theory of anesthesia by non-hydrogen bonding molecules such as \ncyclopropane, chloroform, and nitrous oxide, proposed by pauling. These molecules are \nof a size and shape that can fit neatly into a hydrogen-bonded water structure with even \nlarger open spaces than ordinary ice. Such structures, with molecules trapped in holes in a ' metadata={'source': 'cpdf.pdf', 'page': 45}
"
"page_content=' 47solid, are called clathrates. Pauling proposed that similar hydrogen-bonded microcrystals \nform even more readily in nerve tissue because of the presence of other solutes in the \ntissue. These microcrystals could then interfere with the transmission of nerve impulses. \nSimilar structures of methane and water are believed to hold large quantities of methane \nin the polar ice caps. The amount of methane in such crystals can be so great that they \nburn if ignited . \n \n ' metadata={'source': 'cpdf.pdf', 'page': 46}
"
"page_content=' 48\n \n \n \n \n  \n \n \n \n \n \n \n \n \n ' metadata={'source': 'cpdf.pdf', 'page': 47}
"
"page_content=' 49\n \n \nSymmetry is a phenomenon of the natural world, as well as the world of human \ninvention (Figure 4-1). In nature, many types of flowers and plants, snowflakes, insects, \ncertain fruits and vegetables, and a wide variety of microscopic plants and animals \nexhibit characteristic symmetry. Many engineering achievements have a degree of \nsymmetry that contributes to their esthetic appeal. Examples include cloverleaf \nintersections, the pyramids of ancient Egypt, and the Eiffel Tower. \n \nSymmetry concepts can be extremely useful in chemistry. By analyzing the \nsymmetry of molecules, we can predict infrared spectra, describe the types of orbitals \nused in bonding, predict optical activity, interpret electronic spectra, and study a number \nof additional molecular properties. In this chapter, we first define symmetry very \nspecifically in terms of five fundamental symmetry operations. We then describe how \nmolecules can be classified on the basis of the types of symmetry they possess. We \nconclude with examples of how symmetry can be used to predict optical activity of \nmolecules and to determine the number and types of infrared-active stretching vibrations. \nSymmetry will be a valuable tool in the construction of molecular orbitals and in \nthe interpretation of electronic spectra of coordination compounds and vibrational spectra \nof organometallic compounds. A molecular model kit is a very useful study aid for this \nchapter, even for those who can visualize three-dimensional objects easily. We strongly \nencourage the use of such a kit. \n ' metadata={'source': 'cpdf.pdf', 'page': 48}
"
"page_content=' 50\n \n \n \n \n \n \n    In explaining the colors of coordination compounds, we are dealing with the phenomenon of \ncomplementary colors: if a compound absorbs light of one color, we see the complement of that color. \nFor example, when white light (containing a broad spectrum of all visible wavelengths) passes through \na substance that absorbs red light, the color observed is green. Green is the complement of red, so \ngreen predominates visually when red light is subtracted from white. Complementary colors can \nconveniently be remembered as the color pairs on opposite sides of the color wheel shown in the \nmargin. \n       An example from coordination chemistry is the deep blue color of aqueous solution  of copper \n(I1) compounds, containing the ion [Cu(H2O) 6] The blue color is a consequence of the absorption of \nlight between approximately 600 and 1000 nm (maximum near 800 nm; Figure 11- I), in the yellow to \ninfrared region of the spectrum. The color observed, blue, is the average complementary color of the \nlight absorbed. It is not always possible to make a simple prediction of color directly from the \nabsorption spectrum, in large part because many coordination compounds contain two or more \nabsorption bands of different energies and intensities. The net color observed is the color \npredominating after the various absorptions are removed from white light. For reference, the \napproximate wavelengths and complementary colors to the principal colors of the visible spectrum are \ngiven in Table 1 1 -1.  \n \n ' metadata={'source': 'cpdf.pdf', 'page': 49}
"
"page_content=' 51\n \n \n11 -1 -1 BEER-LAMBERT ABSORPTION LAW \nIf light of intensity I, at a given wavelength passes through a solution containing a species that absorbs \nlight, the light emerges with intensity I, which may be measured by a suitable detector (Figure 11-2).  \n \n ' metadata={'source': 'cpdf.pdf', 'page': 50}
"
"page_content="" 52\n \nThe Beer-Lambert law may be used to describe the absorption of light (ignoring scattering and \nreflection of light from cell surfaces) at a given wavelength by an absorbing species in solution: \nI0 log - = A = dc  \nI \nwhere A = absorbance \nE = molar absorptivity (L mol-' cm-') (also known as molar extinction coefficient) \n1 = path length through solution (cm) \nc = concentration of absorbing species (mol L-') \nAbsorbance is a dimensionless quantity. An absorbance of 1.0 corresponds to 90% absorption at a \ngiven wavelength,' an absorbance of 2.0 corresponds to 99% absorption, and so on. The most \ncommon units of the other quantities in the Beer-Lambert law are shown in parentheses above. \nSpectrophotometers commonly obtain spectra as plots of absorbance versus wavelength. The \nmolar absorptivity is a characteristic of the species that is absorbing the light and is highly \ndependent on wavelength. A plot of molar absorptivity versus wavelength gives a spectrum \ncharacteristic of the molecule or ion in question, as in Figure 11 -1. As we will see, this spectrum \nis a consequence of transitions between states of different energies and can provide valuable \ninformation about those states and, in turn, about the structure and bonding of the molecule or \nion. Although the quantity most commonly used to describe absorbed light is the wavelength, \nenergy and frequency are also used. In addition, the wavenumber (the number of waves per \ncentimeter), a quantity proportional to the energy, is frequently used, especially in reference to \ninfrared light. For reference, the relations between these quantities are given by the equations  \n \n \n "" metadata={'source': 'cpdf.pdf', 'page': 51}
"
"page_content='Introduction to Security\nCyberspace, Cybercrime and Cybersecurity' metadata={'source': 'itpdf.pdf', 'page': 0}
"
"page_content='OVERVIEW\n\uf071Brainstorming\n\uf071Definition Security\n\uf071Security Features\n\uf071Concept of Cyberspace\n\uf071Concept of Cybercrime\n\uf071Concept of Cybersecurity \n\uf071The way forward' metadata={'source': 'itpdf.pdf', 'page': 1}
"
"page_content='Brainstorming \n' metadata={'source': 'itpdf.pdf', 'page': 2}
"
"page_content='What is Security?\nBrainstorming \nSecurity according to two boys of 10 years old' metadata={'source': 'itpdf.pdf', 'page': 3}
"
"page_content='What is Security?Brainstorming \nSecurity According to Junior High School ICT teacher' metadata={'source': 'itpdf.pdf', 'page': 4}
"
"page_content='What is Security?Brainstorming ' metadata={'source': 'itpdf.pdf', 'page': 5}
"
"page_content='Definition Security' metadata={'source': 'itpdf.pdf', 'page': 6}
"
"page_content='There is no clear cut definition\nDefinition Security' metadata={'source': 'itpdf.pdf', 'page': 7}
"
"page_content='Security is a process, not an end state.Definition Security' metadata={'source': 'itpdf.pdf', 'page': 8}
"
"page_content='Security is the process of maintaining an acceptable level of perceived risk.Definition Security\n' metadata={'source': 'itpdf.pdf', 'page': 9}
"
"page_content='No organization can be considered ""secure"" for any time beyond the last verification of adherence to its \nsecurity policy. \nIf your manager asks, ""Are we secure?"" \nyou should answer, ""Let me check."" \nIf he or she asks, ""Will we be secure tomorrow?\n"" you should answer, ""I don\'t know.""\nSuch honesty will not be popular, but this mind -set will produce greater success for the organization in \nthe long run.Definition Security' metadata={'source': 'itpdf.pdf', 'page': 10}
"
"page_content='Security Features' metadata={'source': 'itpdf.pdf', 'page': 11}
"
"page_content='Security has three features' metadata={'source': 'itpdf.pdf', 'page': 12}
"
"page_content='Confidentiality\nConfidentiality is roughly equivalent to privacy. Measures undertaken to \nensure confidentiality are designed to prevent sensitive information from \nreaching the wrong people, while making sure that the right people can in \nfact get it:\nConfidentiality\nAssurance that information is shared only among authorized persons or \norganizations.Security Features' metadata={'source': 'itpdf.pdf', 'page': 13}
"
"page_content='Integrity. \nAssurance that the information is authentic and complete .\nIntegrity\nIn information security, data integrity means maintaining and assuring the \naccuracy and consistency of data over its entire life -cycle.Security Features' metadata={'source': 'itpdf.pdf', 'page': 14}
"
"page_content='Availability\nAssurance that the systems responsible for delivering, storing and \nprocessing information are accessible when needed, by those who \nneed them.\nAvailability\nAvailability of information refers to ensuring that authorized parties are \nable to access the information when neededSecurity Features' metadata={'source': 'itpdf.pdf', 'page': 15}
"
"page_content='Concept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 16}
"
"page_content='Cyberspace \nCyberspace is ""the environment in which communication \nover computer networks occurs .“\nAnd almost everybody \nin one way or the other \nis connected to itConcept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 17}
"
"page_content='Ladies in the market \nare connected to is to \nrun their businessesConcept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 18}
"
"page_content='Shepherds are connected \nto locate their cattle Concept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 19}
"
"page_content='Hunters are connected to \nit to locate their prey Concept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 20}
"
"page_content='Our friend, the farmer is \nconnected to it and \n“Facebooking” in the coconut \ntreeConcept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 21}
"
"page_content='Our friends in the remote \nareas are also connected to itConcept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 22}
"
"page_content='Huum ! isn’t amazing? \nThey are also \nconnected.Concept of Cyberspace' metadata={'source': 'itpdf.pdf', 'page': 23}
"
"page_content='Concept of Cyberspace\nGovernment Judiciary Law makers On a more serious note, are connected ' metadata={'source': 'itpdf.pdf', 'page': 24}
"
"page_content='Concept of Cyberspace\nMilitaries' metadata={'source': 'itpdf.pdf', 'page': 25}
"
"page_content='Concept of Cyberspace\nBanks Transportation SectorsHealth Sectors' metadata={'source': 'itpdf.pdf', 'page': 26}
"
"page_content='Concept of Cyberspace\n' metadata={'source': 'itpdf.pdf', 'page': 27}
"
"page_content='Concept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 28}
"
"page_content='Cyber Crime\nComputer crime, or cybercrime, is any crime that involves a computer and a network.\nThe computer may have been used in the commission of a crime, or it may be the target .\nConcept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 29}
"
"page_content='Tsutomu ShimomuraKevin Mitnick\nConcept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 30}
"
"page_content='Commonwealth Bank, Australia -March 2011: -\nAutomatic teller machines (ATMs) spat out \ntens of thousands of free dollars in Sydney \nTuesday after a computer glitch turned into a \nnightmare for the Commonwealth Bank. IT \nSecurity Believe that it is a the consequence of \nhacking.Concept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 31}
"
"page_content='Concept of Cybercrime\nUnderground Economy ' metadata={'source': 'itpdf.pdf', 'page': 32}
"
"page_content='Concept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 33}
"
"page_content='Concept of Cybercrime\nPhishing' metadata={'source': 'itpdf.pdf', 'page': 34}
"
"page_content='Hacktivism\nConcept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 35}
"
"page_content='Cyberwar: Estonia CaseConcept of Cybercrime\n' metadata={'source': 'itpdf.pdf', 'page': 36}
"
"page_content='""I felt the country was under attack by an invisible enemy.  . . . It was \nextremely frightening and uncontrollable because we are used to having \nInternet all the time and then suddenly it wasn\'t around anymore,  . . . \nYou couldn\'t get information; you couldn\'t do your job. You couldn\'t \nreach the bank; you couldn\'t check the bus schedule anymore. It was just \nconfusing and frightening, but we didn\'t realize it was a war because \nnobody had seen anything like that before“.\nTuuli Aug, an editor of the daily newspaper "" Eesti Paevaleht ,"" stated the \nfollowing: Concept of Cybercrime' metadata={'source': 'itpdf.pdf', 'page': 37}
"
"page_content='Concept of Cybercrime\nStuxnet\n' metadata={'source': 'itpdf.pdf', 'page': 38}
"
"page_content='The threat is real\nConcept of Cybersecurity ' metadata={'source': 'itpdf.pdf', 'page': 39}
"
"page_content='Concept of Cybersecurity ' metadata={'source': 'itpdf.pdf', 'page': 40}
"
"page_content='Cyber security, also referred to as information technology security, focuses on \nprotecting computers, networks, programs and data from unintended or unauthorized \naccess, change or destruction.\nUniversity of Maryland University College\nThe state of being protected against the criminal or unauthorized use of electronic \ndata, or the measures taken to achieve this.\n‘some people have argued that the threat to cybersecurity has been somewhat \ninflated’\nOxford Dictionary Concept of Cybersecurity \nTentative Definitions' metadata={'source': 'itpdf.pdf', 'page': 41}
"
"page_content='ITU-T X.1205 Definition\n\uf0a7Cybersecurity is the collection of tools, policies, security concepts, security safeguards, guidelines, risk \nmanagement approaches, actions, training, best practices, assurance and technologies that can be used to \nprotect the cyber environment and organization and user’s assets. Organization and user’s assets include \nconnected computing devices, personnel, infrastructure, applications, services, telecommunications systems, \nand the totality of transmitted and/or stored information in the cyber environment. \n\uf0a7Cybersecurity strives to ensure the attainment and maintenance of the security properties of the organization \nand user’s assets against relevant security risks in the cyber environment.\n\uf0a7The general security objectives comprise the following:\noAvailability\noIntegrity, which may include authenticity and non -repudiation\noConfidentialityConcept of Cybersecurity ' metadata={'source': 'itpdf.pdf', 'page': 42}
"
"page_content='Assignment and discussion\n' metadata={'source': 'itpdf.pdf', 'page': 44}
"
"page_content='Based in the realities of your organization, rank the three features of security \nwith respect to your information system.Assignment \n' metadata={'source': 'itpdf.pdf', 'page': 45}
"
"page_content='CSIRT\uf0a7ICT is a single point of failure to Businesses. \n\uf0a7IS Security is Achilles heels of ICT\n\uf0a7Your security depends on mine and mine depends on yours, \n\uf0a7Let us come together and protect our cyberspace is creating and managing a CSIRT\nHOW? The way forward' metadata={'source': 'itpdf.pdf', 'page': 46}
"
"page_content='An Introduction to Trigonometry\nP.Maidorn\nI. Basic Concepts\nThe trigonometric functions are based on the unit circle, that is a circle with radius r=1.\nSince the circumference of a circle with radius r is C=2Br, the unit circle  has circ umfere nce 2 B. \nFor any point (x ,y) on the unit circ le, the assoc iated ang le 2 can be  measure d in two differ ent\nways:\n1. deg ree measure : in this  case  the circ umfere nce is divided into 360 equa l parts, ea ch\npart ha s measure  one deg ree (written 1 ). A rig ht ang le, for e xample, is a 90oo\nangle. Positi ve ang les are  measure d in the counter -cloc kwise direc tion.\n2. radia n measure : radian me asure  is defined a s the ac tual leng th of the ar c betwe en the\npoints (1,0) and (x,y ). One  entire r evolution (i.e. 360 ) henc e has a  radia n measureo\nof 2B.  A rig ht ang le (that is a qua rter of  one re volution) would have ra dian\nmeasure  B/2. Note that the ang le is simply  denoted “ B/2”, not “B/2 radians” .\nOne can easily convert between these two me asures by keeping in m ind that a 180 angleo\n(in deg rees) is equivalent to a B angle (in radians). Note that angles in Calculus-related problems\nare usually denoted in radian me asure, hence it is important to be comfortable with this\nmeasure ment. \nExamples:\n1. A 270  angle is 3/2 tim es a 180  angle, henc e in ra dian measur e the a ngle would beoo\ndenoted 3 B/2. \n2. A 7 B/5 ang le would simply  have de gree measure  7/5 times 180 , i.e. 252 .oo' metadata={'source': 'mpdf.pdf', 'page': 0}
"
"page_content='Exercises:\nConvert each angle to radians.\na) 120 b) 315  c) -420oo o\nConvert ea ch ang le to deg rees, to the near est tenth of a de gree.\nd) -2 B/3 e) 3B f) 4.52\nTurning  the above  discussion around, ea ch time we c hoose an a ngle 2, we f ind a unique\npoint (x ,y) on the unit circ le. Henc e both “x” and “y ” can be conside red functions of 2. Since\nthese pa rticular f unctions are  of great importance to both pure  and applied ma thematics, they  are\ngiven special names and symbols, and are called the trignometric functions.\nSpecifically:\nThe leng th “y ” is ca lled the sine of the a ngle 2, and is denoted by  y=sin( 2).\nThe leng th “x” is called the cosine of  the ang le 2, and is denoted by x=cos(2).\nOther trig onometric func tions can be c alculate d from the sine a nd cosine func tions: t he\ntangent of 2 is defined a s tan( 2)=sin( 2)/cos(2) (or y/x), the sec ant of 2 is defined a s\nsec(2)=1/cos(2), the c oseca nt of 2 is defined a s csc( 2)=1/sin( 2), and the  cotang ent of 2 is\ndefined as cot(2)=cos(2)/sin( 2).' metadata={'source': 'mpdf.pdf', 'page': 1}
"
"page_content='II. Calculating T rigonom etric Functions of  Special Angles\nThe first question that arises is how to calculate the sine or cosine of a given angle, that is\nhow to find the leng ths “x ” (the  cosine) a nd “y ” (the  sine) on the unit circ le associa ted with a\ngiven ang le. \nWe will begin to answ er this question by  looking a t the ang les 0  and 90  (or B/2). First,oo\ndraw  the unit circle , and on it indicate the a ngle 2=0 as w ell as the point (x,y ) that is associate d\nwith that angle. If the angle is 2=0, the point (x,y ) lies on the x-ax is, that is x =1, and y =0\n(remember that the radius of the circle is r=1). Hence cos(0)=1 and sin(0)=0. Simi larly, the angle\n2=B/2 is associated with the point (x,y)=(0,1). Therefore cos(B/2)=0 a nd sin( B/2)=1 (se e\ndiagrams).\nLet’s examine the ang le 2=B/4 (or 45) next.o\nNote that a r ight- angle triang le is formed, w ith a hy potenuse of le ngth 1, and two adjac ent sides\nof equa l leng th, that is x =y. Let’s denote  that leng th “a” . By the Py thagorean theore m, we have  \na+a=1,22 2\nwhich we  can solve  for a =/½ or equiva lently  a=/2/2. Hence  both “x” and “y ” are equa l to /2/2,\nand we  have f ound that both sin( B/4)=/2/2 and cos(B/4)=/2/2. ' metadata={'source': 'mpdf.pdf', 'page': 2}
"
"page_content='One can also find trigonometric values for the angles 2=B/6 (or 30 ) and 2=B/3 (or 60 ).oo\nThis set of ang les is sometimes called the “ specia l” ang les, and their a ssociated sine a nd cosine\nvalues a re listed in the table be low:\n2 sin(2) cos(2)\n00 1\nB/6 ½ /3/2\nB/4 /2/2 /2/2\nB/3 /3/2 ½ \nB/2 1 0\nWe c an immediately use these values to calculate other trigonometric functions of these\nspecia l ang les. \nExamples:\n1. Since tan( 2)=y/x, i.e. tan( 2)=sin( 2)/cos(2), we  simply  divide sin( B/3) by cos(B/3) to\nfind that tan( B/3) = /3.\n2. Simi larly csc(B/6) = 1 / sin( B/6), that is csc( B/6) = 2. \nNote that not all trig onometric func tions are de fined for  all ang les. For  example, the\ntangent of 2=B/2 does not exi st, since her e the de nominator is equal to zero. \nExercises:\nCalculate:\na) sec(B/3) b) csc (45) c) cot(0)o' metadata={'source': 'mpdf.pdf', 'page': 3}
"
"page_content='III. Other Angles\nOnce you know how to find the trigonometric functions for the above special angles, it is\nimportant to learn how to e xtend y our knowledg e to any  angle that is based on one  of 0, B/6, B/4,\nB/3 or B/2, such as for  example 2 B/3, -B/6, 7B/4, -5 B/2, and others.\nLet’s examine the ang le 2=-B/3. Clearly , it is som ehow r elated to the a ngle B/3. Draw  a\nunit circle for both angles side-by-side, and indicate the sine and cosine on them:\nClearly , the rig ht-ang le triang les that are  formed a re ide ntical, except that they  are mirror\nimag es of e ach othe r. The c osine (“x”) in both ca ses is the same, he nce w e know that c os(-B/3) is\nidentical to cos(B/3), that is cos(- B/3)=½. The sine (“y”) is the same length, but has opposite sign\n(it is neg ative). Since  sin(B/3)=/3/2, then sin(- B/3)=- /3/2.\nIn eac h of the e xamples below, pr oceed with the same method. I t is im perative that y ou\ndraw the unit circle each time until you become comfortable with these types of questions.\nExamples:\n1. Find sin(5 B/6). The triangle formed by 2=5B/6 is identical to that formed by 2=B/6,\nexcept that it is reflec ted ac ross the y -axis. The sine of 5 B/6 is hence the  same leng th, and has the\nsame sig n, as the sine of  B/6. There fore sin(5 B/6)=½.' metadata={'source': 'mpdf.pdf', 'page': 4}
"
"page_content='2. Find sec (-11B/4). To find the sec ant of a n ang le, re member to find the c osine first and\ntake its rec iproca l. The cosine of  -11B/4 is related to the c osine of B/4. The ang le -11 B/4 is\nreached by  completing  one entire  clockwise  revolution (which e quals -2 B, or -8 B/4) and then\nadding  another  -3B/4. Compare the a ngle -3B/4 to B/4. The cosine is the sa me leng th in each\ncase, but has opposite sign. Since cos(B/4) = /2/2,  cos(-11 B/4) = - /2/2, and henc e \nsec(-11B/4) = -2/ /2 = - /2. \nExercises:\nCalculate\na) sin(- B/4) b) sin(5 B/2) c) cos(11 B/6)\nd) cos( 13B/4) e) cos(19 B/6) f) sin(- 510)o\nIV. Using the Calculator\nIf you need to c alculate  the sine, cosine, or  tang ent of a n ang le other tha n the ones\ndiscussed above, you may need to use your calculator. Consult your calculator manual, if\nnecessary , on how to use the trig onometric func tions. \nYou should be aware of two facts:\n1. In most cases, y our ca lculator will not g ive y ou exact answe rs, but rathe r dec imal\napproximations. For example, y our ca lculator will tell y ou that the sine of a  45o\nangle is approximately  .70710678, rathe r than g iving y ou the exact answe r /2/2.\n2. You need to set your calculator to the appropriate angle measure, degrees or radians.\nOtherw ise, y our ca lculator mig ht return the sine  of the a ngle 2.3.1415... degrees,\nwhen y ou enter  “sin( B)” looking  for the sine  of 2=180 .o' metadata={'source': 'mpdf.pdf', 'page': 5}
"
"page_content='Exercises:\nUse your calculator to compute, rounding to four decimal places:\na) sin(53.7 ) b) cos( 11B/7) c) csc(-32)oo\nV. Right-Triangle App lications\nIn order  to apply  the trig onometric func tions based on the unit circ le to rig ht triang les of\nany size, it is important to understand the concept of similar triangles. Two triangles are said to\nbe similar if the ra tio of any  two sides of one tria ngle is the same a s the ratio of the  equivalent\ntwo sides in the other triang le. As a r esult, simil ar tria ngles have  the same “ shape” , but might\ndiffer  in siz e. For example, the sides in the triang les below ha ve the sa me ra tios to each other .\nConsider the rig ht triang le inscribed in the unit cir cle associated with an a ngle 2. We can\ncalculate the leng th of the side adja cent to the a ngle 2 (i.e. cos(2)) and the leng th of the side\nopposite the ang le 2 (i.e. sin( 2)). Since the unit circle has radius one, the hypotenuse of these\ntriang les is alway s equal to one. \nIf we were given a tria ngle with identical ang le 2 but with a hy potenuse twice  the leng th,\neach of the other sides would be twice the length as well, as the triangles are similar. We c an use\nthis fact to now compute side -leng ths of any  right triang le, if the a ngle 2 and one side -leng th are\nknown. I n general, we ha ve\nsin(2) = opposite / hypotenuse and cos(2) = adjacent / hypotenuse\nand since  tan(2)=sin( 2)/cos(2), we  have \ntan(2) = opposite / adjacent.' metadata={'source': 'mpdf.pdf', 'page': 6}
"
"page_content='Examples: \n1. Find all missing sides a nd ang les in the g iven triang le.\nFirst, g iven that the sum of all ang les in any  triang le must equal 180  (or B), the missingo\nangle measur es 30 . We know the leng th of the opposite side of a ngle 2, hence  we c an use theo\nsine to find the leng th of the hy potenuse. Since\nsin(60 ) = /3/2 and sin( 2) = opposite / hypotenuseo\nwe ha ve /3/2 = 4 / c,   which w e can solve for c  = 8//3 or c =  8/3 / 3.\nFinally  use, for  example, the Py thagorean theore m to find that b = 4 /3 / 3.\n2. To find the heig ht of a building , a per son walks to a spot 130m awa y from the ba se of the\nbuilding and measures the angle between the base and the top of the building. The angle\nis found to be 51.2. How tall is the building?o\nWe k now the length of the adjacent side of the right triangle that is formed, and wish to\nfind the leng th of the opposite side. The quic kest method to do so is to use the tang ent, since\ntan 2 = opposite / adjac ent. Using  the ca lculator, tan( 51.2 ).1.2437. Henc e the he ight of  theo\nbuilding is \nh = 130 tan( 51.2 ) . 161.7 me tres.o' metadata={'source': 'mpdf.pdf', 'page': 7}
"
"page_content='Exercises:\na) A ladder is leaning against the side of the building, forming an angle of 60 with the ground. Ifo\nthe foot of the la dder is 10m from the ba se of the building , how fa r up does the la dder\nreach, and how  long is the la dder?\nb) A pe rson stationed on a 40m tall obser vation tower spots a be ar in the distanc e. If the a ngle of\ndepre ssion (that is, the ang le betwe en the hor izont al and the line of  sight) is 30 , how fa ro\naway is the bear, assuming that the land surrounding the tower is flat?\nc) A 12m tall antenna sits on top of a building . A per son is standing some distanc e away from the\nbuilding. I f the a ngle of e levation betwe en the pe rson and the top of  the antenna  is 60 ,o\nand the angle of elevation between the person and the top of the building is 45, how tallo\nis the building and how far away is the person standing?\nVI. Simple Trigonom etric Equa tions\nGiven a value for the angle “x”, we now know how to calculate sin(x), cos(x), etc. We\nneed to pr oceed more c arefully if howeve r we wish to solve for the a ngle “x” g iven the value  of\nsin(x ) or c os(x).\nExample: Find a ll values for “ x” (in ra dian measur e) suc h that sin(x )=½.\nOne suc h ang le “x” can be  immediately  found fr om our table of spe cial ang les. Since\nsin(B/6)=½ , we know that one possible x-value is x=½. However, this is not the only possibility.\n1Consider the unit circle  for 2=B/6. Is it possi ble to find another  angle such that the sine\n1value ( i.e. the heig ht “y ”) is identica l to that of 2=B/6? The  answer is ‘yes’. Another such angle\nis on the other side of the y-axis. Si nce this angle is B/6 away  from the a ngle B (180), ito\n2measures 2 = B-B/6 = 5 B/6. Hence  sin(5 B/6) is also equal to ½ (c heck this on y our ca lculator). ' metadata={'source': 'mpdf.pdf', 'page': 8}
"
"page_content='Are there  any other such a ngles? By reme mbering  that we c an alwa ys add or subtra ct one\ncomplete r evolution (2 B) from an angle to end up in the same position, we can in fact generate\n3infinitely  many  such ang les. For  example, 2 = B/6 + 2 B = 13 B/6 is another such angle, as is \n42 = 5B/6 - 4 B = -19 B/6.\nHence all angles 2 = B/6 + 2k B and 2 = 5B/6 + 2k B for any k0I (that is k can be  any\ninteg er ...- 3,-2,-1,0,1,2,3,... )  are solutions t o the equa tion sin(x )=½.\nExercises:\nFind all “x” such that\na) cos(x) = /3/2 b) cos( x) = -/3/2 c) sin(x) = -1\nd) sin(x) = - ½ e) cos(x) = - ½ f) tan( x) = 1\nVII. Trigonome tric Identities\nThere are several trigonometric identities, that is equations which are valid for any angle\n2, which are used in the study of trigonometry.\nFrom the unit circle, w e have  already seen tha t the cosine of a n ang le is identical to the\ncosine of the associated negative angle, that is\ncos(- 2)=cos(2) for any angle 2. (1)\nSimi larly, sin(-2)=-sin(2) for any angle 2. (2)\nFor example, sin( B/6) = ½   a nd  sin(- B/6) = -½.\nAlso from the unit circle, which has equation x+y=1, we can substitute x=cos(2) and22\ny=sin( 2) to obtain the identity \nsin(2)+cos(2)=1, for any angle 2. (3)22\nAnother use ful trig onometric identity  conce rns the sum of two ang les A and B . We have:\nsin(A+B ) = sin(A ) cos( B) + sin(B ) cos( A) (4)\nand cos(A+ B) = cos( A) cos(B ) - sin(A)  sin(B)  (5)\nfor any angle s A and B.\nNote that you cannot simply “distribute” the sine through a sum. It is false to state that,\nfor example,  sin(A+ B)=sin(A)  + sin(B ).\nThe a bove five  identities can be  used to derive  many  other usef ul identities, which then\nno longe r nee d to be memorized.' metadata={'source': 'mpdf.pdf', 'page': 9}
"
"page_content='Examples:\n1. Dividing e quation (3) by  cos (2), we obtain the identity2\n1 + tan (2) = se c(2).22\n2. Identities involving the diff erence of  two ang les A-B  can be  obtained by  combining e quation\n(4) or  (5) with equa tions (1) and (2) . As an e xample,\nsin(A-B ) = sin(A +(-B)) \n   = sin(A)  cos(- B) + sin(-B ) cos( A) using ( 4)\n   = sin(A)  cos(B ) - sin(B ) cos( A) using ( 1) and ( 2) on the lef t\nand right term respectively.\n3. The double- angle formula     cos(2 2) = 2 c os(2) -1 can be  derive d using e quation (5) 2\nand setting  both A= 2 and B=2:\ncos(2 2) = cos (2 + 2)\n  = cos(2)cos(2) - sin( 2)sin(2) using ( 5)\n    = cos (2) - sin(2)22\nNow, re-arrange (3) to obtain sin(2)=1-cos(2) and substitute:22\ncos(2 2) = cos(2) - (1-cos (2))22\n = 2cos (2) - 1.2\n4. Find all “x” such that   2sin (x) + cos(x) = 1.2\nTo solve this trigonometr ic equa tion, we will first need to simplify  it using the\ntrigonometric identities. Using  (3) we  can substitute sin (x)=1-cos (x) and obtain an equa tion that22\nonly involves cosines:\n2 - 2cos (x) + cos(x) = 12\nor      2cos (x) - cos(x) -1 = 0.2\nThe a bove is a qua dratic e quation in cos(x), and ca n be fa ctore d\n(2cos( x)+1) (cos( x)- 1) = 0.\nAs a re sult, we now nee d to find all “x” such that either\n2cos(x) + 1 = 0, i.e. cos(x)=-½,\nor cos(x)-1 =0, i.e. cos(x)=1.\nFrom the unit circle, cos(x)=1 whe n x= 0 +2k B, k0I, i.e. x=2k B, k0I\nFurther, c os(x)=-½ when x=2B/3+2k B    or    x=4 B/3+2k B ,   k0I.\nThe solution to the give n equation is henc e the se t of all x -value s listed above.' metadata={'source': 'mpdf.pdf', 'page': 10}
"
"page_content='Exercises:\nDerive the following equations using equations (1) through (5) only:\na) co s(A-B) = co s(A)cos(B) + s in(A)sin(B)\nb) sin(2A) = 2s in(A)sin(B)\nc) sin(A )sin(B ) = -½ [ cos(A+B ) - cos(A-B )]\nSolve the following  equations for  “x”:\nd) 1 - cos(2x) = 2sin(x)\ne) sin (5x-2x+1) =  1 - cos (5x-2x+1)232 232\nVIII. Graphi ng Tr igonom etric Functions\nRecall that a function y=f(x) is a rule of correspondence between the independent variable\n(“x”) and the dependent variable (“y”), such that each x-v alue is associated with one and only\none y -value . Since ea ch ang le “x” produce s only  one value  for sin(x), cos(x), etc., the\nrelationships y  = sin(x), y  = cos( x), etc . are functions of “ x”.\nTo obtain the graph of the function y = sin(x), trace how the height of the triangle\ninscribed in the unit circ le cha nges as the a ngle “x” g radua lly moves from x=0 to x =2B. For\nexample, the sine g raph w ill start at (0,0) since  the sine of zero is zero, obtain a  maxi mum value\nat (B/2, 1), since the sine  of B/2 equals one, then decrease towards (B,0). \nSince the g raph of    y = sin(x)   will repeat a s we c omplete more tha n one re volution, we\ncan now  obtain the complete g raph of  the re al valued f unction y  = sin(x). ' metadata={'source': 'mpdf.pdf', 'page': 11}
"
"page_content='The g raph of  y = cos( x) is obtained in a similar fa shion.\nTo obtain the graph of y = tan(x),   divide sin(x)/cos(x) as before. Note again that tan(x)\ndoes not exist for values of x=B/2 + k B, k0I.\nYou ca n now use the te chniques for  shifting a nd scaling  function g raphs to obtain the\ngraphs f or any  trigonometric func tion.\nExamples:\n1. Graph   y = 2 sin(x+B). \nThis graph is identical to that of y=sin(x), except it is shifted to the left by B units, and\nscale d vertica lly by a factor of 2.' metadata={'source': 'mpdf.pdf', 'page': 12}
"
"page_content='2. Graph y = - cos(x-B/6).\nThis graph is obtained by shifting the graph of y=cos(x) to the right by B/6 units, t hen\nflipping it across the x-axis.\nExercises:\nSketch graphs for the given functions:\na) y = cos(x+B/6) - ½ b) y = ½ sin(x-B/2) + 1' metadata={'source': 'mpdf.pdf', 'page': 13}
"
"page_content='Answ ers to Exerc ises\nI. a) 2B/3 b) 7B/4 c) -7B/3 d) -120 e) 540 f) 259.0oo o\nII. a) 2 b) /2 c) Does not exist\nIII. a) -/2/2 b) 1 c) /3/2 d) -/2/2 e) -/3/2 f) -½ \nIV. a) .8059 b) .2225 c) -1.8871\nV. a) The ladder is 20m long and reaches up approxima tely 17.32m.\nb) The bear is approximately 69.28m away.\nc) The height of the building and the distance of the observer are both about 20.49m.\nVI. a) B/6 + 2k B and 11 B/6 + 2k B\nb) 5B/6 + 2k B and 7B/6 + 2k B\nc) 3B/2 + 2k B\nd) 7B/6 + 2k Band 11 B/6 + 2k B\ne) 2B/3 + 2k Band 4 B/3 + 2k B\nf) B/4 + k B\nVII.d) kB and   B/2 + 2k B\ne) all x-value s\nVIII.a)\nb)' metadata={'source': 'mpdf.pdf', 'page': 14}
"
"page_content='See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/225946867\nSemantic Web\nChapt er · Januar y 2011\nDOI: 10.1007/978-3-642-19193-0_6\nCITATIONS\n12READS\n1,846\n4 author s, including:\nFederic o MIchele F acca\n75 PUBLICA TIONS \xa0\xa0\xa01,320  CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nElena Simperl\nUniv ersity of Southampt on\n326 PUBLICA TIONS \xa0\xa0\xa05,011  CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nIoan T oma\nUniv ersity of Innsbruck\n136 PUBLICA TIONS \xa0\xa0\xa01,774  CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nAll c ontent f ollo wing this p age was uplo aded b y Ioan T oma  on 19 May 2014.\nThe user has r equest ed enhanc ement of the do wnlo aded file.' metadata={'source': 'Semantic_Web.pdf', 'page': 0}
"
"page_content='SemanticWeb:Why, What, and How?\nDieter Fensel\nJim Hendler\nHenry Lieberman\nWolfgang Wahlster' metadata={'source': 'Semantic_Web.pdf', 'page': 1}
"
"page_content='2\nBriefTable ofContents\nPreface........................................................................................................................ ..................10\n1. Introduction................................................................................................................. ............27\nI. Languages &Ontologies......................................................................................................... .61\n2. SHOE: ABlueprintforthe Semantic Web...........................................................................62\n3. DAML-ONT: AnOntology Languagefor the SemanticWeb...........................................111\n4. Ontologies andSchema Languages onthe Web.................................................................1515. UPML: The Language andTool SupportforMaking the SemanticWebAlive.............211\n6. Ontologies Come of Age........................................................................................................25 1\nII Knowledge support............................................................................................................. ...286\n7. Sesame: An Architecture for Storing and Querying RDF Data and Schema\nInformation.................................................................................................................... ............287\n8. Enabling Task-CenteredKnowledge SupportthroughSemanticMarkup.....................329\n9. Knowledge Mobility: Semantics for the Web as a White Knight for Knowledge-Based\nSystems........................................................................................................................ ...............369\n10. Knowledge Modelling for study of domains and inter-domain relationship –\nKnowledge Discovery............................................................................................................. ...412\n11. SEmanticportAL— The SEALapproach.......................................................................461\nIII. Dynamic aspect.............................................................................................................. .....519\n12. Semantic Gadgets: Ubiquitous ComputingMeetsthe Semantic Web............................520\n13. StaticandDynamicSemanticsof the Web........................................................................539\n14. Semantic Annotationfor WebContent Adaptation.........................................................57415. TaskAchieving Agents onthe WorldWide Web.............................................................611\nList ofFigures.................................................................................................................. ..........648' metadata={'source': 'Semantic_Web.pdf', 'page': 2}
"
"page_content=""3\nTable of Contents\nPreface........................................................................................................................ ..................10\n1. The original dream............................................................................................................. ....10\n2. Re-enter machines............................................................................................................. ....12\n3. Where are wenow?............................................................................................................... 12\n4. The World WideWeb Consortium-W3C............................................................................14\n5. WhereistheWeb GoingNext?.............................................................................................15\n5.1. Avoiding the World Wide Wait.......................................................................................15\n5.2. Data aboutData- Metadata...........................................................................................16\n5.3. The Web oftrust.............................................................................................................. 17\n5.4. ‘Oh, yeah?’................................................................................................................. ....18\n5.5. Data aboutthings...........................................................................................................1 9\n5.6. Acryingneedfor RDF....................................................................................................205.7. Interactive Creativity...................................................................................................... 22\n5.8. Letting Go.................................................................................................................. .....23\n5.9. It’sup to us................................................................................................................. ....24\n1. Introduction................................................................................................................. ............27\n1.WhyIs Therea Needfor the Semantic WebandWhat It Will Provide................................30\n2. Howthe SemanticWeb Will Be Possible.............................................................................37\n2.1. Languages.................................................................................................................. .....37\n2.2. Tools...................................................................................................................... .........42\n2.3. Applications............................................................................................................... .....54\nReferences..................................................................................................................... ............57\nFootnotes...................................................................................................................... .............59\nI. Languages &Ontologies......................................................................................................... .61\n2. SHOE: ABlueprintforthe Semantic Web...........................................................................62\n1. Introduction................................................................................................................. ..........62\n2. Background................................................................................................................... .........65\n3. The SHOELanguage.............................................................................................................7 2\n3.1. SHOEOntologies...........................................................................................................74\n3.2. SHOEInstances.............................................................................................................. 77\n3.3. SHOE's Semantics..........................................................................................................79\n3.4.InteroperabilityinDistributedEnvironments................................................................833.5. Ontology Evolution.........................................................................................................8 8\n3.6. Scalability................................................................................................................ .......93\n4. Implementation............................................................................................................... .......94\n5. RelatedWork.................................................................................................................. .....102\nConclusion..................................................................................................................... ..........105\nAcknowledgments................................................................................................................ ...106\nReferences..................................................................................................................... ..........107\nFootnotes...................................................................................................................... ...........110\n3. DAML-ONT: AnOntology Languagefor the SemanticWeb...........................................111\n1. Introduction................................................................................................................. ........111\n2. An IntroductionThrough Examples....................................................................................116"" metadata={'source': 'Semantic_Web.pdf', 'page': 3}
"
"page_content='4\n2.1. Defining Classes and Properties..................................................................................117\n2.2. Defining Individuals.....................................................................................................119\n2.3. RelatingIndividuals through Properties......................................................................1192.4. Describing Attributes ofClasses..................................................................................121\n2.5. Using Properties...........................................................................................................1 23\n3. Notes........................................................................................................................ ............128\n4. Language Extensions........................................................................................................... 129\n5. An Axiomatic Semantics of DAML-ONT..........................................................................130\n5.1. Overview................................................................................................................... ....130\n5.2. The AxiomLanguage....................................................................................................133\n5.3. Axioms for RDF............................................................................................................134\n5.4. .Axioms for RDFSchema..............................................................................................1355.5. Axioms for DAML-ONT................................................................................................135\n5.6. Example Translation and Inference..............................................................................136\n5.7. DAML-ONTClasses.....................................................................................................1385.8. DAML-ONTProperties................................................................................................140\nConclusions.................................................................................................................... .........145\nAcknowledgements............................................................................................................... ..146\nReferences..................................................................................................................... ..........147\nFootnotes...................................................................................................................... ...........149\n4. Ontologies andSchema Languages onthe Web.................................................................151\n1. Introduction................................................................................................................. ........151\n2. Ontologies and Schemas......................................................................................................1533. The OntologyLanguage OIL...............................................................................................155\n4. XMLSchema.................................................................................................................... ...162\n4.1. Description ofXMLSchema.........................................................................................162\n4.2. The Relation Between OILand XMLSchema..............................................................170\n5. RDFSchema.................................................................................................................... ....177\n5.1. RDFand RDFSchema.................................................................................................178\n5.2. The Relation Between OILand RDFSchema...............................................................182\n6. Applyingontologiesto online resources.............................................................................187\n6.1.TranslatinganontologyontoanXMLSchemaprescription........................................187\n6.2. Defining an Ontology Languageas Extension to RDFSchema...................................194\nConclusion..................................................................................................................... ..........205\nReferences..................................................................................................................... ..........208\nFootnotes...................................................................................................................... ...........210\n5. UPML: The Language andTool SupportforMaking the SemanticWebAlive.............211\n1. Introduction................................................................................................................. ........211\n2. BrokeringReasoningComponents on the Web...................................................................215\n3. UPML:The Language forKnowledge Component MarkUp..............................................219\n3.1. Overviewofthe UPMLFramework.............................................................................221\n3.2. Concepts................................................................................................................... ....223\n3.3. Binary Relations...........................................................................................................2 28\n3.4. Web Syntaxes................................................................................................................ 231\n4. An Editorfor UPMLSpecifications based on Protégé-2000..............................................235\nConclusions.................................................................................................................... .........240' metadata={'source': 'Semantic_Web.pdf', 'page': 4}
"
"page_content='5\nReferences..................................................................................................................... ..........244\nFootnotes...................................................................................................................... ...........249\n6. Ontologies Come of Age........................................................................................................25 1\n1. Introduction:The web’s growingneeds..............................................................................251\n2. Ontologies................................................................................................................... .........254\n3. Simple OntologiesandTheir Uses......................................................................................2614. StructuredOntologiesandTheirUses.................................................................................265\n5. OntologyAcquisition.......................................................................................................... 271\n6.Ontology-relatedImplications andNeeds...........................................................................273Conclusions.................................................................................................................... .........280\nAcknowledgements............................................................................................................... ..280\nReferences..................................................................................................................... ..........281\nFootnotes...................................................................................................................... ...........284\nII Knowledge support............................................................................................................. ...286\n7. Sesame: An Architecture for Storing and Querying RDF Data and Schema\nInformation.................................................................................................................... ............287\n1. Introduction................................................................................................................. ........287\n2. RDFand RDFSchema........................................................................................................288\n2.1. RDF........................................................................................................................ ......288\n2.2. RDFSchema.................................................................................................................2 91\n3. The need for an RDF/SQueryLanguage............................................................................293\n3.1. Queryingatthesyntacticlevel.....................................................................................293\n3.2. Queryingatthestructurelevel.....................................................................................296\n3.3. Queryingatthesemanticlevel: RQL............................................................................298\n3.4. Conclusion................................................................................................................. ...300\n4. Sesame’s Architecture......................................................................................................... 300\n4.1. Overview................................................................................................................... ....301\n4.2. The Repository Abstraction Layer................................................................................304\n4.3. The Repository.............................................................................................................. 308\n5. Sesame’s FunctionalModules.............................................................................................311\n5.1. The RQLQueryModule...............................................................................................312\n5.2. The RDFExport Module..............................................................................................316\n6. Experiences.................................................................................................................. ........316\n6.1. Using RQL................................................................................................................... .317\n6.2. Application: On-To-Knowledge....................................................................................318\n6.3. Ontologies and RDFSchema........................................................................................319\n6.4. Using PostgreSQL........................................................................................................3206.5. Scalabilityissues.......................................................................................................... .321\n7. Future directions............................................................................................................. .....323\n7.1. DAML+OIL..................................................................................................................3 23\n7.2. Other repositories.........................................................................................................3 24\n7.3. AdminModule...............................................................................................................3 24\nConclusion..................................................................................................................... ..........324\nReferences..................................................................................................................... ..........326\nFootnotes...................................................................................................................... ...........327\n8. Enabling Task-CenteredKnowledge SupportthroughSemanticMarkup.....................329' metadata={'source': 'Semantic_Web.pdf', 'page': 5}
"
"page_content='6\n1. The EvolvingWeb............................................................................................................... 329\n2. Web ProblemSolving..........................................................................................................33 2\n2.1. Dimensions ofvariation................................................................................................333\n2.2. Supporting Technologies...............................................................................................335\n3. The Domain.................................................................................................................... .....338\n3.1. Aerospace Customer Service........................................................................................338\n3.2. Scenario................................................................................................................... .....340\n4. EnablingInfrastructure....................................................................................................... .342\n4.1. Main Components.........................................................................................................343\n4.2. Information/KnowledgeRepository..............................................................................347\n4.3. Handling Queries.........................................................................................................355\n5. Worked Example................................................................................................................ .359\nConclusion..................................................................................................................... ..........365\nReferences..................................................................................................................... ..........366\nFootnotes...................................................................................................................... ...........368\n9. Knowledge Mobility: Semantics for the Web as a White Knight for Knowledge-Based\nSystems........................................................................................................................ ...............369\n1. Introduction................................................................................................................. ........369\n2. The NeedforKnowledge Mobility......................................................................................370\n2.1. No Knowledge Baseis an Island..................................................................................371\n2.2. Educating Knowledge Bases.........................................................................................388\n3.ANewGenerationofKnowledge Bases: Resilient HyperKnowledge Bases...................393\n4. TRELLIS: BuildingResilient Hyper Knowledge Bases.....................................................400\nConclusions.................................................................................................................... .........406\nAcknowledgements............................................................................................................... ..407\nReferences..................................................................................................................... ..........408\nFootnotes...................................................................................................................... ...........411\n10. Knowledge Modelling for study of domains and inter-domain relationship –\nKnowledge Discovery............................................................................................................. ...412\n1. Introduction................................................................................................................. ........412\n2. Knowledge Modeling..........................................................................................................41 7\n2.1. Ontology (Domain Modeling).......................................................................................419\n2.2. Resources.................................................................................................................. ....424\n2.3. Inter-Ontological Relationships...................................................................................431\n2.4. Operations................................................................................................................. ...433\n3. Information Scapes............................................................................................................ ..436\n4. Knowledge Discovery.........................................................................................................43 9\n5. Visual Interfaces............................................................................................................. .....445\n5.1. Knowledge Builder.......................................................................................................445\n5.2. IScape Builder.............................................................................................................. 448\n5.3.Web-accessibleinterface toexecute IScapes................................................................450\n5.4. IScape ProcessingMonitor..........................................................................................451\n6. RelatedWork.................................................................................................................. .....453\nConclusions.................................................................................................................... .........456\nReferences..................................................................................................................... ..........457\nFootnotes...................................................................................................................... ...........459' metadata={'source': 'Semantic_Web.pdf', 'page': 6}
"
"page_content=""7\n11. SEmanticportAL— The SEALapproach.......................................................................461\n1. Introduction................................................................................................................. ........461\n2. Ontologyand knowledge base.............................................................................................463\n2.1. Ontologiesforcommunication.....................................................................................463\n2.2. Ontologyvs.knowledge base........................................................................................467\n3. Ontologyengineering.......................................................................................................... 472\n3.1. Methodology for ontologyengineering........................................................................473\n3.2. Experience withontology development........................................................................477\n4. SEALinfrastructureand core modules................................................................................480\n4.1. Architecture............................................................................................................... ...481\n4.2. Core modules................................................................................................................ 483\n5. Semanticranking.............................................................................................................. ...488\n5.1. Reinterpreting queries..................................................................................................491\n5.2. Similarity of knowledgebases......................................................................................492\n6. Semantic personalization.....................................................................................................4 97\n6.1. Semantic bookmarks.....................................................................................................498\n6.2. Semantic logfiles........................................................................................................... 500\n7. RDFoutside— froma semantic web sitetothe SemanticWeb.........................................502\n7.1. RDFGENERATOR— an example...............................................................................502\n7.2. RDFCRAWLER............................................................................................................504\n8. Related work.................................................................................................................. ......506\nConclusions.................................................................................................................... .........511\nAcknowledgements............................................................................................................... ..514\nReferences..................................................................................................................... ..........514\nFootnotes...................................................................................................................... ...........517\nIII. Dynamic aspect.............................................................................................................. .....519\n12. Semantic Gadgets: Ubiquitous ComputingMeetsthe Semantic Web............................520\n1. Introduction................................................................................................................. ........520\n2. About Representation.......................................................................................................... 521\n3. Scenario: Semantic GadgetIn a Museum............................................................................5234. Semantic Discovery............................................................................................................ .526\n5. Contractingthe Use of Services..........................................................................................528\n6. Composition of Services......................................................................................................53 0\n7. MuseumScenario Revisited:an Analysis...........................................................................532\nConclusions.................................................................................................................... .........536\nReferences..................................................................................................................... ..........536\nFootnotes...................................................................................................................... ...........537\n13. StaticandDynamicSemanticsof the Web........................................................................539\n1. Introduction................................................................................................................. ........539\n2. Static Semantics.............................................................................................................. .....541\n2.1. The Web's Link StructureMimics aSemanticNet........................................................541\n2.2. Shouldthe Semantic Web Be Static?............................................................................542\n3. Dynamic Semantics............................................................................................................. 543\n3.1. Transparency Between Static and Dynamic Semantics................................................544\n4. Sources of Dynamic Semantics...........................................................................................545"" metadata={'source': 'Semantic_Web.pdf', 'page': 7}
"
"page_content=""8\n4.1. Web Browsing Generates Dynamic Semantics.............................................................545\n4.2. Agents Generate Dynamic Semantics...........................................................................546\n4.3. Web Editing Generates DynamicSemantics................................................................546\n5. Web Agents Make Use of Dynamic Semantics...................................................................547\n6.Information-Retrieval andTheorem-ProvingPerspectives.................................................549\n6.1. Thetheorem-proving paradigm....................................................................................551\n7. The Semantic Web shouldn't sit ontheTowerof Babel.....................................................553\n7.1. Not mydepartment?......................................................................................................554\n8. We needanotherlanguage like a hole in the head...............................................................556\n9. Is Procedural Attachment Ropeto HangYourself?............................................................557\n9.1. ProceduralMarkup......................................................................................................558\n10. Glue's Providesa Smooth Path FromTextto Code..........................................................559\n10.1. Who's theuser?...........................................................................................................56 0\n11. Glue's DistinguishingFeatures..........................................................................................561\n12. AGlue Example................................................................................................................ 565\n13. Comparison withJava.......................................................................................................568\n14. Comparison withJavascript...............................................................................................570Conclusion..................................................................................................................... ..........571\nReferences..................................................................................................................... ..........572\nFootnotes...................................................................................................................... ...........573\n14. Semantic Annotationfor WebContent Adaptation.........................................................574\n1. Introduction................................................................................................................. ........574\n2. External Annotation Framework.........................................................................................5763. Annotation-Based TranscodingSystem..............................................................................581\n3.1. Transcoding Architecture.............................................................................................582\n3.2. Authoring-Time Transcoding.......................................................................................583\n4.HTML-Page Splittingfor Small-ScreenDevices................................................................586\n4.1. Annotation Vocabulary.................................................................................................587\n4.2. Adaptation Engine........................................................................................................589\n4.3. Application to real-life HTMLpages............................................................................592\n5. Discussion................................................................................................................... .........598\n5.1. Empirical Evaluation....................................................................................................598\n5.2. Comparison with RelatedWork....................................................................................602\nConclusions.................................................................................................................... .........604\nAcknowledgements............................................................................................................... ..606\nReferences..................................................................................................................... ..........606\nFootnotes...................................................................................................................... ...........610\n15. TaskAchieving Agents onthe WorldWide Web.............................................................611\n1. Introductionand Motivation................................................................................................611\n2. Standards for RepresentingActivities.................................................................................613\n2.1. <I-N-OVA>and<I-N-CA>.........................................................................................614\n2.2. Motivation................................................................................................................. ....615\n2.3. Representing Plansin <I-N-OVA>..............................................................................6162.4. Rationaleforthe Categories of Constraints within <I-N-OVA>.................................618\n2.5. Sorted First Order Logic Base, and XML....................................................................620\n3. Web-Based Applications.....................................................................................................621"" metadata={'source': 'Semantic_Web.pdf', 'page': 8}
"
"page_content='9\n3.1. Open Planning ProcessPanels....................................................................................622\n3.2.Generic O-P3Technology.............................................................................................624\n4 .A p p l ica tio n1–O - P lano nt h eW eb .....................................................................................627\n4.1. The COAComparison Matrix.......................................................................................631\n5 .A p p l ica tio n2–A C P3..........................................................................................................634\n5.1. Modelling the Planning Process...................................................................................635\n5.2. Building ACP3...............................................................................................................635\n6. Application 3 –WOPlan......................................................................................................637\nConclusions.................................................................................................................... .........644\nAcknowledgements............................................................................................................... ..645\nReferences..................................................................................................................... ..........645\nFootnotes...................................................................................................................... ...........647\nList ofFigures.................................................................................................................. ..........648' metadata={'source': 'Semantic_Web.pdf', 'page': 9}
"
"page_content='Preface\nTim Berners-Lee,Director of the World-Wide Web Consortium\nBased on a talk presented at the W3C meeting, London,\n1997/12/3\n1. The original dream\nThe Web was designed to be a universal space of\ninformation, so when you make a bookmark or a hypertext link,\nyou should be able to make that link to absolutely any piece\nof information that can be accessed using networks. The\nuniversality is essential to the Web: it looses its power if\nthere are certain types of things to which you can’t link.\nThere are a lot of sides to that universality. You should\nbe able to make links to a hastily jotted crazy idea and to\nlink to a beautifully produced work of art. You should be able\nto link to a very personal page and to something available to\nthe whole planet. There will be information on the Web which\nhas a clearly defined meaning and can be analysed and traced\nby computer programs; there will be information, such as\npoetry and art, which requires the full human intellect for an\nunderstanding which will always be subjective.\nAnd what was the purpose of all this? The first goal was\nto work together better. While the use of the Web across all\nscales is essential to the concept, the original driving force\nwas collaboration at home and at work. The idea was, that by' metadata={'source': 'Semantic_Web.pdf', 'page': 10}
"
"page_content='11\nbuilding together a hypertext Web, a group of whatever size\nwould force itself to use a common vocabulary, to overcome itsmisunderstandings, and at any time to have a running model -\nin the Web - of their plans and reasons.\nFor me, the forerunner to the Web was a program called\n‘Enquire’, which I made for my own purposes. I wrote it in\n1980, when I was working at the European Particle Physics Lab\n(CERN), to keep track of the complex web of relationships\nbetween people, programs, machines and ideas. In 1989, when I\nproposed the Web, it was as an extension of that personal tool\nto a common information space.\nWhen we make decisions in meetings, how often are the\nreasons for those decisions (which we so carefully elaborated\nin the meeting) then just typed up, filed as minutes and\nessentially lost? How often do we pay for this, in time spent\npassing on half-understandings verbally, duplicating effort\nthrough ignorance and reversing good decisions from\nmisunderstanding? How much lack of co-operation can be tracedto an inability to understand where another party is ‘coming\nfrom’? The Web was designed as an instrument to prevent\nmisunderstandings.\nFor this to work, it had to be not only easy to ‘browse’,\nbut also easy to express oneself. In a world of people and\ninformation, the people and information should be in some kind\nof equilibrium. Anything in the Web can be quickly learned by\na person and any knowledge you see as being missing from the' metadata={'source': 'Semantic_Web.pdf', 'page': 11}
"
"page_content='12\nWeb can be quickly added. The Web should be a medium for the\ncommunication between people: communication through sharedknowledge. For this to work, the computers, networks,\noperating systems and commands have to become invisible, and\nleave us with an intuitive interface as directly as possible\nto the information.\n2. Re-enter machines\nThere was a second goal for the Web, which is dependent on\nthe first. The second part of the dream was that, if you can\nimagine a project (company, whatever) which uses the Web in\nits work, then there will be an map, in cyberspace, of all the\ndependencies and relationships which define how the project is\ngoing. This raises the exciting possibility of letting\nprograms run over this material, and help us analyze and\nmanage what we are doing. The computer renters the scene\nvisibly as a software agent, doing anything it can to help us\ndeal with the bulk of data, to take over the tedium ofanything that can be reduced to a rational process, and to\nmanage the scale of our human systems.\n3. Where are we now?\nThe Web you see as a glorified television channel today is\njust one part of the plan. Although the Web was driven\ninitially by the group work need, it is not surprising thatthe most rapid growth was in public information. Web' metadata={'source': 'Semantic_Web.pdf', 'page': 12}
"
"page_content=""13\npublishing, when a few write and many read, profited most from\nthe snowball effect of exponentially rising numbers of readersand writers. Now, with the invention of the term ‘intranet’,\nWeb use is coming back into organisations. (In fact, it never\nleft. There have always been since 1991, many internal\nservers, but as they were generally invisible from outside the\ncompanies’ firewalls they didn't get much press!). However,\nthe intuitive editing interfaces which make authoring a\nnatural part of daily life are still maturing. I thought that\nin 12 months we would have generally available intuitive\nhypertext editors. (\nI have stuck to that and am still saying\nthe same thing today!)\nIt is not just the lack of simple editors that has\nprevented use of the Web as a collaborative medium. For a\ngroup of people to use the Web in practice, they need reliable\naccess control, so that they know their ideas will only be\nseen by those they trust. They also need access control and\narchival tools that, like browsing, don't require one to getinto the details of computer operating systems.\nThere is also a limit to what we can do by ourselves with\ninformation, without the help of machines. A familiar\ncomplaint of the newcomer to the Web, who has not learned to\nfollow links only from reliable sources, is the about the mass\nof junk out there. Search engines flounder in the mass of\nundifferentiated documents that range vastly in terms of"" metadata={'source': 'Semantic_Web.pdf', 'page': 13}
"
"page_content='14\nquality, timeliness and relevance. We need information about\ninformation, ‘metadata’, to help us organise it.\nAs it turns out, many of these long-term needs will\nhopefully be met by technology, which for one reason or\nanother is being developed by the technical community, and\nagreed upon by groups such as the World-Wide Web Consortium\n(W3C), in response to various medium-term demands.\n4. The World Wide Web Consortium - W3C\nThe Consortium exists as a place for those companies for\nwhom the Web is essential to meet and agree on the common\nunderpinnings that will allow everyone to go forward. (There\nare currently over 230 member organisations.)\nWhether developing software, hardware, networks,\ninformation for sale, or using the Web as a crucial part of\ntheir business life, these companies are driven by current\nemerging areas such as Web publishing, intranet use,\nelectronic commerce, and Web-based education and training.From these fields medium-term needs arise and, where\nappropriate, the Consortium starts an Activity to help reach a\nconsensus on computer protocols for that area. Protocols are\nthe rules that allow computers to talk together about a given\ntopic. When the industry agrees on protocols, then a new\napplication can spread across the world, and new programs can\nall work together as they all speak the same language. This iskey to the development of the Web.' metadata={'source': 'Semantic_Web.pdf', 'page': 14}
"
"page_content=""15\n5. Where is the Web Going Next?\n5.1.AvoidingtheWorldWideWait\nYou've heard about it, you may have experienced it, but\ncan anything be done about it?\nOne reason for the slow response you may get from a dial-\nup Internet account simply follows from the ‘all you can eat’\npricing policy. The only thing which keeps the number of\nInternet users down is unacceptable response, so if we were to\nsuddenly make it faster, there would almost immediately be\nmore users until it was slow again. I've seen it: when we\nspeeded up an overloaded server by a factor of five, it once\nagain rose to 100% utilisation as the number of usersincreased by a factor of five.\nEventually, there will be different ways of paying for\ndifferent levels of quality. But today there some things we\ncan do to make better use of the bandwidth we have, such as\nusing compression and enabling many overlapping asynchronous\nrequests. There is also the ability to guess ahead and push\nout what a user may want next, so that the user does not have\nto request and then wait. Taken to one extreme, this becomes\nsubscription-based distribution, which works more like emailor newsgroups.\nOne crazy thing is that the user has to decide whether to\nuse mailing lists, newsgroups, or the Web to publish"" metadata={'source': 'Semantic_Web.pdf', 'page': 15}
"
"page_content=""16\nsomething. The best choice depends on the demand and the\nreadership pattern. A mistake can be costly. Today, it is notalways easy for a person to anticipate the demand for a page.\nFor example, the pictures of the Schoemaker-Levy comet hitting\nJupiter taken on a mountain top and just put on the nearest\nMac server or the decision Judge Zobel put onto the Web - both\nthese generated so much demand that their servers were\nswamped, and in fact, these items would have been better\ndelivered as messages via newsgroups. It would be better if\nthe ‘system’, the collaborating servers and clients together,\ncould adapt to differing demands, and use pre-emptive orreactive retrieval as necessary.\n5.2.DataaboutData-Metadata\nIt is clear that there should be a common format for\nexpressing information about information (called metadata),for a dozen or so fields that needed it, including privacy\ninformation, endorsement labels, library catalogues, tools for\nstructuring and organising Web data, distribution terms and\nannotation. The Consortium's Resource Description Framework\n(RDF) is designed to allow data from all these fields to be\nwritten in the same form, and therefore carried together and\nmixed.\nThat by itself will be quite exciting. Proxy caches, which\nmake the Web more efficient, will be able to check that they\nare really acting in accordance with the publisher's wishes"" metadata={'source': 'Semantic_Web.pdf', 'page': 16}
"
"page_content='17\nwhen it comes to redistributing material. A browser will be\nable to get an assurance, before imparting personalinformation in a Web form, on how that information will be\nused. People will be able, if the technology is matched by\nsuitable tools, to endorse Web pages that they perceive to be\nof value. Search engines will be able to take such\nendorsements into account and give results that are perceived\nto be of much higher quality. So a common format for\ninformation about information will make the Web a whole lot\nbetter.\n5.3.TheWeboftrust\nIn cases in which a high level of trust is needed for\nmetadata, digitally signed metadata will allow the Web to\ninclude a ‘Web of trust’. The Web of trust will be a set of\ndocuments on the Web that are digitally signed with certainkeys, and contain statements about those keys and about other\ndocuments. Like the Web itself, the Web of trust does not need\nto have a specific structure like a tree or a matrix.\nStatements of trust can be added exactly so as to reflect\nactual trust. People learn to trust through experience and\nthough recommendation. We change our minds about who we trust\nfor different purposes. The Web of trust must allow us toexpress this.\nHypertext was suitable for a global information system\nbecause it has this same flexibility: the power to represent' metadata={'source': 'Semantic_Web.pdf', 'page': 17}
"
"page_content='18\nany structure of the real world or a created imagined one.\nSystems that force you to express information in trees ormatrices are fine so long as they are used for describing\ntrees or matrices. The moment you try to use one to hold\ninformation that does not fit the mold, you end up twisting\nthe information to fit, and so misrepresenting the situation.\nSimilarly, the W3C\'s role in creating the Web of trust will be\nto help the community have common language for expressing\ntrust.\nThe Consortium will not seek a central or controlling\nrole in the content of the Web.\n5.4.‘Oh,yeah?’\nSo, signed metadata is the next step. When we have this,\nwe will be able to ask the computer not just for information,\nbut why we should believe it. Imagine an ‘Oh, yeah?’ button on\nyour browser. There you are looking at a fantastic deal thatcan be yours just for the entry of a credit card number and\nthe click of a button. ""Oh, yeah?"", you think. You press the\n‘Oh, yeah?’ button. You are asking your browser why you should\nbelieve it. It, in turn, can challenge the server to provide\nsome credentials: perhaps, a signature for the document or a\nlist of documents that expresses what that key is good for.\nThose documents will be signed. Your browser rummages throughwith the server, looking for a way to convince you that the\npage is trustworthy for a purchase. Maybe it will come up with\nan endorsement from a magazine, which in turn has been' metadata={'source': 'Semantic_Web.pdf', 'page': 18}
"
"page_content=""19\nendorsed by a friend. Maybe it will come up with an\nendorsement by the seller's bank, which has in turn anendorsement from your bank. Maybe it won't find any reason for\nyou to actually believe what you are reading at all.\n5.5.Dataaboutthings\nAll the information mentioned above is information about\ninformation. Perhaps the most important aspect of it is that\nit is machine-understandable data, and it may introduce a new\nphase of the Web in which much more data in general can be\nhandled by computer programs in a meaningful way. All these\nideas are just as relevant to information about the real\nworld: about cars and people and stocks and shares and flights\nand food and rivers.\nThe Enquire program assumed that every page was about\nsomething. When you created a new page it made you say whatsort of thing it was: a person, a piece of machinery, a group,\na program, a concept, etc. Not only that, when you created a\nlink between two nodes, it would prompt you to fill in the\nrelationship between the two things or people. For example,\nthe relationships were defined as ‘A is part of B’ or ‘A made\nB’. The idea was that if Enquire were to be used heavily, it\ncould then automatically trace the dependencies within anorganisation.\nUnfortunately this was lost as the Web grew. Although it\nhad relationship types in the original specifications, this"" metadata={'source': 'Semantic_Web.pdf', 'page': 19}
"
"page_content='20\nhas not generally become a Web of assertions about things or\npeople. Can we still build a Web of well-defined information?\nMy initial attempts to suggest this fell on stony ground,\nand not surprisingly. HTML is a language for communicating a\ndocument for human consumption. SGML (and now XML) gives\nstructure, but not semantics. Neither the application, nor the\nlanguage, called for it.\nWith metadata we have a need for a machine-understandable\nlanguage that has all the qualities we need. Technically, the\nsame apparatus we are constructing in the Resource Description\nFramework for describing the properties of documents can beused equally well for describing anything else.\n5.6.AcryingneedforRDF\nIs there a real need for this metadata and is there a\nmarket in the medium term that will lead companies to developin this direction? Well, in the medium term, we see the\ndrivers already - web publishing, education and training,\nelectronic commerce and intranets.\nI have mentioned the vicious circle that caused the Web to\ntake off initially. The increasing amount of information on\nthe Web was an incentive for people to get browsers, and the\nincreasing number of browsers created more incentive forpeople to put up more Web sites. It had to start somewhere and\nit was bootstrapped by making ‘virtual hypertext’ servers.\nThese servers typically had access to large databases - such' metadata={'source': 'Semantic_Web.pdf', 'page': 20}
"
"page_content=""21\nas phone books, library catalogues and existing documentation\nmanagement systems. They had simple programs which wouldgenerate Web pages ‘on the fly’ corresponding to various views\nand queries on the database. This has been a very powerful\n‘bootstrap’ as there is now a healthy market for tools to\nallow one to map one's data from its existing database form on\nto the Web.\nNow here is the curious thing. There is so much data\navailable on Web pages, that there is a market for tools that\n‘reverse engineer’ that process. These are tools that read\npages, and with a bit of human advice, recreate the databaseobject. Even though it takes human effort to analyse the way\ndifferent Web sites are offering their data, it is worth it.\nIt is so powerful to have a common, well defined interface to\nall the data so that you can program on top of it. So the need\nfor well defined interface to Web data in the short term is\nundeniable.\nWhat we propose is that, when a program goes out to a\nserver looking for data, say a database record, that the same\ndata should be available in RDF, in such a way that the rows\nand columns are all labelled in a well-defined way. That it\nmay be possible to look up the equivalence between field names\nat one Web site and at another, and so merge information\nintelligently from many sources. This is a clear need for\nmetadata, just from looking at the trouble libraries have had"" metadata={'source': 'Semantic_Web.pdf', 'page': 21}
"
"page_content=""22\nwith the numbers of very similar, but slightly different ways\nof making up a catalogue card for a book.\n5.7.InteractiveCreativity\nI want the Web to be much more creative than it is at the\nmoment. I have even had to coin a new word - Intercreativity -\nwhich means building things together on the Web. I found thatpeople thought that the Web already was ‘interactive’, because\nyou get to click with a mouse and fill in forms! I have\nmentioned that better intuitive interfaces will be needed, but\nI don’t think they will be sufficient without better security.\nIt would be wrong to assume that digital signature will be\nmainly important for electronic commerce, as if security were\nonly important where money is concerned. One of my key themes\nis the importance of the Web being used on all levels from the\npersonal, through groups of all sizes, to the globalpopulation.\nWhen you are working in a group, you do things you would\nnot do outside the group, You share half-baked ideas, reveal\nsensitive information. You use a vernacular that will be\nunderstood; you can cut corners in language and formality. You\ndo these things because you trust the people in the group, and\nthat others won't suddenly have access to it. To date, on theWeb, it has been difficult to manage such groups or to allow\none to control access to information in an intuitive way."" metadata={'source': 'Semantic_Web.pdf', 'page': 22}
"
"page_content='23\n5.8.LettingGo\nSo, where will this get us? The Web fills with documents,\neach of which has pointers to help a computer understand it\nand relate it to terms it knows. Software agents acting on our\nbehalf can reason about this data. They can ask for and\nvalidate proofs of the credibility of the data. They cannegotiate as to who will have what access to what and ensure\nthat our personal wishes for privacy level be met.\nThe world is a world of human beings, as it was before,\nbut the power of our actions is again increased. The Web\nalready increases the power of our writings, making them\naccessible to huge numbers of people and allowing us to draw\non any part of the global information base by a simple\nhypertext link. Now we image the world of people with active\nmachines forming part of the infrastructure. We only have toexpress a request for bids, or make a bid, and machines will\nturn a small profit matching the two. Search engines, from\nlooking for pages containing interesting words, will start\nindexes of assertions that might be useful for answering\nquestions or finding justifications.\nI think this will take a long time. I say this\ndeliberately, because in the past I have underestimated howlong something will take to become available (e.g. good\neditors in 12 months).' metadata={'source': 'Semantic_Web.pdf', 'page': 23}
"
"page_content='24\nNow we will have to find how best to integrate our warm\nfuzzy right-brain selves into this clearly defined left-brainworld. It is easy to know who we trust, but it might be\ndifficult to explain that to a computer. After seeding the\nsemantic Web with specific applications, we must be sure to\ngeneralise it cleanly, leaving it clean and simple so that the\nnext generation can learn its logical concepts along with the\nalphabet.\nIf we can make something decentralised, out of control,\nand of great simplicity, we must be prepared to be astonished\nat whatever might grow out of that new medium.\n5.9.It’suptous\nOne thing is certain. The Web will have a profound effect\non the markets and the cultures around the world: intelligent\nagents will either stabilise or destabilise markets; thedemise of distance will either homogenise or polarise\ncultures; the ability to access the Web will be either a great\ndivider or a great equaliser; the path will either lead to\njealousy and hatred or peace and understanding.\nThe technology we are creating may influence some of these\nchoices, but mostly it will leave them to us. It may expose\nthe questions in a starker form than before and force us tostate clearly where we stand.\nWe are forming cells within a global brain and we are\nexcited that we might start to think collectively. What' metadata={'source': 'Semantic_Web.pdf', 'page': 24}
"
"page_content='25\nbecomes of us still hangs crucially on how we think\nindividually.' metadata={'source': 'Semantic_Web.pdf', 'page': 25}
"
"page_content='1. Introduction\nDieter Fensel1, Jim Hendler2, Henry Lieberman3, and\nWolfgang Wahlster4\nThe World-wide Web (WWW) has drastically changed the\navailability of electronically available information.\nCurrently there are around one billion static documents in theWWW which are used by more than 200 million users\ninternationally. In addition, this number is growing\nastronomically. In 1990, the WWW began with a small number of\ndocuments as an in-house solution for around thousand users at\nCERN. By 2002, the standardization committee for the WWW\n(called W3C\n5) expects around a billion web users and a even\nhigher number of available documents. However, this success\nand exponential grow makes it increasingly difficult to find,\nto access, to present, and to maintain the information of useto a wide variety of users. Currently, pages on web must use\nrepresentation means rooted in format languages such as HTML\nor SGML and make use of protocols that allow browser to\npresent information to human readers. The information content,\nhowever, is mainly presented by natural language. Thus, there\nis a wide gap between the information available for tools and\nthe information kept in human readable form. This causesserious problems in accessing and processing the available\ninformation.' metadata={'source': 'Semantic_Web.pdf', 'page': 27}
"
"page_content=""28\n•Searching for information : Already, finding the right piece\nof information is often a nightmare. One gets lost in huge\namounts of irrelevant information and may often miss the\nrelevant ones. Searches are imprecise, often returning\npointers to many thousands of pages (and this situation\nworsens as the web grows). In addition, a user must read\nretrieved documents in order to extract the desired\ninformation −so even once the page is found, the search may\nbe difficult or the information obscured. Thus, the same\npiece of knowledge must often be presented in different\ncontexts and adapted to different users' needs and queries.\nHowever, the web lacks automated translation tools to allow\nthis information to automatically be transformed betweendifferent representation formats and contexts.\n•\nPresenting information: A related problem is that the\nmaintenance of web sources has become very difficult.\nKeeping redundant information consistent and keeping\ninformation correct is hardly supported by current webtools, and thus the burden on a user to maintain the\nconsistency is often overwhelming. This leads to a plethora\nof sites with inconsistent and/or contradictory information.\n•\nElectronic commerce: Automatization of electronic commerce\nis seriously hampered by the way information is currently\npresented. Shopping agents use wrappers and heuristics to\nextract product informations from weakly structured textual"" metadata={'source': 'Semantic_Web.pdf', 'page': 28}
"
"page_content='29\ninformation. However, development and maintenance costs are\nhigh and provided services are limited. B2B market placesoffer new possibilities for electronic commerce, however,\nare hampered by the large and increasing mapping costs\nrequired to integrate heterogeneous product descriptions.\nThere is an emerging awareness that providing solutions to\nthese problems requires that there be a machine understandable\nsemantics for some or all of the information presented in the\nWWW. Achieving such a\nsemantic web [Berners-Lee, 1999]\nrequires:\n•Developing languages for expressing machine understandable\nmeta information for documents and developing terminologies\n(i.e., name spaces or ontologies) using these languages and\nmaking them available on the web.\n•Developing tools and new architectures that use such\nlanguages and terminologies to provide support in finding,\naccessing, presenting and maintaining information sources.\nFinally, realizing applications that provide a new level\nof service to the human users of the semantic web.\nDeveloping such languages, ontologies, and tools is a wide\nranging problem that touches on the research areas of a broad\nvariety of research communities. Therefore this book brought\ntogether colleagues from these different research communities.\nThese include researchers in the areas of databases,\nintelligent information integration, knowledge representation,' metadata={'source': 'Semantic_Web.pdf', 'page': 29}
"
"page_content='30\nknowledge engineering, information agents, knowledge\nmanagement, information retrieval, natural languageprocessing, meta data, web standards, and others. The book is\nbased on a seminar we had in Dagstuhl, Germany, in March 2000.\nThe contents of the book is organized as follows. First, a\nnumber of arising new web standards are discussed that should\nimprove the representation of machine processable semantics of\ninformation. Second, ontologies are introduced for\nrepresentation of semantics (in the sense of formal and real-\nworld semantics) in these formalisms. Third, these semantic\nannotations allow automatization in information access andtask achievement. Therefore, we discussed intelligent\ninformation access based on these semantic annotations. Forth,\na number of applications of these new techniques are\npresented.\nThe purpose of this book is to provide an overall\nmotivation of the subject. We first discuss further the need\nfor a semantic web in Section 1. Mainly its need is motivatedby shortcomings of the current state of the WWW. We will show\nwhich kind of new services the semantic web will enable, and\nin Section 2 we will explain how this can be achieved.\n1. Why Is There a Need for the Semantic Web\nand What It Will Provide\nThe web has brought exiting new possibilities for\ninformation access and electronic commerce. It was its' metadata={'source': 'Semantic_Web.pdf', 'page': 30}
"
"page_content='31\nsimplicity that enabled its quick take up and exponential\ngrowth. However, meanwhile this simplicity also seriouslyhampers its further growth. We will discuss these bottlenecks\nfor knowledge management and electronic commerce (cf. [Fensel,\n2001] for more details).\nKnowledge Management is concerned with acquiring,\nmaintaining, and accessing knowledge of an organization. It\naims to exploit an organizations intellectual assets for\ngreater productivity, new value, and increased\ncompetitiveness. Due to globalization and the impact of the\nInternet, many organizations are increasingly geographicallydispersed and organized around virtual teams. With the large\nnumber of on-line documents, several document management\nsystems entered the market. However these systems have severe\nweaknesses:\n•Searching information: Existing keyword-based search\nretrieves irrelevant information which uses a certain word\nin a different context, or it may miss information where\ndifferent words about the desired content are used.\n•Extracting information: Human browsing and reading is\ncurrently required to extract relevant information from\ninformation sources, as automatic agents lack all common\nsense knowledge required to extract such information fromtextual representations, and they fail to integrate\ninformation spread over different sources.' metadata={'source': 'Semantic_Web.pdf', 'page': 31}
"
"page_content='32\n•Maintaining weakly structured text sources is a difficult\nand time- consuming activity when such sources become large.\nKeeping such collections consistent, correct, and up-to-date\nrequires a mechanized representation of semantics and\nconstraints that help to detect anomalies.\n•Automatic document generation: Adaptive web sites which\nenable a dynamic reconfiguration according to user profiles\nor other relevant aspects would be very useful. The\ngeneration of semi-structured information presentations from\nsemi-structured data requires a machine-accessiblerepresentation of the semantics of these information\nsources.\nSemantic web technology will enable structural and\nsemantic definitions of documents providing completely new\npossibilities: Intelligent search instead of keyword matching,\nquery answering instead of information retrieval, document\nexchange between departments via ontology mappings, and\ndefinition of views on documents.\nWeb Commerce (B2C): Electronic Commerce is becoming an\nimportant and growing business area. This is happening for tworeasons. First, electronic commerce is extending existing\nbusiness models. It reduces costs and extends existing\ndistribution channels and may even introduce new distribution\npossibilities. Second, it enables completely new business\nmodels or gives them a much greater importance than they had' metadata={'source': 'Semantic_Web.pdf', 'page': 32}
"
"page_content='33\nbefore. What has up to now been a peripheral aspect of a\nbusiness field may suddenly receive its own important revenueflow. Examples of business field extensions are on-line\nstores, examples of new business fields are shopping agents,\non-line marketplaces and auction houses that make comparison\nshopping or meditation of shopping processes into a business\nwith its own significant revenue flow. The advantages of on-\nline stores and the success story of many of them has led to a\nlarge number of such shopping pages. The new task for a\ncustomer is now to find a shop that sells the product he is\nlooking for, getting it in the desired quality, quantity, andtime, and paying as little as possible for it. Achieving these\ngoals via browsing requires significant time and will only\ncover a small share of the actual offers. Very early, shopbots\nwere developed that visit several stores, extract product\ninformation and present to the customer a instant market\noverview. Their functionality is provided via wrappers that\nneed to be written for each on-line store. Such a wrapper usesa keyword search for finding the product information together\nwith assumptions on regularities in the presentation format of\nstores and text extraction heuristics. However, this\ntechnology has two severe limitations:\n•Effort: Writing a wrapper for each on-line store is a time-\nconsuming activity and changes in the outfit of stores cause\nhigh maintenance efforts.' metadata={'source': 'Semantic_Web.pdf', 'page': 33}
"
"page_content='34\n•Quality: The extracted product information is limited\n(mostly price information), error prone and incomplete. For\nexample, a wrapper may extract the direct product price but\nmisses indirect costs such as shipping costs etc.\nThese problems are caused by the fact that most product\ninformation is provided in natural language, and automatic\ntext recognition is still a research area with significantunsolved problems. What is required is a machine-processable\nsemantics of the provided information. The situation will\ndrastically change when standard representation formalisms for\nthe structure and semantics of data are available. Software\nagents can be build that can ""understand"" the product\ninformation. Meta- on-line stores can be built with little\neffort and this technique will also enable complete markettransparency in the various dimensions of the diverse product\nproperties. The low-level programming of wrappers based on\ntext extraction and format heuristics will be replaced by\nsemantic mappings, which translate different product\ndescriptions into each other and which can be used to navigate\nand search automatically for the required information.\nElectronic Business (B2B): Electronic Commerce in the\nbusiness to business field (B2B) is not a new phenomena.\nInitiatives to support electronic data exchange in businessprocesses between different companies existed already in the\nsixties. In order to exchange business transactions sender and\nreceiver have to agree on a common standard (a protocol for' metadata={'source': 'Semantic_Web.pdf', 'page': 34}
"
"page_content='35\ntransmitting the content and a language for describing the\ncontent) A number of standards arose for this purpose. One ofthem is the UN initiative Electronic Data Interchange for\nAdministration, Commerce, and Transport (EDIFACT). In general,\nthe automatization of business transactions has not lived up\nto the expectations of its propagandists. This can be\nexplained by some serious shortcomings of existing approach\nlike EDIFACT: It is a rather procedural and cumbersome\nstandard, making the programming of business transactions\nexpensive, error prone and hard to maintain. Finally, the\nexchange of business data via extranets is not integrated withother document exchange processes, i.e., EDIFACT is an\nisolated standard. Using the infrastructure of the Internet\nfor business exchange significantly improve this situation.\nStandard browsers can be used to render business transactions\nand these transactions are transparently integrated into other\ndocument exchange processes in intranet and Internet\nenvironments. However, this is currently hampered by the factthat HTML do not provide a means for presenting rich syntax\nand semantics of data. XML, which is designed to close this\ngap in current Internet technology, will already change the\nsituation. B2B communication and data exchange can then be\nmodeled with the same means that are available for the other\ndata exchange processes, transaction specifications can easily\nbe rendered by standard browsers, maintenance will be cheap.\nXML provides a standard serialized syntax for defining the' metadata={'source': 'Semantic_Web.pdf', 'page': 35}
"
"page_content='36\nstructure and semantics of data. Therefore, it provides means\nto represent the semantics of the information as part ofdefining their structure. However, XML does\nnotprovide\nstandard data structures and terminologies to describe\nbusiness processes and exchanged products. Therefore, new\nsemantic web technology will have to play important roles in\nXML-enabled electronic commerce:\n•First, languages with a defined data model and rich modeling\nprimitives have to be defined that provide support indefining, mapping, and exchanging product data.\n•Second, standard ontologies have to be developed covering\nthe various business areas. Examples in this area are Common\nBusiness Library (CBL), Commerce XML (cXML), ecl@ss, Open\nApplications Group Integration Specification (OAGIS),RosettaNet, and UN/SPSC.\n•Third, efficient translation services is required in areas\nwhere standard ontologies do not exist\n6or where a\nparticular client wants to use his own terminology and needs\ntranslation service from his terminology into the standard.This translation service must cover structural and\nsemantical as well as language differences.\nThese support will significantly extend the degree to\nwhich data exchange is automated and will create complete new\nbusiness models in the participating market segments.' metadata={'source': 'Semantic_Web.pdf', 'page': 36}
"
"page_content='37\nThe semantic web deals with important application areas\nsuch as knowledge management and electronic commerce (B2C andB2B). It may help to overcome many of the current bottlenecks\nin these areas. The next section will explain, how this can be\nachieved.\n2. How the Semantic Web Will Be Possible\nAbove we described new services provided by the semantic\nweb. Here we will discuss how such a new level of service canbe achieved. First, we describe new languages that allow to\nadd semantics to the web. Second, we describe important tools\nand finally we illustrate by some applications the potential\nutility of the semantic web.\n2.1.Languages\nLanguages for the semantic web include two aspects. First,\nthey need to provide some formal syntax and formal semantics\nto enable automated processing of their content. Second, they\nneed to provide some standardized vocabulary referring to some\nreal-world semantics enabling automatic and human agents to\nshare information and knowledge. The latter is provided by\nontologies.\n2.1.1. Formal Languages\nOriginally, the web grew mainly around the language HTML,\nthat provide a standard for structuring documents that was' metadata={'source': 'Semantic_Web.pdf', 'page': 37}
"
"page_content='38\ntranslated by browsers in a canonical way to render documents.\nOn the one hand, it was the simplicity of HTML that enabledthe fast grow of the WWW. On the other hand, its simplicity\nseriously hampered more advanced web application in many\ndomains and for many tasks. This was the reason to define XML\n(see Figure 1.1) which allows to define arbitrary domain and\ntask specific extensions (even HTML got redefined as an XML\napplication, see XHTML). Therefore, it is just consequence to\ndefine the semantic web as an XML application. The first step\nin this direction is taken by RDF which define a syntactical\nconvention and a simple data model for representing machine-processable semantics of data. A second step is taken by RDFS\nthat define basic ontological modeling primitives on top of\nRDF. A full-blown ontology modeling language as extension of\nRDFS are defined by OIL and DAML-O which conclude our\ndiscussion on semantic web languages.\nThe\nResource Description Framework (RDF) is a standard for\nWeb meta data developed by the World Wide Web Consortium (W3C)[Lassila 1998]. Expanding from the traditional notion of\ndocument meta data (such as something like library catalog\ninformation), RDF is suitable for describing any Web\nresources, and as such provides interoperability between\napplications that exchange machine-understandable information\non the Web. RDF is an XML application and adds a simple data\nmodel on top of XML. This data model provides three elements:' metadata={'source': 'Semantic_Web.pdf', 'page': 38}
"
"page_content='39\nObjects, properties, and values of properties applied to a\ncertain object.\nTheRDF Schema (RDFS) candidate recommendation (cf.\n[Brickley & Guha, 2000]) defines additional modeling\nprimitives on top of RDF. It allows to define classes (i.e.,\nconcepts), inheritance hierarchy for classes and properties,\nand domain and range restrictions for properties. OIL7(cf.\n[Fensel et al., 2001]) takes RDF schema as a starting point\nand extends it to a full-fledged ontology modeling language.\nSuch an ontology languages must fulfill three important\nrequirements:\nIt must be highly intuitive to the human user. Given the\ncurrent success of the frame-based and object-oriented\nmodeling paradigm they should have a frame-like look and feel.\n•It must have a well-defined formal semantics with\nestablished reasoning properties in terms of completeness,\ncorrectness, and efficiency.8\n•It must have a proper link with existing web languages like\nXML and RDF ensuring interoperability.\nIn this respect, many of the existing languages like CycL\n[Lenat & Guhy, 1990], KIF [Genesereth, 1991], Ontolingua\n[Farquhar et al., 1997], and SHOE [Luke et al., 1996] fail.\nHowever, the Ontology Inference Layer OIL matches the\ncriterion mentioned above. OIL unifies three important aspects\nprovided by different communities: Epistemologically rich\nmodeling primitives as provided by the Frame community, formal' metadata={'source': 'Semantic_Web.pdf', 'page': 39}
"
"page_content='40\nsemantics and efficient reasoning support as provided by\nDescription Logics, and a standard proposal for syntacticalexchange notations as provided by the Web community.\nAnother candidate for such a web-based ontology modeling\nlanguage is\nDAML-O9funded by DARPA. However, this language is\nstill in its early stage and lack a formal definition of its\nsemantics.]\n2.1.2. Ontologies\nOntologies were developed in Artificial Intelligence to\nfacilitate knowledge sharing and reuse. Since the beginning of\nthe nineties ontologies have become a popular research topicinvestigated by several Artificial Intelligence research\ncommunities, including Knowledge Engineering, natural-language\nprocessing and knowledge representation. More recently, the\nnotion of ontology is also becoming widespread in fields such\nas intelligent information integration, cooperative\ninformation systems, information retrieval, electronic\ncommerce, and knowledge management. The reason ontologies arebecoming so popular is in large part due to what they promise:\na shared and common understanding of some domain that can be\ncommunicated between people and application systems. Because\nontologies aim at consensual domain knowledge their\ndevelopment is often a cooperative process involving different\npeople, possibly at different locations. People who agree to\naccept an ontology are said to commit themselves to that\nontology.' metadata={'source': 'Semantic_Web.pdf', 'page': 40}
"
"page_content='41\nMany definitions of ontologies have been given in the last\ndecade, but one that, in our opinion, best characterizes theessence of an ontology is based on the related definitions by\n[Gruber, 1993]: An ontology is a formal, explicit\nspecification of a shared conceptualisation. A\n‘conceptualisation’ refers to an abstract model of some\nphenomenon in the world which identifies the relevant concepts\nof that phenomenon. ‘Explicit’ means that the type of concepts\nused and the constraints on their use are explicitly defined.\n‘Formal’ refers to the fact that the ontology should be\nmachine understandable. Hereby different degrees of formalityare possible. Large ontologies like WordNet\n10provide a\nthesaurus for over 100,000 terms explained in natural\nlanguage. On the other end of the spectrum is CYC11, that\nprovides formal axiomating theories for many aspect of common\nsense knowledge. ‘Shared’ reflects the notion that an ontology\ncaptures consensual knowledge, that is, it is not restricted\nto some individual, but accepted by a group.' metadata={'source': 'Semantic_Web.pdf', 'page': 41}
"
"page_content='42\nFigure 1.1 The layer language model for the WWW.\n2.2.Tools\nEffective and efficient work with the semantic web must be\nsupported by advanced tools enabling the full power of this\ntechnology. In particular, we need the following elements:\n•Formal languages to express and represent ontologies. We\nalready discussed some of them during the last section.\n•Editors and semi-automatic construction to build new\nontologies.\n•Reusing and Merging Ontologies: Ontology Environments that\nhelp to create new ontologies by reusing existing ones.\n•Reasoning Service: Instance and Schema Inferences enable\nadvanced query answering service, support ontology creation\nand help to map between different terminologies.' metadata={'source': 'Semantic_Web.pdf', 'page': 42}
"
"page_content='43\n•Annotation tools to link unstructured and semi-structured\ninformation sources with meta data.\n•Tools for information access and navigation that enable\nintelligent information access for human users.\n•Translation and integration Service between different\nontologies that enable multi-standard data interchange and\nmultiple view definitions (especially for B2B electronic\ncommerce).\nIn the following, we will briefly describe examples for\nthese technologies.\n2.2.1. Editors and semi-automatic construction\nOntology editors help human knowledge engineers to build\nontologies. Ontology editors support the definition of concepthierarchies, the definition attributes for concepts, and the\ndefinition of axioms and constraints. They must provide\ngraphical interfaces and must confirm to existing standards in\nweb-based software development. They enable inspecting,\nbrowsing, codifying and modifying ontologies and supports in\nthis way the ontology development and maintenance task. An\nexample system is Protégé [Grosso et al., 1999]. Protégéallows domain experts to build knowledge-based systems by\ncreating and modifying reusable ontologies and problem-solving\nmethods. Protégé generates domain- specific knowledge-\nacquisition tools and applications from ontologies. Protégé\nhas been used in more than 30 countries. It is an ontology' metadata={'source': 'Semantic_Web.pdf', 'page': 43}
"
"page_content='44\neditor which you can use to define classes and class\nhierarchy, slots and slot- value restrictions, relationshipsbetween classes and properties of these relationships (see\nFigure 1.2). The instances tab is a knowledge-acquisition tool\nwhich you can use to acquire instances of the classes defined\nin the ontology. Protégé is built at the University of\nStanford.\nFigure 1.2 The Protégé editor.\nManually building ontologies is a time-consuming task It\nis very difficult and cumbersome to manually derive ontologies\nfrom data. This appears to be true even regardless of the type\nof data one might consider. Natural language texts exhibit\nmorphological, syntactic, semantic, pragmatic and conceptualconstraints that interact in order to convey a particular' metadata={'source': 'Semantic_Web.pdf', 'page': 44}
"
"page_content='45\nmeaning to the reader. Thus, the text transports information\nto the reader and the reader embeds this information into hisbackground knowledge. Through the understanding of the text\ndata is associated with conceptual structures and new\nconceptual structures are learned from the interacting\nconstraints given through language. Tools that learn\nontologies from natural language exploit the interacting\nconstraints on the various language levels (from morphology to\npragmatics and background knowledge) in order to discover new\nconcepts and stipulate relationships between concepts.\nTherefore, in addition to editor support, semi- automatedtools in ontology development help to improve the overall\nproductivity. These tools combine machine learning,\ninformation extraction and linguistic techniques. Main tasks\nare: extracting relevant concepts, building is-a hierarchies,\nand extracting relationships between concepts.\nAn example system is\nText-To-Onto(cf. [Mädche & Staab,\n2000]). The Text-To-Onto system provides an integratedenvironment for the task of learning ontologies learning from\ntext. The Text Management module enables selecting a relevant\ncorpus. These domain texts may be both, natural language texts\nand HTML formatted texts. For a meaningful text analysis\ntextual preprocessing has to be performed. The Text Management\nmodule serves as an interface to the Information Extraction\nServer. If there already exists an domain lexicon the\ninformation extraction server performs domain specific' metadata={'source': 'Semantic_Web.pdf', 'page': 45}
"
"page_content='46\nparsing. The results of the parsing process are stored in XML\nor feature-value structures.The Management Module offers allexisting learning components to the user. Typically these\ncomponents are parametrizable. Existing knowledge structures\n(for example a taxonomy of concepts) are incorporated as\nbackground knowledge. The learning component discovers on the\nbase of the domain texts new knowledge structures, which are\ngrabbed in the Ontology Modeling Module to expand the existing\nontology. Text-To- Onto is developed at the Knowledge\nManagement Group of University of Karlsruhe, Institute AIFB\n(see Figure 1.3).\nFigure 1.3 Text-To-Onto.' metadata={'source': 'Semantic_Web.pdf', 'page': 46}
"
"page_content='47\n2.2.2. Ontology Environments\nAssuming that the world is full of well-designed modular\nontologies, constructing a new ontology is a matter of\nassembling existing ones. Instead of building ontologies from\nscratch one wants to reuse existing ontologies. Tools that\nsupport this approach most provide in adaptation and merging\nof existing ontologies to make them fitting to new tasks and\ndomains. Operations for combining ontologies are: Ontology\ninclusion, Ontology restriction, and polymorphic refinement of\nOntology. E.g. inclusion of one ontology in another has the\neffect that the composed ontology consists of the union of thetwo ontologies (their classes, relations, axioms). The\nknowledge engineer needs support in merging multiple\nontologies together and diagnosing individual or multiple\nontologies. He require supports in such tasks as suing\nontologies in differing formats, reorganizing taxonomies,\nresolving name conflicts, browsing ontologies, editing terms,\netc. A tool environment in this area is Chimaera whichprovides support for two important tasks: (1) merging multiple\nontologies and (2) diagnosing (and evolving) ontologies\n[McGuinness et al., 2000]. It has been developed at the\nUniversity of Stanford. Figure 1.4 illustrates Chimaera.' metadata={'source': 'Semantic_Web.pdf', 'page': 47}
"
"page_content='48\nFigure 1.4 Chimaera .\n2.2.3. Reasoning Service\nInference engines for ontologies can be used to reason\nabout instances of an ontology or over ontology schemes.\n•Reasoning over Instances of an ontology, for example, derive\na certain value for an attribute applied to an object. Such\ninference service can be used to answer queries about\nexplicit and implicit knowledge specified by an ontology.\nThe powerful support in formulating rules, constraints and\nanswering queries over schema information is far beyond\nexisting database technology. These inference services are\nthe equivalent of SQL query engines for databases, howeverprovide stronger support (for example, recursive rules). An\nexample system is Ontobroker ([Fensel et al., 2000b]) which\nis meanwhile commercialized by the company Ontoprise\n12.' metadata={'source': 'Semantic_Web.pdf', 'page': 48}
"
"page_content='49\n•Reasoning over Concepts of an ontology, for example,\nautomatically derive the right position of a new concept in\na give concept hierarchy. The FaCT (Fast Classification of\nTerminologies) [Horrocks & Patel-Schneider, 1999] can be\nused to automatically derive concept hierarchies. It is a\nDescription Logic (DL) classifier that makes use of the\nwell-defined semantics of OIL. FaCT can be accessed via aCorba interface. It has been developed at the University of\nManchester and currently an internet start up may go for\nimplementing a commercial version. FaCT is one of if not THE\nmost efficient reasoner for these kind of tasks.\nBoth types of reasoners help to build ontologies and to\nuse them for advanced information access and navigation as we\nwill discuss below.\n2.2.4. Annotation tools\nOntologies can be used to describe large instance\npopulation. Tools help the knowledge engineer to establish\nsuch link via:\n•Linking an ontology with a database schema or deriving a\ndatabase schema from an ontology in case of structured data\n•Deriving an XML DTD, an XML schema, and an RDF schema from\nan ontology in case of semi-structured data\n•Manually or semi-automatically adding ontological annotation\nto unstructured data.' metadata={'source': 'Semantic_Web.pdf', 'page': 49}
"
"page_content='50\nMore details can be found in [Erdmann & Studer, 2001] and\n[Klein et al., 2000].\n2.2.5. Tools for information access and navigation\nWorking with the Web is currently done at a very low\nlevel: Clicking on links and using key word search for links\nis the main (if not only) navigation technique. It is like\nprogramming with assembler and go-to instructions. The low-\nlevel interface may significantly hamper the expected growth\nof the Web in the future.\n•Keyword-based search retrieves irrelevant information that\nuse a certain word in a different meaning or it may miss\ninformation where different words are used to describe the\ndesired content. Navigation is only supported by predefined\nlinks and does not support clustering and linking of pagesbased on semantic similarity.\n•The query responses require human browsing and reading to\nextract the relevant information from these informationsources. This burdens web users with an additional loss of\ntime and seriously limits information retrieval by automatic\nagents that miss all common sense knowledge required to\nextract such information from textual representations\n•Keyword-based document retrieval fails to integrate\ninformation spread over different sources.\n•Finally, each current retrieval service can only retrieve\ninformation that is represented by the WWW. No further' metadata={'source': 'Semantic_Web.pdf', 'page': 50}
"
"page_content='51\ninference service is provided for deriving implicit\ninformation.\nOntologies help to overcome this bottlenecks in\ninformation access. They support information retrieval based\non the actual content of a page. They help to navigate the\ninformation space based on semantic concepts. They enable\nadvanced query answering and information extraction service,\nintegrating heterogeneous and distributed information sources\nenriched by inferred background knowledge. This provides two\nmain improvements:\n•Semantic information visualization: does not group\ninformation on location but group information on contents\nproviding semantic-based navigation support. Example are the\nhyperbolic browsing interface of Ontoprise (see Figure 1.5)and the page content visualization tool of Aidministrator\n13\n(see Figure 1.6).\n•Direct query answering services based on semi-structured\ninformation sources.' metadata={'source': 'Semantic_Web.pdf', 'page': 51}
"
"page_content='52\nFigure 1.5 A hyperbolic browsing interface .\n2.2.6. Translation and Integration Service\nAround 80% of the electronic business will be in the B2B\narea. All experts expect exponential growth of this area. Many\nstudies estimate around 10,000 B2B market places that are set\nup during the next years. However, there is one serious\nobstacle: The heterogeneity of product descriptions and the\nexponential growing effort in mapping these heterogeneous\ndescriptions. Therefore, effective and efficient contentmanagement of heterogeneous product catalogues is the critical\npoint for the B2B success. Traditional B2B did not change the\nbusiness model. It only helped to reduce transactions costs.' metadata={'source': 'Semantic_Web.pdf', 'page': 52}
"
"page_content='53\nIt required one mapping from one supplier to one customer or N\nmappings from one supplier to Ncustomers. The new business\nmodel of B2B market places change the business model bringing\nelectronic commerce to its full economical potential:\nindividual product search, corporative product search, market\ntransparency, easy access, and negotiation14.\nAn Internet-based marketplace can help significantly to\nbring both sides together. It provides instant market overview\nand offers comparison shopping. This marketplace will\nsignificantly change the business model of this market\nsegment. Basically, it will replace or at least compete withtraditional mediation agents, like wholesale traders. However,\nthe number of required mappings explode.\nMcompanies exchange\nbusiness transactions electronically with Ncompanies in a\nfragmented market. In consequence one would need M*Nmappings.\nThese mappings arise at two levels:\n•Different representations of product catalogues must be\nmerged:Different vendors may use different representation of\ntheir catalogue data.\n•A product catalogue in EXPRESS with a product catalogue\nin XML.\n•A product catalogue in XML with DTD1 with a product\ncatalogue in XML with DTD2.\n•Different vocabularies used to describe products must be\nmerged. Differences appear in:' metadata={'source': 'Semantic_Web.pdf', 'page': 53}
"
"page_content='54\nthe languages that are used to describe the products\n(English, Spanish, French, German etc.);\n•the concepts that are used to define products;\n•the attributes that are used to define products;\n•the values and value types that are used to define\nproducts;\n•the overall structure that is used to define products.\nWe need intermediate architectures that reduces\ndrastically the inherent complexity of the process for eachmapping and for reducing the number of mappings. Compared to\nthe prominent need on flexible mappings tools between\nontologies, not much actual tools can be reported. A promising\napproach based on a meta-level architecture is descried in\n[Bowers & Delcambre, 2000].\n2.3.Applications\nIn the beginning we sketched three application areas for\nsemantic web technologies: knowledge management, B2C web\ncommerce, and B2B electronic business. This section provide\nsome prototypical examples for such applications. It is not\nmeant as a representative survey of the field because thiswould require much more space and would be a paper (if not a\nbook) by its own.\nIn On-To-Knowledge\n15[Fensel et al., 2000a], an\nenvironment for knowledge management in large intranets and' metadata={'source': 'Semantic_Web.pdf', 'page': 54}
"
"page_content='55\nweb sites is built. Unstructured and semi-structured data will\nbe automatically annotated, and agent-based user interfacetechniques and visualization tools help the user to navigate\nand query the information space. Here, On-To- Knowledge\ncontinues a line of research that was set up with SHOE [Luke\net al., 1996] and Ontobroker [Fensel et al., 1998]: using\nontologies to model and annotate the semantics of information\nresources in a machine- processable manner. On-To-Knowledge is\ncarrying out three industrial case studies with SwissLife\n16,\nBritish Telecom17, and Enersearch18to evaluate the tool\nenvironment for ontology-based knowledge management. In thiscontext, CognIT\n19extended their information extraction tool\nCorporum to generate ontologies from semi-structured or\nunstructured natural language documents. Important concepts\nand their relationships are extracted from these documents and\nused to build up initial ontologies. Figure 1.6 shows an\nautomatically generated semanticstructure maps of the\nEnerSearch web site using Aidministrator technology20.' metadata={'source': 'Semantic_Web.pdf', 'page': 55}
"
"page_content='56\nFigure 1.6 Automatically generated semantic structure\nmaps.\nApplication of semantic web technology in the B2C area is\ndeveloped by Semantic Edge21that develop voice-based and\nnatural language frond end for accessing distributed and\nheterogeneous product informations. Instead of manually\nbrowsing large volumes of product information the human user\nwill be enabled to ask simple questions like: ""I am looking\nfor a cheap color printer for my Mac.""\nFinally, the B2B area may become the most important\napplication area of semantic web technology in terms of the\nmarket volume. Companies like VerticalNet22that build many\nvertical market places or ContentEurope23that provide content\nmanagement solutions for B2B electronic commerce all face the\nsame problem: Integrating heterogeneous and distributed\nproduct information. Naturally such companies make use of' metadata={'source': 'Semantic_Web.pdf', 'page': 56}
"
"page_content='57\nontology- based integration techniques to reduce their effort\nin providing integrated solutions for B2B market places.\nReferences\n[Bowers & Delcambre, 2000] S. Bowers and L. Delcambre: Representing and Transforming Model- Based\nInformation. In Electronic Proceedings of the ECDL 2000 Workshop on the Semantic Web, 21\nSeptember 2000, LisbonPortugal.\n[Berners-Lee, 1999]T. Berners-Lee:Weavingthe Web, OrionBusinessBooks, London, 1999.\n[Brickley &. Guha, 2000] D. Brickley and R. Guha. Resource Description Framework (RDF) Schema\nSpecification 1.0. Candidate recommendation, World Wide Web Consortium, Mar. 2000. Seehttp://www.w3.org/TR/2000/CR-rdf-schema-20000327.\n[Erdmann & Studer, 2001] M. Erdmann and R. Studer: How to Structure and Access XML Documents With\nOntologies. Data and Knowledge Engineering36 (2001), pp. 317-335.\n[Farquhar et al., 1997] A. Farquhar, R. Fikes, and J. Rice, The Ontolingua Server: A Tool for Collaborative\nOntologyConstruction, InternationalJournalofHuman-Computer Studies, 46:707-728, 1997.\n[Fensel, 2001] D. Fensel: Ontologies: Silver Bullet for Knowledge Management and Electronic Commerce,\nSpringer-Verlag, Berlin, 2001.\n[Fensel et al., 1998] D. Fensel, S. Decker, M. Erdmann und R. Studer: Ontobroker: The Very High Idea. In\nProceedings of the 11th International Flairs Conference (FLAIRS-98), Sanibal Island, Florida, USA, 131-135, Mai1998.\n[Fensel et al., 2001] D. Fensel, I. Horrocks, F. Van Harmelen, D. McGuiness, and P. Patel-Schneider: OIL:\nOntologyinfrastructure to Enable the semantic Web, IEEE Intelligent systems, March/April, 2001.\n[Fensel et al., 2000a] D. Fensel, F. van Harmelen, M. Klein, H. Akkermans, J. Broekstra, C. Fluit, J. van der\nMeer, H.-P. Schnurr, R. Studer, J. Hughes, U. Krohn, J. Davies, R. Engels, B. Bremdal, F. Ygge, U.\nReimer, and I. Horrocks: On- To-Knowledge: Ontology-based Tools for Knowledge Management. In\nProceedings of the eBusiness and eWork 2000 (EMMSEC 2000) Conference, Madrid, Spain, October\n2000.\n[Fensel et al., 2000b] D. Fensel, J. Angele, S. Decker, M. Erdmann, H.-P. Schnurr, R. Studer and, A. Witt:\nLessonsLearned fromApplying AI to the Web, JournalofCooperative Information Systems, 9(4), 2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 57}
"
"page_content='58\n[Genesereth, 1991] M. R. Genesereth: Knowledge Interchange Format. In Proceedings of the Second\nInternational Conference on the Principles of Knowledge Representation and Reasoning (KR-91), J.Allenet al., (eds), MorganKaufmanPublishers, 1991. See also http://logic.stanford.edu/kif/kif.html.\n[ G r o s s o ,1 9 9 9 ]W .E .G r o s s o ,H .E r i k s s o n ,R .W .F e r g e r s o n ,J .H .G e n n a r i ,S .W .T u ,a n dM .A .M u s e n .\nKnowledge Modeling at the Millennium (The Design and Evolution of Protege-2000). In the Proceedingsof the Twelfth Workshop on Knowledge Acquisition, Modeling and Management (KAW-1999), Banff,\nAlberta, Canada, October 16-21,1999.\n[Gruber, 1993] T. R. Gruber: A Translation Approach to Portable Ontology Specifications, Knowledge\nAcquisition, 5:199—220,1993.\n[Horrocks & Patel-Schneider, 1999] I. Horrocks and P. F. Patel-Schneider: Optimizing description logic\nsubsumption. Journalof Logicand Computation, 9(3):267–293,1999.\n[Klein et al., 2000] M. Klein, D. Fensel, F. van Harmelen, and I. Horrocks: The Relation between Ontologies\nand Schema-Languages: Translating OIL- Specifications to XML-Schema In: Proceedings of the\nWorkshop on Applications of Ontologies and Problem-solving Methods, 14th European Conference onArtificialIntelligence ECAI-00, Berlin, Germany August20-25, 2000.\n[Lasilla, 1998]O. Lassila:Web Metadata:AMatter ofSemantics, IEEE Internet Computing, 2(4), 1998\n[Lenat & Guha, 1990] D. B. Lenat and R. V. Guha: Building large knowledge-based systems. Representation\nand inference inthe Cyc project,Addison-Wesley, Reading, Massachusetts, 1990.\n[Luke et al., 1996] S. Luke, L. Spector, and D. Rager: Ontology-Based Knowledge Discovery on the World-\nWide Web\n.In Working Notes of the Workshop on Internet-Based Information Systems at the 13th\nNationalConference on ArtificialIntelligence (AAAI96), 1996.\n[Mädche & Staab, 2000] A. Mädche and S. Staab: Mining Ontologies from Text. In Knowledge Acquisition,\nModeling, and Management, Proceedings of the European Knowledge Acquisition Conference (EKAW-\n2000), R. Dieng et al. (eds.), Lecture Notes in Artificial Intelligence, LNAI, Springer-Verlag, October\n2000.\n[McGuiness et al., 2000] D. L. McGuinness, R. Fikes, J. Rice, and S. Wilder: The Chimaera Ontology\nEnvironment. In the Proceedings of the The Seventeenth National Conference on Artificial Intelligence\n(AAAI 2000), Austin, Texas, July30 - August3, 2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 58}
"
"page_content='59\nFootnotes\n1Division of Mathmatics & Computer Science,Vrije Universiteit Amsterdam, De Boelelaan 1081a, 1081 HV\nAmsterdam, NL, dieter@cs.vu.nl ,http://www.cs.vu.nl/~dieter\n2Department of Computer Science, University of Maryland,College Park, MD 20742, USA,\nhendler@cs.umd.edu, http://www.cs.umd.edu/~hendler\n3MIT Media Laboratory,20 Ames St. 305 A,Cambridge, MA 02139 USA, lieber@media.mit.edu,\nhttp://lieber.www.media.mit.edu/people/lieber\n4DFKI GmbH,Stuhlsatzenhausweg 3,D-66123 Saarbrücken, Germany, wahlster@dfki.de,\nhttp://www.dfki.de/~wahlster/\n5http://www.w3c.org\n6Given the current situation, there will be many""standards"" requiring interchange.\n7http://www.ontoknowledge.org/oil\n8Notice that we speakaboutthe semantic web.\n9http://www.daml.org\n10http://www.cogsci.princeton.edu/~wn\n11http://www.cyc.com/\n12http://www.ontoprise.de\n13http://www.aidministrator.nl\n14Fixed prices turned up at the beginning of the 20th century to lower transaction costs. However, negotiations\nand auctions help to allocate resources more optimally. Still, the negotiation effort may outweigh the\nadvantages and lead to unreasonably high demands on time (and transaction costs). Automatednegotiation agents and auction houses dispel the argument of high transaction costs and allow optimized\nresource allocation.\n15On-To-Knowledge isanEuropeanIST project, http://www.ontoknowledge.org.\n16http://www.swisslife.ch\n17http://www.bt.com/innovations/' metadata={'source': 'Semantic_Web.pdf', 'page': 59}
"
"page_content='60\n18See further http://www.enersearch.se. Enersearch research affiliates and shareholders are spread over many\ncountries: its shareholding companies include IBM (US), Sydkraft (Sweden), ABB(Sweden/Switzerland), PreussenElektra (Germany), Iberdrola (Spain), ECN (Netherlands), and\nElectricidade doPortugal\n19http://www.cognit.no\n20http:/www.aidministrator.nl\n21http://www.semanticedge.com\n22http://www.verticalnet.com\n23http://www.contenteurope.com' metadata={'source': 'Semantic_Web.pdf', 'page': 60}
"
"page_content='61\nI. Languages & Ontologies' metadata={'source': 'Semantic_Web.pdf', 'page': 61}
"
"page_content='62\n2. SHOE: ABlueprintfor theSemanticWeb\nJeff Heflin1, James Hendler2, and Sean Luke3\n1. Introduction\nThe World Wide Web is a vast repository of information,\nbut its utility is restricted by limited facilities forsearching and integrating this information. The problem of\nmaking sense of the Web has engaged the minds of numerous\nresearchers from fields such as databases, artificial\nintelligence, and library science; and these researchers have\napplied numerous approaches in an attempt to solve it. Tim\nBerners-Lee, inventor of the Web, has coined the term\nSemantic\nWebto describe a vision of the future in which the ""web of\nlinks"" is replaced with a ""web of meaning."" In this paper, we\nexamine the thesis that the ""the Semantic Web can be achieved\nif we describe web resources in a language that makes their\nmeaning explicit.""\nAny language for the Semantic Web must take into account\nthe nature of the Web. Let\'s consider some of the issues that\narise:\nThe Web is distributed. One of the driving factors in the\nproliferation of the Web is the freedom from a centralizedauthority. However, since the Web is the product of many\nindividuals, the lack of central control presents many\nchallenges for reasoning with its information. First,' metadata={'source': 'Semantic_Web.pdf', 'page': 62}
"
"page_content='63\ndifferent communities will use different vocabularies,\nresulting in problems of synonymy (when two different wordshave the same meaning) and polysemy (when the same word is\nused with different meanings). Second, the lack of editorial\nreview or quality control means that each page\'s reliability\nmust be questioned. An intelligent web agent simply cannot\nassume that all of the information it gathers is correct and\nconsistent. There are quite a number of well-known ""web\nhoaxes"" where information was published on the Web with the\nintent to amuse or mislead. Furthermore, since there can be no\nglobal enforcement of integrity constraints on the Web,information from different sources may be in conflict. Some of\nthese conflicts may be due to philosophical disagreement;\ndifferent political groups, religious groups, or nationalities\nmay have fundamental differences in opinion that will never be\nresolved. Any attempt to prevent such inconsistencies must\nfavor one opinion, but the correctness of the opinion is very\nmuch in the ""eye of the beholder.""\nThe Web is dynamic. The web changes at an incredible\npace, much faster than a user or even a ""softbot"" web agent\ncan keep up with. While new pages are being added, the content\nof existing pages is changing. Some pages are fairly static,\nothers change on a regular basis and still others change at\nunpredictable intervals. These changes may vary in\nsignificance: although the addition of punctuation, correction\nof spelling errors or reordering of a paragraph does not' metadata={'source': 'Semantic_Web.pdf', 'page': 63}
"
"page_content='64\naffect the semantic content of a document, other changes may\ncompletely alter meaning, or even remove large amounts ofinformation. A web agent must assume that its data can be, and\noften will be, out of date.\nThe rapid pace of information change on the Internet\nposes an additional challenge to any attempt to create\nstandard vocabularies and provide formal semantics. As\nunderstanding of a given domain changes, both the vocabulary\nmay change and the semantics may be refined. It is important\nthat such changes do not adversely alter the meaning of\nexisting content.\nThe Web is massive. Recent estimates place the number of\nindexable web pages at over 2 billion and this number is\nexpected to double within a year. Even if each page contained\nonly a\nsinglepiece of agent-gatherable knowledge, the\ncumulative database would be large enough to bring most\nreasoning systems to their knees. To scale to the size of the\never growing Web, we must either restrict expressivity of thelanguage or use incomplete reasoning algorithms.\nThe Web is an open world. A web agent is not free to\nassume it has gathered all available knowledge; in fact, in\nmost cases an agent should assume it has gathered rather\nlittle available knowledge. Even the largest search engines\nhave only crawled about 25% of the available pages. However,\nin order to deduce more facts, many reasoning systems make the\nclosed-world assumption. That is, they assume that anything' metadata={'source': 'Semantic_Web.pdf', 'page': 64}
"
"page_content=""65\nnot entailed in the knowledge base is not true. Yet it is\nclear that the size and evolving nature of the Web makes itunlikely that any knowledge base attempting to describe it\ncould ever be complete.\nIn an attempt to deal with these issues, we have designed\na language named SHOE, for Simple HTML Ontology Extensions.\nSHOE is one of the first languages that allows ontologies to\nbe designed and used directly on the World Wide Web [Luke et\nal., 1997]. In this paper we describe work that influenced\nSHOE, present an overview of the language, describe its syntax\nand semantics, and discuss how SHOE addresses the issues posedin this introduction. We then discuss the problem of\nimplementing a system that uses SHOE, describe some tools that\nenhance the language's usability, and discuss the application\nof these tools to two different domains. Finally, we provide\nan overview of related work and some concluding remarks.\n2. Background\nThe success of the Web was made possible by the Hypertext\nMarkup Language (HTML). With HTML, people can easily author\nsharable documents and link to related documents that might\nexist on different systems. However, HTML is mostly concerned\nwith presentation (i.e., how a document is displayed in a web\nbrowser), and it is difficult to automatically extract content\nfrom an HTML document."" metadata={'source': 'Semantic_Web.pdf', 'page': 65}
"
"page_content='66\nIn 1998, the World Wide Web Consortium (W3C) officially\nreleased the Extensible Markup Language (XML) [Bray et al.,1998], a simplified version of the Standard Generalized Markup\nLanguage (SGML) [ISO86] for the Web. XML allows special codes,\ncalled\ntags, to be embedded in a text data stream in order to\nprovide additional information about the text, such as\nindicating that a certain word should be emphasized. Usually,\neach tag has a corresponding end-tag, with arbitrary text or\nother tags contained between them. The combination of a start-\ntag, end-tag and the data between is called an element. Some\ntags have additional properties, called attributes.\nUnlike HTML, which precisely defines the structure and\nusage of a specific set of elements, XML allows users to\ndefine their own elements and attributes. Thus, users can\ncreate a document using content-specific as opposed to\npresentation-specific tags. If a document conforms to basic\nrules of XML, then it is said to be well-formed. If a document\nconforms to a common grammar, as specified by a document typedefinition (DTD), then is said to be valid. A DTD specifies\nvalid elements, the contents of these elements, and which\nattributes may modify an element. Thus a DTD provides a syntax\nfor an XML document, but the semantics of a DTD are implicit.\nThat is, the meaning of an element in a DTD is either inferred\nby a human due to the name assigned to it, is described in a\nnatural-language comment within the DTD, or is described in a\ndocument separate from the DTD. Humans can then build these' metadata={'source': 'Semantic_Web.pdf', 'page': 66}
"
"page_content='67\nsemantics into tools that are used to interpret or translate\nthe XML documents, but software tools cannot acquire thesesemantics independently. Thus, an exchange of XML documents\nworks well if the parties involved have agreed to a DTD\nbeforehand, but becomes problematic when one wants to search\nacross the entire set of DTDs or to spontaneously integrate\ninformation from multiple sources [Heflin & Hendler, 2000c].\nA number of approaches including information retrieval,\nwrappers, semi-structured databases, machine learning, and\nnatural language processing have been applied to the problem\nof querying and understanding HTML and/or XML web pages.However, the lack of semantics in the sources and the lack of\ncommon human knowledge in the tools greatly limits the quality\nof the techniques. We support an alternative approach: that\nauthors should explicitly associate semantics with the content\nthey provide.\nIn order to provide meaning for data, the knowledge must\nbe represented in some way. Knowledge representation is a sub-field of artificial intelligence concerned with such matters.\nThe goal of knowledge representation is to provide structures\nthat allow information to be stored, modified, and reasoned\nwith, all in an efficient manner. Over time, numerous\nknowledge representation languages with different properties\nhave evolved, from early languages such as KL-ONE [Brachman &\nSchmolze, 1985] and KRL [Bobrow & Winograd, 1977] to more' metadata={'source': 'Semantic_Web.pdf', 'page': 67}
"
"page_content='68\nrecent languages such as LOOM [MacGregor, 1991] , Classic\n[Brachman et al., 1991], and CYC-L [Lenat & Guha, 1990].\nOne of the oldest knowledge representation formalisms is\nsemantic networks. A semantic net represents knowledge as a\nset of nodes connected by labeled links. In such a\nrepresentation, meaning is implied by the way a concept is\nconnected to other concepts. Frame systems are another\nrepresentation that is isomorphic to semantic networks. In the\nterminology of such systems, a frame is a named data object\nthat has a set of slots, where each slot represents a property\nor attribute of the object. Slots can have one or more values;these values may be pointers to other frames.\nAdvanced semantic networks and frame systems typically\ninclude the notion of abstraction, which is represented using\nis-aandinstance-oflinks. Anis-alink indicates that one\nclass is included within another, while an instance-oflink\nindicates that a concept is a member of a class. These links\nhave correlations in basic set theory: is-ais like the subset\nrelation andinstance-ofis like the element of relation. The\ncollection ofis-alinks specifies a partial order on classes;\nthis order is often called a taxonomy or categorization\nhierarchy. The taxonomy can be used to generalize a concept to\na more abstract class or to specialize a class to its more\nspecific concepts. As demonstrated by the popularity of Yahoo\nand the Open Directory, taxonomies clearly aid users in\nlocating relevant information on the Web.' metadata={'source': 'Semantic_Web.pdf', 'page': 68}
"
"page_content='69\nMany researchers in knowledge representation have become\ninterested in the use of ontologies [Gruber, 1993]. The termontology, which is borrowed from philosophy, is defined as ""a\nparticular theory about being or reality."" As such, an\nontology provides a particular perspective onto the world, or\nsome part there of. Where a knowledge representation system\nspecifies how to represent concepts, an ontology specifies\nwhat concepts to represent and how they are interrelated. Most\nresearchers agree that an ontology must include a vocabulary\nand corresponding definitions, but it is difficult to achieve\nconsensus on a more detailed characterization. Typically, thevocabulary includes terms for classes and relations, while the\ndefinitions of these terms may be informal text, or may be\nspecified using a formal language like predicate logic. The\nadvantage of formal definitions is that they allow a machine\nto perform much deeper reasoning; the disadvantage is that\nthese definitions are much more difficult to construct.\nNumerous ontologies have been constructed, with varying\nscopes, levels of detail, and viewpoints. Noy and Hafner [Noy\n& Hafner, 1997] provide a good overview and comparison of some\nof these projects. One of the more prominent themes in\nontology research is the construction of reusable components.\nThe potential advantages of such components are that large\nontologies can be quickly constructed by assembling and\nrefining existing components, and integration of ontologies is\neasier when the ontologies share components. One of the most' metadata={'source': 'Semantic_Web.pdf', 'page': 69}
"
"page_content=""70\ncommon ways to achieve reusability is to allow the\nspecification of an inclusion relation that states that one ormore ontologies are included in the new theory [Farquhar,\nFikes & Rice, 1997], [Lenat & Guha, 1990]. If these\nrelationships are acyclic and treat all elements of the\nincluded ontology as if they were defined locally then an\nontology can be said to extend its included ontologies.\nOne attempt to apply ideas from knowledge representation\nto the Web is the Resource Description Framework (RDF)\n[Lassila, 1998]. The RDF data model is essentially a semantic\nnetwork without inheritance: it consists of nodes connected bylabeled arcs, where the nodes represent web resources and the\narcs represent attributes of these resources. RDF can be\nembedded in Web documents using an XML serialization syntax,\nalthough its designers emphasize this is only one of many\npossible representations of the RDF model.\nTo allow for the creation of controlled, sharable,\nextensible vocabularies (i.e., ontologies) the RDF workinggroup has developed the RDF Schema Specification [Brickley &\nGuha, 1999]. This specification defines a number of properties\nthat have specific semantics. RDF Schema defines properties\nthat are equivalent to the\ninstance-ofandis-alinks commonly\nused in knowledge representation. It also provides properties\nfor describing properties, including the specification of a\nproperty's domain and range, as well as any properties of\nwhich it is a subproperty."" metadata={'source': 'Semantic_Web.pdf', 'page': 70}
"
"page_content='71\nAlthough RDF is an improvement over HTML and XML, it is\ninsufficient for a Semantic Web language [Heflin & Hendler,2000c]. In particular, it provides a very small set of\nsemantic primitives and has relatively weak mechanisms for\nmanaging schema evolution. It is desirable that a Semantic Web\nlanguage provides semantics that allow inferences beyond what\nis capable in RDF, but it is also important that the reasoning\nprocedures for the language can scale to the volumes of data\navailable on the Internet.\nThe field of deductive databases deals with combining\ninferential capabilities with the scalability of databasesystems. The datalog model is commonly used as the basis for\ndescribing deductive databases. It is similar to Prolog in\nthat it consists entirely of Horn clauses, but differs in that\nit does not allow function symbols and is a strictly\ndeclarative language.\n4Datalog is based on the relational model\nbut defines two types of relations: extensional database (EDB)\nrelations are those predicates which are physically stored inthe database, while\nintensional database (IDB) relations are\nthose that can be computed from a set of logical rules.\nDatalog restricts its Horn clauses to be safe, meaning\nthat all of its variables are limited. Datalog defines\n""limited"" as follows: variables are limited if they appear in\nan ordinary predicate of the rule\'s body, appear in an ‘=’\ncomparison with a constant, or appear in an ‘=’ comparison\nwith another limited variable. Datalog\'s Horn clauses may' metadata={'source': 'Semantic_Web.pdf', 'page': 71}
"
"page_content='72\ndepend on each other recursively. Datalog allows negation in a\nlimited form called stratified negation , which we will not\ndiscuss here.\nDatalog is relevant to the design of a Semantic Web\nlanguage because it allows important classes of rules to be\nexpressed while inference algorithms such as magic sets, which\ncombine the best features of forward and backward chaining,\nprovide efficient reasoning. Additionally, it seems reasonable\nto expect that the Web will consist of a large EDB and a\ncomparatively small IDB, which is an ideal situation for a\ndeductive database system.\n3. The SHOE Language\nSHOE combines features of markup languages, knowledge\nrepresentation, datalog, and ontologies in an attempt to\naddress the unique problems of semantics on the Web. It\nsupports knowledge acquisition on the Web by augmenting it\nwith tags that provide semantic meaning. The basic structureconsists of\nontologies, which define rules that guide what\nkinds of assertions may be made and what kinds of inferences\nmay be drawn on ground assertions, and instancesthat make\nassertions based on those rules. As a knowledge representation\nlanguage, SHOE borrows characteristics from both predicate\nlogics and frame systems.\nSHOE can be embedded directly in HTML documents or used in\nXML documents. There are a number of advantages to using an' metadata={'source': 'Semantic_Web.pdf', 'page': 72}
"
"page_content=""73\nXML syntax for SHOE. First, although more standard knowledge\nrepresentation syntaxes, such as first-order logic or S-expressions, could be embedded between a pair of delimiting\ntags, Web authors are comfortable with XML-like, tag-based\nlanguages. Second, the XML syntax allows SHOE information to\nbe analyzed and processed using the Document Object Model\n(DOM), allowing software that is XML-aware, but not SHOE-aware\nto still use the information in more limited but nevertheless\npowerful ways. For example, some web browsers are able to\ngraphically display the DOM of a document as a tree, and\nfuture browsers will allow users to issue queries that willmatch structures contained within the tree. The third reason\nfor using an XML syntax is that SHOE documents can then use\nthe XSLT stylesheet standard [Clark, 1999] to render SHOE\ninformation for human consumption. This is perhaps the most\nimportant reason for an XML syntax, because it can eliminate\nthe redundancy of having a separate set of tags for the human-\nreadable and machine-readable knowledge.\nIn this section, we provide a brief description of the\nsyntax of the language followed by a formal model and a\ndiscussion of SHOE's key features. The interested reader can\nfind a detailed description of SHOE's syntax in the SHOE\nSpecification [Luke & Heflin, 2000]."" metadata={'source': 'Semantic_Web.pdf', 'page': 73}
"
"page_content='74\n3.1.SHOEOntologies\nSHOE uses ontologies to define the valid elements that may\nbe used in describing entities. Each ontology can reuse other\nontologies by extending them. An ontology is stored in an HTML\nor XML file and is made available to document authors and SHOE\nagents by placing it on a web server. This file includes tagsthat identify the ontology, state which ontologies (if any)\nare extended, and define the various elements of the ontology.\nFigure 2.1 shows an example of a SHOE ontology.\nFigure 2.1 An example ontology.' metadata={'source': 'Semantic_Web.pdf', 'page': 74}
"
"page_content='75\nIn SHOE syntax, an ontology appears between the tags\n<ONTOLOGY ID=idVERSION=version> and <\\ONTOLOGY>, and is\nidentified by the combination of the idandversion.A n\nontology can define categories, relations and other components\nby including special tags for these purposes.\nThe tag <DEF-CATEGORY> can be used to make category\ndefinitionsthat specify the categories under which various\ninstances could be classified. Categories may be grouped as\nsubcategories under one or more supercategories, essentially\nspecifying the is-arelation that is commonly used in semantic\nnetworks and frame systems. The use of categories allowstaxonomies to be built from the top down by subdividing known\nclasses into smaller sets. The example ontology defines many\ncategories, including Chair, which is a subcategory of\nFaculty.\nThe tag <DEF-RELATION> (which is closed by a <\\DEF-\nRELATION> tag) can be used to make\nrelational definitions that\nspecify the format of n-ary relational claims that may be madeby instances regarding instances and other data. One of the\nrelationships defined by the example ontology is advises,\nwhich is between an instance of category Faculty and an\ninstance of category Student. A relation argument can also be\none of four basic types (string, number, date, or boolean\nvalue) as is the case with the second argument of the\nrelationship hasGPA.' metadata={'source': 'Semantic_Web.pdf', 'page': 75}
"
"page_content=""76\nSHOE uses inference rules, indicated by the <DEF-\nINFERENCE> tag, to supply additional axioms. A SHOE inferencerule consists of a set of antecedents (one or more subclauses\ndescribing claims that entities might make) and a set of\nconsequents (consisting of one or more subclauses describing a\nclaim that may be inferred if all claims in the body are\nmade). The <INF-IF> and <INF-THEN> tags indicate the\nantecedents and consequents of the inference, respectively.\nThere are three types of inference subclauses: category,\nrelation and comparison. The arguments of any subclause may be\na constant or a variable, where variables are indicated by thekeyword VAR. Constants must be matched exactly and variables\nof the same name must bind to the same value. The ontology in\nthe example includes a rule stating that the head of a\ndepartment is a chair.\nAs is common in many ontology efforts, such as Ontolingua\nand Cyc, SHOE ontologies build on or extend other ontologies,\nforming a lattice with the most general ontologies at the topand the more specific ones at the bottom. Ontology extension\nis expressed in SHOE with the <USE-ONTOLOGY> tag, which\nindicates the id and version number of an ontology that is\nextended. An optional URL attribute allows systems to locate\nthe ontology if needed and a PREFIX attribute is used to\nestablish a short local identifier for the ontology. When an\nontology refers to an element from an extended ontology, this\nprefix and a period is appended before the element's name. In"" metadata={'source': 'Semantic_Web.pdf', 'page': 76}
"
"page_content='77\nthis way, references are guaranteed to be unambiguous, even\nwhen two ontologies use the same term to mean differentthings. By chaining the prefixes, one can specify a path\nthrough the extended ontologies to an element whose definition\nis given in a more general ontology.\nSometimes an ontology may need to use a term from another\nontology, but a different label may be more useful within its\ncontext. The <DEF-RENAME> tag allows the ontology to specify a\nlocal name for a concept from any extended ontology. This\nlocal name must be unique within the scope of the ontology in\nwhich the rename appears. Renaming allows domain specificontologies to use the vocabulary that is appropriate for the\ndomain, while maintaining interoperability with other domains.\n3.2.SHOEInstances\nUnlike RDF, SHOE makes a distinction between what can be\nsaid in an ontology and what can be said on an arbitrary web\npage. Ordinary web pages declare one or more instances that\nrepresent SHOE entities, and each instance describes itself or\nother instances using categories and relations. An example of\na SHOE instance is shown in Figure 2.2.\nThe syntax for instances includes an <INSTANCE> element\nthat has an attribute for a KEY that uniquely identifies theinstance. We recommend that the URL of the web page be used as\nthis key, since it is guaranteed to identify only a single\nresource. An instance commits to a particular ontology by' metadata={'source': 'Semantic_Web.pdf', 'page': 77}
"
"page_content='78\nmeans of the <USE-ONTOLOGY> tag, which has the same function\nas the identically named element used within ontologies. Toprevent ambiguity in the declarations, ontology components are\nreferred to using the prefixing mechanism described earlier.\nThe use of common ontologies makes it possible to issue a\nsingle logical query to a set of data sources and enables the\nintegration of related domains. Additionally, by specifying\nontologies the content author indicates exactly what meaning\nhe associates with his claims, and does not need to worry that\nan arbitrary definition made in some other ontology will alter\nthis meaning.\nFigure 2.2 An example instance.\nAn instance contains ground category claims andrelation\nclaims.A category claim is specified with the <CATEGORY\nNAME=yFOR=x> tag, and says that the instance claims that an' metadata={'source': 'Semantic_Web.pdf', 'page': 78}
"
"page_content=""79\ninstancexis an element of a category y. If the FOR attribute\nis omitted, then the category claim is about the instancemaking the claim. In the example, the instance\nhttp://univ.edu/jane/ claims that http://univ.edu/jane/ is a\nChair and http://univ.edu/john/ is a Student.\nA relational claim is enclosed by the <RELATION NAME=\nfoo>\nand <\\RELATION> tags, and says that the instance claims that\nan n-ary relation fooexists between some nnumber of\nappropriately typed arguments consisting of data or instances.\nIn the example, the instance http://univ.edu/jane/ claims that\nthere exists the relation advises betweenhttp://univ.edu/jane/ and her student http://univ.edu/john/\nand that that the name of http://univ.edu/jane/ is Jane Smith.\n3.3.SHOE'sSemantics\nIn order to describe the semantics of SHOE, we will extend\na standard model-theoretic approach for definite logic with\nmechanisms to handle distributed ontologies. For simplicity,\nthis model intentionally omits some minor features of the SHOE\nlanguage.\nWe define an ontology Oto be a tuple<V, A>whereVis\nthe vocabulary and Ais the set of axioms that govern the\ntheory. Formally, Vis a set of predicate symbols, each with\nsome arity > 0 and distinct from symbols in other ontologies,5\nwhileAis a set of definite program clauses that have the\nstandard logical semantics.6We now discuss the contents of V"" metadata={'source': 'Semantic_Web.pdf', 'page': 79}
"
"page_content=""80\nandA, based upon the components that are defined in the\nontology:\nA <USE-ONTOLOGY> statement adds the vocabulary and axioms\nof the specified ontology to the current ontology. Due to the\nassumption that names must be unique, name conflicts can be\nignored.\nA <DEF-RELATION> statement adds a symbol to the\nvocabulary and for each argument type that is a category, adds\nan axiom that states that an instance in that argument must be\na member of the category. If the tag specifies a name Rand\nhasnarguments then there is an n-ary predicate symbol Rin\nV. If the type of the ith argument is a category C, then\n[R(x1,...,xi,...xn) →C(xi)]∈A. This rule is a consequence\nof SHOE's open-world policy: since there is no way to know\nthat a given object in a relation claim is nota member of a\ncategory appropriate for that relation, it is better to assume\nthat this information is yet undiscovered than it is to assume\nthat the relation is in error. However, when arguments are\nbasic data types, type checking is performed to validate therelation. Basic data types are treated differently because\nthey\naredifferent: they have syntax which can be checked in\nways that category types cannot, which allows us to impose\nstringent input-time type checking on basic data types.\nA <DEF-CATEGORY> adds a unary predicate symbol to the\nvocabulary and possibly a set of rules indicating membership."" metadata={'source': 'Semantic_Web.pdf', 'page': 80}
"
"page_content='81\nIf the name is C, thenC∈V. For each super-category Pi\nspecified, [C(x)→Pi(x)]∈A.\nA <DEF-INFERENCE> adds one or more axioms to the theory.\nIf there is a single clause in the <INF-THEN>, then there is\none axiom with a conjunction of the <INF-IF> clauses as the\nantecedent and the <INF-THEN> clause as the consequent. If\nthere arenclauses in the <INF-THEN> then there are naxioms,\neach of which has one of the clauses as the consequent and has\nthe same antecedent as above.\nA <DEF-RENAME> provides an alias for a non-logical\nsymbol. It is meant as a convenience for users and can beimplemented using a simple pre-processing step that translates\nthe alias to the original, unique non-logical symbol.\nTherefore, it can be ignored for the logical theory.\nA formula\nFis well-formed with respect to Oif 1)Fis\nan atom of the form p(t1,...,tn)wherepis an-ary predicate\nsymbol such that p∈Vor 2)Fis a Horn clause where each\natom is of such a form. An ontology is well-formed if every\naxiom in the ontology is well-formed with respect to theontology.\nNow we turn our attention to data sources, such as one or\nmore web pages, that use an ontology to make relation and\ncategory claims. Let\nS=<OS, DS>be such a data source, where\nOS=<VS, AS>is the ontology and DSis the set of claims. S\nis well-formed if OSis well-formed and each element of DSis' metadata={'source': 'Semantic_Web.pdf', 'page': 81}
"
"page_content=""82\na ground atom that is well-formed with respect to OS. The\nterms of these ground atoms are constants and can be instancekeys or values of a SHOE data type.\nWe wish to be able to describe the meaning of a given\ndata source, but it is important to realize that on the Web,\nthe same data could have different meanings for different\npeople. An agent may be able to draw useful inferences from a\ndata source without necessarily agreeing with the ontology\nintended by the data's author. A common case would be when an\nagent wishes to integrate information that depends on two\noverlapping but still distinct ontologies. Which set of rulesshould the agent use to reason about this data? There are many\npossible answers, and we propose that the agent should be free\nto choose. To describe this notion, we define a\nperspective P\n=<S, O>as a data source S=<OS, DS>viewed in the context\nof an ontology O=<V, A>.I fO=OSthenPis theintended\nperspective, otherwise it is an alternate perspective .I f\nthere are elements of DSthat are not well-formed with respect\ntoO, these elements are considered to be irrelevant to the\nperspective. If WSis the subset of DSthat is well-formed\nwith respect to O, thenPis said to result in a definite\nlogic theoryT=WS∪A.\nFinally, we can describe the semantics of a perspective P\nusing a model theoretic approach. An interpretation of the\nperspective consists of a domain, the assignment of each\nconstant inSto an element of the domain, and an assignment"" metadata={'source': 'Semantic_Web.pdf', 'page': 82}
"
"page_content='83\nof each element in Vto a relation from the domain. A model of\nPis an interpretation such that every formula in its theory T\nis true with respect to it. We define a query on Pas a Horn\nclause with no consequent that has the semantics typically\nassigned to such queries for a definite logic program T.\nWe also introduce one additional piece of terminology\nthat will be used later in the paper. If every ground atomic\nlogical consequence of perspective Pis also a ground atomic\nlogical consequence of perspective P′thenP′is said to\nsemantically subsume P . In such cases, any query issued\nagainst perspective P′will have at least the same answers as\nif the query was issued against P. If two perspectives\nsemantically subsume each other, then they are said to be\nequivalent.\n3.4.InteroperabilityinDistributedEnvironments\nSHOE was designed specifically with the needs of\ndistributed internet agents in mind. A key problem in\ndistributed systems is interoperability; SHOE attempts to\nmaximize interoperability through the use of shared\nontologies, prefixed naming, prevention of contradictions, and\nlocality of inference rules. This section discusses each of\nthese in turn.\nFigure 2.3 shows how the ontology extension and renaming\nfeatures of the language promote interoperability. When two' metadata={'source': 'Semantic_Web.pdf', 'page': 83}
"
"page_content='84\nontologies need to refer to a common concept, they should both\nextend an ontology in which that concept is defined.\nFigure 2.3 Interoperability is based on shared\nontologies.\nIn this way, consistent definitions can be assigned to\neach concept, while still allowing communities to customize\nontologies to include definitions and rules of their own forspecialized areas of knowledge. These methods allow the\ncreation of high-level, abstract unifying ontologies extended\nby often-revised custom ontologies for specialized, new areas\nof knowledge. There is a trade-off between trust of sources\nfar down in the tree (due to their fleeting nature) and the\nease of which such sources can be modified on-the-fly to\naccommodate new important functions (due to their fleetingnature). In a dynamic environment, an ontology too stable will' metadata={'source': 'Semantic_Web.pdf', 'page': 84}
"
"page_content='85\nbe too inflexible; but of course an ontology too flexible will\nbe too unstable. SHOE attempts to strike a balance usingsimple economies of distribution.\nThe problems of synonymy and polysemy are handled by the\nextension mechanism and <DEF-RENAME> tag. Using this tag,\nontologies can create aliases for terms, so that domain-\nspecific vocabularies can be used. For example, in Figure 2.3,\nthe term DeptHead in univ-ont2 means the same thing as Chair\nin univ-ont due to a <DEF-RENAME> tag in univ-ont2. Although\nthe extension and aliasing mechanisms solve the problem of\nsynonymy of terms, the same terms can still be used withdifferent meanings in different ontologies. This is not\nundesirable, a term should not be restricted for use in one\ndomain simply because it was first used in a particular\nontology. As shown in\nFigure 2.3, in SHOE different ontologies may also use the\nsame term to define a different concept. Here, the term Chair\nmeans different things in univ-ont and furn-ont because thecategories have different ancestors. To resolve any ambiguity\nthat may arise, ontological elements are always referenced\nusing special prefixes that define unique paths to their\nrespective enclosing ontologies. Instances and ontologies that\nreference other ontologies must include statements identifying\nwhich ontologies are used and each ontology is assigned a\nprefix which is unique within that scope. All references to' metadata={'source': 'Semantic_Web.pdf', 'page': 85}
"
"page_content=""86\nelements from that ontology must include this prefix, thereby\nuniquely identifying which definition is desired.\nRecall that each SHOE instance must be assigned a key, and\nthat this key is often the URL of the web page describing the\ninstance. In SHOE, it is assumed that each key identifies\nexactly one entity, but no assumptions are made about whether\ntwo distinct keys might identify the same entity. This is\nbecause many different URLs could be used to refer to the same\npage (due to the facts that a single host can have multiple\ndomain names and operating systems may allow many different\npaths to the same file). To solve these problems in apractical setting, a canonical form can be chosen for the URL;\nan example rule might be that the full path to the file should\nbe specified, without operating systems shortcuts such as ‘~’\nfor a user's home directory. Even then, there are still\nproblems with multiple keys possibly referring to the same\nconceptual object. At any rate, this solution ensures that the\nsystem will only interpret two objects as being equivalentwhen they truly are equivalent. Ensuring that two object\nreferences are matched when they conceptually refer to the\nsame object is an open problem.\nIn distributed systems, a contradiction cannot be handled\nby simply untelling the most recent assertion, otherwise the\nsystem would give preference to those authors who provided\ntheir information first, regardless of whether it was true,\nfalse, or a matter of opinion. Rather than delve into complex"" metadata={'source': 'Semantic_Web.pdf', 'page': 86}
"
"page_content='87\nprocedures for maintaining consistency, we chose to keep SHOE\neasy to understand and implement. Therefore, we have carefullydesigned the language to eliminate the possibility of\ncontradictions between agent assertions. SHOE does this in\nfour ways:\n•SHOE only permits assertions, not retractions.\n•SHOE does not permit logical negation.\n•SHOE does not have single-valued relations, that is,\nrelational sets which may have only one value (or some fixed\nnumber of values).\n•SHOE does not permit the specification of disjoint classes.\nAlthough this restricts the expressive power of the\nlanguage, in our practical experience, we have not yet found\nit to be a significant problem. It should be noted that SHOE\ndoes not prevent ""contradictions"" that are not logically\ninconsistent. If claimant\nAsaysfather(Mark, Katherine) and\nclaimantBsaysfather(Katherine, Mark) , the apparent\ncontradiction is because one claimant is misusing the father\nrelation. However, this does not change the fact that AandB\nmade those claims.\nA similar problem may occur in an ontology where an\ninference rule derives a conclusion whose interpretation would\nbe inconsistent with another ontology. Therefore, it is the\nontology designer\'s responsibility to make sure that the\nontology is correct and that it is consistent with all' metadata={'source': 'Semantic_Web.pdf', 'page': 87}
"
"page_content=""88\nontologies that it extends. It is expected that ontologies\nwhich result in erroneous conclusions will be avoided byusers, and will thus be weeded out by natural selection.\nYet another problem with distributed environments is the\npotential interference of rules created by other parties: a\nrule created by one individual could have unwanted side-\neffects for other individuals. For these reasons, SHOE only\nallows rules to be defined in ontologies, and the only rules\nthat could apply to a given claim are those which are defined\nin the ontologies used by the instance making claim. Since\nrules can only be expressed in ontologies, the process ofdetermining when a rule is applicable is simplified, and page\nauthors can use this to control the side-effects of their\nclaims. If a user wishes to view an instance in a different\ncontext or use it in ways originally unintended by the author,\nthen the user can use an alternate perspective for the\ninstance that is based on a different, but compatible\nontology.\n3.5.OntologyEvolution\nThe Web's changing nature means that ontologies will have\nto be frequently changed to keep up with current knowledge and\nusage. Since physically revising an ontology can invalidateobjects that reference it for vocabulary and definitions, it\nis useful to think of a revision as a new ontology that is a\ncopy of the original ontology with subsequent modifications."" metadata={'source': 'Semantic_Web.pdf', 'page': 88}
"
"page_content='89\nIn fact, this is exactly what SHOE does: each version of an\nontology is a separate Web resource and is assigned a uniqueversion number, while all references to an ontology must\ndenote a specific version. How then, is a revision different\nfrom an ontology with a different identifier? The answer is\nthat a revision can specify that it is backwardly-compatible\nwith earlier version (using the backward-compatible-with\nattribute of the ontology), which allows interoperability\nbetween sources that use different versions of an ontology.\nBefore we define backward-compatibility, we will first\ncharacterize and compare different types of revisions usingthe formal model developed in Section 3.3. To be succinct, we\nwill only discuss revisions that add or remove components; the\nmodification of a component can be thought of as a removal\nfollowed by an addition. In the rest of this section,\nOwill\nrefer to the original ontology, O′to its revision, PandP′\nto the perspectives formed by these respective ontologies andan arbitrary source\nS=<O, DS>, andTandT′to the\nrespective theories for these perspectives.\nIf a revisionO′adds an arbitrary rule to ontology O,\nthen for any source S, the perspective P′semantically\nsubsumesP.Since the revision only adds a sentence to the\ncorresponding theory T′⊃T, and since first-order logic is\nmonotonic any logical consequence of Tis also a logical\nconsequence of T′. Thus, when a revision that adds rules' metadata={'source': 'Semantic_Web.pdf', 'page': 89}
"
"page_content='90\nprovides an alternate perspective of a legacy data source,\nthere may be additional answers that were not originallyintended by the author of the data. Similar reasoning is used\nto ascertain that if the revision removes rules, then\nP\nsemantically subsumes P′.\nIfO′consists of the removal of categories or relations\nfromO, thenPsemantically subsumes P′. This is because there\nmay be some atoms in Sthat were well-formed w.r.t. Othat are\nnot well-formed w.r.t. O′. Informally, if categories or\nrelations are removed, predicate symbols are removed from the\nvocabulary. If the ground atoms of Sdepended on these symbols\nfor well-formedness then when the symbols are removed the\nsentences are no longer well-formed. Thus, T′⊆Tand due to\nthe monotonicity of definite logic, every logical consequence\nofT′is a logical consequence of T. Revisions of this type\nmay mean that using the revised ontology to form a perspective\nmay result in fewer answers to a given query.\nFinally, if the revision only adds categories or\nrelations, the corresponding perspective P′is equivalent to\nP. SinceT′⊃Tit is easy to show that P′semantically\nsubsumesP. The proof of the other direction depends on the\nnature of the axioms added: R(x1,...,xi,...xn) →C(xi)for\nrelations andC(x)→Pi(x)for categories. It also relies on\nthe fact that due to the definitions of categories and\nrelations, the predicate of each antecedent is a symbol added' metadata={'source': 'Semantic_Web.pdf', 'page': 90}
"
"page_content='91\nby the new ontology and must be distinct from symbols in any\nother ontology. Therefore any atoms formed from thesepredicates are not well-formed with respect to any preexisting\nontology. Thus, there can be no such atoms in\nS, sinceSmust\nbe well-formed with respect to some ontology ≠O′. Since the\nantecedents cannot be fulfilled, the rules will have no new\nlogical consequences that are ground atoms. Since P\nsemantically subsumes P′and vice versa, PandP′are\nequivalent. This result indicates that we can safely add\nrelations or categories to the revision, and maintain the same\nperspective on all legacy data sources.\nWe can now define backward-compatibility: an ontology\nrevisionO′can be said to be backward-compatible with an\nontologyOif for any data source S=<O, DS>, the perspective\nP′=<S, O′>semantically subsumes the perspective P=<S, O>.\nPut simply, if every logical consequence of the original is\nalso a consequence of the revision, then the revision is\nbackward-compatible. By our analysis above, if a revision onlyadds categories, relations, or rules then it is backward\ncompatible with the original, while if it removes any of these\ncomponents then it is not backward compatible.\nWith this notion of backward compatibility, agents can\nassume with some degree of confidence that a perspective that\nuses the backward compatible revision will not alter the\noriginal meaning of the data source, but instead supplement it' metadata={'source': 'Semantic_Web.pdf', 'page': 91}
"
"page_content=""92\nwith information that was originally implicit. Agents that\ndon't wish to assume anything, may still access the originalversion because it still exists at the original URL. However,\nit should be noted that this versioning mechanism is dependent\non the compliance of the ontology designers. Since an ontology\nis merely a file on a web server, there is nothing to prevent\nits author from making changes to an existing ontology\nversion. This is the price we pay for have having a system\nthat is flexible enough to cope with the needs of diverse user\ncommunities while being able to change rapidly. However, we\npresume that users will gravitate towards ontologies fromsources that they can trust and ontologies that cannot be\ntrusted will become obsolete.\nAlthough, ideally integration in SHOE is a byproduct of\nontology extension, a distributed environment in which\nontologies are rapidly changing is not always conducive to\nthis. Even when ontology designers have the best intentions, a\nvery specialized concept may be simultaneously defined by twonew ontologies. To handle such situations, periodic ontology\nintegration must occur. Ontologies can be integrated using a\nnew ontology that maps the related concepts using inference\nrules, by revising the relevant ontologies to map to each\nother, or by creating a new more general ontology which\ndefines the common concepts, and revising the relevant\nontologies to extend the new ontology. We discuss each of\nthese solutions in more detail in [Heflin & Hendler, 2000a]."" metadata={'source': 'Semantic_Web.pdf', 'page': 92}
"
"page_content=""93\n3.6.Scalability\nThe scalability of a knowledge representation depends on\nthe computational complexity of the inferences that it\nsanctions. We intentionally omitted from SHOE features such as\ndisjunction and negation that typically make knowledge\nrepresentation systems intractable. Since SHOE is essentiallya set of Horn clauses, a naive forward-chaining inference\nalgorithm can be executed in polynomial time and space in the\nworst case. Of course, the expected size of an extensional\ndatabase built from the Web makes this an undesirable option.\nWe carefully chose SHOE's set of semantic primitives so\nthat it could be reduced to datalog, thus allowing the use of\noptimized algorithms such as magic sets [Ullman, 1988]. The\nsemantics of SHOE categories can be easily described using a\ndatalog rule. For example, category membership such as thefact that a Person is a Mammal may be expressed by using unary\npredicates and a rule of the form:\nMammal (X) :- Person (x)\nSince SHOE's inferential rules are basically Horn\nclauses, they also map directly to datalog. Furthermore,\nSHOE's more restrictive variable join rule ensures that all\nSHOE inference rules are safe. Thus, SHOE is equivalent tosafe datalog without negation.\nObviously, SHOE systems can benefit from the deductive\ndatabase research, but the massive size of the resulting KBs"" metadata={'source': 'Semantic_Web.pdf', 'page': 93}
"
"page_content='94\nmay at times yield unacceptable performance. Therefore SHOE\nhas a modular design that allows systems to cleanly providediffering degrees of inferential capability. For example, a\nsystem may choose only to implement transitive category\nmembership, or may choose to implement no inference at all,\nthus providing only access to the extensional database.\nAlthough such systems might be incomplete reasoners with\nrespect to the intended perspective (see section 3.3), they\ncan be complete reasoners with respect to an alternate\nperspective (i.e., one that mirrors the intended perspective\nbut omits all inference rules and/or category definitions).\n4. Implementation\nIn the previous section we described the semantics of SHOE\nand discussed its treatment of some of the specific challenges\nfor a Semantic Web language. In this section we describe a\nsuite of tools and methods for using the language in practice,\nand describe its application to the domains of computerscience departments and food safety.\nAlthough there are many possible ways to use the SHOE\nlanguage, the simplest is one that parallels the way the Web\nworks today. There are numerous tools that can be used to\nproduce content, and this content is published on the Web by\nmaking it accessible via a web server. A web-crawler can then\ngather relevant pages and store it in a repository, which canthen be queried by some type of user interface. The key' metadata={'source': 'Semantic_Web.pdf', 'page': 94}
"
"page_content='95\ncomponent of a SHOE system is that both the content and the\nontologies which provide semantics for the content arepublished on the Web. Since this information is structured and\nhas semantics, the repository should be a knowledge base\nrather than an information retrieval system. This basic\narchitecture is shown in Figure 2.4\nFigure 2.4 The SHOE architecture.\nThe first step in using SHOE is to locate or design an\nappropriate ontology. To assist in this process, there should\nbe a central repository of ontologies. A simple repository\ncould be a set of web pages that categorize ontologies, whilea more complex repository may associate a number of\ncharacteristics with each ontology so that specific searches\ncan be issued. A web-based system that uses the later approach\nis described in [Vega, 1999]. If it is determined that no\nsuitable ontology is available, any newly created ontology' metadata={'source': 'Semantic_Web.pdf', 'page': 95}
"
"page_content='96\nshould always extend available ontologies that contain related\nconcepts.\nThe process of adding semantic tags to a web page is\ncalled annotation. There are a number of tools that can be\nused in this process, from simple text editors, to GUI-based\neditors, to semi- or fully-automated techniques. Text editors\nhave the advantage that they are common place, but require\nthat users become familiar with the syntax of SHOE. We have\ndeveloped a GUI editor for SHOE called the Knowledge Annotator\nthat allows the user to create markup by selecting from lists\nand filling in forms. However, there are cases where the usermay want to generate markup that corresponds to information\nfrom large lists or tables in pre-existing web pages. For such\nsituations, our Running SHOE tool can be used to quickly\ncreate a wrapper for an existing document by specifying tokens\nthat indicate records and fields, and then mapping these\nrecords and fields to classes and relations from some\nontology. This tool can be used to generate a large set ofsemantic markup from regular documents in minutes. Other\napproaches to generating markup can include machine learning,\ninformation extraction, and, in limited domains, natural\nlanguage processing techniques.\nOnce the necessary content and ontologies documents are\npublished on the Web, they can be harvested by a web-crawler.\nExposé, the SHOE web-crawler, searches for web pages with SHOE\nmarkup and stores the information in a knowledge base.' metadata={'source': 'Semantic_Web.pdf', 'page': 96}
"
"page_content='97\nWhenever a page commits to an ontology unknown to the system,\nthis ontology is also retrieved and stored in the knowledgebase. The biggest drawback to a web-crawler approach is that\nthe information is only as recent as the last time the crawler\nvisited the source web page. In certain applications, such as\ncomparison shopping, this time period may be unacceptable. An\ninteresting direction for future research is the development\nof focused crawlers that seek answers to particular questions\nin real-time.\nAs mentioned above, the web-crawler needs a knowledge\nbase in which to store the results of its efforts. A knowledgebase provides permanent storage for information and the\nability to use knowledge to draw inferences from that which\nwas explicitly stored in it. An important trade-off for\ncandidate knowledge base systems is the degree to which it can\nmake inferences sanctioned by the language (completeness) and\nthe response time to queries (performance). We believe that\nusers of SHOE systems should be able to specify theirpreferences with regard to this scale. Thus, many different\nknowledge base systems could be used for SHOE, with the\nappropriate tradeoffs in mind.\nAt the completeness end of the scale sit systems such as\nXSB [Sagonas et al., 1994], a logic programming and deductive\ndatabase system. XSB is more expressive than datalog and can\nthus be used as a complete reasoner for SHOE. At the\nperformance end of the scale sit relational database' metadata={'source': 'Semantic_Web.pdf', 'page': 97}
"
"page_content='98\nmanagement systems (RDBMS), which have been traditionally used\nfor querying enormous quantities of data. However, arelational database provides no automated inferential\ncapability, and thus can only answer queries using the\ninformation that was explicitly stored. In between the two\nextremes, sit systems such as Parka [Evett, Andersen &\nHendler, 1993], [Stoffel et al., 1997], a high-performance\nknowledge representation system whose roots lie in semantic\nnetworks and frame systems, but which makes use of certain\ndatabase technology such as secondary storage and indexing.\nParka has better inferential capabilities than a RDBMS, butless than XSB, while being faster than XSB but slower than an\nRDBMS.\nOnce information is stored in a knowledge base, it can be\nqueried by a variety of front ends. SHOE Search [Heflin &\nHendler, 2000b] is a generic tool gives users a new way to\nbrowse the web by allowing them to submit structured queries\nand open documents by clicking on the URLs in the results. Theuser first chooses an ontology against which the query should\nbe issued and then chooses the class of the desired object\nfrom a hierarchical list. After the system presents a list of\nall properties that could apply to that object and the user\nhas typed in desired values for one or more of these\nproperties, the user issues a query and is presented with a\nset of results in a tabular form. If the user double-clicks on' metadata={'source': 'Semantic_Web.pdf', 'page': 98}
"
"page_content=""99\na binding that is a URL, then the corresponding web page will\nbe opened in a new window of the user's web browser.\nIn order to evaluate the tools and techniques for SHOE,\nwe have used them in two different domains. The first domain\nis that of computer science departments. We started by\ncreating a simple computer science department ontology7by\nhand. The scope of this ontology includes departments,\nfaculty, students, publications, courses, and research, for a\ntotal of 43 categories and 25 relations. The next step was to\nannotate a set of web pages (i.e., add SHOE semantic markup to\nthem). Every member of the Parallel Understanding Systems(PLUS) Group marked up their own web pages. Although most\nmembers used the Knowledge Annotator, a few added the tags\nusing their favorite text editors. To get even more SHOE\ninformation, we used the Running SHOE tool on the faculty,\nusers, courses and research groups web pages from the web\nsites of various computer science departments. Exposé was used\nto acquire the SHOE knowledge from the web pages. Thisresulted in a total of 38,159 assertions, which were stored in\nboth Parka and XSB. Although the KB for this domain is very\nsmall when compared to the scale of the entire Web, the\ninitial results are promising. For example, a query of the\nform member(http://www.cs.umd.edu, x) ∧instance(Faculty, x)\ntakes Parka less than 250 milliseconds to answer.\nThe possible benefits of a system such as this one are\nnumerous. A prospective student could use it to inquire about"" metadata={'source': 'Semantic_Web.pdf', 'page': 99}
"
"page_content='100\nuniversities that offered a particular class or performed\nresearch in certain areas. Or a researcher could design anagent to search for articles on a particular subject, whose\nauthors are members of a particular set of institutions, and\nwere published during some desired time interval.\nAdditionally, SHOE can combine the information contained in\nmultiple sources to answer a single query. For example, to\nanswer the query ""Find all papers about ontologies written by\nauthors who are faculty members at public universities in the\nstate of Maryland"" one would need information from university\nhome pages, faculty listing pages, and publication pages forindividual faculty members. Such a query would be impossible\nfor current search engines because they rank each page based\nupon how many of the query terms it contains.\nThe SHOE technology was also applied to the domain of\nfood safety. The Joint Institute for Food Safety and Applied\nNutrition (JIFSAN), a partnership between the Food and Drug\nAdministration (FDA) and the University of Maryland, isworking to expand the knowledge and resources available to\nsupport risk analysis in the food safety area. One of their\ngoals is to develop a website that will serve as a\nclearinghouse of information about food safety risks. This\nwebsite must serve a diverse group of users, including\nresearchers, policy makers, risk assessors, and the general\npublic, and thus must be able to respond to queries where\nterminology, complexity and specificity may vary greatly. This' metadata={'source': 'Semantic_Web.pdf', 'page': 100}
"
"page_content='101\nis not possible with keyword based indices, but can be\nachieved using SHOE.\nThe initial TSE ontology was fleshed out in a series of\nmeetings that included members of JIFSAN and a knowledge\nengineer. The ontology focused on the three main concerns for\nTSE Risks: source material, processing, and end-product use.\nCurrently, the ontology has 73 categories and 88 relations.8\nFollowing the creation of the initial ontology, the teamannotated web pages. There are two types of pages that this\nsystem uses. Since the Web currently has little information on\nanimal material processing, we created a set of pagesdescribing many important source materials, processes and\nproducts. The second set of pages are existing TSE pages that\nprovide general descriptions of the disease, make\nrecommendations or regulations, and present experimental\nresults. Early annotations were difficult because the original\nontology did not have all of the concepts that were needed.\nWhen the initial set of pages was completed, we ran Exposé,using Parka as the knowledge base system. Since the TSE\nOntology currently does not define inference rules, Parka is\nable to provide a complete reasoning capability for it. The\nParka KB can be queried using SHOE Search as discussed\nearlier, but JIFSAN also wanted a special purpose tool to help\nusers visualize and understand the processing of animal\nmaterials.' metadata={'source': 'Semantic_Web.pdf', 'page': 101}
"
"page_content='102\nTo accommodate this, we built the TSE Path Analyzer, a\ngraphical tool that can be used to analyze how sourcematerials end up in products that are eventually consumed by\nhumans or animals. This information is extremely valuable when\ntrying to determine the risk of contamination given the chance\nthat a source material is contaminated. It is expected that\ninformation on each step in the process will be provided on\ndifferent web sites (since many steps are performed by\ndifferent companies), thus using a language like SHOE is\nessential to integrating this information. The TSE Path\nAnalyzer allows the user to pick a source, process and/or endproduct from lists that are derived from the taxonomies of the\nontology. The system then displays all possible pathways that\nmatch the query. Since these displays are created dynamically\nbased on the semantic information in the SHOE web pages, they\nare kept current automatically, even when the SHOE information\non some remote site is changed.\n5. Related Work\nIn recent years, there has been work to use ontologies to\nhelp machines process and understand Web documents. Fensel et\nal. [Fensel et al., 1998] have developed Ontobroker, which\nproposes minor extensions to the common anchor tag in HTML.\nThe theoretical basis for Ontobroker is frame logic, a\nsuperset of Horn logic that treats ontology objects as firstclass citizens. However, this approach depends on a' metadata={'source': 'Semantic_Web.pdf', 'page': 102}
"
"page_content='103\ncentralized broker, and as a result, the web pages cannot\nspecify that they reference a particular ontology, and agentsfrom outside the community cannot discover the ontology\ninformation. Kent [Kent, 1999] has designed the Ontology\nMarkup Language (OML) and the Conceptual Knowledge Markup\nLanguage (CKML), which were influenced by SHOE, but are based\non the theories of formal concept analysis and information\nflow. However, the complexity of these theories make it\nunlikely that this language will be accepted by the majority\nof existing web developers and/or users. The Ontology\nInterchange Language (OIL) [Decker et al., 2000] is a new webontology language that extends RDF and RDF Schema with\ndescription logic capabilities. Jannink et al. [Jannink et\nal., 1998] suggest a different approach from creating web\nontology languages and annotating pages; they propose that an\nontology should be built for each data source, and\ngeneralization is accomplished by integrating these data\nsources. In this way, the data dictates the structure of theontology rather than the other way around.\nQuerying the Web is such an important problem that a\ndiverse body of research has be directed towards it. Some\nprojects focus on creating query languages for the Web\n[Arocena et al., 1997], [Konopnicki & Shemueli, 1995], but\nthese approaches are limited to queries concerning the HTML\nstructure of the document and the hypertext links. They also\nrely on index servers such as AltaVista or Lycos to search for' metadata={'source': 'Semantic_Web.pdf', 'page': 103}
"
"page_content=""104\nwords or phrases, and thus suffer from the limitations of\nkeyword search. Work on semistructured databases [McHugh etal., 1997] is of great significance to querying and processing\nXML, but the semistructured model suffers the same\ninteroperability problems as XML. Even techniques such as data\nguides will be of little use when integrating information\ndeveloped by different communities in different contexts.\nAnother approach involves mediators (or wrappers), custom\nsoftware that serves as an interface between middleware and a\ndata source [Wiederhold, 1992, Papakonstantinou, 1995, Roth &\nSchwarz, 1997]. When applied to the Web, wrappers allow usersto query a page's contents as if it was a database. However,\nthe heterogeneity of the Web requires that a multitude of\ncustom wrappers must be developed, and it is possible that\nimportant relationships cannot be extracted from the text\nbased solely on the structure of the document. Semi-automatic\ngeneration of wrappers [Ashish & Knoblock., 1997] is a\npromising approach to overcoming the first problem, but islimited to data that has a recognizable structure.\nIn order to avoid the overhead of annotating pages or\nwriting wrappers, some researchers have proposed machine\nlearning techniques. [Craven et al., 1998] have trained a\nsystem to classify web pages and extract relations from them\nin accordance with a simple ontology. However, this approach\nis constrained by the time-consuming task of developing a\ntraining set and has difficulty in classifying certain kinds"" metadata={'source': 'Semantic_Web.pdf', 'page': 104}
"
"page_content='105\nof pages due to the lack of similarities between pages in the\nsame class.\nConclusion\nIn this paper, we have described many of the challenges\nthat must be addressed by research on the Semantic Web and\nhave described SHOE, one of the first languages to explicitly\naddress these problems. SHOE provides interoperability in\ndistributed environments through the use of extensible, sharedontologies, the avoidance of contradictions, and localization\nof inference rules. It handles the changing nature of the Web\nwith an ontology versioning scheme that supports backward-\ncompatibility. It takes steps in the direction of scalability\nby limiting expressivity and allowing for different levels on\ninferential support. Finally, since the Web is an ""open-\nworld,"" SHOE does not allow conclusions to be drawn from lack\nof information.\nTo demonstrate SHOE\'s features, we have described\napplications that show the use of SHOE. We\'ve developed a\nfreely available ontology for computer science pages, and\nwe\'ve also worked with biological epidemiologists to design an\nontology for a key food safety area. These applications show\nthat SHOE can exist on the web, and that tools using SHOE can\nbe built and used.\nAlthough we believe SHOE is good language that has\npractical use, we do not mean to suggest that it solves all of' metadata={'source': 'Semantic_Web.pdf', 'page': 105}
"
"page_content='106\nthe problems of the Semantic Web. We are at the beginning of a\nnew and exciting research field and there is still much workto do. Further research must be performed to determine how\nSHOE\'s method for interoperability scales to the thousands of\nontologies that will be created on the Web and the problem of\nontology evolution must be studied more closely. Additionally,\nthe appropriate level of expressivity for a semantic web\nlanguage must be explored. For example, are negation and\ncardinality constraints necessary, and if so, how can they be\nused in a decentralized system such as the Web? Finally, more\nuser-friendly tools need to be developed, so that use of thesemantic web can become routine for the layperson.\nAs early ""pioneers"" we hope that our experience with SHOE\ncan inspire and inform others. A key goal of this project is\nto raise the issues that are crucial to the development of the\nSemantic Web and encourage others to explore them. To this\nend, we have made SHOE freely available on the Web, including\nthe Java libraries and our prototype tools. Interested readersare urged to explore our web pages at\nhttp://www.cs.umd.edu/projects/plus/SHOE/ for the full details\nof the language and the applications.\nAcknowledgments\nThis work was supported by the Army Research Laboratory\nunder contract number DAAL01-97-K0135 and the Air Force' metadata={'source': 'Semantic_Web.pdf', 'page': 106}
"
"page_content='107\nResearch Laboratory under grants F306029910013 and\nF306020020578.\nReferences\n[Arocena et al., 1997] G. Arocena, A. Mendelzon and G. Mihaila, Applications of a Web Query Language, in:\nProceedingsof ACM PODS Conference, Tuscon, AZ,1997.\n[Ashish & Knoblock., 1997] N. Ashish and C. Knoblock, Semi-automatic Wrapper Generation for Internet\nInformation Sources, in: Proceedings of the Second IFCIS Conference on Cooperative Information\nSystems(CoopIS), Charleston, SC,1997.\n[Bobrow & Winograd, 1977] D. Bobrow and T. Winograd, An overview of KRL, a knowledge representation\nlanguage, Cognitive Science 1(1) ,1977.\n[Brachman & Schmolze, 1985] R. Brachman and J. Schmolze, An overview of the KL-ONE knowledge\nrepresentationsystem, Cognitive Science, 9(2) ,1985.\n[Brachman et al., 1991] R. Brachman, D. McGuinness, P.F. Patel-Schneider, L. Resnick,and A. Borgida, Living\nwith Classic: When and how to use a KL-ONE-like language, in: J. Sowa, ed., Explorations in the\nrepresentationof knowledge (Morgan-Kaufmann, CA, 1991).\n[Bray et al., 1998] T. Bray, J. Paoli and C. Sperberg-McQueen, Extensible Markup Language (XML), W3C\n(WorldWideWeb Consortium), at: http://www.w3.org/TR/1998/REC-xml-19980210.html. 1998.\n[Brickley & Guha, 1999] D. Brickley and R.V. Guha, Resource Description Framework (RDF) Schema\nSpecification (Candidate Recommendation), W3C (World-Wide Web Consortium), 2000. (At\nhttp://www.w3.org/TR/2000/CR-rdf-schema-20000327)\n[Clark, 1999] J. Clark, XSL Transformations (XSLT) W3C (World-Wide Web Consortium) (1999). (At\nhttp://www.w3.org/TR/1999/REC-xslt-19991116)\n[Cravenetal., 1998] M. Craven, D. DiPasquo, D. Freitag, A. McCallum, T. Mitchell, K. Nigram, and S. Slattery,\nLearning to Extract Symbolic Knowledge From the World Wide Web, in: Proceedings of the Fifteenth\nAmerican Associationfor ArtificialIntelligence Conference (AAAI-98) (AAAI/MIT Press, 1998).\n[Decker et al., 2000] S. Decker, D. Fensel , F. van Harmelen , I. Horrocks, S. Melnik , M. Klein, and J.\nBroekstra, Knowledge Representation on the Web, in: Proceedings of the 2000 International Workshop\nonDescription Logics(DL2000), Aachen, Germany, August2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 107}
"
"page_content='108\n[Evett, Andersen & Hendler, 1993] M. Evett, W. Andersen and J. Hendler, Providing Computational Effective\nKnowledge Representation via Massive Parallelism, in: L. Kanal, V. Kumar, H. Kitano, and C. Suttner,eds., ParallelProcessing for ArtificialIntelligence, Elsevier Science, Amsterdam, 1993.\n[Farquhar, Fikes & Rice, 1997] A. Farquhar, R. Fikes and J. Rice The Ontolingua Server: A tool for\ncollaborative ontology construction, International Journal of Human-Computer Studies 46(6), 1997. 707-727.\n[Fensel et al., 1998] D. Fensel, S. Decker, M. Erdmann und R. Studer: Ontobroker: The Very High Idea. In\nProceedings of the 11th International Flairs Conference (FLAIRS-98), Sanibal Island, Florida, USA, 131-135, Mai1998.\n[Gruber, 1993] T. Gruber, A Translation Approach to Portable Ontology Specifications, in: Knowledge\nAcquisition5, 1993,199-220.\n[Heflin & Hendler, 2000a] J. Heflin, and J. Hendler, Dynamic Ontologies on the Web, in: Proc. of the\nSeventeenth National Conference on Artificial Intelligence (AAAI-2000), AAAI/MIT Press, Menlo Park,\nCA, 2000,443-449.\n[Heflin&Hendler, 2000b] J. Heflinand J. Hendler, Searching the Web with SHOE, in: Artificial Intelligence for\nWeb Search. Papersfromthe AAAI Workshop. WS-00-01, AAAI Press, Menlo Park, CA, 2000, 35-40.\n[Heflin & Hendler, 2000c] J. Heflin and J. Hendler, Semantic Interoperability on the Web, in: Proc. of Extreme\nMarkup Languages2000, Graphic Communications Association, Alexandria, VA, 2000, 111-120.\n[ISO86] ISO (International Organization for Standardization) ISO 8879:1986(E). Information processing -- Text\nand Office Systems -- Standard Generalized Markup Language (SGML), International Organization for\nStandardization, Genevea, 1986.\n[Janninketal., 1998]J.Jannink, S. Pichai, D. Verheijen, and G. Wiederhold., G. Encapsulation and Composition\nof Ontologies, in: AI and Information Integration, Papers from the 1998 Workshop, Technical Report\nWS-98-14, AAAI Press, Menlo Park, CA, 1998, 43-50.\n[Kent, 1999] R.E. Kent. Conceptual Knowledge Markup Language: The Central Core, in: Twelfth Workshop on\nKnowledge Acquisition, Modelingand Management, 1999.\n[Konopnicki & Shemueli, 1995] D. Konopnicki and O. Shemueli, W3QS: A Query System for the World Wide\nWeb, in: Proceedings of the 21st International Conference on Very Large Databases, Zurich, Switzerland,1995.' metadata={'source': 'Semantic_Web.pdf', 'page': 108}
"
"page_content=""109\n[Lassila, 1998] O. Lassila, Web Metadata:AMatter ofSemantics, IEEE Internet Computing2(4), 1998, 30-37.\n[Lenat &Guha, 1990] D. Lenat and R. Guha, Building Large Knowledge Based Systems, Addison-Wesley, MA,\n1990.\n[Luke & Heflin, 2000] S. Luke and J. Heflin, SHOE 1.01, Proposed Specification, at:\nhttp://www.cs.umd.edu/projects/plus/SHOE/spec.html, 2000.\n[Luke et al., 1997] S. Luke, L. Spector, D. Rager, and J. Hendler, Ontology-based Web Agents, in: Proceedings\nof the First International Conference on Autonomous Agents, Association of Computing Machinery, New\nYork, NY, 1997,59-66.\n[MacGregor, 1991] R. MacGregor, The Evolving Technology of classification-based knowledge representation\nsystems, in:J. Sowa, ed., Explorationsinthe representationofknowledge, Morgan-Kaufmann, CA, 1991.\n[McHugh et al., 1997] J. McH ugh, S. Abiteboul, R. Goldman, D. Quass, and J. Widom, Lore: A Database\nManagementSystem for Semistructured Data, SIGMOD Record 26(3),1997, 54-66.\n[Noy & Hafner, 1997] N. Noy and C. Hafner, C. The State of the Art in Ontology Design. AI Magazine 18(3),\n1997,53-74.\n[Papakonstantinou, 1995] Y. Papakonstantinou, et al., A QueryTranslation Scheme for Rapid Implementation of\nWrappers, in: Proceedings of the Conference on Deductive and Object-Oriented Databases(DOOD)\nSingapore ,1995.\n[Roth & Schwarz, 1997] M. Roth, and P. Schwarz, Don't Scrap It, Wrap It! A Wrapper Architecture for Legacy\nData Sources, in:Proceedingsof23rd International Conference onVery Large Data Bases,1997.\n[Sagonas et al., 1994] K. Sagonas, T. Swift, and D. S. Warren, XSB as an Efficient Deductive Database Engine,\nin: R. T. Snodgrass and M. Winslett, editors, Proc. of the 1994 ACM SIGMOD Int. Conf. on\nManagementofData (SIGMOD'94), 1994, 442-453.\n[Stoffel et al., 1997] K. Stoffel, M. Taylor and J. Hendler, Efficient Management of Very Large Ontologies, in:\nProceedings of American Association for Artificial Intelligence Conference (AAAI-97), AAAI/MIT\nPress, 1997.\n[Ullman, 1988] J. Ullman, Principles of Database and Knowledge-Base Systems, Computer Science Press, MD,\n1988."" metadata={'source': 'Semantic_Web.pdf', 'page': 109}
"
"page_content=""110\n[Vega, 1999] J. Vega, A. Gomez-Perez, A. Tello, and Helena Pinto, How to Find Suitable Ontologies Using an\nOntology-Based WWW Broker, in: International Work-Conference on Artificial and Natural NeuralNetworks, IWANN'99, Proceeding, Vol. II, Alicante, Spain, 1999, 725-739.\n[Wiederhold, 1992] G. Wiederhold, Mediators in the Architecture of Future Information Systems, IEEE\nComputer 25(3),1992.\nFootnotes\n1Department of Computer Science, University of Maryland,College Park, MD 20742, USA, heflin@cs.umd.edu,\nhttp://www.cs.umd.edu/~heflin\n2Department of Computer Science, University of Maryland,College Park, MD 20742, USA,\nhendler@cs.umd.edu, http://www.cs.umd.edu/~hendler\n3Department of Computer Science Science and Technology Building II, 4400 University Drive, MSN 4A5,\nFairfax, VA22030 USA, seanl@cs.umd.edu , http://www.cs.gmu.edu/~sean/\n4Prologisnot strictlydeclarative because the order ofthe rulesdetermineshowthe systemprocessesthem.\n5Inactuality, SHOE hasa separate namespace for eachontology, but one can assume that the symbols are unique\nbecause it is always possible to apply a renaming that appends a unique ontology identifier to eachsymbol.\n6Adefinite programclause isa Hornclause that hasat least one antecedent and exactlyone consequent.\n7This ontologyis located at http://www.cs.umd.edu/projects/plus/SHOE/onts/cs1.0.html\n8Those interested in the details of the ontology can view it at\nhttp://www.cs.umd.edu/projects/plus/SHOE/onts/tseont.html"" metadata={'source': 'Semantic_Web.pdf', 'page': 110}
"
"page_content='3. DAML-ONT:An OntologyLanguage for theSemanticWeb\nDeborah McGuinness1,Richard Fikes2,Lynn Andrea Stein3,\nJames Hendler4\n1. Introduction\nThe DARPA Agent Markup Language (DAML) initiative is aimed\nat supporting the development of the semantic web. The\nprogram funds research in languages, tools, infrastructure,\nand applications for making web content more accessible and\nunderstandable. It is US Government-funded yet represents\ncollaborations between the Department of Defense, US and\nEuropean academia and business, and international consortia\nsuch as the W3C. While the program covers the breadth ofissues related to markup language development, deployment, and\nevolution, this paper focuses only on the markup language\nitself.\nThis language is being developed in two pieces. The first\nportion—covered in this paper—is the ontology language, aimed\nat capturing definitions of terms—classes, subclasses, their\nproperties, their restrictions, and individual object\ndescriptions. The second portion of the language (called\nDAML-LOGIC) will address the issue of encoding inference andgeneral logical implications.\nIn this paper, we review the history and motivations for\nthe development of the initial DAML ontology language, DAML-' metadata={'source': 'Semantic_Web.pdf', 'page': 111}
"
"page_content='112\nONT. In the following section, we introduce the DAML-ONT\nlanguage syntax and usage through a pedagogically ordered setof examples derived from the initial DAML walkthrough document\n[Stein and Connolly, 2000]. In order to fully specify a\nknowledge representation language, one needs to describe both\nthe syntax and the semantics of the language. The syntax\ndescription specifies what strings of characters are legal\nstatements in the language. The semantic description specifies\nthe intended meaning of each legal statement in the language.\nIn the final section of this paper, we explore an axiomatic\nsemantics for DAML-ONT.\nThe DAML ontology language takes its motivation from many\nplaces, most notably the evolving web languages—in particular\nRDF [Lassila, 1998, Lassila-Swick, 1999] (with the embedded\nXML) and RDFS [Brickley-Guha, 2000], jointly referred to in\nthis paper as RDF/S. It is important to be backwards\ncompatible with existing web standard for interoperability\nwith the growing user base of content, tools for theselanguages, and users who are comfortable with the languages.\nAll of our examples below thus have the format of XML-based\nRDF. DAML-ONT extends RDF/S by capturing semantic relations in\nmachine-readable form through more expressive term\ndescriptions along with precise semantics. This is important\nfor many reasons; arguably the most salient is to facilitate\nintercommunication between agents. While compatibility with\nweb languages was paramount, we also recognized that markup' metadata={'source': 'Semantic_Web.pdf', 'page': 112}
"
"page_content='113\nrepresentational needs went beyond what was conveniently\nexpressible in RDF/S. Thus, an extended language wasconsidered.\nThe language is also influenced by frame-based systems,\nincluding knowledge representation languages such as\nOntolingua [Farquhar et. al, 1997] or KEE. Frame systems have\nenjoyed acceptance and perceived ease of use by broad\npopulations and have been embraced relatively widespread use\n[Fikes & Kehler 1985, Karp 1992, Chaudhri et. al. 1998]. The\ngoal of our language is to be accessible to the masses and\nthus it was important to use paradigms that are easy toexplain and use.\nFinally, DAML-ONT takes motivation from the field of\ndescription logics (www.dl.kr.org), which provide a formal\nfoundation for frame-based systems. Some early description-\nlogic based systems include KL-ONE [Brachman-Schmolze, 1985],\nCLASSIC [Borgida et. al, 1989], and LOOM [MacGregor, 1991],\nand a more recent example of a description logic-based systemis OIL [Fensel et al., 2000, Bechhofer et al., 2000].\nDescription logics emphasize clear, unambiguous languages\nsupported by complete denotational semantics and tractable\nreasoning algorithms. Description logics have been heavily\nanalyzed in order to understand how constructors interact and\ncombine to impact tractable reasoning. See for example,\n[Donini et al., 1991a, Donini et al., 1991b] for early\nevaluations. Also, reasoning algorithms have been studied' metadata={'source': 'Semantic_Web.pdf', 'page': 113}
"
"page_content='114\nproducing knowledge about efficient reasoning algorithms (See\n[Horrocks and Patel-Schneider, 1999] and [Horrocks et al.,1999] for example). DAML-ONT draws on the general field of\nresearch in description logics and, in particular, on the\nlatest description logic: OIL. OIL was designed to be an\nexpressive description logic that is integrated with modern\nweb technology.\nThe resulting DAML ontology language is a combination of\nthese three building blocks along with influence from KIF—the\nKnowledge Interchange Format—a first order logic-based\nproposed ANSI standard, SHOE—Simple HTML Ontology Language,and OKBC—Open Knowledge Base Connectivity—a standard\napplications programming interface for knowledge systems. The\ninitial proposal for the language was written by MIT and W3C\nDAML contractors [Berners-Lee et al., 2000]. It was\nsubsequently taken over by a DAML language committee which, in\nturn, expanded to become the Joint US/EU ad hoc Agent Markup\nLanguage Committee. The joint committee has hadresponsibility for all DAML ontology language releases to\ndate. It is also anticipated that there will be a W3C\nontology committee (under the Semantic Web Activity\n((http://www.w3.org/2001/sw/)) that will have responsibility\nfor future semantic web language releases.\nIt is worth noting that after DAML-ONT was released, the\njoint committee undertook a major effort to evolve the\nlanguage. The initial language was heavily influenced by the' metadata={'source': 'Semantic_Web.pdf', 'page': 114}
"
"page_content='115\nweb languages. A primary initial goal of DAML-ONT was to\nprovide a web-compatible language expressive enough to handlemarkup requirements. Constructors were chosen initially from\nuse-case analysis from experience with the current web markup\nlanguages—mostly RDF and XML. A second primary goal was to\nproduce a language quickly so that experimentation could\ninform further development. An ontology library was also\nformed rapidly so that DAML ontologies could be submitted,\nstored, and reused by a larger community. Of these competing\ninfluences, web language compatibility and timeliness were the\nfirst concerns. Usability issues, as informed by framelanguages, were a secondary concern, and formal foundations—as\nfound in description logics—came later. In a subsequent\neffort, Fikes and McGuinness produced an axiomatic semantics\nfor DAML-ONT [Fikes-McGuinness, 2001], providing a more\nprecise foundation for semantic analysis of the language.\nSimultaneously, the joint committee undertook a concerted\neffort to improve compatibility of DAML-ONT with more formalfoundations. The resulting language, which was essentially a\nmerging of DAML-ONT and OIL, is called DAML+OIL. It places\nmuch more emphasis on clear semantics for the language\n(provided both by our updated axiomatic semantics\n(http://www.daml.org/2001/03/axiomatic-semantics.html) along\nwith a model-theoretic semantics\n(\nhttp://www.daml.org/2001/03/model-theoretic-semantics.html )).\nDAML+OIL also filters language constructors according to' metadata={'source': 'Semantic_Web.pdf', 'page': 115}
"
"page_content='116\nunderstanding of the impact that they have on reasoning\nalgorithms. The resulting language, DAML+OIL, chooses itsconstructors carefully following the analysis done on the\nunderlying formal description logic, typically referred to as\nSHIQ.5\nAn update to this paper that begins with DAML+OIL is in\npreparation and will be available from\nwww.ksl.stanford.edu/people/dlm/.\n2. An Introduction Through Examples\nA language meant to capture terms and their meanings will\nneed to be able to describe classes of objects, relations\nbetween objects, and ground objects in the domain of\ndiscourse. We will introduce the basic notions of the DAML\nontology language through example. Readers interested in more\ninformation can also consider the following: The DAML web site\n(www.daml.org) contains the full specification of the language\nalong with an example file and an annotated walk through.There is also a DAML ontology library along with numerous\nlinks to related work. Also, the OIL documentation is useful\nin particular for the language specification, documentation,\nsemantics, and for use cases. The white paper[Bechhofer et\nal,2000], available on the OIL site provides a nice\nintroduction to OIL and is available from\nhttp://www.ontoknowledge.org/oil/ . Also, available from the\nOIL site is the denotational semantics specification for OIL' metadata={'source': 'Semantic_Web.pdf', 'page': 116}
"
"page_content='117\nwhich was the starting point for the denotational semantics\nfor DAML+OIL. Later in this paper, we provide our axiomaticsemantics for DAML-ONT (which is of course the starting place\nfor the axiomatic semantics for DAML+OIL.\nThe following introduction through extended example is\nmotivated by the walkthrough available from the daml home\npage.\n2.1.DefiningClassesandProperties\nIn order to describe objects, it is useful to define types\nfor the objects. For example, we may be interested in\ndescribing people and animals. First, some general classes\nshould be defined. The first class defined is named animal\n<Class ID=""Animal"">\nThe Class tag is used to state that there is a class known\nas Animal. It does not say anything else about what an animalis other than specifying that ID. It is also not\n(necessarily) the sole source of information about Animals.\nBy saying that the ID is Animal, it becomes possible for\nfuture sentences to refer to the definition of Animal given\nhere. (This is done using the URI of the containing page\nfollowed by #Animal.) Thus, it is possible to add information\nto the definition of Animal at a later point.\nNext, it may be desirable to annotate terms with labels\nand comments:\n<label>Animal</label>' metadata={'source': 'Semantic_Web.pdf', 'page': 117}
"
"page_content='118\n<comment>This class of animals is illustrative of a number\nof ontological idioms.</comment>\nThese two lines introduce a label -- a brief identifier of\nthe enclosing element, suitable for graphical representations\nof RDF, etc. -- and a comment -- a natural language (English,\nin this case) description of the element within which it is\nincluded. Neither a label nor a comment contributes to the\nlogical interpretation of the DAML.\n</Class>\nThis closes the current definition of the Class Animal.\nIt may be desirable to define types of animals, named Male\nand Female.\n<Class ID=""Male"">\n<subClassOf resource=""#Animal""/>\n</Class>\nThe subClassOf element asserts that its subject -- Male -\nis a subclass of its object -- the resource identified by\n#Animal.\nWhen we define Female, we may want to state that no one\ncan be simultaneously a Male and a Female. This is done using\nthe disjointFrom tag in combination with the subClassOf tag\nbelow.\n<Class ID=""Female"">\n<subClassOf resource=""#Animal""/>\n<disjointFrom resource=""#Male""/>\n</Class>' metadata={'source': 'Semantic_Web.pdf', 'page': 118}
"
"page_content='119\n2.2.DefiningIndividuals\nThe syntax that we’ve used to define classes can also be\nused to define individuals. For example, imagine that we want\nto say that Fred is a Male. Here we provide the syntax for\ndefining the individual Fred. This piece of DAML begins with\nthe type of the thing we’re describing, in this case Male:\n<Male ID=""Fred"">\n<label>Fred</label>\n<comment>Fred is a Male.</comment>\n</Male>\nThe label and comment attributes are attached to this\nindividual, Fred, but neither carries any semantics for the\ncomputer.\nAt this point, we can see the first benefit to be had from\ninference. Because we know that Fred is Male and because weare aware of the subclass relationship between Male and\nAnimal, we know that Fred is also of type Animal.\n2.3.RelatingIndividualsthroughProperties\nProperties are used to relate items to each other. In\nthis case we will be interested in connecting two animals via\nthe parent property.\n<Property ID=""parent"">\nThe property definition begins similarly to the Class:\nThere is a property called parent. Note, however, that this' metadata={'source': 'Semantic_Web.pdf', 'page': 119}
"
"page_content='120\nis not a closing tag; there\'s more to this definition. (There\nis a matching </Property> tag below.)\nWe may want to say how many parents an animal can have.\nIn this case we will state that things that have parents have\nexactly two parents.\n<cardinality>2</cardinality>\nEmbedded elements, such as this one, are understood to\ndescribe their enclosing elements. So, this cardinality\nelement describes the Property whose ID is parent.\nWe may want to state that parent is a property that\napplies only to things that are animals.\n<domain resource=""#Animal""/>\nThis element also describes the Property whose ID is\nparent. It says that the domain of the parent relation is\nAnimal. This is done by asserting that the domain (of the\nproperty with ID parent) is the resource known as #Animal.\nAll properties may have domains and ranges specified. The\nresource attribute is used to refer to a ""reference-able"" itemcreated with the ID tag.\nEach of the names defined so far—Animal, Person, Male, and\nFemale -- refers to a name in this (i.e., the containing)\ndocument, since each reference begins with a #.\n</Property>\nThis closes the property whose ID is parent.' metadata={'source': 'Semantic_Web.pdf', 'page': 120}
"
"page_content='121\n2.4.DescribingAttributesofClasses\nNow we will define a Class with an attribute.\n<Class ID=""Person"">\n<subClassOf resource=""#Animal""/>\nA Person is a kind of Animal. (See the definition of\nAnimal, above.)\nThe next few lines describe a domain-specific range\nrestriction. The parent of a Person is also a Person.\n<restrictedBy>\n<Restriction>\n<onProperty resource=""#parent""/>\n<toClass resource=""#Person""/>\n</Restriction>\n</restrictedBy>\nThe syntax used here is a cliché, i.e., it is almost\nalways used as shown, except for the name of the resource in\nthe OnProperty element, which will give the name of the\nProperty to be restricted, and the resource associated with\nthe toClass element, which will give the name of the Class to\nwhich the Property is restricted. This is also sometimes\nreferred to as a value restriction since the type of the\nparent value is being restricted.\n</Class>\nThat is the end of the Person class definition at this\npoint.' metadata={'source': 'Semantic_Web.pdf', 'page': 121}
"
"page_content='122\nSuppose that we have a Person, Joe.\n<Person ID=""Joe"">\n<label>Joe</label>\n<comment>Joe is a person.</comment>\n</Person>\nAs we know, since Joe is stated to be of type Person, he\nwill also be of type Animal (because of the subClassOf\nrelationship). He will also have exactly two parents because\nof the cardinality statement. Those objects that fill his\nparent property also are of type person (thus, they also areof type animal and also have exactly two parents who are of\ntype Person).\nWe might also want to define Man as a kind of Male Person\nand Female as a kind of Female Person.\nThis can be done as follows:\n<Class ID=""Man"">\n<subClassOf resource=""#Person""/><subClassOf resource=""#Male""/>\n</Class>\n<Class ID=""Woman"">\n<subClassOf resource=""#Person""/>\n<subClassOf resource=""#Female""/>\n</Class>\nThe upcoming release will allow the exact definition of\nMan as exactly those things that are both person and male.' metadata={'source': 'Semantic_Web.pdf', 'page': 122}
"
"page_content='123\nThus if something is known to be an instance of a male and a\nperson, then it would be inferred to be of type Man. Thedefinition above only uses the subClassOf relation which\nstates that a Man is simultaneously a subclass of Person and\nMale but it does not state that everything that is\nsimultaneously a Person and a Male is a Man.\n2.5.UsingProperties\nThe next several annotations illustrate features of\nproperties:\nFather is a property that is a kind of parent property,\ni.e., x\'s father is also x\'s parent. In addition, range is\nused to ensure that x\'s father must be Male, and that x has\nonly one father.\n<Property ID=""father"">\n<subProperty resource=""#parent""/><range resource=""#Man""/>\n<cardinality>1</cardinality>\n</Property>\nAt this point if Joe is stated to be John’s father, then\nwe can determine that Joe is of type Male because of the range\nrestriction. Because Male is of type animal, Joe is also of\ntype animal. Also, parents have a domain of person, thus Johnis of type person. He has exactly one father, now known to be\nJoe. Joe must further be of type Person, since Person has a\ndomain specific range restriction.' metadata={'source': 'Semantic_Web.pdf', 'page': 123}
"
"page_content='124\nMother is defined similarly to father but using a variant\nnotation. A UniqueProperty is one with cardinality 1, so wecan omit that sub-element from Mother\'s definition.\n<UniqueProperty ID=""mother"">\n<subProperty resource=""#parent""/>\n<range resource=""#Woman""/>\n</UniqueProperty>\nSometimes, synonyms are useful. For example, some\napplications may want to use the term ""mom"" rather than\n""mother"". The tag equivalentTo allows us to establish this\nsynonymy:\n<Property ID=""mom"">\n<equivalentTo resource=""#mother""/>\n</Property>\nInverse relationships are supported as well using the\ninverseOf tag. If x\'s parent is y, then y is x\'s child.\n<Property ID=""child"">\n<inverseOf resource=""#parent""/>\n</Property>\nTransitive relationships are supported using the\nTransitiveProperty tag. The ancestor and descendent properties\nare transitive versions of the parent and child properties.\nWe would need to introduce additional elements to enforce\nthese connections.\n<TransitiveProperty ID=""ancestor"">\n</TransitiveProperty>' metadata={'source': 'Semantic_Web.pdf', 'page': 124}
"
"page_content='125\n<TransitiveProperty ID=""descendant""/>\nThe cardinality property is exact. But sometimes we want\nto bound cardinality without precisely specifying it. A\nperson may have zero or one job, no more:\n<Property ID=""occupation"">\n<maxCardinality>1</maxCardinality>\n</Property>\nIn the upcoming version of DAML+OIL, cardinality may be\nstated in a class-dependent manner instead of requiring the\ncardinality statement to be universally applied to the\nproperty.\nClasses, too, can be annotated in various ways:\n<Class ID=""Car"">\n<comment>no car is a person</comment>\n<subClassOf>\nThe thing that Car is a subClassOf could in principle be\nspecified using a resource= attribute. In this case, however,\nthere is no preexisting succinct name for the thing we want.A car is a kind of non-person. We build this by introducing a\nnew -- anonymous -- Class definition described using the\ncomplementOf tag:\n<Class>\n<complementOf resource=""#Person""/>\nFrom the inside out: There\'s a thing that\'s the complement\nof Person, i.e., all non-Persons.\n</Class>' metadata={'source': 'Semantic_Web.pdf', 'page': 125}
"
"page_content='126\nThat thing is a Class.\n</subClassOf>\nThat thing -- the Class of all non-Persons -- has a\nsubClass.\n</Class>\nThe Class with ID Car is the thing that is a subClass of\nthe Class of all non-Persons.\n(There\'s a similar construction from the outside in: Car\nis a Class that is a specialization of another Class, the\nClass that is left when you consider everything except\nPersons).\nThe next example shows an instance of further specifying a\npreviously defined element by using the about attribute.\nThese new assertions about the thing described above with ID\nPerson have no more and no less authority than the assertions\nmade within the <Class ID=""Person""> element. (Of course, if\nthe two assertions were in different documents, had different\nauthors, etc., we might want to accord them differentauthority, but this would be as a result of information\nabout\nthose assertions rather than inherently from the assertionsthemselves.)\nIn this case, we identify the Class Person with the\ndisjoint union of the Classes Man and Woman. Note that the\ndisjointUnionOf element contains two subelements, the Class\nMan and the Class Woman. The parseType= ""daml:collection""\nindicates that these subelements are to be treated as a unit,' metadata={'source': 'Semantic_Web.pdf', 'page': 126}
"
"page_content='127\ni.e., that they have special RDF-extending meaning within the\ndisjointUnionOf.\n<Class about=""#Person"">\n<comment>every person is a man or a woman</comment>\n<disjointUnionOf parseType=""daml:collection"">\n<Class about=""#Man""/>\n<Class about=""#Woman""/>\n</disjointUnionOf>\n</Class>\nA Person has a height, which is a Height. (hasHeight is a\nProperty, or relation; Height is a Class, or kind of thing.)\n<Property ID=""hasHeight"">\n<domain resource=""#Person""/>\n<range resource=""#Height""/>\n</Property>\nHeight is Class described by an explicitly enumerated set.\nWe can describe this set using the oneOf element. Like\ndisjointUnionOf, oneOf uses the RDF-extendingparsetype=""daml:collection"".\n<Class ID=""Height"">\n<oneOf parseType=""daml:collection"">\n<Height ID=""short""/>\n<Height ID=""medium""/>\n<Height ID=""tall""/>\n</oneOf>\n</Class>' metadata={'source': 'Semantic_Web.pdf', 'page': 127}
"
"page_content='128\n3. Notes\nOf course by giving an introduction by example, we have\nnot covered all portions of the language. Brief mention is\nmade here to some other topics. See www.daml.orgfor more\ncomplete information.\nDAML-ONT is consistent with the RDF namespace scheme, thus\none can refer to RDF namespaces and create a base namespace\nfor work. Ontologies will begin with an RDF start tag andthen include a specification of appropriate namespaces. The\nfollowing is typical of a namespace declaration:\n<rdf:RDF\nxmlns:rdf =""http://www.w3.org/1999/02/22-rdf-syntax-ns#""\nxmlns =""http://www.daml.org/2000/10/daml-ont#""\nxmlns:daml=""http://www.daml.org/2000/10/daml-ont#""\n>\nIn this document, the rdf: prefix should be understood as\nreferring to things drawn from the namespace calledhttp://www.w3.org/1999/02/22-rdf-syntax-ns#. This is a\nconventional RDF declaration appearing verbatim at the\nbeginning of almost every rdf document\n6. The second\ndeclaration says that unprefixed element names in this\ndocument refer to terms in the namespace called\nhttp://www.daml.org/2000/10/daml-ont#. This is a conventional\nDAML-ONT declaration that should appear verbatim at thebeginning of the current generation of DAML-ONT documents. The' metadata={'source': 'Semantic_Web.pdf', 'page': 128}
"
"page_content='129\nthird declaration binds the daml: prefix to the same namespace\nname. So, for example, <Thing/> and <daml:Thing/> refer to thesame thing in this document\n7.\nThis set of three namespaces would come at the beginning\nof the file and then there would be a trailing closing tag at\nthe end of the file: </rdf:RDF>.\nOne can also state information about version info, import\nfrom other resources, etc. for example:\n<versionInfo>$Id: daml-ex.daml,v 1.2 2000/10/07 03:21:17\nconnolly Exp $</versionInfo>\n<comment>An example ontology</comment>\n<imports resource=""http://www.daml.org/2000/10/daml-\nont""/>\n4. Language Extensions\nWhen DAML-ONT was released, its authors were conscious\nthat some expressive extensions would be made. Integrating a\ndescription logic-like methodology into DAML-ONT provided itwith a more formal foundation. Subsequently, two major\nfeatures were added through expressive extensions. First,\nterm definitions were introduced, allowing the definition of a\nterm exactly equivalent to a combination of other terms. For\nexample, one could define a term MAN as exactly equivalent to\nthe conjunction of a PERSON who was also a MALE. Thus, if\nJohn were later stated to be a PERSON and a MALE, a system' metadata={'source': 'Semantic_Web.pdf', 'page': 129}
"
"page_content='130\ncoulddeducethat JOHN was a MAN instead of waiting to be told\nthat JOHN were a MAN.\nA second later addition was the introduction of concrete\ndomains. It is important in any web language to be able to\nmake reference to ground objects such as the XML type system\nin order to appropriately encode things such as numbers and\nstrings. The DAML+OIL extension adds XML types to the\nlanguage.\n5. An Axiomatic Semantics of DAML-ONT\n5.1.Overview\nIn order to fully specify a knowledge representation\nlanguage, one needs to describe both the syntax and thesemantics of the language. The syntax description specifies\nwhat strings of characters are legal statements in the\nlanguage, and the semantic description specifies the intended\nmeaning of each legal statement in the language. The\nsemantics of a representation language can be formally\nspecified in multiple ways. We have chosen here to use the\nmethod of specifying a translation of the DAML-ONT language\ninto another representation language that has a formally\nspecified semantics. In particular, we have specified atranslation of DAML-ONT into first-order predicate calculus,\nwhich has a well-accepted model theoretic semantics. We\nspecify how to translate a DAML-ONT ontology into a logical' metadata={'source': 'Semantic_Web.pdf', 'page': 130}
"
"page_content='131\ntheory expressed in first-order predicate calculus that is\nclaimed to be logically equivalent to the intended meaning ofthat DAML-ONT ontology.\nThere is an additional benefit to this approach. By\ntranslating a DAML-ONT ontology into a logically equivalent\nfirst-order predicate calculus theory, we produce a\nrepresentation of the ontology from which inferences can\nautomatically be made using traditional automatic theorem\nprovers and problem solvers. For example, the DAML-ONT axioms\nenable a reasoner to infer from the two statements ""Class Male\nand class Female are disjoint"" and ""John is type Male"" thatthe statement ""John is type Female"" is false.\nThe translation of DAML-ONT to first-order predicate\ncalculus is done by a simple rule for translating an RDF\nstatement into a first-order relational sentence, and by\nincluding in the translation a prespecified set of first-order\npredicate calculus axioms that restrict the allowable\ninterpretations of the properties and classes that areincluded in DAML-ONT. This creates a set of first-order\nsentences that include the specific terms in the ontology\nalong with the pre-specified set of axioms restricting the\ninterpretations. The pre-specified set of axioms and the\nrules for generating the translation of RDF statements into\nfirst order sentences are the focus of this presentation since\nthis is the portion that is leveragable across all DAML-ONT\n(and RDF/S) ontologies. Since DAML-ONT is simply a vocabulary' metadata={'source': 'Semantic_Web.pdf', 'page': 131}
"
"page_content='132\nof properties and classes added to RDF and RDF Schema, and RDF\nSchema is simply a vocabulary of properties and classes addedto RDF, all statements in DAML-ONT are RDF statements and a\nrule for translating RDF statements is sufficient for\ntranslating DAML-ONT statements as well.\nWe now describe the mapping of DAML-ONT into first-order\npredicate calculus. A logical theory that is logically\nequivalent to a set of DAML-ONT descriptions is produced as\nfollows:\nTranslate each RDF statement with property P, subject S,\nand object O into a first-order predicate calculus sentence ofthe form\n""(PropertyValuePSO ) "".\nAdd to this translation the axioms that constrain the\nallowable interpretations of the properties and classes that\nare included in RDF, RDF Schema, and DAML-ONT.\nNote that it is not necessary to specify a translation for\nevery construct in RDF since any set of RDF descriptions can\nbe translated into an equivalent set of RDF statements (asdescribed in the RDF and RDF Schema specification documents).\nThus, the one translation rule above suffices to translate all\nof RDF and therefore all of DAML-ONT as well.\nA notable characteristic of this axiomatization is that it\nis designed to minimize the constraints on the legal\ninterpretations of the DAML-ONT properties and classes in the\nresulting logical theory. In particular, the axioms do not\nrequire classes to be sets or unary relations, nor do they' metadata={'source': 'Semantic_Web.pdf', 'page': 132}
"
"page_content='133\nrequire properties to be sets or binary relations. Such\nconstraints could be added to the resulting logical theory ifdesired, but they are not needed to express the intended\nmeaning of the DAML-ONT descriptions being translated.\nWe now present an informal description of the axioms that\nare added to the translation of each DAML-ONT ontology. Since\nDAML-ONT is specified as an extension to RDF and RDF Schema,\nthe axiomatization includes axioms describing the properties\nand classes in both RDF and RDF Schema, as well as those in\nDAML-ONT itself.\n5.2.TheAxiomLanguage\nThe axioms are written in ANSI Knowledge Interchange\nFormat (KIF) ( http://logic.stanford.edu/kif/kif.html ), which\nis a proposed ANSI standard. The axioms use standard first-\norder logic constructs plus KIF-specific relations andfunctions dealing with lists and integers. Lists and integers\nas objects in the domain of discourse are needed in order to\naxiomatize RDF containers and the DAML-ONT properties dealing\nwith cardinality.\nAs stated above, each RDF statement ""Property P of\nresource R has value V"" is translated into the KIF sentence\n""(PropertyValue P R V)"". Because of the centrality of the""type"" property in RDF, we define for convenience an\nadditional binary relation call ""Type"" to provide a more\nsuccinct translation of RDF statements of the form ""Property' metadata={'source': 'Semantic_Web.pdf', 'page': 133}
"
"page_content='134\n‘type’ ofresource R has value V"". The meaning of the relation\n""Type"" is specified by the following axiom:\nAx1. (<=>8(Type ?r ?v) (PropertyValue type ?r ?v ))\nThat is, saying that relation ""Type"" holds for objects R\nand V is logically equivalent to saying that relation\n""PropertyValue"" holds for objects ""type"", R, and V.\nThe axiomatization also restricts the first argument of\nrelation ""Type"" to be a resource and the second argument to be\na class as follows:\nAx2. (=>9(Type ?r ?c) (and (Type ?r Resource) (Type ?c\nClass)))10\n5.3.AxiomsforRDF\nRDF is a language for;\n•declaring named resources to have type ""Property"" or\n""Class"",\n•declaring resources to have a given class as a type (e.g.,\n""Clyde"" is type ""Elephant""), and\n•stating that a given property of a given resource has a\ngiven value (e.g., that property ""Color"" of ""Clyde"" has\nvalue ""Gray"").\nA property named ""type"" is used for declaring that the\ntype of a resource R is T so that such a declaration is\nactually a statement that a given property of a given resource' metadata={'source': 'Semantic_Web.pdf', 'page': 134}
"
"page_content='135\nhas a given value, specifically that property ""type"" of\nresource R has value T. Thus, an RDF file can be consideredto consist\nentirelyof statements of the form ""Property P of\nresource R has value V"".\nOur axiomatization provides axioms restricting the\ninterpretation of the classes and properties that are included\nin RDF. Those classes are ""Resource"", ""Property"", ""Class"",\n""Literal"", ""Statement"", ""Container"", ""Bag"", ""Seq"", ""Alt"", and\n""ContainerMembershipProperty"". Those properties are ""type"",\n""subject"", ""predicate"", ""object"", ""value"", ""_1"", ""_2"", ""_3"", …\n5.4..AxiomsforRDFSchema\nRDF Schema is simply a vocabulary of properties and\nclasses added to RDF. Our axiomatization provides axioms\nrestricting the interpretation of those classes and\nproperties. The classes are ""ConstraintResource"" andConstraintProperty"". The properties are ""subClassOf"",\n""subPropertyOf"", ""seeAlso"", ""isDefinedBy"", ""comment"", ""label"",\n""range"", and ""domain"".\n5.5.AxiomsforDAML-ONT\nDAML-ONT is simply a vocabulary of properties and classes\nadded to RDF and RDF Schema. We present in the appendix\nnatural language transcriptions of the axioms that restrict\nthe interpretation of those classes and properties.' metadata={'source': 'Semantic_Web.pdf', 'page': 135}
"
"page_content='136\n5.6.ExampleTranslationandInference\nConsider the following DAML-ONT descriptions of class\n""Person"" and of person ""Joe"":\n<Class ID = ""Person"">\n<subClassOf resource = ""#Animal"" />\n<restrictedBy>\n<Restriction>\n<onProperty resource = ""#parent"" />\n<toClass resource = ""#Person"" />\n</Restriction>\n</restrictedBy>\n</Class>\n<Person ID = ""Joe"">\n<parent resource = ""#John"" />\n</Person>Those descriptions are equivalent to the following set of\nRDF statements:\n(type Person Class)\n(subClassOf Person Animal)\n(type Restriction R)\n11\n(restrictedBy Person R)(onProperty R parent)(toClass R Person)\n(type Joe Person)\n(parent Joe John)' metadata={'source': 'Semantic_Web.pdf', 'page': 136}
"
"page_content='137\nThose RDF statements are translated by our axiomatic\nsemantics into the following KIF sentences:\n(Type Person Class)\n(PropertyValue subClassOf Person Animal)\n(Type R Restriction)\n(PropertyValue restrictedBy Person R)\n(PropertyValue onProperty R parent)\n(PropertyValue toClass R Person)\n(Type Joe Person)\n(PropertyValue Parent Joe John)\nInformally, the ""toClass"" restriction stated in these\nsentences is that parents of persons are also persons.\nTherefore, we should be able to infer from these sentences and\nthe DAML-ONT axioms that ""John"" is type ""Person"". That\ninference can be made using the primary axiom (i.e., Ax30)\nassociated with property ""toClass"".\nAxiom Ax30 is as follows:\n(=> (and (PropertyValue restrictedBy ?c1 ?r)\n(PropertyValue onProperty ?r ?p)\n(PropertyValue toClass ?r ?c2))\n(forall (?i ?v) (=> (and (Type ?i ?c1)\n(PropertyValue ?p ?i ?v))\n(Type ?v ?c2))))\nThe axiom says that if object R is a value of\n""restrictedBy"" for object C1, object P is a value of\n""onProperty"" for R, and object C2 is a value of ""toClass"" for' metadata={'source': 'Semantic_Web.pdf', 'page': 137}
"
"page_content='138\nR, then for all objects I and V, if I is of type C1 and V is a\nvalue of P for I, then V is type C2.\nIn this axiom, if variable ?c1 is bound to ""Person"",\nvariable ?r is bound to ""R"", variable ?p is bound to ""parent"",\nand variable ?c2 is bound to ""Person"", then the sentences\ndescribing the ""toClass"" restriction on the parents of persons\nsatisfy the conjunction that is the antecedent of the\nimplication that is Ax30. One can therefore infer the\nfollowing corresponding instance of the consequence of that\nimplication:\n(forall (?i ?v) (=> (and (Type ?i Person)\n(PropertyValue parent ?i ?v))\n(Type ?v Person)))\nIf variable ?i is bound to ""Joe"" and variable ?v is bound\nto ""John"", then the sentences describing ""Joe"" satisfy the\nconjunction that is the antecedent of the above inferred\nimplication. One can therefore infer the following\ncorresponding instance of the consequence of that implication:\n(Type John Person)\nThat completes a proof that ""John"" is type ""Person"".\n5.7.DAML-ONTClasses\nThis section describes the axioms for the classes that are\nincluded in DAML-ONT. For each of these classes C, there is\nan axiom stating that C is type ""Class"". The full logical' metadata={'source': 'Semantic_Web.pdf', 'page': 138}
"
"page_content='139\nspecification of the axioms is available in [Fikes-McGuinness,\n2000].\nThing\nAx3. Every object is type Thing.\nNothing\nAx4. Every object is not type ""Nothing"".\nList\nAx5. An object of type ""List"" is also of type ""Sequence"".\nDisjoint\nAx6. Saying that an object is type ""Disjoint"" is equivalent to\nsaying that the object is type ""List"", that every item in thelist is type ""Class"", and that the classes in the list are\npairwise disjoint.\n12\nEmpty\nAx7. ""Empty"" and ""Nothing"" are the same class.13\nTransitiveProperty\nAx8. Saying that an object P is type ""TransitiveProperty"" is\nequivalent to saying that P is type ""Property"", and that ifobject Y is a value of P for object X and object Z is a value\nof P for Y, then Z is also a value of P for X.\nUnique Property\nAx9. Saying that object P is type ""UniqueProperty"" is\nequivalent to saying that P is type property, and that if\nobjects Y and Z are both values of P for object X, then Y and\nZ are the same object.' metadata={'source': 'Semantic_Web.pdf', 'page': 139}
"
"page_content='140\nUnambiguousProperty\nAx10. Saying that an object P is type\n""UnambiguousProperty"" is equivalent to saying that P is type\nproperty, and that if object V is a value of P for both\nobjects X and Y, then X and Y are the same object.\nRestriction, Qualification, and Ontology\nNo axioms other than those stating that each of these are\ntype ""Class"".\n5.8.DAML-ONTProperties\nThis section describes the axioms for the properties that\nare included in DAML-ONT. For each of these properties P,\nthere is an axiom stating that P is type ""Property"". The full\nlogical specification of the axioms is available in [Fikes-\nMcGuinness:2000].\ndisjointWithSaying that object C2 is a value of property\n""disjointWith"" for object C1 is equivalent to saying that C1\nand C2 are each type ""Class"", that no object is both type C1\nand type C2, and that there is at least one object that is\ntype C1 or type C2.\nunionOf\nSaying that object L is a value of ""unionOf"" for object C1\nis equivalent to saying that C1 is type ""Class"", L is type\n""List"", every item in list L is type ""Class"", and an object is' metadata={'source': 'Semantic_Web.pdf', 'page': 140}
"
"page_content='141\ntype C1 if and only if it is type of one of the items of list\nL.\ndisjointUnionOf\nSaying that object L is a value of ""disjointUnionOf"" for\nobject C is equivalent to saying that L is a value of property\n""unionOf"" for C (i.e., that class C is the union of the\nclasses in list L) and that L is type ""Disjoint"" (i.e., the\nclasses in list L are pairwise disjoint).\nintersectionOf\nSaying that object L is a value of ""intersectionOf"" for\nobject C1 is equivalent to saying that C1 is type ""Class"", Lis type ""List"", all of the items in list L are type ""Class"",\nand an object is type C1 if and only if it is type of all of\nthe items of list L.\ncomplementOf\nSaying that object C2 is a value of ""complementOf"" for\nobject C1 is equivalent to saying that C2 is a value of\n""disjointWith"" for C1 (i.e., C1 and C2 are disjoint classes)and all objects are either type C1 or type C2.\noneOf\nSaying that object L is a value of ""oneOf"" for object C is\nequivalent to saying that C is type ""Class"", L is type ""List"",\nand the objects that are type C are exactly the items in list\nL.\nasClass' metadata={'source': 'Semantic_Web.pdf', 'page': 141}
"
"page_content='142\nSaying that object C is a value of ""asClass"" for object L\nis the equivalent of saying that something is of type C if andonly if it is a member of the list L (i.e. it is the first of\nL or a member of the rest of L.)\nfirst\nSaying that object X is a value of ""first"" for object L is\nequivalent to saying that L is type ""List"", L has at least one\nitem, and the first item of L is X.\nrest\nSaying that object R is a value of ""rest"" for object L is\nequivalent to saying that L is type ""List"", R is type ""List"",L has at least one item, and L has the same items in the same\norder as list R with one additional object as its first item.\nitem\nSaying that object X is a value of ""item"" for object L is\nequivalent to saying that L is type ""List"" and either X is a\nvalue of ""first"" for L (i.e., X is the first item in list L)\nor there is an object R that is a value of ""rest"" for L (i.e.,there is a list R that is the rest of list L) and X is a value\nof ""item"" for R (i.e., X is an item in the list R).\ncardinality\nSaying that object N is a value of ""cardinality"" for\nobject P is equivalent to saying that P is type ""Property"" and\nfor all objects X, any list containing no repeated items and\ncontaining exactly those objects V such that V is a value of P\nfor X is of length N.' metadata={'source': 'Semantic_Web.pdf', 'page': 142}
"
"page_content='143\nmaxCardinality\nSaying that object N is a value of ""maxCardinality"" for\nobject P is equivalent to saying that P is type ""Property"" and\nfor all objects X, the length of any list containing no\nrepeated items and containing exactly those objects V such\nthat V is a value of P for X is equal to or less than N.\nminCardinality\nSaying that object N is a value of ""minCardinality"" for\nobject P is equivalent to saying that P is type ""Property"" and\nfor all objects X, there exists a list of length at least N\nthat contains no repeated items and contains only objects Vsuch that V is a value of P for X.\ninverseOf\nSaying that object P2 is a value of ""inverseOf"" for object\nP1 is equivalent to saying that P1 is type ""Property"", P2 is\ntype ""Property"", and that object X2 is a value of P1 for\nobject X1 if and only if X1 is a value of P2 for X2.\nrestrictedByIf object R is a value of ""restrictedBy"" for object C,\nthen R is type ""Resource"" and C is type ""Class"".\nonProperty\nIf object P is a value of ""onProperty"" for object RQ, then\nP is type ""Property"" and RQ is either type ""Restriction"" or\ntype ""Qualification"".\ntoValue' metadata={'source': 'Semantic_Web.pdf', 'page': 143}
"
"page_content='144\nIf object V is a value of ""toValue"" for object R, then R\nis type ""Restriction"".\nIf object R is a value of ""restrictedBy"" for object C,\nobject P is a value of ""onProperty"" for R, and object V is a\nvalue of ""toValue"" for R, then for all objects I of type C, V\nis a value of P for I. (I.e., a ""toValue"" restriction of V on\na property P on a class C constrains each object I of type C\nto have V as a value of property P.)\ntoClass\nIf object C is a value of ""toClass"" for object R, then R\nis type ""Restriction"" and C is type ""Class"".\nIf object R is a value of ""restrictedBy"" for object C1,\nobject P is a value of ""onProperty"" for R, and object C2 is a\nvalue of ""toClass"" for R, then for all objects I and V, if I\nis of type C1 and V is a value of P for I, then V is type C2.\n(I.e., a ""toValue"" restriction of C2 on a property P on a\nclass C1 constrains each P value of each object of type C1 to\nbe type C2.)\nqualifiedBy\nIf object Q is a value of ""qualifiedBy"" for object C, then\nQ is type ""Qualification"" and C is type ""Class"".\nhasValue\nIf object C is a value of ""hasValue"" for object Q, then C\nis type ""Class"" and Q is type ""Qualification"".\nIf object Q is a value of ""qualifiedBy"" for object C1,\nobject P is a value of ""onProperty"" for Q, and object C2 is a' metadata={'source': 'Semantic_Web.pdf', 'page': 144}
"
"page_content='145\nvalue of ""hasValue"" for Q, then for all objects I of type C1,\nthere exists an object V such that V is a value of P for I andV is type C2. (I.e., a ""hasValue"" restriction of C2 on a\nproperty P on a class C1 constrains each object of type C1 to\nhave a value of type C2.)\nversionInfo\nIf object V is a value of ""versionInfo"" for object O, then\nO is type ""Ontology"".\nimports\nIf object O2 is a value of ""imports"" for object O1, then\nO1 is type ""Ontology"" and O2 is type ""Ontology"".\nequivalentTo\nSaying that object Y is a value of ""equivalentTo"" for\nobject X is equivalent to saying that X and Y are the same\nobject.\ndefault\nIf object V is a value of ""default"" for object P, then P\nis type ""Property"".\nConclusions\nThe ontology language for a semantic web needs to be able\nto express common elements such as classes, properties,\nrestrictions, and objects in the domain. We have provided a\nhistorical perspective on the evolution of the initial\nontology language for the DAML program. We introduced thelanguage through example. We also provided an axiomatization' metadata={'source': 'Semantic_Web.pdf', 'page': 145}
"
"page_content='146\nof the language (and in doing so, also provided an\naxiomatization for the building blocks of the language—RDF).We showed a short proof using the axioms showing how they can\nbe used to make the inferences mentioned in the introduction\nby example.\nWe believe that this language is a useful starting point\nfor describing web content. It builds on decades of research\nin frame-based systems, description logics, and web languages.\nIt thus has the benefit of years of research on languages,\ncomplexity, and usability and may be positioned to be the\nfoundation for the next evolution of web access. It alsoprovided the merging point for the eventual DAML ontology\nlanguage formed by more tightly integrating the OIL language\ninto DAML-ONT.\nAcknowledgements\nDAML-ONT is the result work from many people. The US\nDefense Advanced Research Projects Agency funds the DAMLproject. The ontology language originated within the program\nbut has been heavily influenced by work beyond DARPA, in\nparticular by work from the European Union funded Semantic Web\nprojects. This paper is authored by two of the three original\neditors of the language release, the DAML program director,\nand the co-author of the axiomatic semantics. We would\nexplicitly like to acknowledge the impact of the otheroriginal co-editor—Dan Connolly—for his significant impact on' metadata={'source': 'Semantic_Web.pdf', 'page': 146}
"
"page_content='147\nthe initial language release. The language has been influenced\nheavily by others including Tim Berners-Lee, Frank vanHarmelen, Ian Horrocks, Dan Brickley, Mike Dean, Stefan\nDecker, Pat Hayes, Jeff Heflin, Drew McDermott, Peter Patel-\nSchneider, and Ralph R. Swick. The evolving list of major\ncontributors is maintained on\nwww.daml.org. DAML-ONT -has\nsince merged into a new ontology language called DAML+OIL (see\nhttp://www.daml.org/2001/03/daml+oil-index for the release).\nWe will be producing an updated paper reflecting the larger\nlanguage. Also, DAML is expected to include a logic language\n(DAML-L) and a service language (DAML-S).\nReferences\n[Bechhofer et al., 2000] S. Bechhofer et al., ""An Informal Description of OIL-Core and Standard OIL: A\nLayered Proposalfor DAML-O, www.ontoknowledge.org/oil/downl/dialects.pdf\n[Berners-Lee] Tim Berners-Lee. Semantic Web Road Map. 1998.\nhttp://www.w3.org/DesignIssues/Semantic.html\n[Berners-Lee et al., 2000]. TimBerners-Lee, David R. Karger , Lynn Andrea Stein , Ralph R. Swick, and Daniel\nJ. Weitzner. Semantic Web Development. 2000. http://www.w3.org/ 2000/01/sw/DevelopmentProposal\n[Borgida et. al, 1989] Alex Borgida, Ronald J. Brachman, Deborah L. McGuinness, and Lori Alperin Resnick.\n``CLASSIC: A Structural Data Model for Objects\'\', Proceedings of the 1989 ACM SIGMOD\nInternationalConference onManagementofData, Portland, Oregon, June, 1989, pp. 59-67.\n[Brachman-Schmolze, 1985] Ronald J. Brachman, James G. Schmolze, `An Overview of the KL-ONE\nKnowledge RepresentationSystem\', Cognitive Science, Vol9(2),pp171-216, 1985.\n[Brickley-Guha, 2000] D. Brickley and R.V. Guha, Resource Description Framework (RDF) Schema\nSpecification 1.0, W3C Candidate Recommendation, World Wide Web Consortium, 2000,\nwww.w3.org/TR/rdf-schema.' metadata={'source': 'Semantic_Web.pdf', 'page': 147}
"
"page_content='148\n[Chaudhri et. al. 1998] VinayChaudhri, Adam Farquhar, Richard Fikes, Peter Karp, and James Rice; ""OKBC: A\nProgrammatic Foundationfor Knowledge Base Interoperability"", AAAI 1998.\n[Farquhar et. al, 1997] Adam Farquhar, Richard Fikes, and James Rice; ""The Ontolingua Server: a Tool for\nCollaborative OntologyConstruction"", Intl. Journal ofHuman-Computer Studies 46, 1997.\n[Fikes & Kehler 1985] Richard Fikes & Tom Kehler, ""The Role of Frame-Based Representation in Reasoning"",\nCACM 28(9):904-920(1985).\n[Karp 1992] Peter D. Karp, ""The design space of frame knowledge representation systems"", Technical Report\n520, SRI International AI Center;available online as ftp://www.ai.sri.com/pub/papers/karp-freview.ps.Z\n[Donini et al., 1991a] F. Donini, M. Lenzerini, D. Nardi, and W. Nutt. `The Complexity of Concept Languages\',\nKR-91, pp151-162, 1991.\n[Donini et al., 1991b] F. Donini, M. Lenzerini, D. Nardi, and W. Nutt. Tractable concept languages\', IJCAI-91,\npp 458-465,1991.\n[Fikes-McGuinness, 2000] Richard Fikes and Deborah L. McGuinness. ""An Axiomatic Semantics for DAML-\nONT,"" December 10, 2000. www.ksl.stanford.edu/people/dlm/daml-semantics .\n[Fensel et al., 2000] Dieter Fensel, Ian Horrocks, Frank van Harmelen, Stefan Decker, M. Erdmann, and M.\nKlein. OIL in a nutshell. In Proceedings of the European Knowledge Acquisition Conference (EKAW-\n2000), Lecture NotesIn ArtificialIntelligence. Springer-Verlag, 2000.\n[Fikes & McGuinness] Richard Fikes & Deborah L. McGuinness, ""An Axiomatic Semantics for RDF, RDF\nSchema, and DAML+OIL"", KSL Technical Report KSL-01-01, Stanford University, 2001; available on-\nline ashttp://www.ksl.stanford.edu/people/dlm/daml-semantics/abstract-axiomatic-semantics.html.\n[Heflin & Hendler] J. Heflin and J. Hendler, ""Semantic Interoperability on the Web,"" Proc. Extreme Markup\nLanguages2000, Graphic Communications Assoc., Montreal, Canada 2000, pp. 111–120.\n[Horrocks and Patel-Schneider, 1999] Horrocks, I., Patel-Schneider, P., `Optimizing description logic\nsubsumption\', Journalof Logic and Computation, Vol9(3),pp 267-293,1999.\n[Horrocks—et-al, 1999] I. Horrocks and U. Sattler: A description logic with transitive and inverse roles and role\nhierarchies. Journalof Logic and Computation, 9(3):385-410,1999.\n[Horrocks, Sattler & Tobies] I. Horrocks, U. Sattler, and S. Tobies. Practical reasoning for very expressive\ndescriptionlogics. Logic Journalofthe IGPL, 8(3):239-263, 1999.' metadata={'source': 'Semantic_Web.pdf', 'page': 148}
"
"page_content='149\n[Lassila, 1998] O. Lassila, ""Web Metadata: A Matter of Semantics,"" IEEE Internet Computing, vol. 2, no. 4,\nJuly/Aug.1998,pp.30–37.\n[Lassila-Swick,1999] O. Lassila and R. Swick, Resource Description Framework (RDF) Model and Syntax\nSpecification, W3C Recommendation, World Wide Web Consortium, 1999, www.w3.org/TR/REC-rdf-\nsyntax .\n[MacGregor, 1991] Robert M. MacGregor: Inside the LOOM Description Classifier. SIGART Bulletin 2 (3): 88-\n92 (1991)\n[Stein & Connolly, 2000] Lynn Andrea Stein and Dan Connolly. Annotated DAML Ontology Markup. 2000.\nwww.daml.org/2000/10/daml-walkthru\nFootnotes\n1GatesBuilding2AStanford UniversityStanford, CA94305 USA650-723-9770 dlm@ksl.stanford.edu\n2GatesBuilding2AStanford UniversityStanford, CA94305 USA650-723-9770 fikes@ksl.stanford.edu\n3FranklinW. OlinCollege ofEngineering1735 GreatPlainAvenue Needham, MA 02495 USA781-292-2525\nlas@olin.edu\n4DARPA/ISO3701 N. FairfaxDr.Arlington, VA22203703-696-2238 jhendler@darpa.mil\n5SHIQ includes ALC plus transitive roles, inverse roles, and qualified number restrictions. For more on the\ntheoreticalanalysisand reasoningissuessee [Horrocksand Sattler, 1999]and [Horrockset. al, 1999].\n6The namespace prefixrdfisarbitrary. The name inthisdocument would be the conventionalchoice.\n7Unprefixed attribute names are not associated with the default namespace name the way unprefixed element\nnames are. This is expanded upon in myth 4 available in ""Namespace Myths exploded"" at:\nhttp://www.xml.com/pub/a/2000/03/08/namespaces/index.html?page=2 .\n8KIF note: ""<=>"" means ""if and only if"". Relational sentences in KIF have the form "" (<relation name>\n<argument>*)"". Names whose first character is ``?\'\' are variables. If no explicit quantifier is specified,\nvariablesare assumed to be universallyquantified.\n9KIF note: ""=>"" means""implies"".\n10RDF considers ""Resource"" to be a class and ""Class"" itself to be a class. The axiomatization specifies that\nsemantics byincluding the axioms "" (TypeResourceClass) ""a n d""(TypeClass Class )"".' metadata={'source': 'Semantic_Web.pdf', 'page': 149}
"
"page_content='150\n11The restrictionis unnamed inthe RDF markup. We use the arbitraryname ""R"" here todenote the restriction.\n12The DAML-ONT property""disjointWith"" isused to expresspairwise disjointness.\n13The DAML-ONT property""asClass"" isused to expressequivalence ofclasses.' metadata={'source': 'Semantic_Web.pdf', 'page': 150}
"
"page_content='4. Ontologies andSchemaLanguages on the Web\nMichel Klein1, Jeen Broekstra2, Dieter Fensel1, Frank van\nHarmelen1,2, and Ian Horrocks3\n1. Introduction\nFor the past few years, information on the World Wide Web\nwas mainly intended for direct human consumption. However, to\nfacilitate new intelligent applications such as meaning-based\nsearch, information brokering and electronic transactions\nbetween several independent partners, the semantics of the\ndata on the internet should also be accessible for machines.\nTherefore, methods and tools to create such a ""semantic web""\nhave generated wide interest.\nAn major aspect of a web of ""machine understandable""\ninformation are explicit models of the domains of interest,\nwhich describe the vocabulary and structure of the\ninformation. These models - often called ontologies - may play\na key role in advanced information exchange, as they provide a\nshared and common understanding of a domain. However, it is\nstill an important question how ontologies can be applied\nfruitfully to online resources.\nIn this chapter, we will look at the relation between\nontologies and two schema languages from the World Wide Web\nconsortium, that – in some sense – both aims at providing a\nmechanism for describing the common understanding of data in a' metadata={'source': 'Semantic_Web.pdf', 'page': 151}
"
"page_content='152\nspecific domain. One of them is RDF Schema [Brickley and Guha,\n2000], a schema language for the Resource DescriptionFramework (RDF)[Lassila & Swick, 1999]. RDF is a standard from\nthe W3C for representing metadata on the web. RDF Schema\nprovides some modelling primitives that can be used to define\na simple model of classes and their relations. This model can\nthen act as a vocabulary for RDF statements, which describe\nresources on the web. The other schema language that we will\nconsider is XML Schema [Thompson et al., 2000]. This is a\nproposed standard for describing the structure and semantics\nof XML documents. It prescribes the way in which elements andattributes in an XML document are combined and can be used to\nvalidate the structure and content of a document.\nThe aim of this chapter is to investigate how these\nlanguages can be used to add ontology-based semantics to\nonline resources. We will descibe their different roles in\nthis process, and illustrate the way in which they can play\nthat role. In short, we will argue that XML Schema documentsand ontologies refer to different abstraction levels on how to\ndescribe information and therefore also to different states in\nthe process of developing on-line information sources. To\nillustrate this, we will provide a transformation procedure\nfrom ontologies to XML Schema documents. RDF Schema documents\nand ontologies, on the other hand, serve the same purpose to a\nlarge extent, but generally differ in the level in the level\nof expressiveness. We will show a method to capture most of' metadata={'source': 'Semantic_Web.pdf', 'page': 152}
"
"page_content='153\nthe expressive power of ontologies in RDF Schema documents, by\nextending the RDF Schema language.\nThis chapter is organized as follows. In the next section,\nwe will give an abstract introduction to ontologies, schemas\nand their relationship. In Section 3 we provide a short\nintroduction to a specific ontology language, called OIL\n[Fensel et al., 2000], that we will use as an example language\nthroughout this chapter. Section 4 introduces XML Schema and\ncompares it to ontology languages. Section 5 does the same for\nRDF Schema. In Section Conclusions, we give two examples of\nthe application of ontologies to online resources, usingrespectivily XML Schema and RDF Schema.\n2. Ontologies and Schemas\nOntology, which has been a field of philosophy since\nAristotle, has become a buzz-word in information and\nknowledge-based systems research [Guarino & Welty, 2000].\nVarious publications in knowledge engineering, naturallanguage processing, cooperative information systems,\nintelligent information integration, and knowledge management\nreport about the application of ontologies in developing and\nusing systems. In general, ontologies provide a\nshared and\ncommonunderstanding of a domain that can be communicated\nbetween people and heterogeneous and distributed application\nsystems. They have been developed in Artificial Intelligenceto facilitate knowledge sharing and reuse.' metadata={'source': 'Semantic_Web.pdf', 'page': 153}
"
"page_content='154\nSchemas, in particular for databases, have been developed\nin computer science to describe the structure and semantics ofdata. A well-known example is the relational database schema\nthat has become the basis for most of the currently used\ndatabases [Elmasri & Navathe, 2000]. A database schema defines\na set of relations and certain integrity constraints. A\ncentral assumption is the atomicity of the elements that are\nin certain relationships (i.e., first normal form). In a\nnutshell, an information source (or, more precisely, a data\nsource) is viewed as a set of tables. However, many new\ninformation sources now exist that do not fit into such rigidschemas. In particular, the WWW has made predominantly\ndocument-centered information based on natural language text\navailable. Therefore, new schema languages have arisen that\nbetter fit the needs of richer data models. Some of them, like\nXML Schema (see [Biron & Malhotra, 2000], [Thompson et al.,\n2000] and [Walsh, 1999]), integrate schemas for describing\ndocuments (like HTML or SGML) with schemas designed fordescribing data. Other schema languages, such as RDF Schema,\nabstract from structure and representation issues and try to\nprovide a general basis for data modelling on the web.\nAnd their relationship? Ontologies applied to on-line\ninformation source may be seen as explicit conceptualizations\n(i.e.,meta information ) that describe the semantics of the\ndata. Fensel [Fensel, 2001] points out the following common\ndifferences between ontologies and schema definitions:' metadata={'source': 'Semantic_Web.pdf', 'page': 154}
"
"page_content='155\n•A language for defining ontologies is often syntactically\nand semantically richer than common approaches for\ndatabases.\n•The information that is described by an ontology consists of\nsemi-structured natural language texts and not tabular\ninformation.\n•An ontology must be a shared and consensual terminology\nbecause it is used for information sharing and exchange.\n•An ontology provides a domain theory and not the structure\nof a data container, like most schema languages do.\nHowever, these statements need to be formulated more\nprecisely when comparing ontology languages with both the XML\nSchema language as the RDF Schema language, and the purpose of\nontologies with the purpose of those schema languages. This\nwill be done in the next sections.\n3. The Ontology Language OIL\nTo investigate the relations between ontology languages\nand schema languages, we will use one specific ontology\nlanguage as reference and example. Horrocks et al. [Horrocks\net al., 2000] defines the Ontology Interface Layer (OIL) .I n\nthis section we will only give a brief description of the OIL\nlanguage. More detailed descriptions can be found elsewhere; acomparison of OIL with other ontology languages can be found\nin [Horrocks et al., 2000] and [Fensel et al., 2000].' metadata={'source': 'Semantic_Web.pdf', 'page': 155}
"
"page_content='156\nA brief example ontology in OIL is provided in Figure 4.1;\nthe example is based on the country pages of the CIA WorldFactbook\n4, which we will use as an example throughout this\nchapter. The OIL language has been designed so that: (1) it\nprovides most of the modeling primitives commonly used in\nframe-based and Description Logic (DL) oriented ontologies;\n(2) it has a simple, clean, and well defined semantics; (3)\nautomated reasoning support, (e.g., class consistency and\nsubsumption checking) can be provided. It is envisaged that\nthis core language will be extended in the future by sets of\nadditional primitives, with the proviso that full reasoningsupport may not be available for ontologies using such\nprimitives.\nAn ontology in OIL is represented by an\nontology container\nand anontology definition . We will discuss both elements of\nan ontology specification in OIL. We start with the ontology\ncontainer and will then discuss the backbone of OIL, the\nontology definition.\nFor theontology container part, OIL adopts the components\ndefined by the Dublin Core Metadata Element Set, Version 1.1.5\nApart from the container, an OIL ontology consists of a\nset ofontology definitions :\n•importA list of references to other OIL modules that are to\nbe included in this ontology. Specifications can be included\nand the underlying assumptions is that names of different\nspecifications are different (via different prefixes).' metadata={'source': 'Semantic_Web.pdf', 'page': 156}
"
"page_content='157\n•class and slot definitions Zero or more class definitions\n(class-def) and slot definitions (slot-def), the structure\nof which will be described below.\nOntology-container\ntitleCIAWorld Fact Book ontology\ncreatorMichel Klein\nsubjectcountryinformation, CIA, world\nfactbook\ndescription A didactic example ontology\ndescribing\ncountryinformation\ndescription.release 1.02\npublisher CIA\ntypeontology\nformatpseudo-xml\nidentifier http://www.ontoknowledge.org/oil/wfb.xml\nsource\nhttp://www.odci.gov/cia/publications/factbo\nok/\nlanguage OIL\nlanguage en-uk\nOntology-definitions\nslot-defcapital\ndomainCountry\nrangeCity\ninversecapital_of\npropertiesfunctional\nSlot-defhas_boundary\ndomain Countryrange LandBoundary\nSlot-def\ncoastline\ndomainGeographical_Location\nrange(KilometerLength orMilesLength)\nSlot-defrelative_area\ndomainGeographical_Location\nrangeAreaComparison\nSlot-defvalue\ndomain(KilometerLength or\nMilesLength)\nrangeinteger\npropertiesfunctionalclass-def\nGeographical_Location\nslot-constraint name\nvalue-type string\nclass-def City\nsubclass-of\nGeographical_Location\nslot-constraint located_in\nvalue-type Country\nclass-def Country\nsubclass-of\nGeographical_Location\nslot-constraint capital\nhas-value City\nclass-def LandBoundary\nslot-constraint\nneighbor_country\ncardinality 1 Country\nslot-constraint length\nvalue-type\n(KilometerLength or\nMilesLength)\nclass-def KilometerLength\nslot-constraint value\nhas-value integer\nslot-constraint unit\nhas-value km\nclass-def MilesLength\nslot-constraint value\nhas-value integer\nslot-constraint unit\nhas-value mile\nclass-def AreaComparison\nslot-constraint\ncompared_to\nvalue-type\nGeographical_Location\nslot-constraint proportion\nvalue-type string\nFigure 4.1 An partial ontology in OIL\nA class definition associates a class name with a class\ndescription. A class-defconsists of the following components:' metadata={'source': 'Semantic_Web.pdf', 'page': 157}
"
"page_content='158\n•typeThe type of definition. This can be either primitiveor\ndefined; if omitted, the type defaults to primitive. When a\nclass is primitive, its definition (i.e., the combination of\nthe following subclass-of and slot-constraint components) is\ntaken to be a necessary but not sufficient condition for\nmembership of the class. When a class is defined, its\ndefinition is taken to be a necessary andsufficient\ncondition for membership of a class.\n•subclass-ofA list of one or more class-expressions, the\nstructure of which will be described below. The class beingdefined in this class-def must be a subclass of each of the\nclass expressions in the list.\n•\nslot-constraints Zero or more slot-constraints, the\nstructure of which will be described below. The class being\ndefined in this class-def must be a subclass of each of the\nslot-constraints in the list (note that a slot-constraint\ndefines a class).\nAclass-expression can be either a class name, a slot-\nconstraint, or a boolean combination of class expressions\nusing the operators and,or,ornot. Note that class\nexpressions are recursively defined, so that arbitrarily\ncomplex expressions can be formed.\nIn some situations it is possible to use a concrete-type-\nexpressioninstead of a class expression. A concrete-type-\nexpression defines a range over some data type. Two data types\nthat are currently supported in OIL are integerandstring.' metadata={'source': 'Semantic_Web.pdf', 'page': 158}
"
"page_content='159\nRanges can be defined using the expressions (minX),(maxX),\n(greater-thanX),(less-thanX),(equalX) and(rangeX Y).\nFor example,(min21) defines the data type consisting of all\nthe integers greater than or equal to 21. As another example,\n(equal""xyz"") defines the data-type consisting of the string\n""xyz"".\nAslot-constraint is a list of one or more constraints\n(restrictions) applied to a slot. A slot is a binary relation\n(i.e., its instances are pairs of individuals), but a slot-\nconstraint is actually a class definition—its instances are\nthose individuals that satisfy the constraint(s). Typicalslot-constraint are:\n•\nhas-valueA list of one or more class-expressions . Every\ninstance of the class defined by the slot constraint must berelated via the slot relation to an instance of each\nclass-\nexpressionin the list. For example, the has-value\nconstraint:\nslot-constraint eats\nhas-valuezebra, wildebeest\ndefines the class each instance of which eatssome\ninstance of the class zebra and some instance of the class\nwildebeest. Note that this does not mean that instances of the\nslot-constraint eat onlyzebra and wildebeest: they may also\nbe partial to a little gazelle when they can get it.\n•value-typeA list of one or more class-expressions. If an\ninstance of the class defined by the slot-constraint is' metadata={'source': 'Semantic_Web.pdf', 'page': 159}
"
"page_content='160\nrelated via the slot relation to some individual x, thenx\nmust be an instance of each class-expression in the list.\n•max-cardinality A non-negative integer n followed by a\nclass-expression. An instance of the class defined by the\nslot-constraint can be related to at most n distinct\ninstances of the class-expression via the slot relation.\n•min-cardinality and, as a shortcut, cardinality.\nA slot definition (slot-def) associates a slot name with\na slot description. A slot description specifies global\nconstraints that apply to the slot relation, for example thatit is a transitive relation. A slot-def consists of the\nfollowing main components:\n•\nsubslot-ofA list of one or more slots. The slot being\ndefined in this slot-def must be a subslot of each of the\nslots in the list. For example,\nslot-def daughter\nsubslot-of child\ndefines a slot daughterthat is a subslot of child, i.e.,\nevery pair of individuals that is an instance of daughtermust\nalso be an instance of child.\n•domainA list of one or more class-expressions. If the pair\n(x; y) is an instance of the slot relation, then x must be\nan instance of each class-expression in the list.' metadata={'source': 'Semantic_Web.pdf', 'page': 160}
"
"page_content='161\n•rangeA list of one or more class-expressions. If the pair\n(x; y) is an instance of the slot relation, then y must be\nan instance of each class-expression in the list.\n•inverseThe name of a slot Sthat is the inverse of the slot\nbeing defined. If the pair (x; y) is an instance of the slot\nS, then (y; x) must be an instance of the slot being\ndefined.\n•propertiesA list of one or more properties of the slot.\nValid properties are: transitive,functionaland\nsymmetric.\nAnaxiomasserts some additional facts about the classes\nin the ontlogy, for example that the classes carnivore and\nherbivore are disjoint (that is, have no instances in common).Valid axioms are:\n•\ndisjoint (class-expr)+ All of the class expressions in the\nlist are pairwise disjoint.\n•covered (class-expr) by (class-expr)+ Every instance of the\nfirst class expression is also an instance of at least one\nof the class expressions in the list.\n•disjoint-covered (class-expr) by (class-expr)+ Every\ninstance of the first class expression is also an instance\nof exactly one of the class expressions in the list.\n•equivalent (class-expr)+ All of the class expressions in the\nlist are equivalent (i.e. they have the same instances).' metadata={'source': 'Semantic_Web.pdf', 'page': 161}
"
"page_content='162\nBesides the ""presentation syntax"" described above, OIL\nalso has a XML and RDF representation. The technical report onOIL [Horrocks et al., 2000] defines a DTD and an XML Schema\ndefinition for the XML syntax. The representation of OIL in\nRDF is described in Section 2, and also in [Broekstra et al.,\n2000]. We will now take a look at XML Schema its relation to\nOIL.\n<?xml version=""1.0"" encoding=""UTF-8""?>\n<xsd:schemaxmlns:xsd=""http://www.w3.org/2000/10/XMLSchema"">\n<xsd:complexType name=""address"">\n<xsd:sequence>\n<xsd:element name=""name"">\n<xsd:complexType mixed=""true""><xsd:simpleContent>\n<xsd:extension base=""xsd:string""/>\n</xsd:simpleContent>\n</xsd:complexType>\n</xsd:element><xsd:element name=""street""type=""xsd:string""maxOccurs=""2""/>\n<xsd:elementref=""zip""/>\n<xsd:element name=""city"" type=""xsd:string""/>\n<xsd:element name=""country"" type=""xsd:string""minOccurs=""0""/>\n</xsd:sequence>\n</xsd:complexType>\n<xsd:element name=""zip""type=""zipCode""/><xsd:simpleType name=""zipCode"">\n<xsd:restrictionbase=""xsd:string"">\n<xsd:pattern value=""[0-9]{5}(-[0-9]{4})?""/>\n</xsd:restriction>\n</xsd:simpleType>\n</xsd:schema>\nFigure 4.2 An example for a schema definition.\n4. XML Schema\n4.1.DescriptionofXMLSchema\nXML Schema is a means for defining constraints on the\nsyntax and structure of valid XML documents (cf. [Biron &' metadata={'source': 'Semantic_Web.pdf', 'page': 162}
"
"page_content='163\nMalhotra, 2000], [Thompson et al., 2000], [Walsh, 1999]). A\nmore easily readable explanation of XML Schema can be found in[Fallside, 2000]. XML Schemas have the same purpose as DTDs,\nbut provide several significant improvements:\n•XML Schema definitions are themselves XML documents.\n•XML Schemas provide a rich set of datatypes that can be used\nto define the values of elementary tags.\n•XML Schemas provide a much richer means for defining nested\ntags (i.e., tags with subtags).\n•XML Schemas provide the namespace mechanism to combine XML\ndocuments with heterogeneous vocabulary.\nWe will discuss these four aspects in more detail.\n4.1.1. XML schema definitions are themselves XML documents\nFigure 4.2 shows an XML Schema definition of an address.\nThe schema definition for the address tag is itself an XML\ndocument, whereas DTDs would provide such a definition in anexternal second language. The clear advantage is that all\ntools developed for XML (e.g., validation or rendering tools)\ncan be immediately applied to XML schema definitions, too.\n4.1.2. Datatypes\nDatatypes are described in [Biron & Malhotra, 2000]. We\nalready saw the use of a datatype (i.e.,\nstring)i nt h e\nexample. In general, a datatype is defined as a 3-tuple\nconsisting of a set of distinct values, called its value\nspace, a set of lexical representations, called its lexical' metadata={'source': 'Semantic_Web.pdf', 'page': 163}
"
"page_content='164\nspace, and a set of facetsthat characterize properties of the\nvalue space, individual values, or lexical items.\nValue space. The value space of a given datatype can be\ndefined in one of the following ways: enumerated outright\n(extensional definition), defined axiomatically from\nfundamental notions (intensional definition)6, defined as the\nsubset of values from a previously defined datatype with a\ngiven set of properties, and defined as a combination of\nvalues from some already defined value space(s) by a specific\nconstruction procedure (e.g., a list).\nLexical space. A lexical space is a set of valid literals\nfor a datatype. Each value in the datatype\'s value space is\ndenoted by one or more literals in its lexical space. For\nexample, ""100"" and ""1.0E2"" are two different literals from the\nlexical space of float which both denote the same value.\nFacets. A facet is a single defining aspect of a datatype.\nFacets are of two types: fundamental facets that define the\ndatatype and non-fundamental or constraining facets thatconstrain the permitted values of a datatype.\n•Fundamental facets: equality, order on values, lower and\nupper bounds for values, cardinality (can be categorized as\n""finite"", ""countably infinite"" or ""uncountably infinite""),\nnumeric versus nonnumeric\n•Constraining or non-fundamental facets are optional\nproperties that can be applied to a datatype to constrain\nits value space: length constrains minimum and maximum,' metadata={'source': 'Semantic_Web.pdf', 'page': 164}
"
"page_content='165\npattern can be used to constrain the allowable values using\nregular expressions, enumeration constrains the value spaceof the datatype to the specified list, lower and upper\nbounds for values, precision, encoding, etc. Some of these\nfacets already constrain the possible lexical space for a\ndatatype.\nIt is useful to categorize the datatypes defined in this\nspecification along various dimensions, forming a set of\ncharacterization dichotomies.\n•\nAtomic vs. list datatypes : Atomic datatypes are those having\nvalues which are intrinsically indivisible. List datatypes\nare those having values which consist of a sequence of\nvalues of an atomic datatype. For example, a single token\nwhich matches NMTOKEN from the XML 1.0 [Bray, 1998] could bethe value of an atomic datatype NMTOKEN, whereas a sequence\nof such tokens could be the value of a list datatype\nNMTOKENS.\n•\nPrimitive vs. generated datatypes : Primitive datatypes are\nthose that are not defined in terms of other datatypes; they\nexist ab initio. Generated datatypes are those that are\ndefined in terms of other datatypes. Every generated\ndatatype is defined in terms of an existing datatype,\nreferred to as the basetype. Basetypes may be either\nprimitive or generated. If type a is the basetype of type b,\nthen b is said to be a subtype of a. The value space of a\nsubtype is a subset of the value space of the basetype. For' metadata={'source': 'Semantic_Web.pdf', 'page': 165}
"
"page_content='166\nexample, date is derived from the base type\nrecurringInstant .\n•Built-in vs. user-derived datatypes : Built-in datatypes are\nthose which are defined in the XML schema specification and\nmay be either primitive or generated. User-derived datatypes\nare those derived datatypes that are defined by individual\nschema designers by giving values to constraining facets.XML Schema provides a large collection of such built-in\ndatatypes, for example, string, boolean, flot, decimal,\ntimeInstant, binary, etc. In our example, zipCode is an\nuser-derived datatype.\n4.1.3. Structures\nStructures provide facilities for constraining the\ncontents of elements and the values of attributes and foraugmenting the information set of instances, e.g. with\ndefaulted values and type information (see [Thompson et al.,\n2000]). They make use of the datatypes for this purpose. An\nexample is the element zip that makes use of the datatype\nzipCode. Another example is the definition of the element type\n""name"". The value ""true"" for the ""mixed"" attribute of the\ncomplexType allows to mix strings with (sub-)tags.\nAttributesare defined by their name, a datatype that\nconstraints their values, default or fixed values, andconstraints on their presence (minOccurs and maxOccurs), see' metadata={'source': 'Semantic_Web.pdf', 'page': 166}
"
"page_content='167\nfor example: <attribute name=""key"" type=""integer""\nminOccurs=""1"" maxOccurs=""1""/>\nElementscan be constrained by reference to a simple\ndatatype. The datatypes can be unconstrained, can be\nconstrained to be empty, or can allow elements in its content\n(called rich content model).\n•In the former case, element declarations associate an\nelement name with a type, either by reference (e.g. zipin\nFigure 4.2) or by incorporation (i.e., by defining the\ndatatype within the element declaration).\n•In the latter case, the content model consists of a simple\ngrammar governing the allowed types of child elements and\nthe order in which they must appear . If the mixed qualifier\nis present, text or elements may occur. Child elements are\ndefined via an element reference (e.g. <element ref=""zip""/>)\nor directly via an element declaration . Elements can be\ncombined ingroups with a specific order(all,sequenceor\nchoice). This combination can be recursive, for example, a\nsequence of some elements can be a selection from a\ndifferent sequence or a sequence of different elements\n(i.e., the ""()"", "","" and ""| ""of a DTD are present). Elements\nand their groups can be accompanied with occurrence\nconstraints, for example, <element name=""street""\nminOccurs=""1"" maxOccurs=""2"" type=""string""/>.\nIn the previous subsection we already discussed the\ndifferences between primitive and generated datatypes, where' metadata={'source': 'Semantic_Web.pdf', 'page': 167}
"
"page_content='168\nthe latter is defined in terms of other datatypes (see [Biron\n& Malhotra, 2000]). This is not only possible for simpledatatypes like integer, but also for complex types. There are\ntwo mechanisms for derived type definitions defined in\n[Thompson et al., 2000].\n<xsd:complexType name=""personName"">\n<xsd:sequence>\n<xsd:element name=""title"" minOccurs=""0""/>\n<xsd:element name=""forename""minOccurs=""0""maxOccurs=""unbounded""/>\n<xsd:element name=""surname""/>\n</xsd:sequence>\n</xsd:complexType>\n<xsd:complexType name=""extendedName"">\n<xsd:complexContent>\n<xsd:extension base=""personName"">\n<xsd:sequence>\n<xsd:element name=""generation""minOccurs=""0""/>\n</xsd:sequence>\n</xsd:extension>\n</xsd:complexContent>\n</xsd:complexType><xsd:element name=""name""type=""extendedName""/>\nA snippet of avalid XML-file according tothis schemais:\n<name>\n<forename>Albert</forename><forename>Arnold</forename>\n<surname>Gore</surname>\n<generation>Jr</generation>\n</name>\nFigure 4.3 An example for a derived type definitions via\nextension.\nHere the following two cases are distinguished:\n•Derivation byextension. A new complex type can be defined\nby adding additional particles at the end of its definition\nand/or by adding attribute declarations. An example for such\nan extension is provided in Figure 4.3.' metadata={'source': 'Semantic_Web.pdf', 'page': 168}
"
"page_content='169\n•Derivation by restriction. A new type can be defined by\ndecreasing the possibilities made available by an existing\ntype definition: narrowing ranges, removing alternatives,\netc.\n4.1.4. Namespaces\nThe facilities in XML Schema to construct schemas from\nother ones builds on XML namespaces. An important concept inXML Schema is the\ntarget namespace , which defines the URL that\ncan be used to uniquely identify the definitions in the\nschema. XML Schema provides two mechanism for assembling a\ncomplete component set from separate original schemas (cf.\n[Thompson et al., 2000]):\n•The first is via the includeelement (<include\nschemaLocation=""http...""/>). The effect of this include\nelement is to bring in the definitions and declarations\ncontained in the refered schema and make them available as\npart of the including schema target namespace. The effect isto compose a final effective schema by merging the\ndeclarations and definitions of the including and the\nincluded schemas. The one important caveat is that the\ntarget namespace of the included components must be the same\nas the target namespace of the including schema.\nThe\nredefinemechanism is very much the same as the\ninclude mechanism, but also allows to change the included\ntypes.' metadata={'source': 'Semantic_Web.pdf', 'page': 169}
"
"page_content='170\n•Second, theimportelement ( <importnamespace=""http...""/>)\ncan be used to import schemas with a different target\nnamespace. It should coincide with a standard namespace\ndeclaration. XML Schema in fact permits multiple schema\ncomponents to be imported, from multiple namespaces, and\nthey can be referred to in both definitions and\ndeclarations.\nIn general, only inclusion is provided as means to combine\nvarious schemas and module name prefix is used to realize the\nnon-equality of name assumptions (i.e., identifiers of two\ndifferent schemas are by definition different).\n4.2.TheRelationBetweenOILandXMLSchema\nOn the one hand, ontologies and XML schemas serve very\ndifferent purposes. Ontology languages are a means to specify\ndomain theories and XML schemas are a means to provideintegrity constraints for information sources (i.e., documents\nand/or semistructured data). It is therefore not surprising to\nencounter differences when comparing XML schema with ontology\nlanguages like OIL. On the other hand, XML Schema and OIL have\none main goal in common: both provide vocabulary and structure\nfor describing information sources that are aimed at exchange.\nIt is therefore legitimate to compare both and investigatetheir commonalities and differences. In this section, we\nprovide a twofold way to deal with this situation. First we' metadata={'source': 'Semantic_Web.pdf', 'page': 170}
"
"page_content='171\nanalyze the main differences and second we try to characterize\ntheir relation.\n4.2.1. Comparing OIL and XML Schema\nModelling primitives. XML Schema’s main modelling\nprimitives are elements. Elements may be simple, composed or\nmixed. Simple elements have as their contents datatypes, like\nstring or integer. Composed elements have as contents other\n(child) elements. Also they define a grammar that defines how\nthey are composed from their child elements. Finally, mixed\nelements can mix strings with child elements. In addition,\nelements may have attributes. OIL takes a different point ofview. The basic modeling primitives are concepts and slots.\nConcepts can be roughly identified with elements and child\nelements are roughly equivalent to slots defined for a\nconcept. However, slots defined independently from concepts\nhave no equivalents in XML Schema.\nDatatypes.XML Schema provides a large collection of\nbuilt-in datatypes as, for example, string, boolean, float,decimal, timeInstant, binary, etc. OIL only provides\nstring\nandintegeras built-in datatypes, because of the difficulty\nof providing clear semantics and reasoning support for a large\ncollection of complex datatypes.' metadata={'source': 'Semantic_Web.pdf', 'page': 171}
"
"page_content='172\nFigure 4.4 The relationship between schemas and\nontologies in a nutshell .\nIn XML Schema all inheritance must be defined explicitly,\nso reasoning about hierarchical relationships is not an issue.\nIn XML Schema, a datatype is defined by a value space, a\nlexical space, and a set of facets. Restricting a value space\n(i.e., the membership of classes) is also present in OIL,\nhowever, OIL does not provide a lexical space and facets.\nThese aspects are much more related to the representation of adatatype than to the aspect of modeling a domain. That is,\ndatemay be an important aspect of a domain, but various\ndifferent representations of datesare not. This is a rather\nimportant aspect when talking about how to represent the\ninformation. Finally, although XML Schema mentions the\npossibility of defining types intensionally via axioms, noER-model\nRelationalOILspecification\nXMLschema\nData\nbaseXMOIL modeling primitives:class;slot;\ncomplexconcepts,etc;\nmodeling\nsimplementa\nprescribe' metadata={'source': 'Semantic_Web.pdf', 'page': 172}
"
"page_content='173\nlanguage, semantics, nor any actual reasoning service is\nprovided for this purpose. OIL is a flexible language for theintensional, i.e. axiomatic, definition of types. It provides\nfacilities to for the intensional definition of types (via\ndefined concepts ) that is completely lacking in XML Schema7\nGrammar.OIL does not provide any grammar for the\napplication of slots to concepts, i.e., an instance of a\nconcept comprises of a setof slots values. XML Schema allows\nthe definition of stronger requirements via a grammar:\nsequenceandchoiceof attributes applied to an instance can\nbe defined.\nInheritance.XML Schema incorporates the notion of type-\nderivation. However, this can only partially be compared with\nwhat is provided with inheritance in ontology languages.\nFirst, in XML Schema all inheritance has to be modeled\nexplicitly. In OIL inheritance can be derived from the\ndefinitions of the concepts. Second, XML Schema does not\nprovide a direct way to inherit from multiple parents. Types\ncan only be derived from one basetype. OIL (like most ontology\nlanguages) provides multiple inheritance. Third, and very\nimportant, the is-a relationship has a twofold role in\nconceptual modeling which is not directly covered by XML\nSchema:\n•Top-down inheritance of attributes from superclasses to\nsubclasses. Assume employeeas a subclass of a class person.' metadata={'source': 'Semantic_Web.pdf', 'page': 173}
"
"page_content='174\nThenemployeeinherits all attributes that are defined for\nperson.\n•Bottom-up inheritance of instances from subclasses to\nsuperclasses. Assume employeeas a subclass of a class\nperson. Thenpersoninherits all instances (i.e., elements)\nthat are an element of employee.\nIn XML Schema, both aspects can only be modeled in an\nartificial way. The top-down inheritance of attributes is\ndifficult to model, because type derivations in XML Schema can\neither extend orrestrict the base type. A ""dummy""\nintermediate type has to be used to model full top-down\ninheritance of attributes with both extending and restricting\nderivations. For example, it is not possible to model a\nstudent as apersonwith a student-number and age < 28 in only\none step. You first have to model a dummy type ""young person"",\nwhichrestrictsthe age of persons to less than 28. After that\nit is possible to model a student as a ""young person"" extended\nwith a student-number.\nAlso the bottom-up inheritance of instances to\nsuperclasses is not automatically available in XML Schema. For\nexample, an instance of a student is not automatically an\nvalid instance of a person, even if the student-type inherits\nfrom the person-type. However, using an additional attribute,it is possible to use an instance of a subclass wherever a\nsuperclass of it is expected. So, to use a student is as a' metadata={'source': 'Semantic_Web.pdf', 'page': 174}
"
"page_content='175\nfiller of a ""driver"" element, which requires type person, we\ncan write:\n<driver xsi:type=""student"">\n<name>John</name>\n<studentnumber>0792098</studentnumber>\n</driver>\nThetypeattribute - which is part of the XML Schema\ninstance namespace - explicitly declares that the current\nelement is a derivation of the expected element.\n4.2.2. Characterization of the Relation Between OIL and XML\nSchema\nOn the one hand, OIL provides much richer modeling\nprimitives. It distinguish classes and slots, and class (or\nslot) definitions can be used to derive the hierarchy (and its\naccording inheritance). On the other hand, XML Schema provides\nricher modeling primitives concerning the variety of built-in\ndatatypes and the grammar for structuring the content of\nelements. The latter is not of importance when building adomain model but important when defining the structure of\ndocuments. Therefore, models in OIL can be viewed as a high\nlevel description of a domain that is further refined when\naiming at a document structure model.\nThe relation between ontology languages and XML Schema can\nbe compared to the relation between the\nEntity Relationship\nmodel (ER model) and the relational model8. We realize that\nthis analogy is only partially correct, because ER is a model' metadata={'source': 'Semantic_Web.pdf', 'page': 175}
"
"page_content='176\nfor analysis, whereas OIL is a language for design.\nNevertheless, the metaphor illustrates the relation nicely.The Entity Relationship model provides a modeling framework\nfor modeling information sources required for an application,\nand the relational model provides an implementation oriented\ndescription of databases. The former provides entities (with\nattributes) and relationships and the latter only provides\nrelations. In [Elmasri & Navathe, 2000], Elmasri and Navathe\nprovides a procedure that translates models formulated in the\nEntity Relationship model into the relation model. During\nsystem development you start with a high-level ER model. Thenyou transform this model into a more implementation oriented\nrelational model. Concepts and relationships are both\nexpressed as relations. A similar procedure can be used when\ntransforming OIL specifications into XML Schema definitions.\nWe will illustrate this procedure in Section 1.\nFigure 4.4 shows the overall picture of the relation\nbetween ER and the relational model on the one hand and OILand XML Schema on the other.\nThe benefit of the procedure that we suggest is that a\ndocument schema is created that is founded in a domain\nontology. This schema in its turn can be used to prescribe or\nvalidate document markup. Finally, this gives us a well-\nfounded semantic annotation of actual data. This has two main\nadvantages:' metadata={'source': 'Semantic_Web.pdf', 'page': 176}
"
"page_content='177\n•it provides a way to represent instance data of an ontology\nin plain XML;\n•an ontology can be used as a conceptual layer on top of a\nset of structured (XML) documents, because the markup of\nactual XML documents is founded in an ontology.\nWe want to stress that this relation that we describe here\nis completely different from expressing an ontology in some\nkind of XML format itself, although both approaches may use\nXML Schema documents. In our case, the XML Schema definition\nis a ""simplified"" version of the ontology, whereas in theother case, the XML Schema definition prescribes how an\nontology should be encoded in XML. The latter approach can be\nfound in [Horrocks et al., 2000], where an XML Schema\ndefinition is provided to write down an ontology in a plain\nXML document. In this chapter, we propose to produce a schema\nthat captures the underlying semantics of an ontology, which\ncan be used for representing instances of an ontology in XML.\n5. RDF Schema\nWe will now discuss the main features RDF Schema (or RDFS\nfor short) and show how RDF Schema relates to ontology\nlanguages. We will first describing RDF itself, which is the\nbasis of RDF Schema, and then RDF Schema.' metadata={'source': 'Semantic_Web.pdf', 'page': 177}
"
"page_content='178\n5.1.RDFandRDFSchema\n5.1.1. Introduction to RDF\nA prerequisite for the Semantic Web is machine-processable\nsemantics of the information. The Resource Description\nFramework (RDF) [Lassila & Swick, 1999] is a foundation for\nprocessing metadata; it provides in-teroperability betweenapplications that exchange machine-understandable information\non the Web. Basically, RDF defines a data model for describing\nmachine processable semantics of data. The basic data model\nconsists of three object types:\nResources: A resource may be an entire Web page; a part of\na Web page; a whole collection of pages; or an object that is\nnot directly accessible via the Web; e.g. a printed book.\nResources are always named by URIs.\n•Properties: A property is a specific aspect, characteristic,\nattribute, or relation used to describe a resource.\n•Statements: A specific resource together with a named\nproperty plus the value of that propertyfor that resource is\nan RDF statement.\nThese three individual parts of a statement are called,\nrespectively, the subject, thepredicate, and theobject. In a\nnutshell, RDF defines object-property-value-triples as basic\nmodeling primitives and introduces a standard syntax for them.\nAn RDF document will define properties in terms of the\nresources to which they apply. For example:' metadata={'source': 'Semantic_Web.pdf', 'page': 178}
"
"page_content='179\n<rdf:RDF>\n<rdf:Description about=""http://www.w3.org"">\n<Publisher>World Wide Web Consortium </Publisher>\n</rdf:Description>\n</rdf:RDF>\nstates that http://www.w3.org (the subject) has as\npublisher (the predicate) the W3C (the object). Since both the\nsubject and the object of a statement can be resources, these\nstatements can be linked in a chain:\n<rdf:RDF>\n<rdf:Description about=""http://www.w3.org/Home/Lassila"">\n<Creator rdf:resource=http://www.w3.org/staffId/85740""/>\n</rdf:Description>\n<rdf:Description about=""http://www.w3.org/staffId/85740"">\n<Email>lassila@w3.org</v:Email>\n</rdf:Description>\n</rdf:RDF>\nstates that http://www.w3.org/Home/Lassila (the subject)\nis created by staff member no. 85740 (the object). In the next\nstatement, this same resource (staff member 85740) plays the\nrole of subject to state that his email address is\nlassila@w3.org. Finally, RDF statements are also resources, so\nthat statements can be applied recursively to statements,\nallowing their nesting. All this leads to the underlying\ndatamodel being a labelled hyper-graph, with each statement\nbeing a predicate-labelled link between object and subject.' metadata={'source': 'Semantic_Web.pdf', 'page': 179}
"
"page_content='180\nThe graph is a hyper-graph since each node can itself again\ncontain an entire graph.\n5.1.2. Introduction to RDF Schema\nThe modeling primitives offered by RDF are very basic.\nTherefore, the RDF Schema specification [Brickley & Guha,\n2000] defines further modeling primitives in RDF. That is, RDF\nSchema extends (or: enriches) RDF by giving an externally\nspecified semantics to specific resources. e.g., to\nrdfs:subclassOf, to rdfs:Class etc. It is only because of this\nexternal semantics that RDF Schema is useful. Moreover, this\nsemantics cannot be captured in RDF - if it could then therewould be no need for RDFS.\nFigure 4.5 pictures the subclass-of hierarchy of RDFS\naccording to [Brickley and Guha, 2000]. The ‘rdf’ prefix\nrefers to the RDF name space (i.e., primitives with this\nprefix are already defined in RDF) and ‘rdfs’ refers to new\nprimitives defined by RDFS. Note that RDFS uses a non-standard\nobject-meta model: the properties rdfs:subClassOf, rdf:type,rdfs:domain and rdfs:range are used both as primitive\nconstructs in the definition of the RDF schema specification\nand as specific instances of RDF properties. This dual role\nmakes it possible to view e.g. rdfs:subClassOf as an RDF\nproperty just like other predefined or newly introduced RDF\nproperties, but introduces a self referentiality into the RDF\nschema definition, which makes it rather unique when compared\nto conventional model and meta modeling approaches, and makes' metadata={'source': 'Semantic_Web.pdf', 'page': 180}
"
"page_content='181\nthe RDF schema specification very difficult to read and to\nformalize, cf. [Nejdl et al., 2000].\n5.1.3. The modeling primitives of RDF Schema\nIn this section, we will discuss the main classes,\nproperties, and constraints in RDFS.\n•Core classes are rdfs:Resource,rdf:Property 3, and\nrdfs:Class. Everything that is described by RDF expressions\nis viewed to be an instance of the class rdfs:Resource. The\nclass rdf:Property is the class of all properties used to\ncharacterize instances of rdfs:Resource, i.e., each slot /\nrelation is an instance of rdf:Property. Finally,rdfs:Class\nis used to define concepts in RDFS, i.e., each concept mustbe an instance of\nrdfs:Class.\n•Core properties are rdf:type,rdfs:subClassOf, and\nrdfs:subPropertyOf . The rdf:type relation models instance-of\nrelationships between resources and classes. A resource may\nbe an instance of more than one class. The rdfs:subClassOf 4\nrelation models the subsumption hierarchy between classes\nand is supposed to be transitive. Again, a class may be\nsubclass of several other classes, however, a class can\nneither be a subclass of its own nor a subclass of its own\nsub-classes, i.e., the inheritance graph is cycle-free. The\nrdfs:subPropertyOf relation models the subsumption hierarchy\nbetween properties. If some property P2is a\nrdfs:subPropertyOf another property P1, and if a resource R' metadata={'source': 'Semantic_Web.pdf', 'page': 181}
"
"page_content='182\nhas aP2property with a value V, this implies that the\nresourceRalso has aP1property with value V. Again, the\ninheritance graph is supposed to be cycle-free.\nFigure 4.5 The subclass-hierarchy of RDF Schema.\n•Core constraints are rdfs:ConstraintResource ,\nrdfs:ConstraintProperty ,rdfs:range, andrdfs:domain.\nrdfs:ConstraintResource defines the class of all\nconstraints.rdfs:ConstraintProperty is a subset of\nrdfs:ConstraintResource andrdf:Propertycovering all\nproperties that are used to define con-straints. At the\nmoment, it has two instances: rdfs:rangeandrdfs:domain\nthat are used to restrict range and domain of properties. Itis not permitted to express two or more range constraints on\na property. For domains this is not enforced and isinterpreted as the union of the domains.\n5.2.TheRelationBetweenOILandRDFSchema\nRDF Schema and ontology languages aim to a great extent at\nthe same goals. Both provide a kind of domain theory and a' metadata={'source': 'Semantic_Web.pdf', 'page': 182}
"
"page_content='183\nvocabulary that can be used in the information exchange.\nHowever, there are some differences. We will now investigatethose differences, by comparing OIL with RDF Schema. After\nthat, we will further detail on their relation.\n5.2.1. Comparing OIL and RDF Schema\nThe most important similarities and differences between\nOIL and RDF Schema are the following:\nMain modelling primitives. The main modelling primitives\nof OIL and RDF Schema are the same. OIL uses concepts and\nslots, RDF Schema calls them classes and properties. In both\nlanguages, it is possible to form hierarchies of classes, bythe subclass-of relation, and hierarchies of properties, by\nthe subproperty-of relation. However, in contrast to OIL, it\nis forbidden to form cyclic inheritance relations in RDF\nSchema.\nLocal property restrictions. OIL allows the specification\nof restrictions on properties on a per class basis. We will\ncall this local property restrictions. For example, thisallows to define that the fillers of a slot called\n""has_parent"" in a class ""dog"" should be of type ""dog"", too,\nwithout requiring that the range of ""has_parent"" is ""dog"". In\nRDFS, in contrast, it is only possible to specifiy domain and\nrange restrictions on properties on a global level.\nAdditional modelling primives. OIL has a number of\nmodeling primitives that does not exist in RDFS: This allows\nto specify a domain to more detail. Additional constructs are:' metadata={'source': 'Semantic_Web.pdf', 'page': 183}
"
"page_content='184\nCardinality.To specify the number of fillers of a slot,\nOIL provides a ""min-cardinality"", ""max-cardinality"" and(exact) ""cardinality"" constructs.\nConcrete types. RDFS has only one datatype, which is\ncalled ""Literal"". OIL distinguishes between ""string"" and\n""integer"", and those datatypes can be used to specify\nconstraints. For example, ""young_persons"" have an age less\nthan ""25"".\nIntensional class definitions. Class-membership in OIL can\nbe derived from the characteristics of their properties. This\nenables the intensional definitions of classes. For example,not only do ""young_persons"" have an age less than ""25"", but\nalso holds that all persons with an age less than ""25"" are\n""young_persons"". This can be specified in OIL with the\n""defined class"" construct.\nCharacteristics of properties. Specific characteristics\ncan be given to properties in OIL. For example, properties can\nbe defined as ""transitive"" or ""functional"".\nBoolean class expressions. In OIL, one can constructs new\nanonymous classes as boolean combinations of other classes.\nOIL provides the operators ""and"", ""or"" and ""not"" to this end.\nAxioms.OIL provides axioms, like ""disjointness"" and\n""covering"". RDF Schema not.\nFormal semantics. A final - and important - difference\nbetween OIL and RDFS is the formal semantics. The semantics of\nRDF Schema are only defined in textual descriptions. On the' metadata={'source': 'Semantic_Web.pdf', 'page': 184}
"
"page_content='185\ncontrary, OIL has an exact mapping to an expressive\nDescription Logic. This gives precise semantics to theconstructs, which allows for reasoning on the ontologies.\nReasoning on RDF Schemas is very difficult, because of the\nunclear interpretation of some constructs.\n5.2.2. Relating RDF Schema and Ontology Languages\nWe have seen that the main difference between OIL - or\nother ontology languages - and RDF Schema is not their\npurpose, but the expressiveness and formal semantics.\nTherefore, although the syntaxes differ, their relation can be\ncharacterized as an extension relation. OIL adds formalsematics and some additional primitives to that what is\nprovided in RDF Schema.\nNow, because the aim of this chapter is to investigate how\nschema languages can be used to apply ontology-based semantics\nto online resources, we have to make the additional\nexpressiveness of ontology languages available to RDF Schema.\nThis can be done in the same way as RDF Schema extends RDF!RDF Schema extends (or: enriches) RDF by giving an externally\nspecified semantics to specific resources. e.g., to\nrdfs:subclassOf, to\nrdfs:Classetc. OIL can be used to further\nextend (or: enrich) RDF Schema by defining a semantics for\nspecific resources. This allows the extension to capture\nmeaning that cannot be captured in RDF Schema, and this is\nwhere the added value is. Furthermore, if such an extension to\nRDF Schema is carefully designed, a partial interpretation' metadata={'source': 'Semantic_Web.pdf', 'page': 185}
"
"page_content='186\nwithout the additional semantics from the ontology language\nwill still yield a valid RDF Schema interpretation.\nGeographical_Location\nCountry <=Geographical_Location\nCity <= Geographical_LocationAreaComparison\nKilometerLength-OR-MilesLength\nKilometerLength <= KilometerLength-OR-MilesLength\nMilesLength <= KilometerLength-OR-MilesLength\n[,,,]coastline\nneighbor_country\nFigure 4.6 Step 1: materializing the hierarchy.\nIn Section 2, we will show how such an extension to RDF\nSchema can be created. We express OIL in RDF Schema, thus\nenriching it with the required additional expressivity and thesemantics of this language. The OIL extension of RDFS has been\ncarefully engineered so that a partial interpretation of OIL\nmeta-data is still correct under the intended semantics of\nRDFS: simply ignoring the OIL specific portions of an OIL\ndocument yields a correct RDF(S) document whose intended RDFS\nsemantics is precisely a subset of the semantics of the full\nOIL statements. In this way, the approach ensures maximal\nsharing of meta-data on the Web: even partial interpretation\nof meta-data by less semantically aware processors will yielda correct partial interpretation of the meta-data.\nThe result is an RDF Schema definition of OIL primitives,\nwhich allows one to express any OIL ontology in RDF Schema\nsyntax. This enables the added benefits of OIL, such as\nreasoning support and formal semantics, to be used on the Web,' metadata={'source': 'Semantic_Web.pdf', 'page': 186}
"
"page_content='187\nwhile retaining maximal backward compatability with ’pure’\nRDF.\n6. Applying ontologies to online resources\nIn the previous sections we have defined the relation\nbetween ontologies and XML Schema on the one hand, and\nontologies and RDF Schema on the other. We will now show how\nthis relations can be used in practice to apply the benefits\nof ontologies to online resources.\n6.1.Translating an ontology onto an XML Schema\nprescription\nLike (Extended) ER models have to be translated into\ndatabase schemas to use them in an actual DB system, an OIL\nontology can be translated into an XML schema document to use\nit in an XML data exchange environment. We will provide a\ntranslation procedure from an ontology to a specific XMLschema\ndocument that is very close in spirit to that provided in[Elmasri & Navathe, 2000] for ER models..ER models provide\nentities, attributes, and relationships as their primary\nmodeling primitives. This closely corresponds to OIL where we\nhave concepts (i.e., entities), slot definitions for concepts\n(i.e., attributes), and global slot definitions (i.e.,\nrelationships). Extended ER models also incorporate the notion\nof inheritance, however, require their explicit definition. On\nthe other hand, the relation model only provides relations and' metadata={'source': 'Semantic_Web.pdf', 'page': 187}
"
"page_content='188\nthe arguments (called attributes) of relations. Therefore, a\ntranslation step is required. A similar procedure thattranslates a high-level conceptual description of a domain\ninto a specific document definition via XML Schema is decribed\nbelow.\nWe assume a definition of an ontology in OIL. An example\nis provided in Figure 4.1. We will now describe its stepwise\ntranslation into an XML schema using the stepwise translation\nof this example as illustration.\nFirst, materialize the hierarchy . Give all complex class\nexpressions that are used in subclass definitions and slotconstraints names. Then, materialize the hierarchy, i.e., make\nall class- and slot-subsumptions explicit. This is necessary\nbecause XML Schema lacks any notion of implicit hierarchy and\nit is possible because subsumption is decidable in OIL.\nActually, the FaCT system can be used for this purpose (via\nits CORBA interface if desired [Bechhofer et al., 1999])\n9.I n\nthis step, make also explicit which slots can be applied to aclass, exploiting the domain and range restrictions of the\nglobal slots definitions. Figure 4.6 provides the materialized\nhierarchy of our running example. Note that\nKilometerLength-\nOR-MilesLength is a new concept, constructed from a complex\nclass expression. In our small example, there are no new class\nsubsumptions derived, because all of them are already stated\nexplicitly. See [Horrocks et al., 2000] or [Fensel et al.,' metadata={'source': 'Semantic_Web.pdf', 'page': 188}
"
"page_content='189\n2000] for a more complex example which illustrates the\nderivation of implicit subsumptions.\nPart oftheresultof step2:typedefinitionsforslots:\n<xsd:complexType name=""capitalType"">\n<xsd:sequence>\n<xsd:elementref=""City""/>\n</xsd:sequence>\n</xsd:complexType>\n<xsd:complexType name=""coastlineType"">\n<xsd:sequence>\n<xsd:element ref=""KilometerLength-OR-MilesLength""/>\n</xsd:sequence>\n</xsd:complexType>\nPart of theresult of step 3: type definitionsfor classes:\n<xsd:complexType name=""CountryType"">\n<xsd:complexContent>\n<xsd:extension base=""GeographicalLocationType"">\n<xsd:sequence>\n<xsd:elementname=""capital""type=""capitalType"" minOccurs=""1""maxOccurs=""1""/>\n<xsd:element name=""has-boundary"" type=""has_boundaryType""minOccurs=""0""maxOc-\ncurs=""unbounded""/>\n<xsd:element name=""relative_area""type=""relative_areaType""minOccurs=""0""maxOc-\ncurs=""unbounded""/>\n</xsd:sequence>\n</xsd:extension>\n</xsd:complexContent>\n</xsd:complexType><xsd:complexType name=""AeraComparisonType"">\n<xsd:sequence>\n<xsd:element name=""proportion""type=""string""minOccurs=""0""maxOccurs=""unbounded""/>\n<xsd:element name=""compared_to""minOccurs=""0""maxOccurs=""unbounded"">\n<xsd:complexType>\n<xsd:complexContent>\n<xsd:extension base=""compared_toType"">\n<xsd:sequence>\n<xsd:element ref=""Country""/>\n</xsd:sequence>\n</xsd:extension>\n</xsd:complexContent>\n</xsd:complexType>\n</xsd:element>\n</xsd:sequence>\n</xsd:complexType>\nPart of theresult of step 4: element definitionsfor slots andclasses:<xsd:element name=""capital""type=""capitalType""/>\n<xsd:element name=""GeographicalLocation""type=""GeographicalLocationType""/>\n<xsd:element name=""Country""type=""CountryType""/>\n<xsd:element name=""City""type=""CityType""/><xsd:element name=""AeraComparison""type=""AeraComparisonType""/>\nFigure 4.7 Examples of the result of step 2 and 3' metadata={'source': 'Semantic_Web.pdf', 'page': 189}
"
"page_content='190\nSecond, create a complexType definition for each slot\ndefinition in OIL . Add a reference to the (still to be\ndefined) element definition for the rangecomponent in the OIL\nslot-definition Figure 4.7 begins with some example slot-\ndefinitions. If a slot has more than one range, an\nintermediate element must be used that is the conjunction of\nall the range components. The place of this intermediate\nelement in the class hierarchy should be derived in the first\nstep.\nThird, also create a complexType definition for each class\ndefinition in OIL. Add the names of the slots that can be\napplied to the classes as elements in the type definition. The\nfacets on the slot-constraints are translated in the following\nway:has-valuefacets give a minOccurs=""1""attribute in the\nelement-element,value-typefacets giveminOccurs=""0""andmin-\ncardinality, max-cardinality, andcardinalitygives\nminOccurs=""value"", maxOccurs=""value"" or both as attributes\nrespectively. If a slot has the property functionalit will\nget the attribute maxOccurs=""1"". See for example the\nattributes of ""capital"" in ""CountryType"" in Figure 4.7: the\nvalue of ""minOccurs"" is 1 because of the has-value constraint,\nand the value of ""maxOccurs"" is 1 because of the ""functional""\nproperty.\nFor the slots that appear in explict slot-constraints\n(i.e., those that are actually described in a class-\ndefinition, not those that can be applied to a class according' metadata={'source': 'Semantic_Web.pdf', 'page': 190}
"
"page_content='191\nto their domain), an anonymous type is defined, which is\nderived from the appropriate slot-type defined in step two.The extension of the base type consist of the reference to the\nclass which must be the filler of the slot.\n<?xml version=""1.0"" encoding=""UTF-8""?>\n<Country xmlns=""worldfactbook.xsd""\nxmlns:xsi=""http://www.w3.org/1999/XMLSchema/instance"">\n<name>The Netherlands</name>\n<capital><City><name>Amsterdam</name></City></capital><relative_area>\n<AeraComparison>\n<proportion>slightlyless thantwice the size of</proportion>\n<compared_to><Country><name>NewJersey</name></Country></compared_to>\n</AeraComparison>\n</relative_area>\n<has_boundary>\n<LandBoundary>\n<neighbor_country><Country><name>Belgium</name></Country></neighbor_country>\n<length xsi:type=""KilometerLength""><value>450</value><unit>km</unit></length>\n</LandBoundary>\n<LandBoundary>\n<neighbor_country><Country><name>Germany</name></Country></neighbor_country>\n<length xsi:type=""KilometerLength""><value>577</value><unit>km</unit></length>\n</LandBoundary>\n</has_boundary>\n<coastline><KilometerLength><value>451</value><unit>km</unit></KilometerLength></co\nastline>\n</Country>\nFigure 4.8 Example of XML document conforming the\ngenerated schema.\nFor slots that can be applied to the classes (according to\ntheir domain) but that are not present in explict slot-\nconstraints, the type of the element is directly the slot-type\nfrom step 2, with the attributes minOccurs=""0"" and\nmaxOccurs=""unbounded"" . The second part of Figure 4.7 gives an\nexample.' metadata={'source': 'Semantic_Web.pdf', 'page': 191}
"
"page_content='192\nFourth, create an element definition for each slot and\nclass.Each slot and each class definition is translated into\nan element definition in the XML schema. The type of the\nelements will obviously be the complexType definitions which\nare created in the second and third step. See also Figure 4.7.\nFifth, define a grammar for each entity, associate basic\ndatatypes with built-in datatypes if desired, add lexical\nconstraints on datatypes if desired. This step adds an\nadditional level of expressiveness that is not present in OIL.\nIt is purely concerned with document structure and appearance.\nSixth, replace the module concept of OIL with the\nnamespace and inclusion concept of XML Schema. This step is\nstraightforward because the concepts only differ\nsyntactically.\n6.1.1. Using the Schema for Document Markup\nThe resulting schema can be used to create XML instance\ndocuments. The structure of these documents must conform to\nthe schema. As an example, we show in Figure 4.8 an XML\ndocument which could constitute a wepage in the World Fact\nBook. Together with a appropriate stylesheet, this document\ncan be used to produce a page as is shown in Figure 4.9. Notethat we now have a webpage which looks similar to the original\nHTML version, but which has a markup that is well-founded on\nan ontology.' metadata={'source': 'Semantic_Web.pdf', 'page': 192}
"
"page_content='193\nFigure 4.9 An possible view on the data from Figure\n4.8.\n6.1.2. Problems In the Translation Procedure\nIn the following, we will discuss some of the points that\narose when investigating the relation between ontologies and\nXML schemas.\nFirst, multiple inheritance forms a problem in the\ntranslation procedure. As we already discussed in Section\n4.2.1, in XML Schema there is no explicit way to define\nmultiple inheritance. It is not possible to simulate multiple\ninheritance by inheriting from different superclasses in\nseveral type definitions, because conform the XML Schema\nspecification it is not allowed to have more than one\ndefinition for a type. Because of this lack of multiple' metadata={'source': 'Semantic_Web.pdf', 'page': 193}
"
"page_content='194\ninheritance, XML Schema is not well suited as an ontology\nlanguage. This is not meant as a criticism, because XML Schemais not designed for ontological modeling, it is designed for\ndescribing valid structures of documents.\nSecond, the question may arise as to whether the\ntranslation process can be automated and whether it is\nreversible. Concerning the first question, we can state that\nmost of the steps can be completely automatic. The fifth step\ncan be partially automated, for example by using sequence as\nstandard grammar for applying slots to classes. Final tuning\nvia human interference may be necessary. The reverse directionis possible but more difficult, a high degree of\nautomatization should be achievable, however.\n6.2.Defining an Ontology Language as Extension\ntoRDFSchema\nNow we have shown a mechanims to use XML Schema for\napplying ontologies to online resources, we will now discuss a\nsecond method. We will show how OIL ontologies can be written\ndown in RDF, while trying to make use of existing RDFSconstructs as much as possible, but where necessary extending\nRDFS with additional constructs.\n6.2.1. Class Definitions\nIn RDFS, classes are simply declared by giving them a name\n(with the ID attribute). In OIL, a class definition links a' metadata={'source': 'Semantic_Web.pdf', 'page': 194}
"
"page_content='195\nclass with a name, a documentation, a type, its superclasses,\nand the attributes defined for it. We need to extend theschema language to capture all the knowledge of an OIL\nontology. To illustrate the use of these extensions, we will\nwalk through them by means of some example OIL class\ndefinitions that need to be represented in RDFS syntax:\nclass-defdefined herbivore\nsubclass-ofanimal\nslot-constraint eats\nvalue-type(plant or (slot-constraint is-part-of plant ))\nclass-defelephant\nsubclass-ofherbivore mammal\nslot-constraint eats\nvalue-typeplan\nslot-constraint colour\nhas-filler""grey""\nThe first defines a class ""herbivore"", a subclass of\nanimal, whose instances eat plants or parts of plants. Thesecond defines a class ""elephant"", which is a subclass of both\nherbivore and mammal.\nOIL distinguises between primitive classes and defined\nclasses. To express the type of a class in the RDFS syntax, we\nchose to introduce two extra classes as extension to RDFS,\nnamed ""oil:PrimitiveClass"" and ""oil:DefinedClass"". In a\nparticular class definition, we can use one of these meta-\nclasses to express the type, e.g.:' metadata={'source': 'Semantic_Web.pdf', 'page': 195}
"
"page_content='196\n<oil:DefinedClass rdf:ID=""herbivore""> </oil:DefinedClass>\nThis way of making an actual class an instance of either\nDefinedClass or PrimitiveClass introduces a nice object-meta\ndistinction between the OIL RDFS schema and the actual\nontology: using rdf:type you can consider the class\n""herbivore"" to be an instance of DefinedClass. In OIL in\ngeneral, if it is not explicitly stated that a class is\ndefined, the class is assumed to be primitive.\nNext, we have to translate the subclass-of statement to\nRDFS. This also can be done in a straightforward manner,\nsimply re-using existing RDFS expressiveness:\n<oil:DefinedClass rdf:ID=""herbivore"">\n<rdfs:subClassOf rdf:resource=""#animal""/>\n</oil:DefinedClass>\nTo define a class as a subclass of a class expression\n(which is not possible in RDFS), we introduced the additional\n""oil:subClassOf property"" in the RDFS extension.\nWe still need to serialize the slot constraint on the\nclass ""herbivore"". In RDFS, there is no mechanism for\nrestricting the attributes of a class on a local level. This\nis due to the property-centric nature of the RDF data model:\nproperties are defined globally, with their domain description\ncoupling them to the relevant classes. To overcome this\nproblem, we introduce the property\n""oil:hasPropertyRestriction "" in the RDFS extension, which is\nanrdf:typeof rdfs:ConstraintProperty (analogous to' metadata={'source': 'Semantic_Web.pdf', 'page': 196}
"
"page_content='197\nrdfs:domainandrdfs:range). Here we take full advantage of\nthe intended extensibility of RDFS. We also introduceoil:PropertyRestriction as a place-holder class for specific\nclasses of slot constraints, such as has-value, value-type,\ncardinality and so on. For the three cardinality constraints,\nan extra property ""number"" is introduced, which is used to\nassign a concrete value to the cardinality constraints. In our\nexample ontology, the first part of the slot constraint would\nbe serialized using the primitives introduced above as\nfollows:\n<oil:DefinedClass rdf:ID=""herbivore"">\n<rdfs:subClassOf rdf:resource=""#animal""/>\n<oil:hasPropertyRestriction>\n<oil:ValueType>\n<oil:onProperty rdf:resource=""#eats""/>\n<oil:toClass> </oil:toClass>\n</oil:ValueType>\n</oil:hasPropertyRestriction>\n</oil:DefinedClass>\nThe slot constraint has not been completely translated\nyet: the toClass element is not yet filled. Here we come\nacross another feature of OIL that is not available in RDFS:\nthe class expression. A class expression is an expression that\nevaluates to a class definition. Such an expression can be a\nsimple class name, or it can be a boolean expression of\nclasses and/or slot constraints. In the example, we have a' metadata={'source': 'Semantic_Web.pdf', 'page': 197}
"
"page_content='198\nboolean \'or\' expression that evaluates to the class of all\nthings that are plants or that are parts of plant. Weintroduce\noil:ClassExpression andoil:BooleanExpression to\nhold the operators ""and"", ""or"" and ""not"" as subclasses.\nAlso, since a single class is a essentially a simple kind\nof class-expression, rdfs:Classitself should be a subclass of\noil:ClassExpression . The ""and"", ""or"" and ""not"" operators are\nconnected to operands using the newly introduced\n""oil:hasOperand"" property. This property again has no direct\nequivalent in OIL primitive terms, but is a helper to connect\ntwo class-expressions, because in the RDF data model one canonly relate two classes by means of a Property.\nWe can now fill the toClass part of our example as\nfollows:\n<oil:toClass>\n<oil:Or>\n<oil:hasOperand rdf:resource=""#plant""/>\n<oil:hasOperand>\n<HasValue>\n<oil:onProperty rdf:resource=""#is-part-of""/>\n<oil:toClass rdf:resource=""#plant""/>\n</HasValue>\n</oil:hasOperand>\n</oil:Or>\n</oil:toClass>' metadata={'source': 'Semantic_Web.pdf', 'page': 198}
"
"page_content='199\n6.2.2.Slot Definitions\nBoth OIL and RDFS allow slots as first-class citizens of\nan ontology. Therefore, slot definitions in OIL map nicely\nonto property definitions in RDFS. Also the ""subslot-of"",\n""domain"", and ""range"" properties have almost direct\nequivalents in RDFS. However, there are a few subtle\ndifferences between domain and range restrictions in OIL and\ntheir equivalents in RDFS. First, the specification of OIL is\nvery clear on multiple domain and range restriction: these are\nallowed, and the semantic is the intersection of the\nindividual statements (conjunctive semantics). In RDFS,multiple domain statements are allowed, but their\ninterpretation is the union of the classes in the statements\n(disjunctive semantics).\nSecondly, in contrast to RDFS, OIL not only allows classes\nas range and domain of properties, but also class-expressions,\nand - for range - concrete-type expressions. It is not\npossible to reuse rdfs:range and rdfs:domain for thesesophisticated expressions, because of the conjunctive\nsemantics of multiple range statements: we cannot extend the\nrange of rdfs:range or rdfs:domain, we can only restrict it.\nTherefore, we introduced two new ConstraintProperties\noil:domainandoil:range. They have the same domain as their\nRDFS equivalent (i.e., rdf:Property), but have a broader\nrange. For domain, class expressions are valid fillers, for' metadata={'source': 'Semantic_Web.pdf', 'page': 199}
"
"page_content='200\nrange both class expressions and concrete type expressions may\nbe used.\nWhen translating a slot definition, rdfs:domain and\nrdfs:range should be used for simple (one class) domain and\nrange restrictions, while for more complicated statements the\noil:range or oil:domain properties should be used. For\nexample:\nslot-defage\ndomainanimal\nrange(range0 120)\nis in the RDFS representation:<rdf:Property rdf:ID=""age"">\n<rdfs:domain rdf:resource=""#elephant""/>\n<oil:range>\n<oil:Range>\n<oil:integerValue>0</oil:integerValue>\n<oil:integerValue>120</oil:integerValue>\n</oil:Range>\n</oil:range>\n</rdf:Property>\nHowever, global slot-definitions in OIL allow\nspecification of more aspects of a slot than property\ndefinitions in RDFS do. Besides the domain and range\nrestrictions, OIL slots can also have an ""inverse"" attribute\nand qualities like ""transitive"" and ""symmetric"". We therefore\nadd a property ""inverseRelationOf"" with ""rdf:Property"" as' metadata={'source': 'Semantic_Web.pdf', 'page': 200}
"
"page_content='201\ndomain and range. We also added the classes\n""TransitiveProperty"", ""FunctionalProperty"" and""SymmetricProperty"" to reflect the different qualities of a\nslot. In the RDFS-serialization of OIL, the rdf:type property\ncan be used to add a quality to a property. For example, the\nOIL definition of:\nslot-defhas-part\ndomainis-part-of\nrange(range 0 120)\nis in RDFS:\n<oil:TransitiveProperty rdf:ID=""has-part""><oil:inverseRelationOf rdf:resource=""#is-part-of""/>\n</oil:TransitiveProperty>\nThis way of translating the qualitities of properties\nfeatures the same nice object-meta distinction between the OIL\nRDFS schema and the actual ontology as the translation of the\n""type"" of a class (see section 4.2). In an actual ontology,\nthe property ""has-part"" can be considered as an instance of aTransitiveProperty. Note that it is allowed to make a property\nan instance of more than one class, and thus giving it\nmultiple qualities.\n6.2.3. Representing Axioms\nAxioms in OIL are factual statements about the classes in\nthe ontology. They correspond to n-ary relations between class\nexpressions, where n is 2 or greater. RDF only knows binary\nrelations (properties). Therefore, we cannot simply map OIL' metadata={'source': 'Semantic_Web.pdf', 'page': 201}
"
"page_content='202\naxioms to RDF properties. Instead, we chose to model axioms as\nclasses, with helper properties connecting them to the classexpressions involved in the relation. Since axioms can be\nconsidered objects, this is a very natural approach towards\nmodeling them in RDF (see also [Staab & Madche, 2000],[Staab\net al., 2000]). Observe also that binary relations\n(properties) are modeled as objects in RDFS as well (i.e., any\nproperty is an instance of the class rdf:Property). We simply\nintroduce a new primitive alongside rdf:Property for relations\nwith higher arity.\nWe introduce a placeholder class ""oil:Axiom"", and model\nspecific types of axioms as subclasses and likewise for\nEquivalent. We also introduce a property to connect the axiom\nobject with the class expressions it relates to each other:\noil:hasObject is a property connecting an axiom with an object\nclass expression. For example, to serialize the axiom that\nherbivores, omnivores and carnivores are (pairwise) disjoint:\n<oil:Disjoint><oil:hasObject rdf:resource=""#herbivore""/>\n<oil:hasObject rdf:resource=""#carnivore""/>\n<oil:hasObject rdf:resource=""#omnivore""/>\n</oil:Disjoint>\nFor modeling covering axioms, we introduce a seperate\nplaceholder class, ""oil:Covering"", which is a subclass of\n""oil:Axiom"". The specific types of coverings available are\nmodeled as subclasses of ""oil:Covering"" again. Furthermore,' metadata={'source': 'Semantic_Web.pdf', 'page': 202}
"
"page_content='203\ntwo additional properties are introduced: ""oil:hasSubject"", to\nconnect a covering axiom with its subject, and""oil:isCoveredBy"", which is a subproperty of ""oil:hasObject"",\nto connect a covering axiom with the classes that cover the\nsubject. For example, we serialize the axiom that the class\nanimal is covered by carnivore, herbivore, omnivore, and\nmammal (i.e. every instance of animal is also an instance of\nat least one of the other classes) as follows:\n<oil:Cover>\n<oil:hasSubject rdf:resource=""#animal""/>\n<oil:isCoveredBy rdf:resource=""#carnivore""/><oil:isCoveredBy rdf:resource=""#herbivore""/>\n<oil:isCoveredBy rdf:resource=""#omnivore""/>\n<oil:isCoveredBy rdf:resource=""#mammal""/>\n</oil:Cover>\nFigure 4.10 The is-a hierarchy of RDFS primitives (in\nbold) with the OIL extenstions.' metadata={'source': 'Semantic_Web.pdf', 'page': 203}
"
"page_content='204\n6.2.4. Compatability With RDF Schema\nFigure 4.10 shows the resulting is-a hierarchy of the OIL\nconstructs that we introduced to define OIL ontologies in RDFS\nrepresentation. The hierarchy nicely illustrates that the new\nOIL langauge representation includes RDF Schema as a\nsublanguage. As a result, all RDF Schema expressions are\nactually also valid and meaningful OIL expression. This is\ncalled backward compatibility. Of course, since OIL is an\nextension of RDF Schema, not all OIL definitions are\ninterpretable as RDF Schema definitions. However, the way in\nwhich this extension is defined ensures that all OILdefinitions are still valid RDF Schema expressions, although\nonly partly meaningful. The partial interpretation can be\nachieved by simply ignoring any statement not from the rdf or\nrdfs namespaces (in our example those from the oil namespace).\nFor example, in the above definition of ""herbivore"", an RDF\nSchema processor will interpret this statement simply as\nstating that herbivores are a subclass of animals, and thatthey some other property that it cannot interpret. This is a\ncorrect albeit partial interpretation of the definition.\nFurthermore, because OIL is built on top of RDF Schema, it\nshares with it the mechanism to represent instance\ninformation.\nTogether, this gives another important compatibility\nresult besides the\nbackward compatibility : even if an ontology\nis written in the richer modeling language (OIL), a processor' metadata={'source': 'Semantic_Web.pdf', 'page': 204}
"
"page_content='205\nfor the simpler ontology language (RDF Schema) can still:\nfully interpret all the instance information of the ontology,and partially interpret the class-structure of the ontology.\nThis can be called\npartial forward compatibility . Such\npartial interpretability of semantically rich meta-data by\nsemantically poor is a crucial step towards the sharing of\nmeta-data on the Semantic Web. We cannot realistically hope\nthat all of the Semantic Web will be build on a single\nstandard for semantically rich meta-data. The above shows that\nmultiple semantic modeling languages do not have to lead to\nmeta-data that are totally uninterpretable by others. Instead,simpler processors can still pick up as much of the meta-data\nfrom rich processors as they can ""understand"", and safely\nignore the rest in the knowledge that their partial\ninterpretation is still a correct with respect to the original\nintention of the meta-data.\nConclusion\nIn this chapter, we discussed two important schema\nlanguages for the web. We compared these languages with full-\nfledged ontology languages, and described the relation between\nthem. Moreover, we have shown in two procedures how these\nschema languages can be used to apply ontologies to online\nresources.\nWhen comparing the Ontology Inference Layer OIL with the\nproposed XML Schema, our main conclusion is that an ontology' metadata={'source': 'Semantic_Web.pdf', 'page': 205}
"
"page_content='206\nlanguage and XML Schema refer to a different level of\nabstraction. Therefore, OIL and XML Schema each play a role ina different phase in describing the semantics of on-line\ninformation sources. OIL is suitable for domain modeling, XML\nSchema can be used to prescribe how the information in a\ndomain is structured. The comparison also revealed that the\nXML Schema type hierarchy can be used to express some\nconceptual knowledge. Although there are still some questions\nabout the best way to create this type hierarchy, with the\nhelp of some artifices it is possible to capture the central\nis-a relationship of an ontology in an XML Schema definition.\nWe exploited this possibility in a translation procedure\nfrom an OIL ontology to an XML structure prescription, which\nwe provided as an illustration of their relation. As a result\nof the translation procedure, a document schema is created,\nwhich is founded in a domain ontology. The main advantage of\nthis translation is that an ontology can be used as a\nconceptual layer on top of a set of structured (XML)documents, because the markup of actual XML documents is\nfounded in an ontology. Another benefit of this procedure is\nthat it yields an XML Schema that can be used to encode\ninstance data of an ontology in plain XML.\nWe have also compared RDF Schema with OIL. We have\nobserved that there is a big difference in the level of\nexpressiveness. However, we have shown how full-fledged\nontology languages can be applied in the Resource Description' metadata={'source': 'Semantic_Web.pdf', 'page': 206}
"
"page_content='207\nFramework. We did this by representing the modeling primitives\nas defined by OIL in RDF Schema. The OIL extension of RDFS hasbeen carefully engineered so that a partial interpretation of\nOIL meta-data is still correct under the intended semantics of\nRDFS: simply ignoring the OIL specific portions of an OIL\ndocument yields a correct RDF(S) document whose intended RDFS\nsemantics is precisely a subset of the semantics of the full\nOIL statements. In this way, the approach ensures maximal\nsharing of meta-data on the Web: even partial interpretation\nof meta-data by less semantically aware processors will yield\na correct partial interpretation of the meta-data.\nWe can conclude that, despite the similarity in their\nnames, RDF Schema and XML Schema fulfil a different role.\nFirst, XML Schemas, and also DTDs, prescribe the order and\ncombination of tags in an XML document. In contrast, RDF\nSchemas provides information about the interpretation of the\nstatements given in RDF data (i.e., RDF Schema is a simple\ntype system for RDF), but it does not constrain thesyntactical appearance of an RDF description. From another\npoint of view, RDF Schema and XML Schema can be considered as\northogonal to each other: RDF is mainly intended for\ndescribing explicit metadata about webresources as a whole;\nXML Schema gives semantics to the actual markup of a document\n(i.e. the tags and their stucture) and answers the question\nhow the structure of documents is related to conceptual terms.' metadata={'source': 'Semantic_Web.pdf', 'page': 207}
"
"page_content=""208\nThis chapter provided an illustration of how these two\nortogonal mechanisms can be used to apply ontologies to onlineresources. XML Schema and RDF Schema each play a different\nrole in this process. The semantically grounded document\nmarkup that is provided by XML Schema complements the kind of\nsemantic description that is provided by RDF based approaches.\nWe think that both mechanisms are important building stones\nfor the semantic web. Finally, we believe that this way of\ntranslating and extending is generally applicable across other\nontology languages then OIL.\nReferences\n[Bechhofer et al., 1999] S. Bechhofer, I. Horrocks, P. F. Patel-Schneider, and S. Tessaris: A proposal for a\ndescription logic interface. In P. Lambrix, A. Borgida, M. Lenzerini, R. Möller, and P. Patel-Schneider,editors, Proceedingsofthe InternationalWorkshop onDescription Logics(DL'99), pages33-36, 1999.\n[Biron & Malhotra, 2000] P. V. Biron and A. Malhotra: XML Schema Part 2: Datatypes, Candidate\nRecommendation, 24 October 2000. http://www.w3.org/TR/2000/CR-xmlschema-2-20001024/\n[Bray, 1998] Extensible markup language (XML) 1.0 W3C recommendation, 1998.\nhttp://www.w3.org/TR/REC-xml\n[Brickley & Guha, 2000] D. Brickley and R.V. Guha: Resource Description Framework (RDF) Schema\nSpecification 1.0, W3C Candid1ate Recommendation 27 March 2000. http://www.w3.org/TR/2000/CR-\nrdf-schema-20000327.\n[Broekstra et al., 2000] J. Broekstra, M. Klein, D. Fensel, S. Decker, F. van Harmelen and I. Horrocks: Enabling\nknowledge representation on the Web by extending RDF Schema, Proceedings of the 10th World Wide\nWeb conference, May1-5, 2001, HongKong. http://www.cs.vu.nl/~mcaklein/papers/www10/\n[Elmasri & Navathe, 2000] R. Elmasri and S. B. Navathe: Fundamentals of Database Systems, 3rd ed., Addison\nWesley, 2000."" metadata={'source': 'Semantic_Web.pdf', 'page': 208}
"
"page_content='209\n[Fallside, 2000]David C. Fallside:XML-Schema Part0:Primer, Candidate Recommendation, 24 October 2000.\nhttp://www.w3.org/TR/2000/CR-xmlschema-0-20001024/\n[Fensel, 2000] D. Fensel:RelatingOntology Languagesand Web Standards. InJ. Ebertetal.(eds.), Modelle und\nModellierungssprachen in Informatik und Wirtschaftsinformatik, Modellierung 2000, St. Goar, April 5-7,\n2000,FoelbachVerlag, Koblenz, 2000.\n[Fensel, 2001] D. Fensel: Ontologies: Silver Bullet for Knowledge Management and Electronic Commerce,\nSpringer-Verlag, 2001.\n[Fensel et al., 2000] D. Fensel, I. Horrocks, F. Van Harmelen, S. Decker, M. Erdmann, and M. Klein: OIL in a\nNutshell. In, Dieng, R., and Corby, O., eds, Proceedings of EKAW-2000: The 12th International\nConference on Knowledge Engineering and Knowledge Management. Lecture Notes in Computer\nScience, Springer Verlag, October 2000.\n[Guarino & Welty, 2000] N. Guarino and C. Welty: A Formal Ontology of Properties, In, Dieng, R., and Corby,\nO., eds, Proceedings of EKAW-2000: The 12th International Conference on Knowledge Engineering and\nKnowledge Management. Lecture Notesin Computer Science, Springer Verlag, October 2000.\n[Horrockset al., 2000]I. Horrocks, D. Fensel, J. Broekstra, S. Decker, M. Erdmann, C. Goble, F. Van Harmelen,\nM. Klein, S. Staab, and R. Studer: OIL: The Ontology Inference Layer, Technical Report IR-479, Vrije\nUniversiteit Amsterdam, September 2000. http://www.ontoknowledge.com/oil.\n[Lassila & Swick, 1999] O. Lassila and R. R. Swick: Resource Description Framework (RDF): Model and\nSyntaxSpecification, W3CRecommendation, 22 February1999. http://www.w3.org/TR/REC-rdf-syntax/\n[Nejdl et al., 2000] W. Nejdl, M. Wolpers, and C. Capella: The RDF Schema Revisited. In Modelle und\nModellierungssprachen in Informatik und Wirtschaftsinformatik, Modellierung 2000, St. Goar. Foelbach\nVerlag, Koblenz, 2000.\n[Staab et al., 2000] S. Staab, M. Erdmann, A Madche, and S. Decker: An extensible approach for modeling\nontologies in RDF(S). In First Workshop on the Semantic Web at the Fourth European Conference on\nDigital Libraries, Lisbon, Portugal, 2000.\n[Staab & Madche, 2000] S. Staab and A. Madche: Axioms are objects, too - ontology engineering beyond the\nmodeling of concepts and relations. In Benjamins, V., Gomez-Perez, A., and Guarino, N., editors,\nProceedings of the Workshop on Applications of Ontologies and Problem-solving Methods, 14thEuropeanConference on Arti_cialIntelligence ECAI 2000, Berlin, Germany, 2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 209}
"
"page_content='210\n[Thompson et al., 2000] H. S. Thompson, D. Beech, M. Maloney, and N. Mendelsohn: XML Schema Part 1:\nStructures, W3C Candidate Recommendation, 24 October 2000.http://www.w3.org/TR/2000/CR-xmlschema-1-20001024/.\n[Walsh, 1999] N. Walsh: Schemas for XML, July 1, 1999. http://www.xml.com/pub/1999/07/schemas/\nindex.html.\nFootnotes\n1Department of Computer Science, Vrije Universiteit Amsterdam, De Boelelaan 1081a, 1081 HV Amsterdam,\nthe Netherlands, {mcaklein|dieter|frankh}@cs.vu.nl\n2Aidministrator bv, Amersfoort, the Netherlands, jeen.broekstra@aidministrator.nl\n3Department of Computer Science, University of Manchester, Oxford Road, Manchester, M13 9PL, UK,\nhorrocks@cs.man.ac.uk\n4http://www.odci.gov/cia/publications/factbook/\n5http://purl.org/DC/\n6However, XML Schema does not provide any formal language for these intensional definitions. Actually\nprimitive datatypes are defined in prose or by reference to another standard. Derived datatypes can beconstrained alongtheir facets(suchas maxInclusive, maxExclusive etc.).\n8Ageneralcomparisonoftype systemsand descriptionlogicscanbe found in[Borgida, 2000]\n9OilEd is an integrated tool for building OIL ontologies and exploiting the FaCT reasoner; it can found at:\nhttp://img.cs.man.ac.uk/oil/' metadata={'source': 'Semantic_Web.pdf', 'page': 210}
"
"page_content='5. UPML: The Language and Tool Support for Making the Semantic\nWeb Alive\nB. Omelayenko1, M. Crubézy2, D. Fensel1, R. Benjamins3,B .\nWielinga4, E. Motta5, M. Musen2, Y. Ding1\n1. Introduction\nOriginally, the Web grew mainly around representing static\ninformation using the HTML language, which provided a standard\nfor document layout and was interpreted by browsers in a\ncanonical way to render documents. On the one hand, it was thesimplicity of HTML that enabled the fast growth of the WWW. On\nthe other hand, its simplicity seriously hampered more\nadvanced Web application in many domains and for many tasks.\nThe Semantic Web [Berners-Lee & Fischetti, 1999] will\ntransform the current World-Wide Web into a network of\nresources structured with the annotations defining their\nmeaning and relationships. In this context, computers not onlyprovide more efficient access to Web resources, but are also\nable to perform intelligent tasks with those resources. The\nexplicit representation of the semantics of data, accompanied\nwith domain theories (i.e.\nontologies), will enable a Web that\nprovides a qualitatively new level of service. It will weave\nan incredibly large network of human knowledge and will\ncomplement it with machine processability. Various automated\nservices will help users to achieve their goals by accessing' metadata={'source': 'Semantic_Web.pdf', 'page': 211}
"
"page_content='212\nand providing necessary information in a machine-\nunderstandable form. This process might ultimately create anextremely knowledgeable system with various specialized\nreasoning services — the systems which can support us in many\naspects of life.\nMany steps need to be taken to make this vision become\ntrue. Languages and tools for enriching information sources\nwith machine-processable semantics must be developed (cf.\n[Fensel et al., 2001], [Fensel et al., 2000(b)]). Web-based\nreasoning services need to be developed, services which employ\nthese semantic-enriched information sources to provideintelligent support to human users in task achievement.\nSpecifically, such services will need to support users not\nonly in finding and accessing information but also in\nachieving their goals based on this information.\nThe objective of the IBROW\n6project is to develop an\nintelligent broker able to configure knowledge systems from\nreusable components on the World Wide Web ([Fensel &Benjamins, 1998], [Benjamins et al., 1999]). IBROW brokers\nwill handle Web requests for some classes of knowledge systems\n(e.g., diagnostic systems) by accessing libraries of reusable\nreasoning components on the Web, and selecting, adapting, and\nconfiguring them in accordance with the domain in question.\nThis project integrates research on heterogeneous databases,\ninteroperability, and Web technology with knowledge-system\ntechnologies, namely ontologies and problem-solving methods.' metadata={'source': 'Semantic_Web.pdf', 'page': 212}
"
"page_content='213\nNowadays, ontologies [Gruber, 1993] represent mainly\nstaticand declarative knowledge about a domain of expertise.\nThe way to apply domain knowledge to achieve user tasks, or\ndynamicknowledge, is usually encoded in inference algorithms,\nwhich reason on the contents of the domain ontologies. Making\nthis dynamic knowledge explicit and generic, and regarding it\nas an important part of the entire knowledge contained in a\nknowledge-based system (KBS) is the rationale which underlies\nproblem-solving methods (cf. [Stefik, 1995], [Benjamins &\nFensel, 1998], [Benjamins & Shadbolt, 1998], [Motta, 1999],\n[Fensel, 2000]).\nProblem-solving methods (PSMs) provide reusable components\nfor implementing the reasoning part of the KBSs.7PSMs refine\ninference engines to allow a more direct control of the\nreasoning process of a system to achieve a task. PSMs encode\ncontrol knowledge independently of an application domain: PSMs\ncan therefore be reused for different domains and\napplications. PSMs decompose the reasoning task of aknowledge-based system in a number of subtasks and inference\nactions, which are connected by knowledge roles representing\nthe ‘role’ that knowledge plays in the reasoning process.\nSeveral libraries of problem-solving methods have been\ndeveloped (cf. [Marcus, 1988], [Chandrasekaran et al., 1992],\n[Puppe, 1993], [Breuker & van de Velde, 1994], [Benjamins,\n1995], [Musen 1998], and [Motta, 1999]) and a number of\nproblem-solving method specification languages have been' metadata={'source': 'Semantic_Web.pdf', 'page': 213}
"
"page_content='214\nproposed, ranging from informal notations (e.g. CML [Schreiber\net al., 1994]) to formal modeling languages (see [Fensel & vanHarmelen, 1994], [Fensel, 1995], [Gomez Perez & Benjamins,\n1999] for summaries).\nOntologies and PSMs provide the components which need to\nbe combined by the IBROW broker to configure a particular\nknowledge system on the Web. As a central requirement, both\ntypes of components, ontologies and PSMs, need to be properly\nmarked-up to be localized on the Web and assembled into a\nworking system by the broker. In the IBROW project, we have\ndeveloped\nthe Unified Problem-solving Method Development\nLanguageUPML8to specify problem-solving components and their\nsoftware architectures to facilitate their semi-automatic\nreuse and adaptation (see[Fensel & Benjamins, 1998],[Fensel et\nal., 1999(a)] ,[Fensel et al., 1999(b)] ,[Fensel et al., to\nappear] ).Concisely, UPML is a framework for specifying\nknowledge-intensive reasoning systems based on libraries of\ngeneric problem-solving components. Since its first\ndefinition, UPML has been adopted by the members of the IBROWconsortium and has been used to specify a design library\n9\n[Motta et al., 1998] at the Open University, a library forclassification problem-solving [Motta & Lu, 2000], and parts\nof the PSM library at Stanford University (cf. [Musen 1998]).\nThe goal of this chapter is to provide an overview of the\nUPML framework and tools and to demonstrate how this language\nprovides the enabling technology for the next level of service' metadata={'source': 'Semantic_Web.pdf', 'page': 214}
"
"page_content='215\nof the World-Wide Web: to provide users of the Web with\nonline, ready-to-use problem-solving resources. In Section 2,we discuss the mission of IBROW in the context of the future\nWeb and the central role of a specification language such as\nUPML. In Section 3, we introduce the UPML language for\ncomponent markup. Tool support for UPML is provided by the\nProtégé environment, as presented in Section 4. Concluding\nremarks are presented in Section Conclusions.\n2. Brokering Reasoning Components on the Web\nThe mission of the IBROW project is to develop an\nintelligent brokering service capable of retrieving a set of\nknowledge components from the Web which, combined together,\ncan solve the users’ problem, according to stated requirements\n[Benjamins et al., 1999]. As illustrated in Figure 5.1, the\nmain goal of the IBROW broker is to identify the components\nneeded to solve the problem, and to adapt and configure them\ninto a running reasoning service. In the context of the World-Wide Web, the task of the broker includes reusing third-party\ncomponents available on the Web, and operating problem solvers\nand knowledge bases together in a distributed, ‘plug-and-play’\nfashion.' metadata={'source': 'Semantic_Web.pdf', 'page': 215}
"
"page_content='216\nKB Program Web\npageLegacy\nsoftwareInteroperabilitygrid =UPMLTask Classification=generate & prune\nfind integrate adaptBrokering\ncapabilities\nKBProgram\nFigure 5.1 The IBROW approach. Based on user\nrequirements about a task to be solved, IBROW broker needs to\nfind, integrate and adapt a set of suitable knowledge\ncomponents (i.e., knowledge bases and problem-solving\nmethods) on the Web to solve a user-specified task. UPML is acentral interoperability element of the IBROW approach.\nThe IBROW approach offers a number of innovative aspects.\nMost of today’s Web brokers (e.g. Metacrawler\n10, Ariadne11,\nOntobroker12) handle only static information, whereas the IBROW\nbroker is capable of managing dynamic information13.A sa\nresult, our approach offers an opportunity for a new type of\nelectronic marketplaces, where reasoning services can be\nconfigured dynamically out of independent components to solve\na specific task. In particular, IBROW will enable theconstruction of ‘throw-away’ applications for Web users.' metadata={'source': 'Semantic_Web.pdf', 'page': 216}
"
"page_content='217\nA key issue in the IBROW approach is that reasoning\ncomponents themselves need to be available on the Web.Moreover, components must be marked-up with machine-\nprocessable data, so that an IBROW broker can identify their\ncapabilities and reason about them. This requirement calls for\nthe development of a language for component markup, which must\nsupport the specification of the capabilities and assumptions\nof available problem solvers, the goal and assumptions of\ntasks, and the properties of domains. In addition, this markup\nlanguage must hold non-functional, pragmatics descriptions of\navailable reasoning components. The language must be formalenough to express characteristics of reasoning components at\nthe knowledge level, and it should also have a Web-compatible\nsyntax, to allow the components to be distributed as Web\nresources. As explained in Section 3, the first achievement of\nthe IBROW project was to develop the UPML language, which\nmatches the requirements for brokering reasoning components on\nthe Web.' metadata={'source': 'Semantic_Web.pdf', 'page': 217}
"
"page_content='218\nGoal\n(taskspec)PSM\nKB\ncustomerPSMPSM-domain\nbridgematch PSM libraries\non the InternetCheck\nassumptionsAccessUPML\ninfoUPML\ninstancesFind\ncandidate\nPSMs\nStart\nPSMserverStartKB\nserverPSM\ncompetence\nFigure 5.2 The brokering process in IBROW, in which the\nUPML markup language plays a central role.\nBased on UPML, the IBROW broker can reason about component\nannotations to determine the localization of the components\nand select appropriate components by matching them to the\nusers’ requirements. Reasoning capabilities are required from\nthe broker to recognize and analyze the users’ problem, to\nfind relevant problem solvers for each (sub)task of the\nproblem and to check the applicability of problems solversaccording to the knowledge bases available. Once the broker\nhas selected a suitable set of knowledge components, it needs\nto adapt them and enable their integration into a single\nservice. Finally, the broker needs to execute the configured\nrunning system to solve the users’ task. Figure 5.2 shows a\nview of the brokering process: libraries of problem-solving\nmethods marked-up with UPML and correspond to UPML instances,which are selected by the broker on the basis of their' metadata={'source': 'Semantic_Web.pdf', 'page': 218}
"
"page_content='219\ncompetence and the users’ task specification. Given the users’\ndomain model (shown as a ‘Customer KB’ in the figure), thebroker selects the PSMs, which make proper assumptions about\nthe domain model via special adaptation elements in UPML –\nPSM-Domain bridges. Finally, the broker passes the PSMs on a\nPSM server able to execute them.\nAgain, the UPML language for component markup, discussed\nin the next section, plays a kernel role at each stage of the\nbrokering process.\n3. UPML: The Language for Knowledge Component\nMarkUp\nUPML is a software architecture specially designed to\ndescribe knowledge systems. The UPML architecture presented in\nFigure 5.3 consists of six different kinds of elements. A taskdefines the problem to be solved by the knowledge system. A\nproblem-solving method defines the reasoning process used to\nsolve the problem. A domain model defines the domain knowledge\navailable to solve the problem. Each of these elements is\ndescribed independently to enable reuse of: task descriptions\nin different domains, problem-solving methods for different\ntasks and domains, and domain knowledge for different tasks\nand problem-solving methods. Ontologies provide the\nterminology used in the tasks, problem-solving methods, anddomain definitions. Again this separation enables knowledge\nsharing and reuse. For example, different tasks or problem-' metadata={'source': 'Semantic_Web.pdf', 'page': 219}
"
"page_content='220\nsolving methods can share parts of the same vocabulary and\ndefinitions. Further elements of the specification areadapters, which are necessary to adjust other (reusable)\nelements to each other and to the specific application\nproblem. UPML provides two types of adapters: bridges and\nrefiners. Bridges explicitly model the relationships between\ntwo specific parts of the architecture, e.g. between a domain\nand a task or a task and a problem-solving method. Refiners\ncan be used to express the stepwise adaptation of other\nelements of the specification, e.g. generic problem-solving\nmethods and tasks can be refined to more specific ones byapplying to them a sequence of refiners ([Fensel, 1997],\n[Fensel & Motta, to appear]). Again, separating the generic\nand specific parts of a reasoning process enhances\nreusability. The main distinction between bridges and refiners\nis that bridges change the input and output of the components\nto make them fit together. Refiners, by contrast, may change\nonly the internal details, e.g. the subtasks of a problem-solving method. This provides UPML with a structured and\nprincipled approach for developing and refining heuristic\nreasoning components. This approach provides a three-\ndimensional design space where different types of adapters\ncorrespond to different types of moves in that space [Fensel,\n2000] and [Fensel & Motta, to appear].' metadata={'source': 'Semantic_Web.pdf', 'page': 220}
"
"page_content='221\n3.1.OverviewoftheUPMLFramework\nUPML relies on a meta-ontology that defines the concepts\nand relations which are then instantiated for specific\nknowledge components. As shown in Figure 5.4, this ontology is\nbased on a root class Entity, which defines that each UPML\nconceptand relation is represented with a list of attributes\nof a certain type. The root ontology of UPML defines two basic\nclasses:conceptandbinary relation , both of which are\nsubclasses of the Entity class. All UPML concepts and\nrelations are subclasses of these two root classes. The\nhierarchy of classes used to define UPML is also presented in\nFigure 5.4. The main classes of this hierarchy are discussed\nin the remainder of this section. The concepts of UPML define\nparts of a problem-solving system, as described in Section\n3.2.Binary Relations specify the interactions between the\nconcepts as described in Section 3.3. Architectural\nconstraints and design guidelines for UPML, which make it a\nfull-fledged software architecture, are described in [Fensel &\nGroenboom, 1999] and [Fensel et al., to appear]. The Web\nsyntaxes for UPML is discussed in Section 3.4.' metadata={'source': 'Semantic_Web.pdf', 'page': 221}
"
"page_content='222\nTask\nRefiner\nTaskPSM\nRefiner\nPSM\nOntol.\nRefiner\nOntologies\nDomain\nRefiner\nDomain\nModelPSM-Task\nBridge\nPSM-Domain\nBridgeTask-Domain\nBridge\nFigure 5.3 The UPML architecture.' metadata={'source': 'Semantic_Web.pdf', 'page': 222}
"
"page_content='223\nLibrary\nOntology\nDomain Model\nProblemDecomposer\nReasoningResourcePSM\nTaskKnowledge Component\nPragmatics\nCompetenceSignatureSignature ElementFormulaCommunicationOperational descriptionProgram\nRenaming\nPragmaticsdescriptorConcept\nPSM-Domain BridgePSM-TaskBridgeTask-Domain BridgeBridge\nDomainRefiner\nOntologyRefinerTask Refiner\nProblemDecomposer RefinerReasoningResourceRefinerPSM RefinerRefinerAdapterBinaryRelationEntity\nFigure 5.4 Class hierarchy of UPML. Each concept or\nrelation in the UPML ontology is derived from the root\nontology entities represented by the boxes.\n3.2.Concepts\nTheLibraryconcept is the overarching concept of UPML\narchitecture: it contains a pointer to each component of a\nUPML specification (Figure 5.5). The subclass-of relationship\nbetween two entities is denoted by the symbol <. Each concept\nor relation is represented as a list of attribute-type pairs' metadata={'source': 'Semantic_Web.pdf', 'page': 223}
"
"page_content='224\n(attribute : type), where the type is either a primitive type\n(STRING), or a class of the hierarchy. The brackets around thetypes denote that the corresponding attribute can have\nmultiple values.\nLibrary< Concept\npragmatics:(Pragmatics)\ntasks:(Task)\ndomain models : (DomainModel)\nproblem decomposers: (Problem Decomposer)reasoning resources : (Reasoning Resource)\nontologies : (Ontology)\nontologyrefiners : (OntologyRefiner)\nproblem decomposer refiners : (Problem Decomposer Refiner)\nreasoning resourcerefiners : (Reasoning Resource Refiner)task refiners :(Task Refiner)\ndomain refiners : (Domain Refiner)\npsm-domain bridges : (PSM-Domain Bridge)\npsm-task bridges : (PSM-Task Bridge)task-domain bridges : (Task-DomainBridge)\nFigure 5.5 TheLibraryconcept.\nThere are four main types of knowledge components in UPML:\nOntology, Domain Model, Task, andPSM(see Figure 5.6). All\ntypes of components are defined as subclasses of the root\nconceptKnowledge Component , also presented in Figure 5.6.\nEach component has a pragmatics description and relies on one\nor more ontologies, which define its universe of discourse.\nAll attributes represented in the figure model part-of\nrelationship besides uses.14\nAnOntology(cf. [Fensel, 2001]) is used in the definition\noftasks,PSMs, anddomain models. An ontology provides an\nexplicit specification of a conceptualization, which can be\nreused and shared by multiple reasoning components. It enables' metadata={'source': 'Semantic_Web.pdf', 'page': 224}
"
"page_content='225\nthe definition of reusable terminology used by all other\ncomponents through a signature, theorems and axioms.Ontologies are the key instrument of interchange among\nknowledge components. The core of an ontology specification in\nUPML is its\nsignaturedefinition, which captures the\nontological elements used by a component, or signature\nelements.Signature elements are expressed in a certain\nmodeling language. An ontologyalso provides axioms which\ncharacterize logical properties of the signature elements .\nAdditionaltheoremsmay list useful statements, which are\nimplied by the axioms.\nTheTaskconcept specifies the task to be achieved by the\nPSMs of the library. The input rolesandoutput rolestogether\nwith thecompetenceproperty define the input/output\nspecification of the task. The input rolesspecify the input\nof case data and the output rolesspecify the output of case\ndata. TheCompetenceconcept represents the functional\ninput/output specification of the Taskcomponent.Competence\nincludespreconditions restricting valid inputs and\npostconditions which describe the output of a method or task.\nTheassumptionsproperty of Taskcontains requirements\nregarding the knowledge used to define the goal. A Taskcan\nimport and refine other tasks via its usesattribute.\nTheDomain Modelconcept introduces domain knowledge,\nmerely the formulas used by the problem-solving methods and\ntasks. TheDomain Model consists of three elements:' metadata={'source': 'Semantic_Web.pdf', 'page': 225}
"
"page_content='226\nproperties,meta-knowledge, and the domain knowledgeitself.\nMeta-knowledge captures the implicit and explicit assumptions\nmade in the domain model of the real world. Meta-knowledge is\nassumed to be true. In other words, it has not been proven or\ncannot be proven, and corresponds to our assumptions about the\ndomain. Domain knowledgeis the knowledge base of the domain\nnecessary to define the task in a given application domain and\nto carry out the inference steps of the selected problem-\nsolving method. Knowledgeis specified under the assumption\nthat themeta-knowledge is true.Properties(a synonym for\ntheorems) can be derived from domain knowledge\nKnowledgeComponent <Concept\nPragmatics: Pragmatics\nOntologies:(Ontology)\nOntology< Knowledge Component\nSignature: SignatureTheorems: (Formula)\nAxioms :(Formula)\nDomain Model < Knowledge\nComponent\nuses : (Domain Model)\nproperties : (Formula)\nmetaknowledge: (Formula)knowledge: (Formula)Task< Knowledge Component\nUses : (Task)\nInput roles: (Signature Element)\nOutput roles: (SignatureElement)\nCompetence: CompetenceAssumptions: (Formula)\nPSM< Knowledge Component\nCommunication: Communication\nInput roles: (Signature Element)\nOutput roles: (SignatureElement)\nCompetence: Competence\nFigure 5.6 Knowledge Components: Ontology, Domain Model,\nTask, and PSM.\nThePSMcomponent represents a problem-solving method,\ndefined by its competenceandcommunicationproperties. The\ninput rolesandoutput rolesof the PSM specify its inputs and\noutputs, similarly to their function in the Taskcomponent.\nThe PSM’scommunicationproperty describes its interaction' metadata={'source': 'Semantic_Web.pdf', 'page': 226}
"
"page_content='227\nprotocol with its environment in particular with other (PSM)\ncomponents.\nThePSMconcept has the following two subclasses: Problem\nDecomposerandReasoning Resource presented in Figure 5.7. A\nProblem Decomposer decomposes a task to be solved into a set\nofsubtasks. ItsOperational Description specifies the control\nstructure over the subtasks and internal data flow among the\nsubtasks. AReasoning Resource solves a primitive step (or\nsubtask) of a problem provided by the problem decomposer .I t\nspecifiesassumptionsregarding the domain knowledge, which\nmust be fulfilled in order to perform a primitive reasoningstep. Its internal structure is usually not specified, as it\nis considered as an implementational aspect of no interest to\nthe architectural specification of a problem-solving system.\nThe\nknowledge roles attribute specifies the input of the\n(domain) knowledge to the reasoning resource.\nProblemDecomposer < PSM\nSubtasks: (Task)operational description: Operational Description\nReasoning Resource <PSM\nknowledgeroles: (SignatureElement)assumptions : (Formula)\nFigure 5.7 Problem Decomposer and Reasoning Resource.\nConsidering knowledge components as Web resources\nthemselves, UPML defines the concept of Pragmatics, which\nholds attributes which describe practical and reference\ninformation about a component. Pragmaticsattributes are' metadata={'source': 'Semantic_Web.pdf', 'page': 227}
"
"page_content='228\nderived mainly from the Dublin Core15metadata recommendation\nfor annotating Web resources.\nUPML does not commit to any logical language to express\nformulas about the knowledge components, or to any procedural\nlanguage to describe the operational control of a problem\ndecomposer. In several places, developers can extend UPML with\nadditional concepts to hold the primitives of their languages\nof choice.\n3.3.BinaryRelations\nBinary Relations specify the interactions between the UPML\nknowledge components. The root binary relation of UPML is\nAdapter(Figure 5.8). The Adapterconnects two components,\ncalledarguments, through a set of renamingcorrespondences\nbetween the terms of both arguments. Similar to knowledge\ncomponents, an Adapterholdspragmaticsinformation and refers\nto specificontologies. UPML introduces two subclasses of\nAdapter:aBridgeand aRefinershown in Figure 5.9.\nAdapter< BinaryRelation\nargument1: Knowledge Component\nargument2: Knowledge Component\npragmatics: Pragmatics\nontologies: (Ontology)\nrenamings: (Renaming)\nFigure 5.8 Adapter.\nTheBridgerelation connects two Knowledge Components of\ndifferent kinds. It defines mapping axioms and additional\nassumptionsabout the components it relates. The Bridge' metadata={'source': 'Semantic_Web.pdf', 'page': 228}
"
"page_content='229\nrelation has three subrelations: a PSM-Domain Bridge connects\naPSMwith aDomain Model;aPSM-Task Bridge connects aPSM\nand aTask; and aTask-Domain Bridge connects aTaskand a\nDomain Model.\nBridge< Adapter\nuses:(B ri d ge )\nmapping axioms: (Formula)\nassumptions : (Formula)\nRefiner<Adapter\nIn: Knowledge Component\nOut : Knowledge Component\nFigure 5.9 Bridge and Refiner\nTheRefinerrelation connects two knowledge components of\nthe same type and so expresses the stepwise adaptation of one\ncomponent into the other. Very generic problem-solving methods\nand tasks can be refined to more specific ones by applying a\nsequence of refiners to them. A Refinerassumes that its two\nattributesinandouthave the same type. This serves to\nensure that the refiner modifies a given component, as opposed\nto mapping it to a different kind of component via the Bridge\nrelation.\nEach main UPML component has its own associated type of\nrefiner. Consequently, the Refinerrelation has four\ncomponent-specific subrelations: a Domain Refiner,a nOntology\nRefiner,aTask Refiner, and aPSM Refiner. The definition of\na refiner includes the attributes specific to each kind ofcomponent. Each refiner has its own restrictions on\nin-put and\nout-put: theDomain Refiner contains redefined properties,\nmetaknowledge andknowledgein the refined component.' metadata={'source': 'Semantic_Web.pdf', 'page': 229}
"
"page_content='230\nSimilarly, the Ontology Refiner contains refined signature,\ntheorems, andaxioms. TheTask Refinerrefinescompetenceand\nassumptions, and thePSM Refinerrefinescommunicationand\ncompetence.\nThe separation of generic and specific parts of a\nreasoning process maximizes reusability. UPML offers two ways\nof combining components of the same type. Both serve a similar\npurpose, however they provide complementary means. First, a\ncomponent can import another component via the usesattribute.\nHence, the component can make use of definitions imported from\nthe other component, monotonically refine them, and extendthem. In this case, the\nusesrelationship is not modeled by an\nexplicit entity in the UPML specification but rather via an\nattribute of an existing component (the one that imports\nanother component). This first approach corresponds to a\nmonotonic extension of a component. Second, a component can be\ndefined as a refinement of another component via the Refiner\nrelation. In this case, the former component can rewrite the\naspects of the latter component via the renamingsattribute.\nAlso, in this case we model the uses-relationship by an\nexplicit entity of the UPML specification (i.e., a Refiner).\nThis second approach enables non-monotonic modification of a\ncomponent via an explicit element of the architecture. As\nmentioned earlier, this provides UPML with a structured and\nprincipled approach for developing and configuring heuristic' metadata={'source': 'Semantic_Web.pdf', 'page': 230}
"
"page_content='231\nreasoning components by adapting and refining generic\ncomponents (cf. [Fensel, 2000], [Fensel & Motta, to appear]).\n3.4.WebSyntaxes\nIn this section we describe the Web syntaxes for UPML\nmeta-ontology based on XML and RDF. A Web syntax is crucially\nimportant for UPML because UPML is posed as a standard forknowledge component markup on the Web. The syntax consists of\nthree documents: an XML DTD definition for UPML, an XML Schema\ndefinition for UPML, and an RDF Schema definition for UPML as\ndescribed in the next section.\n3.4.1. XML Syntax\nXML16is one of the Web standards which can be used to\ndescribe UPML. XML is a widely supported, domain-independent\nlanguage for representing, storing, sharing, and exchanging\ndata. It provides the means to mark-up the semantics of data,as well as to validate, and exchange data structures. XML\ndocuments consist of XML tags, which have their names and\nassociated values. The tags can be nested into one another to\nrepresent the hierarchical structure of a document. This\nstructure provides a mechanism to impose constraints on the\nstorage layout and logical structure.\nXML Schema17is a W3C standard aimed to specify the\nstructure of XML documents. Parts of a document are specified\nwith a set of data types, either primitive or complex, which' metadata={'source': 'Semantic_Web.pdf', 'page': 231}
"
"page_content='232\ncan be inherited from one another. This inheritance of data\nstructures allows explicit encoding of UPML structures as XMLSchema structures.\nFigure 5.10 shows a fragment of XML Schema syntax for the\nKnowledge Component concept.\n<xsd:complexType name=""upml:Knowledge_component"" base=""upml:Concept"">\n<xsd:element name=""upml:pragmatics""type=""upml:Pragmatics""minOccurs=""1""\nmaxOccurs=""1""/>\n<xsd:element name=""upml:ontology""type=""upml:Ontology""minOccurs=""1""\nmaxOccurs=""unbounded""/>\n</xsd:complexType>\nFigure 5.10 Part of the XML Schema defining the XML\nrepresentation of the Knowledge Component concept.\nA relatively new standard, XML Schema is still not widely\nsupported by industry. Hence, we also provide a DTD\nspecification for UPML, part of which is presented in Figure\n5.11. However, DTDs are only capable of representing the\nstructure of document instances; they cannot capture the\nhierarchy of the UPML structures.\n<!ELEMENT upml:library(upml:pragmatics, upml:ontology+, upml:domain_models+,\nupml:complex_psms+, upml:primitive_psms+, upml:tasks+, upml:ontology_refiners+,\nupml:problem_decomposer_refiners+,\nFigure 5.11 Part of the DTD for UPML defining the\nLibraryconcept.\nBoth the full XML Schema and the full DTD for UPML are\navailable from the UPML website18.\n3.4.2. RDF Syntax\nRDF19is an upcoming standard for representing machine-\nprocessable semantics of on-line information resources. Unlike' metadata={'source': 'Semantic_Web.pdf', 'page': 232}
"
"page_content='233\nXML, which enables serialization of trees, RDF provides\nextensive representation of options to perform knowledge-levelmarkup. The foundation of RDF is a model for representing\nnamed properties and property values. RDF properties may be\nthought of as attributes of resources. In this respect, they\ncorrespond to traditional attribute-value pairs used in UPML.\nRDF properties also represent relationships between the\nresources. The RDF model can therefore resemble an entity-\nrelation diagram.\nThe structure of RDF documents is specified with\nRDF\nSchema(RDFS) [Brickley & Guha, 2000]. RDF resources represent\nsome components and correspond to the Conceptclass in the\nUPML hierarchy. Hence, in the RDF Schema of UPML we define\nEntityas a subclass of rdfs:resource, andConceptas a\nsubclass ofEntity. We define all other concepts of UPML as\ndirect or indirect subclasses of the RDF class Concept.\nRDF properties are conceptually equivalent to the UPML\nBinary Relations . Hence, the latter can be represented as\nproperties. However, RDF Schema does not allow defining\nproperties of properties. Accordingly, if we were to define\nBinary Relation as a subclass of rdfs:property, then we would\nhave no way of describing the attributes of binary relations.\nConsequently, in the RDF Schema of UPML we defined the Binary\nRelationas a subclass of Entity.\nAs a result, we used RDF classes to define both the\nConceptsand theBinary Relations . Each attribute of Concepts' metadata={'source': 'Semantic_Web.pdf', 'page': 233}
"
"page_content='234\nandBinary Relations is defined as a property of the\ncorresponding class in RDFS. Each property has thecorresponding class as its domain, and the type of this\nattribute, as defined in the UPML specification, as its range.\nThe RDF syntax of UPML is generated from the Protégé-\n2000\n20knowledge-acquisition tool, which supports import and\nexport of ontologies from and to RDF. For example, a sample of\nthe RDFS specification for the Knowledge Component concept is\nshown in Figure 5.12, while the whole specification is\navailable from the UPML website.\n<s:Classrdf:about=""&a;Knowledge_Component"">\n<a:ROLE>Abstract</a:ROLE>\n<s:subClassOf rdf:resource=""&a;Concept""/>\n</s:Class>\n<rdf:Propertyrdf:about=""&a;pragmatics"">\n<a:SLOT-MAXIMUM-CARDINALITY>1</a:SLOT-MAXIMUM-CARDINALITY>\n<s:domain rdf:resource=""&a;Adapter""/>\n<s:domain rdf:resource=""&a;Knowledge_Component""/>\n<s:rangerdf:resource=""&a;Pragmatics""/>\n</rdf:Property>\n<rdf:Propertyrdf:about=""&a;ontologies"">\n<s:domain rdf:resource=""&a;Adapter""/>\n<s:domain rdf:resource=""&a;Knowledge_Component""/>\n<s:domain rdf:resource=""&a;Library""/>\n<s:rangerdf:resource=""&a;Ontology""/>\n</rdf:Property>\nFigure 5.12 A fragment of the RDF Schema for UPML.\nThe tool for specifying UPML components is discussed in\nthe next section.' metadata={'source': 'Semantic_Web.pdf', 'page': 234}
"
"page_content='235\n4. An Editor for UPML Specifications based on\nProtégé-2000\nAs described in the previous section, the UPML framework\ncan be seen as an ontology composed of classes and relations\ndescribing reusable knowledge components. Instances of these\nclasses and relations are particular knowledge components and\nadapters(e.g., a classification task and a heuristic\nclassifier problem decomposer). To enable developers to\nspecify and annotate libraries of knowledge components, we\ncreated an editor for UPML using Protégé-200021. Protégé is an\nextensible ontology-editing and knowledge-acquisition\nenvironment assisting users in the construction of large\nelectronic knowledge bases [Grosso et al., 1999]. Protégé-2000\nallows users to create, browse, and edit domain ontologiesusing a frame-based representation, compliant with the OKBC\nknowledge model [Chaudhri et al., 1998].\nIn Protégé-2000, an ontology is represented with a\nmultiple-inheritance hierarchy of the classes of concepts\nwhich are important in a domain. Slots are attached to these\nclasses and define their attributes. Facets restrict the type\nof value that a slot can take. Protégé automatically generates\na graphical knowledge-acquisition tool from the ontology,\nwhich enables application specialists to enter the detailedcontent knowledge required to define specific applications\n[Puerta et al., 1992]. Protégé allows developers to custom-' metadata={'source': 'Semantic_Web.pdf', 'page': 235}
"
"page_content='236\ntailor this knowledge-acquisition tool directly by configuring\ngraphical entities on forms, which are attached to each classin the ontology for the acquisition of instances (particular\nexemplars of the classes). Consequently, the application\nspecialists can enter domain information by filling in the\nblanks of intuitive forms and by drawing diagrams composed of\nselectable icons and connectors. Protégé-2000 is able to store\nthe knowledge bases in several formats, including RDF [Noy et\nal., to appear].\nWe modeled the set of concepts and relationships of UPML\nas a hierarchy of classes in Protégé-2000, with slots andfacets attached to them. Both concepts and binary relations in\nUPML are reified as classes in Protégé, so they can have\nattributes, and be subclassed.\nFigure 5.13 shows most of the hierarchy of the classes we\nused to model UPML and the definition of the class Library.\nThe UPML ontology in Protégé reflects the fact that UPML does\nnot commit to any logical or procedural language to expressthe formulas and programs that define knowledge components and\nadapters. By means of the ontology-extension and ontology\ninclusion mechanisms of Protégé, developers can extend the\nUPML ontology with the primitives necessary to write\nexpressions in their object language of choice. For example,\nwe recently used the UPML editor to specify a library of\nclassification problem solving components [Motta & Lu, 2000].\nThe components of the library are coded using the logical and' metadata={'source': 'Semantic_Web.pdf', 'page': 236}
"
"page_content='237\noperational OCML language [Motta, 1999]. First, we modeled the\nOCML set of basic primitives (such as classes, relations,axioms and functions) themselves as a meta-ontology in\nProtégé-2000. We then included this ontology in the UPML\neditor (as partially shown in the lower left part of Figure\n5.13). From there, we were able to extend (subclass) the UPML\nconcepts\nSignature,Signature Element ,FormulaandProgram\nwith the definitions which refer to the OCML primitives, aspresented in Figure 5.13.\nFigure 5.13 A snapshot of the Protégé-based UPML editor:\nThe ontology of UPML modelled in Protégé as a hierarchy ofclasses, extended with OCML-specific classes (left panel) and\nthe definition of the Library concept, which holds a pointer\nto every component in the architecture (right panel).' metadata={'source': 'Semantic_Web.pdf', 'page': 237}
"
"page_content='238\nGiven this model of UPML, Protégé-2000 automatically\ngenerated an RDF Schema representation holding the UPMLclasses and properties for annotating reasoning resources.\nBased on the UPML ontology, Protégé-2000 also generated a\ngraphical editor for instantiating specific UPML\nspecifications, e.g., the components of the library for\nclassification problem-solving. We then custom-tailored this\neditor to center the knowledge-acquisition process on the use\nof diagrammatic metaphors. In particular, we defined specific\nkinds of diagrams to enter the task decomposition (\ninference\nstructure) of a problem decomposer and the control regime of\nits corresponding operational description ( control structure ).\nAs shown in Figure 5.14, the UPML editor makes it possible\nto browse the list of instances of a selected class and to\nview and edit the knowledge-acquisition form associated to the\nselected instance. In this figure, the editor displays the\n‘heuristic optimal solution classifier’ instance of the\nProblem Decomposer class. The knowledge-acquisition form for a\nproblem decomposer PSM contains a number of user interface\ncomponents to enter the values of the slots defined for the\nProblem Decomposer class. For example, this form contains a\nsub-form specifying the operational description slot of the\nPSM(on the right). This sub-form includes an inference\nstructure diagram, which helps users to specify the competence\nslots of thePSM(input roles,output rolesandsubtasks)b y\ndirectly drawing nodes and links in the diagram, which, in' metadata={'source': 'Semantic_Web.pdf', 'page': 238}
"
"page_content='239\nturn, automatically creates and fills in the corresponding\ninstances of the Signature Element and theTaskclasses.\nOnce created, the specification of a set of UPML knowledge\ncomponents (instances) can be exported as a corresponding set\nof RDF statements, which refer to the RDF Schema of UPML. When\nProtégé-2000 generates an RDF specification from an ontology,\nit resolves the differences between the knowledge models of\nProtégé and RDF Schema by adding specific RDF statements to\nexpress facets such as cardinality constraints on slots, or\nmultiple domains or ranges for a given slot. Consequently, the\nresulting RDF code for UPML contains the complete translationof the UPML ontology; however, some parts of the ontology are\nonly understandable by Protégé-2000 (see [Noy et al., to\nappear] for a discussion).\nAs a result, the UPML editor in Protégé-2000 provides a\nguided framework, which helps developers to define the UPML\nspecifications and to annotate the knowledge components, which\nthey want to publish on the Web. Protégé-2000 is extensiblethrough its API (application programming interface) [Musen et\nal., 2000]. We envisage enhancing the UPML editor with\nservices which will help the users to configure the reasoning\nresources and problem decomposers for different domains and\ntasks in connection to the IBROW broker. The resulting\nconfigurations of problem solvers will help augment the UPML\nspecification of the libraries available with the appropriate\nbridges and refiner components.' metadata={'source': 'Semantic_Web.pdf', 'page': 239}
"
"page_content='240\nFigure 5.14 A snapshot of the Protégé-based UPML\neditor: the ‘heuristic optimal solution classifier’ instance\nof the Problem-Decomposer class, with its inference structure\ndiagram on the right.\nConclusions\nUPML defines an architecturefor describing heuristic\nreasoning components (cf. [Berners-Lee & Fischetti, 1999] for\nthe vision of the latter) for the Semantic Web. UPML is\nlanguage-neutral in the sense that different formal languages\ncan be plugged in to describe the elementary slots defined by\nUPML. We already used order-sorted logic [Fensel et al.,\n1998], frame logic [Kifer et al., 1995], and OCML [Motta,\n1999] successfully for adding formal semantics to UPML' metadata={'source': 'Semantic_Web.pdf', 'page': 240}
"
"page_content='241\nspecifications (cf. [Fensel et al., to appear]). We also tried\nto use the OIL language [Fensel et al., 2001] which has beendeveloped within the Ontoknowledge\n22project (cf. [Fensel et\nal., 2000(b)]) as a Web-based ontology language. OIL was a\nsignificant source of inspiration for the ontology language\ncalled DAML+OIL23developed in a joined EU/US working group on\nlanguage standardization, which is currently present as a W3C\nworking group on the Semantic Web. However in the case of OIL,\nthe results achieved were somewhat disappointing (cf. [Fensel\net al., 2000(a)]). OIL does not provide an adequate expressive\npower for many of the axiomatic parts of UPML specifications.Extending the expressive power of OIL seems to be absolutely\nnecessary for making it usable in this context.\nIn general, UPML is concerned with describing the dynamic\nreasoning aspect of the Semantic Web. Therefore, it defines a\nnew layer on top of the currently developed language standards\nfor the Semantic Web. This layer provides machine-processable\nsemantics for the dynamic information sources of the SemanticWeb (see Chapter 1 for relevant discussion).\nUPML is a description language and does not require\noperational semantics. However, the IBROW broker must be able\nto reason about the expressions in the description language.\nIn that sense, one can view the broker as a special-purpose\n‘interpreter’ of the language. The current priority in the\nIBROW project is to use UPML for annotating large libraries of\nproblems-solving methods and implementing UPML-based reasoning' metadata={'source': 'Semantic_Web.pdf', 'page': 241}
"
"page_content=""242\nservices to enable their intelligent brokering on the Web.\nHere we can employ many concepts of the component retrievalarea developed for software engineering. The use of formal\ntechniques for software component retrieval is discussed in\n[Jeng & Cheng, 1992], [Jeng & Cheng, 1995], [Penix &\nAlexander, 1995], [Chen & Cheng, 1997], [Jiliani et al.,\n1997], [Mili, 1997], [Mili et al., 1997], [Schuman & Fischer,\n1997], [Penix et al., 1997], and [Zaremski & Wing, 1997].\nIn many aspects the RETSINA\n24project (cf. [Sycara et al.,\n2001]) is similar to IBROW. Although it is focused on multi-\nagent systems, this project deals with aspects similar tothose we encounter in IBROW. Heterogeneous agents must be able\nto communicate with each other by means of a common language.\nThe language needs to be coordinated effectively across\ndistributed networks of information. An agent capability\ndescription language called LARKS (\nLanguage for Advertisement\nand Request for Knowledge Sharing ) has been developed (cf.\n[Sycara et al., 2001]) addressing the problem of agentinteroperability. This common language is used by middle or\nmatchmaking agents to pair service-requesting agents with\nservice-providing agents, which meet the requesting agents'\nrequirements. The matching engine of the matchmaker agent\ncontains five different filters for context matching, word\nfrequency profile comparison, similarity matching, signature\nmatching, and constraint matching. The user configures these\nfilters to achieve the desired tradeoff between performance"" metadata={'source': 'Semantic_Web.pdf', 'page': 242}
"
"page_content='243\nand matching quality. The main differences between UPML and\nLARKS are:\n•UPML defines a richer architecture for describing the\nreasoning components compared to LARKS.\n•UPML is a full-fledged methodological framework for\ndeveloping Web-enabled libraries of such components.\n•LARKS fixes the language used to describe the competence of\nthese components, whereas UPML ‘merely’ provides an\narchitecture in which several languages can be plugged into.\nFinally, one has to admit that the actual retrieving\ncomponent in RETSINA is far more developed than the current\nbrokering support in IBROW. This also indicates the main\ndirection for further development in IBROW. In particular, weforesee that the scope of the knowledge components to be\nbrokered in IBROW will need to be broadened from traditional\nproblem-solving methods to agent-based components capable of\nperforming reasoning steps autonomously. Both UPML and the\nbroker will need to take into account these new kinds of\ncomponents [Abasolo et al., 2001].\nDuring the early phase of the IBROW project, we\ndemonstrated how our brokering approach based on UPML could be\nused for the toy problem of classifying apples for users\n25. The\nbroker used an approach based on Prolog and CORBA to localize,\ncompose, and integrate the heterogeneous components of the\nconfigured system, such as knowledge bases of the apple domain\nand classification problem-solving methods [Benjamins et al.,' metadata={'source': 'Semantic_Web.pdf', 'page': 243}
"
"page_content='244\n1999]. The results of this experiment appeared very promising\nand form the foundations for the work that we have planned forthe next phases of the IBROW project. Consequently, we are\nexpecting even more promising results from this stage, results\nthat will help to make the vision of the Semantic Web a\nreality.\nReferences\n[Abasolo et al., 2001] C. Abasolo, J.-L. Arcos, E. Armengol, M. Gómez, J.-M. López-Cobo, M. López-Sánchez,\nR. López de Màntaras, E. Plaza, C. van Aart, and B. Wielinga: Libraries for Information Agents, In:\nIBROW Project IST-1999-19005: An Intelligent Brokering Service for Knowledge-Component Reuse on\nthe World-Wide Web, Deliverable 4,2001.\n[Benjamins & Fensel, 1998] V. R. Benjamins and D. Fensel: Special issue on problem-solving methods,\nInternationalJournalofHuman-Computer Studies, 49(4),1998.\n[Benjamins & Shadbolt, 1998] V. R. Benjamins and N. Shadbolt: Special Issue on Knowledge Acquisition and\nPlanning, InternationalJournalofHuman-Computer Studies, 48(4),1998.\n[Benjamins et al., 1999] V. R. Benjamins, B. Wielinga, J. Wielemaker, and D. Fensel: Brokering Problem-\nSolving Knowledge at the Internet. In: D. Fensel et al. (eds.), Knowledge Acquisition, Modeling, andManagement, Proceedings of the European Knowledge Acquisition Workshop (EKAW-99), LNAI 1621,\nSpringer-Verlag, May, 1999.\n[Benjamins, 1995] V. R. Benjamins: Problem Solving Methods for Diagnosis And Their Role in Knowledge\nAcquisition, InternationalJournalofExpertSystems:Researchand Application, 8(2):93-120,1995.\n[Berners-Lee & Fischetti, 1999] T. Berners-Lee and M. Fischetti: Weaving the Web, Harper, San Francisco,\n1999.\n[Breuker & van de Velde, 1994] J. Breuker and W. van de Velde (eds.): The CommonKADS Library for\nExpertise Modeling, IOSPress, Amsterdam, The Netherlands, 1994.' metadata={'source': 'Semantic_Web.pdf', 'page': 244}
"
"page_content='245\n[Brickley & Guha, 2000] D. Brickley and R. Guha: Resource Description Framework (RDF) Schema\nSpecification 1.0, W3C Candidate Recommendation, March, 2000; available online athttp://www.w3.org/TR/rdf-schema\n[Chandrasekaran et al., 1992] B. Chandrasekaran, T. Johnson, and J. Smith: Task Structure Analysis for\nKnowledge Modeling, Communicationsofthe ACM, 35(9):124-137,1992.\n[Chaudhri et al., 1998] V. Chaudhri, A. Farquhar, R. Fikes, P. Karp, and J. Rice: OKBC: A programmatic\nfoundation for knowledge base interoperability. In: Proceedings of the 15th National Conference on\nArtificial Intelligence (AAAI-98) and of the 10th Conference on Innovative Applications of ArtificialIntelligence (IAAI-98), AAAI Press, 1998,p.600–607.\n[Chen & Cheng, 1997] Y. Chen and B. Cheng: Facilitating an Automated Approach to Architecture-based\nSoftware Reuse. In Proceedings of the 12th IEEE International Conference on Automated SoftwareEngineering(ASEC-97), Incline Village, Nevada, November 3-5, 1997.\n[Fensel, 1995] D. Fensel: Formal Specification Languages in Knowledge and Software Engineering, The\nKnowledge Engineering Review, 10(4),1995.\n[Fensel, 1997] D. Fensel: The Tower-of-Adapter Method for Developing and Reusing Problem-Solving\nMethods. In: E. Plaza et al. (eds.), Knowledge Acquisition, Modeling and Management, LNAI 1319,\nSpringer-Verlag, 1997.\n[Fensel, 2000] D. Fensel: Problem-Solving Methods: Understanding, Description, Development, and Reuse,\nLNAI 1791, Springer-Verlag, 2000.\n[Fensel, 2001] D. Fensel: Ontologies: Silver Bullet for Knowledge Management and Electronic Commerce,\nSpringer-Verlag, 2001.\n[Fensel & Benjamins, 1998] D. Fensel and V. Benjamins: Key Issues for Problem-Solving Methods Reuse. In:\nProceedings of the 13th European Conference on Artificial Intelligence (ECAI-98), Brighton, UK,\nAugust23-28, 1998, p.63-67.\n[Fensel & Groenboom, 1999] D. Fensel and R. Groenboom: An Architecture for Knowledge-Based Systems,\nThe Knowledge EngineeringReview, 14(3):153-173, 1999.\n[Fensel & Motta, to appear] D. Fensel and E. Motta: Structured Development of Problem Solving Methods,\nIEEE Transactions on Knowledge and Data Engineering, to appear; available online athttp://www.cs.vu.nl/~dieter/pub.html' metadata={'source': 'Semantic_Web.pdf', 'page': 245}
"
"page_content='246\n[Fensel & van Harmelen, 1994] D. Fensel and F. van Harmelen: A Comparison of Languages which\nOperationalize and Formalize KADS Models of Expertise, The Knowledge Engineering Review, 9(2),1994.\n[Fensel et al., 1998] D. Fensel, R. Groenboom, and G. Renardel de Lavalette: Modal Change Logic (MCL):\nSpecifying the Reasoning of Knowledge-based Systems, Data and Knowledge Engineering, 26(3):243-269,1998.\n[Fensel et al., 1999(a)] D. Fensel, V. R. Benjamins, S. Decker, M. Gaspari, R. Groenboom, W. Grosso, M.\nMusen, E. Plaza, G. Schreiber, R. Studer, and Bob Wielinga: The Unified Problem-Solving MethodDevelopment Language UPML. In: IBROW3 ESPRIT Project 27169: An Intelligent Brokering Service\nfor Knowledge-ComponentReuse onthe World-Wide Web, Deliverable 1.1,1999.\n[Fensel et al., 1999(b)] D. Fensel, V. Benjamins, E. Motta, and B. Wielinga: UPML: A Framework for\nknowledge system reuse. In: Proceedings of the International Joint Conference on Artificial Intelligence\n(IJCAI-99),Stockholm,Sweden,July31 - August5,1999.\n[Fensel et al., 2000(a)] D. Fensel, M. Crubézy, F. van Harmelen, and I. Horrocks: OIL & UPML: A Unifying\nFramework for the Knowledge Web. In Proceedings of the Workshop on Applications of Ontologies and\nProblem-solving Methods, 14th European Conference on Artificial Intelligence ECAI’00, Berlin,\nGermany August20-25, 2000.\n[Fensel et al., 2000(b)] D. Fensel, F. van Harmelen, H. Akkermans, M. Klein, J. Broekstra, C. Fluyt, J. van der\nM e e r ,H . - P .S c h n u r r ,R .S t u d e r ,J .D a v i e s ,J .H u g h e s ,U .K r o h n ,R .E n g e l s ,B .B r e m d a h l ,F .Y g g e ,U .\nReimer, and I. Horrocks: OnToKnowledge: Ontology-based Tools for Knowledge Management. In:\nProceedings of the eBusiness and eWork 2000 Conference (EMMSEC 2000), Madrid, Spain, October\n18-20, 2000.\n[Fensel et al., 2001] D. Fensel, I. Horrocks, F. van Harmelen, D. McGuiness, and P. Patel-Schneider: OIL:\nOntologyInfrastructure to Enable the Semantic Web, IEEE Intelligent Systems, March/April, 2001.\n[ F e n s e le ta l . ,t oa p p e a r ] D .F e n s e l ,E .M o t t a ,V .R .B e n j a m i n s ,M .C r u b é z y ,S .D e c k e r ,M .G a s p a r i ,R .\nGroenboom, W. Grosso, F. van Harmelen, M. Musen, E. Plaza, G. Schreiber, R. Studer, and B. Wielinga:\nThe Unified Problem-solving Method Development Language UPML, to appear in Knowledge and\nInformational Systems (KAIS); available online at http://www.cs.vu.nl/~dieter/pub.html' metadata={'source': 'Semantic_Web.pdf', 'page': 246}
"
"page_content='247\n[Gomez Perez & Benjamins, 1999] A. Gomez Perez and V. R. Benjamins: Applications of ontologies and\nproblem-solving methods. AI Magazine 20(1):119– 122, 1999.\n[Grosso et al., 1999] W. Grosso, H. Eriksson, R. Fergerson, J. Gennari, S. Tu, and M. Musen: Knowledge\nModeling at the Millennium (The Design and Evolution of Protégé-2000). In: Proceedings of the Twelfth\nWorkshop on Knowledge Acquisition, Modeling and Management (KAW99), Banff, Alberta, Canada,October 16-21,1999.\n[Gruber, 1993] T. Gruber: Towards Principles for the Design of Ontologies Used for Knowledge Sharing, In: N.\nGuarino and R. Poli (eds.), Formal Ontology in Conceptual Analysis and Knowledge Representation,Kluwer Academic Publishers, Deventer, The Netherlands, 1993.\n[Jeng & Cheng, 1992] J.-J. Jeng and B. H. Cheng: Using Automated Reasoning Techniques to Determine\nSoftware Reuse, International Journal of Software Engineering and Knowledge Engineering, 2(4):523-546,1992.\n[Jeng& Cheng, 1995]J.-J.Jengand B. H. Cheng:SpecificationMatching for Software Reuse: A Foundation. In:\nProceedingsofthe ACM SymposiumonSoftware Reuse, Seattle, Washington, April, 1995, pp. 97-105.\n[Jiliani et al., 1997] L. Jilani, J. Desharnais, M. Frappier, R. Mili, and A. Mili: Retrieving Software Components\nThat Minimize Adaptation Effort. In: Proceedings of the 12th IEEE International Conference on\nAutomated Software Engineering(ASEC-97), Incline Village, Nevada, November 3-5, 1997.\n[Kifer et al., 1995] M. Kifer, G. Lausen, and J. Wu: Logical Foundations of Object-Oriented and Frame-Based\nLanguages, Journalofthe ACM, 42(4):741-843,1995\n.\n[Marcus, 1988] S. Marcus (ed.): Automating Knowledge Acquisition for Experts Systems, Kluwer Academic\nPublisher, Boston, 1988.\n[Mili et al., 1997] R Mili, A. Mili, and R. Mittermeir: Storing and Retrieving Software Components: A\nRefinementBased System, IEEE TransactionsonSoftware Engineering, 23(7):445-460, 1997.\n[Mili, 1997] F. Mili: Transformational Based Problem Solving Reuse. In Proceedings of the 9th International\nConference on Software Engineering & Knowledge Engineering (SEKE-97), Madrid, Spain, June 18-20,1997.\n[Motta & Lu, 2000] E. Motta and W. Lu: A Library of Components for Classification Problem Solving. In:\nProceedings of the 2000 Pacific Rim Knowledge Acquisition Workshop, Sydney, Australia, December11-13, 2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 247}
"
"page_content='248\n[Motta et al., 1998] E. Motta, M. Gaspari, and D. Fensel: UPML Specification of a Parametric Design Library,\nIn: IBROW3 ESPRIT Project 27169: An Intelligent Brokering Service for Knowledge-Component Reuseonthe World-Wide Web, Deliverable D4.1,1998.\n[Motta, 1999] E.Motta:Reusable Components for Knowledge Modeling, IOSPress, Amsterdam, 1999.\n[Musen 1998] M. Musen: Modern Architectures for Intelligent Systems: Reusable Ontologies and Problem-\nSolvingMethods. In: C.G. Chute(ed.), 1998AMIAAnnualSymposium, Orlando, FL, 1998,p. 46-52.\n[Musen et al., 2000] M. Musen, R. Fergerson, W. Grosso, N. Noy, M. Crubezy, and J. Gennari. Component-\nBased Support for Building Knowledge-Acquisition Systems. In Proceedings of the Conference onIntelligent Information Processing (IIP 2000) of the International Federation for Information Processing\nWorld Computer Congress(WCC2000),Beijing, 2000.\n[Noy et al., to appear] N. Noy, M. Sintek, S. Decker, M. Crubézy, R. Fergerson, M. Musen: One Size Does Fit\nAll: Acquiring Semantic Web Contents with Protégé-2000. IEEE Intelligent Systems, Special issue on\nSemantic Web Technology, to appear.\n[Omelayenko et al., 2000] B. Omelayenko, M. Crubézy, D. Fensel, Y. Ding, E. Motta, and M. Musen: Meta\nData and UPML, In: IBROW Project IST-1999-19005: An Intelligent Brokering Service for Knowledge-\nComponent Reuse onthe World-Wide Web, Deliverable 5; available online at:\nhttp://www.cs.vu.nl/~upml/\n[Penix & Alexander, 1995] J. Penix and P. Alexander: Design Representation for Automating Software\nComponent Reuse. In Proceedings of the First International Workshop on Knowledge-Based Systems for\nthe (Re)use ofProgramLibraries, Sophia Antipolis, France, November 23-24, 1995.\n[Penix et al., 1997] J. Penix, P. Alexander, and K. Havelund: Declarative Specification of Software\nArchitectures. In Proceedings of the 12th IEEE International Conference on Automated Software\nEngineering(ASEC-97), Incline Village, Nevada, November 3-5, 1997.\n[Puerta et al., 1992] A. Puerta, J. Egar, S. Tu, and M. Musen: A Multiple-method Knowledge-Acquisition Shell\nfor the Automatic Generation of Knowledge-acquisition Tools, Knowledge Acquisition, 4(2):171-196,\n1992.\n[Puppe, 1993] F. Puppe: Systematic Introduction to Expert Systems: Knowledge Representation and Problem-\nSolvingMethods, Springer-Verlag, Berlin, 1993.\n[Schreiber et al., 1994] A. Schreiber, B. Wielinga, J. Akkermans, W. van de Velde, and R. de Hoog:\nCommonKADS. AComprehensive Methodologyfor KBSDevelopment, IEEE Expert, 9(6):28-37,1994.' metadata={'source': 'Semantic_Web.pdf', 'page': 248}
"
"page_content='249\n[Schuman & Fischer, 1997] J. Schuman and B. Fischer: NORA/HAMMER: Making Deduction-Based Software\nComponent Retrieval Practical. In: Proceedings of the 12th IEEE International Conference on AutomatedSoftware Engineering(ASEC-97), Incline Village, Nevada, November 3-5, 1997.\n[Shaw & Garlan, 1996] M. Shaw and D. Garlan: Software Architectures. Perspectives on an Emerging\nDiscipline, Prentice-Hall, 1996.\n[Stefik, 1995] M.Stefik:Introductionto Knowledge Systems, MorganKaufmanPubl., San Francisco, 1995.\n[Sycara et al., 2001] K. Sycara, M. Paolucci, M. van Velsen, and J. Giampapa: The RETSINA MAS\nInfrastructure. In: Robotics Institute Technical Report #CMU-RI-TR-01-05, 2001; available online athttp://www.cs.cmu.edu/~softagents/publications.html\n[Zaremski & Wing, 1997] A. Zaremski and J. Wing: Specification Matching of Software Components, ACM\nTransactionsonSoftware Engineeringand Methodology, 6(4):335-369, 1997.\nFootnotes\n1Vrije Universiteit Amsterdam, Division of Mathematics and Computer Science, De Boelelaan 1081a, 1081 HV\nAmsterdam, the Netherlands, {borys, dieter, ying}@cs.vu.nl\n2Stanford University, Stanford Medical Informatics, 251 Campus Dr., Suite 215, Stanford, CA 94305-5479,\nUSA, {crubezy, musen}@smi.stanford.edu\n3Intelligent Software Components, S.A., iSOCO Madrid, C. Hernandez de Tejada 7, 1st floor, 28027 Madrid,\nSpain, richard@isoco.com\n4University of Amsterdam, Department of Social Science Informatics (SWI), Roetersstraat 15, 1018 WB\nAmsterdam, The Netherlands, bob@swi.psy.uva.nl\n5The Open University, Knowledge Media Institute, Walton Hal, lMK7 6AA, Milton Keynes, United Kingdom,\ne.motta@open.ac.uk\n6http://www.swi.psy.uva.nl/projects/ibrow/home.html\n7Assuch, PSMsare a specialtype of software architectures([Shaw &Garlan, 1996]).\n8www.cs.vu.nl/~upml/. The recent versionisdescribed in[Omelayenko etal., 2000]\n9http://webonto.open.ac.uk\n10www.metacrawler.com' metadata={'source': 'Semantic_Web.pdf', 'page': 249}
"
"page_content='250\n11www.isi.edu/ariadne\n12www.aifb.uni-karlsruhe.de/Projekte/ontobroker/inhalt_en.html\n13Note that we distinguish this from automatically generated Web pages, which are called dynamic opposite to\nstatic HTMLpages.\n14Uses is a veryimportant attribute that will be explained later on.\n15http://dublincore.org/\n16www.w3c.org/xml\n17www.w3.org/XML/Schema\n18www.cs.vu.nl/~upml\n19www.w3c.org/rdf\n20See the next section for a detail description\n21http://protege.stanford.edu/\n22www.ontoknowledge.org\n23http://www.cs.man.ac.uk/~horrocks/DAML-OIL/\n24http://www.cs.cmu.edu/~softagents/retsina.html\n25http://www.swi.psy.uva.nl/projects/ibrow/' metadata={'source': 'Semantic_Web.pdf', 'page': 250}
"
"page_content='6. Ontologies Comeof Age\nDeborah L. McGuinness1\n1. Introduction: The web’s growing needs\nWe may be poised for the next major evolution of online\nenvironments. In the early days of the web, HTML pages weregenerated by hand. The pages contained information about how\nto present information on a page. Early adopters took to the\nweb quickly since it provided a convenient method for\ninformation sharing. Arguably, the generation of tools for\nmachine generation and management of web pages allowed the web\nto really take off. Tool platforms allowed non-technical\npeople to generate and publish web pages quickly and easily.The resulting pages typically included content and display\ninformation and targeted human readers (rather than targeting\nprograms or automatic readers).\nThe web continues to grow at an astounding rate with web\npages ubiquitously integrated into many aspects of business\nand personal life. However, web pages still preserve much of\ntheir character of being aimed at human consumption. Thus,\napplications such as search still require humans to review\nresults pages in order to find the right answer to theirqueries. While search engine advances such as Google [Google,\n2000] improve the situation, most people agree that finding\nthe exact information one is seeking on the web today is not' metadata={'source': 'Semantic_Web.pdf', 'page': 251}
"
"page_content='252\nas easy as one would hope. One reason for this is that\nanswers to search queries typically are a rank ordered list ofpages that may contain the answer to the query. The answers\nrarely are just the portion of the page that the search engine\n""thought"" contained the answer to the query. Additionally,\nweb pages typically do not contain markup information about\nthe contents of the page. If pages were marked up with\ninformation concerning what information or services could be\nobtained (and how that information or service could be\nobtained), then a page could be used more effectively by\nprograms to return the portion of the page (or the answer froma service) that contains a specific answer to a question.\nOnce web pages are aimed for machine or program consumption,\ninstead of human consumption, the next generation of the web\ncan be realized. The proliferation of markup languages aimed\nat marking up content and services instead of just\npresentation information can be viewed as support for this\nposition. Markup languages such as XML [XML 2000], RDF[Lassila 1998, Lassila-Swick, 1999], RDFS [Brickley-Guha,\n2000], DAML [Hendler-McGuinness, 2000], etc are becoming more\naccepted as users and application developers see the need for\nmore understanding of what is available from web pages.\nThe view presented in this paper is consistent with the\nvision being put forward by Tim Berners-Lee of the W3C\nconsortium. In a widely cited presentation [Berners-Lee,\n2000] at XML 2000 conference, Berners-Lee presented his vision' metadata={'source': 'Semantic_Web.pdf', 'page': 252}
"
"page_content='253\nof the semantic web as being machine processable. We support\nthis view as well. We believe that the next web evolutionrequires machines to understand the content of pages – both\nwhat can be obtained from pages and what that information\nmeans. Markup languages allow specification of this\ninformation. Berners-Lee offered an architecture diagram\n2in\nhis presentation that provides a nice foundation. We include\nit here in Figure 6.1.\nFigure 6.1 Berners-Lee’s Architecture\nHe shows the markup languages at the base (just above\nUnicode) for use in term specification (or in web speak,\n""resource"" definition). The next layer and the one we will\nconsider here, is the ontology layer. In this layer, we can\ndefine terms and their relationships to other terms. The next\nlayer is the logic layer. In this layer, we can deduce' metadata={'source': 'Semantic_Web.pdf', 'page': 253}
"
"page_content='254\ninformation, thereby allowing us to deduce implications of the\nterm definitions and relationships. In the rest of thispaper, we will discuss the ontology and logic layers, what\nthey have come to mean on the web, and how one might generate\nontologies and use them in applications.\n2. Ontologies\nThe term ontology has been in use for many years. Merriam\nWebster (http://www.m-w.com/home.htm ), for example, dates\nontology circa 1721 and provides two definitions (1) a branch\nof metaphysics concerned with the nature and relations of\nbeing and (2) a particular theory about the nature of being or\nthe kinds of existents. These definitions provide an abstract\nphilosophical notion of ontology. Mathematical or formal\nontologies have also been written about for many years. Smith\n[Smith, 1998] points out that at least as early as 1900, the\nnotion of a formal ontology has been distinguished from formal\nlogic by the philosopher Husserl. While ontologies (evenformal ontologies) have had a long history, they remained\nlargely the topic of academic interest among philosophers,\nlinguists, librarians, and knowledge representation\nresearchers until somewhat recently.\nOntologies have been gaining interest and acceptance in\ncomputational audiences (in addition to philosophical\naudiences). Guarino [Guarino, 1998] provides a nice collectionof fields that embrace ontologies including knowledge' metadata={'source': 'Semantic_Web.pdf', 'page': 254}
"
"page_content='255\nengineering, knowledge representation, qualitative modeling,\nlanguage engineering, database design, information retrievaland extraction, and knowledge management and organization.\nThat collection put together in early 1998 did not include\nnearly the web emphasis that is seen today. We would also\ninclude areas of library science [Dublin Core, 1999],\nontology-enhanced search (e.g., eCyc (http://www.e-Cyc.com/)\nand FindUR [McGuinness, 1998]), possibly the largest one, e-\ncommerce (e.g., Amazon.com, Yahoo Shopping, etc.), and\nconfiguration.\nIn this paper, we will be restricting our sense of\nontologies to those we see emerging on the web. Today’s use\nof ontology on the web has a different slant from the previous\nphilosophical notions. One widely cited definition of an\nontology is Gruber’s [Gruber, 1993] ""A specification of a\nconceptualization"". We will use this notion and expand upon it\nin our use of the term.\nPeople (and computational agents) typically have some\nnotion or conceptualization of the meaning of terms. Software\nprograms sometimes provide a specification of the inputs and\noutputs of a program, which could be used as a specification\nof the program. Similarly ontologies can be used to provide a\nconcrete specification of term names and term meanings.\nWithin the line of thought where an ontology is a\nspecification of the conceptualization of a term, there are\nstill a number of potential interpretations. Web ontologies' metadata={'source': 'Semantic_Web.pdf', 'page': 255}
"
"page_content='256\nmay be viewed as a spectrum of detail in their specification.\nOne might visualize a simple (linear) spectrum of definitionsin Figure 6.2\n3below.\nWhat isan Ontology?What isan Ontology?\nCatalog/\nIDGeneral\nLogical\nconstraints\nTerms/\nglossaryThesauri\n“narrower\nterm”\nrelationFormal\nis-aFrames\n(properties)\nInformal\nis-aFormal\ninstanceValue\nRestrs.Disjointness,\nInverse,part-\nof…\nFigure 6.2 An Ontology Spectrum.\nOne of the simplest notions of a possible ontology may be\na controlled vocabulary – i.e., a finite list of terms.\nCatalogs are an example of this category. Catalogs can\nprovide an unambiguous interpretation of terms – for example,\nevery use of a term, say car – will denote exactly the same\nidentifier – say 25.\nAnother potential ontology specification is a glossary (a\nlist of terms and meanings). The meanings are specified\ntypically as natural language statements. This provides a\nkind of semantics or meaning since humans can read the natural' metadata={'source': 'Semantic_Web.pdf', 'page': 256}
"
"page_content='257\nlanguage statements and interpret them. Typically,\ninterpretations are not unambiguous and thus thesespecifications are not adequate for computer agents, thus this\nwould not meet the criteria of being machine processable.\nThesauri provide some additional semantics in their\nrelations between terms. They provide information such as\nsynonym relationships. In many cases their relationships may\nbe interpreted unambiguously by agents. Typically thesauri do\nnot provide an explicit hierarchy (although with narrower and\nbroader term specifications, one could deduce a simple\nhierarchy).\nEarly web specifications of term hierarchies, such as\nYahoo’s, provide a basic notion of generalization and\nspecialization. Yahoo, for example, provides a small number\nof top-level categories such as apparel and the category\ndresses as a kind of (women’s) apparel. Some people consider\nthe previous categories (of catalogues, glossaries, and\nthesauri) to be ontologies but many prefer to have an explicithierarchy included before something is considered an ontology.\nYahoo, for example, does provide an explicit hierarchy. Its\nhierarchy is not a strict subclass or ""isa"" [Brachman, 1983]\nhierarchy however. This point was distinguished on the\nspectrum slide since it seems to capture many of the naturally\noccurring taxonomies on the web. In these organization\nschemes, it is typically the case that an instance of a more\nspecific class is also an instance of the more general class' metadata={'source': 'Semantic_Web.pdf', 'page': 257}
"
"page_content='258\nbut that is not enforced 100% of the time. For example, the\ngeneral category apparel includes a subcategory women (whichshould more accurately be titled women’s apparel) which then\nincludes subcategories accessories and dresses. While it is\nthe case that every instance of a dress is an instance of\napparel (and probably an instance of women’s dress), it is not\nthe case that a dress is a woman and it is also not the case\nthat a fragrance (an instance of a women’s accessory) is an\ninstance of apparel. This mixing of categories such as\naccessories in web classification schemes is not unique to\nYahoo – it appears in many web classification schemes\n4. Without\ntrue subclass (or true ""isa"") relationships, we will see that\ncertain kinds of deductive uses of ontologies become\nproblematic.\nThe next point on the figure includes strict subclass\nhierarchies. In these systems if A is a superclass of B, then\nif an object is an instance of B it necessarily follows that\nthe object is an instance of A. For example, if ""Dress"" is asubclass of ""Apparel"" and ""MyFavoriteDress"" is an instance of\n""Dress"", then it follows that ""MyFavoriteDress"" is an instance\nof ""Apparel"". Strict subclass hierarchies are necessary for\nexploitation of inheritance. The next point on the ontology\nspectrum includes formal instance relationships. Some\nclassification schemes only include class names while others\ninclude ground individual content. This point includes\ninstances as well.' metadata={'source': 'Semantic_Web.pdf', 'page': 258}
"
"page_content='259\nThe next point includes frames5. Here classes include\nproperty information. For example, the ""Apparel"" class mayinclude properties of ""price"" and ""isMadeFrom"". My specific\ndress may have a price of $100 and may be made from cotton.\nProperties become more useful when they are specified at a\ngeneral class level and then inherited consistently by\nsubclasses and instances. In a consumer hierarchy, a general\ncategory like consumer product might have a ""price"" property\nassociated with it. Possibly apparel would be the general\ncategory to which the property ""isMadeFrom"" is associated.\nThis would mean that the domain of ""isMadeFrom"" is apparel.All subclasses of these categories would inherit these\nproperties.\nA more expressive point in the ontology spectrum includes\nvalue restrictions. Here we may place restrictions on what\ncan fill a property. For example, a ""price"" property might be\nrestricted to have a filler that is a number (or a number in a\ncertain range) and ""isMadeFrom"" may be restricted have fillersthat are a kind of material. One can now see a possible\nproblem with a classification scheme that does not support a\nstrict ""isa"" or subclass relationship. For example, if\n""Fragrance"" were a subclass of ""Apparel"", it would inherit the\nproperty ""isMadeFrom"" and the value restriction of material\nthat was stated.\nAs ontologies need to express more information, their\nexpressive requirements grow. For example, we may want to' metadata={'source': 'Semantic_Web.pdf', 'page': 259}
"
"page_content='260\nfill in the value of one property based on a mathematical\nequation using values from other properties. Some languagesallow ontologists to state arbitrary logical statements. Very\nexpressive ontology languages such as that seen in Ontolingua\n[Farquhar et al, 1997] or CycL allow ontologists to specify\nfirst order logic constraints between terms and more detailed\nrelationships such as disjoint classes, disjoint coverings,\ninverse relationships, part-whole relationships, etc.\nIn this paper, we will require the following properties to\nhold in order to consider something an ontology.\nSpecifications meeting these properties will be referred to assimple ontologies.\n•Finite controlled (extensible) vocabulary\n•Unambiguous interpretation of classes and term relationships\n•Strict hierarchical subclass relationships between classes\nWe consider the following properties typical but not\nmandatory:\n•Property specification on a per-class basis\n•Individual inclusion in the ontology\n•Value restriction specification on a per-class basis\nFinally, the following properties may be desirable but not\nmandatory nor typical:\n•Specification of disjoint classes\n•Specification of arbitrary logical relationships between\nterms' metadata={'source': 'Semantic_Web.pdf', 'page': 260}
"
"page_content='261\n•Distinguished relationships such as inverse and part-whole\nThe line in our chart is drawn such that everything to the\nright of it will be called an ontology and meet at least the\nfirst three conditions stated above. Additionally, everything\nto the right of it can be used as a basis for inference.\n3. Simple Ontologies and Their Uses\nWe will now consider ontologies and their impact on\napplications. We break this section into two parts: uses of\nsimple ontologies and uses for more sophisticated ontologies.\nWe do this because we acknowledge that building the more\ncomplicated ontologies may be cost prohibitive for certainapplications.\nSimple ontologies are not as costly to build and\npotentially more importantly, many are available. Simple\nontologies are available in many forms – many exist as\nfreeware on the web today and also many exist as internal\ninformation organization structures within companies,\nuniversities, etc. Some collaborative efforts exist such as\nDMOZ (\nwww.dmoz.com) that are generating large simple\nontologies. DMOZ, for example, leverages over 35,000volunteer editors and at submission time, had over 360,000\nclasses in its taxonomy. Additionally, some more\nsophisticated ontologies are available today. For example,\nthe unified medical language system (UMLS -\nhttp://www.nlm.nih.gov/research/umls/ and [Humphreys &' metadata={'source': 'Semantic_Web.pdf', 'page': 261}
"
"page_content='262\nLindberg, 1993]) developed by the national library of medicine\nis a large sophisticated ontology about medical terminology.Some companies such as Cycorp (\nwww.cyc.com) are making\navailable portions of large, detailed ontologies. We will\nfurther address the issue of ontology acquisition and\nmaintenance later, but for now, we just wanted to make the\npoint that many simple and some sophisticated ontologies are\neasily available today.\nNow lets consider some of the ways that simple ontologies\nmay be used in practice.\nFirst, they provide a controlled vocabulary . This by\nitself can provide great leverage since users, authors, and\ndatabases can all use terms from the same vocabulary. In\naddition programs can generate interfaces that encourage usage\nof the controlled terms. The result is that people use the\nsame set of terms. Of course, some of the terms may still be\nused with different senses, but common term usage is a start\nfor interoperability.\nSecond, a simple taxonomy may be used for site\norganization and navigation support . Many web sites today\nexpose the top levels of a generalization hierarchy of terms\nas a kind of browsing structure. The categories are typically\nhot and a user may click on them to expand the subcategories.\nThird, taxonomies may be used to support expectation\nsetting. It is an important user interface feature that users\nbe able to have realistic expectations of a site. If they may' metadata={'source': 'Semantic_Web.pdf', 'page': 262}
"
"page_content='263\nexplore even the top level categories of the hierarchy, they\ncan quickly determine if the site might have content (and/orservices) of interest to them.\nFourth, taxonomies may be used as\n""umbrella"" structures\nfrom which to extend content . Some freely available ontologies\nare attempting to provide the high level taxonomic\norganization from which many efforts may inherit terms. The\nUNSPSC (Universal Standard Products and Services\nClassification www.unspsc.org) is one such categorization\nscheme. It was jointly done by the United Nations Development\nProgram and Dun & Bradstreet and was aimed at providing theinfrastructure for interoperability of terms in the domains of\nproducts and services. It provides a classification scheme\n(with associated numbers). For example, Category 50 – Food,\nBeverage, and Tobacco Products has a subclass family 5010\ncalled ""Fruits and vegetables and nuts and seeds\n6"" which in\nturn contains a subclass 501015 called Vegetables, which in\nturn has a subclass commodity 50101538 called freshvegetables. The numbers provide a unique identification for\neach term and also encode the hierarchy. A number of e-\ncommerce applications today are looking for such umbrella\norganization structures and in fact many have chosen to be\ncompliant with the UNSPSC. Most applications will need to\nextend these ontologies, but if applications need to\ncommunicate between a number of content providers, it is\nconvenient to use a shared umbrella or upper level ontology.' metadata={'source': 'Semantic_Web.pdf', 'page': 263}
"
"page_content='264\nFifth, taxonomies may provide browsing support . Content on\na site may be tagged with terms from the taxonomy. This maybe done manually in the style of Yahoo or it may be done\nautomatically (possibly using a clustering approach). Once a\npage (or service) is meta-tagged with a term chosen from a\ncontrolled vocabulary, then search engines may exploit the\ntagging and provide enhanced search capabilities.\nSixth, taxonomies may be used to provide\nsearch support.\nA query expansion method may be used in order to expand a user\nquery with terms from more specific categories in the\nhierarchy. We exploited this approach in our work on FindUR[McGuinness,1998] and found that under certain conditions\n(such as short document length and limited content areas),\nquery expansion can radically improve search.\nSeventh, taxonomies may be used to\nsense disambiguation\nsupport. If the same term appears in multiple places in a\ntaxonomy, an application may move to a more general level in\nthe taxonomy in order to find the sense of the word. Forexample, if an ontology contains the information that Jordan\nis an instance of a BasketballPlayer and also an instance of a\ncountry, an application may choose to query a user searching\nfor Jordan if she is interested in basketball players or\ncountries. Sense disambiguation using ontologies may be seen\nin the work of eCyc along with Hotbot and Lycos.' metadata={'source': 'Semantic_Web.pdf', 'page': 264}
"
"page_content='265\n4. Structured Ontologies and Their Uses\nUp to this point, we have focused on simple taxonomies for\nusage in applications. Once ontologies begin to have more\nstructure however, they can provide more power in\napplications. Once the ontologies have more structure than\nsimple generalization links, property information can be used\nin many forms.\nFirst, they can be used for simple kinds of consistency\nchecking. If ontologies contain information about properties\nand value restrictions on the properties, then type checking\ncan be done within applications. For example, if a class\ncalled ""Goods"" has a property called ""price"" that has a value\nrestriction of number, then something that is known to be of\ntype ""Goods"" that has its ""price"" property filled in with a\nvalue that is not a number can be caught as an error. This\njust exploits simple value restrictions that designate the\ntype of a value. A value restriction might include a range,for example, a number between 10 and 100. Then if the ""price""\nis 10,000, it is out of the range and can be determined to be\nan error.\nSecond ontologies may be used to provide\ncompletion.A n\napplication may obtain a small amount of information from a\nuser, such as the fact that she is looking for a high-\nresolution screen on a pc, and then have the ontology expandthe exact pixel range that is to be expected. This can be' metadata={'source': 'Semantic_Web.pdf', 'page': 265}
"
"page_content='266\ndone simply by defining what the term ""HighResolutionPc"" is\nwith respect to a particular pixel range on two roles –""verticalResolution"" and ""horizontalResolution"". Similarly,\ninformation may interact. For example, a medical system may\nobtain information from an ontology that if a patient is\nstated to be a man, then the gender of the patient is ""male""\nand that information may be used to determine that a question\nconcerning whether or not the patient is pregnant should not\nbe asked since there could be information in the system that\nthings whose gender is male are disjoint from things that are\npregnant.\nThird, ontologies may be able to provide\ninteroperability\nsupport. In the simple case of considering controlled\nvocabularies, there is enhanced interoperability support since\ndifferent users and applications are using the same set of\nterms. In simple taxonomies, we can recognize when one\napplication is using a term that is more general or more\nspecific than another term and facilitate interoperability.In more expressive ontologies, we may have a complete\noperational definition for how one term relates to another\nterm and thus, we can use equality axioms or mappings to\nexpress one term precisely in terms of another and thereby\nsupport more ""intelligent"" interoperability. For example, an\nontology may include a definition that a ""StanfordEmployee"" is\nequal to a ""Person"" whose ""employer"" property is filled with\nthe individual ""StanfordUniversity"". This definition may be' metadata={'source': 'Semantic_Web.pdf', 'page': 266}
"
"page_content='267\nused to expand the term ""StanfordEmployee"" in an application\nthat does not understand either ""StanfordEmployee"" or""Employee"" but does understand the terms ""Person"", ""employer"",\nand ""StanfordUniversity"".\nFourth, ontologies may be used to\nsupport validation and\nverification testing of data (and schemas). If an ontology\ncontains class descriptions, such as ""StanfordEmployee"", these\ndefinitions may be used as queries to databases to discover\nwhat kind of coverage currently exists in datasets. For\nexample, if one was going to expose the class\n""StanfordEmployee"" on an interface to some application, itwould be useful to know first if the dataset contained any\ninstances of ""Person"" whose ""employer"" property was filled\nwith the value ""Stanford"". Additionally, if in a simple data\nmodel, we stated that a ""Person"" had at most one ""employer"",\nthen we could use that information to check to see if any\ncurrent information on ""Person""s in the dataset contained more\nthan one ""employer"" value. Similarly, checks could be done tosee if there were currently ""Person""s in the dataset that were\nknown to be ""Employee""s yet did not have a value for the\n""employer"" property (thereby showing that the dataset is not\ncomplete). Chimaera [McGuinness-et-al, 2000] is an example\nontology evolution environment that provides a set of\ndiagnostics tests for checking ontologies for both problems in\nthe ontology definitions as well as problems with the instance\ndata. It looks for provable inconsistencies as well as' metadata={'source': 'Semantic_Web.pdf', 'page': 267}
"
"page_content='268\nconditions that ""typically"" reflect situations where an\nontology or the data may need to be fixed.\nFifth, ontologies containing markup information may encode\nentire test suites . An ontology may contain a number of\ndefinitions of terms, some instance definitions, and then\ninclude a term definition that is considered to be a query –\nfind all terms that meet the following conditions. Markup\ninformation could be encoded with this query to include what\nthe answer should be, thus providing enough information to\nencode regression testing data. We provide one such example\nontology in http://ksl.stanford.edu/projects/DAML/chimaera-\njtp-cardinality-test1.daml . The ontology contains a\nregression test suite for checking cardinality inferences\n(such as persons having two employers yet being stated to have\nat most one employer) in a Stanford Theorem prover\n(http://www.ksl.Stanford.EDU/software/jtp/ ).\nSixth, ontologies can provide the foundation for\nconfiguration support . Class terms may be defined so that\nthey contain descriptions of what kinds of parts may be in a\nsystem. Additionally interactions between properties can be\ndefined so that filling in a value for one property can cause\nanother value to be filled in for another slot. For example,\none may generate an ontology of information about home theatre\nproducts as is done in a small configurator example using a\nsimple description logic-based system [McGuinness-et-al,\n1995]. Terms such as ""Television"", ""Amplifier"", ""Tuner"", etc' metadata={'source': 'Semantic_Web.pdf', 'page': 268}
"
"page_content='269\nare defined. Additionally, information connecting the terms\ntogether is included. A class of ""HighQualityTelevision""s isdefined so that users may choose from this class and the\nconfigurator will automatically fill in limited sets of\nmanufacturers to choose from, minimum diagonal values, minimum\nprice ranges etc. Also, information is encoded that\npropagates restrictions from one component to another. For\nexample, some of the components in this system were meant to\nbe sold in pairs. If one buys one particular kind of speaker\n(which is only sold in pairs, thus two speakers are added to\nthe parts list), then restrictions on particular speakerstands appear in the configuration specification. There are\nmany such configuration examples using ontologies, a few of\nwhich are described in a special configuration issue of\nArtificial Intelligence for Engineering Design, Analysis, and\nManufacturing Journal [Darr et al., 1998].\nSeventh, ontologies can\nsupport structured, comparative,\nand customized search . For example, if one is looking for\ntelevisions, a class description for television may be\nobtained from an ontology, its properties may be obtained\n(such as diagonal, price, manufacturer, etc), and then a\ncomparative presentation may be made of televisions by\npresenting the values of each of the properties. Those\nproperties can also be used to provide a form for users to\nfill in so that they may provide a detailed set of\nspecifications about the items they are looking to find. This' metadata={'source': 'Semantic_Web.pdf', 'page': 269}
"
"page_content='270\nalso provides the foundation for providing a number of\ndifferent search interfaces – the simple text box where theuser is expected to type a textual query along with search\ninterfaces exposing important properties of products that can\nprovide a structured search query. More sophisticated\nontologies may be generated that mark which properties are\nmost useful to present in comparative analyses so that users\nmay have concise descriptions of the products instead of\ncomparisons in complete detail. Thus, ontologies with markup\ninformation may also be used to prune comparative searches.\nEighth, ontologies may be used to\nexploit generalization/\nspecialization information . If a search application finds\nthat a user’s query generates too many answers, one may\ndissect the query to see if any terms in it appear in an\nontology, and if so, then the search application may suggest\nspecializing that term. For example, if one did a search for\nconcerts in the San Francisco Bay area and obtained too many\nanswers, a search engine might look up concert in an ontologyand discover that there are subclasses of concert (and it may\nalso discover that there are specific concert locations in the\nBay area).\nThe search engine could then choose to present the user\nwith the option of looking for a particular kind of concert\n(say rock concert) which would restrict the search, thereby\nreturning fewer answers. Further the search engine could\nproactively run queries in the background while waiting for' metadata={'source': 'Semantic_Web.pdf', 'page': 270}
"
"page_content='271\nuser input or also cache information from popular queries.\nThen the search engine could also present a list of subclassesof concerts and provide the user with the approximate number\nof retrievals the user would get if they specialised their\nquery in the different manners. These are just some of the\nways in which ontologies may be used to refine search queries.\nWe could also look at the ontology to provide alternative\nvalues (by looking at siblings in the ontology) for terms\nspecified in the search query.\nWe have not claimed to present an exhaustive list of the\nways in which ontologies may be used in applications. Theabove lists are illustrative of some ways that ontologies have\nbeen used to support intelligent applications.\n5. Ontology Acquisition\nAfter having presented some of the ways ontologies are\nuseful components in applications, we will now look at some\nsources of ontologies. As mentioned previously, manyontologies exist in the public domain. It may be possible to\nstart with an existing industry standard and use that as the\nontology starting point. Most likely application developers\nwill need to modify and/or extend ontologies that are\navailable and were developed for other uses. Still, one\nmethodology for obtaining ontologies is to begin with an\nindustry standard ontology and then modify or extend it.' metadata={'source': 'Semantic_Web.pdf', 'page': 271}
"
"page_content='272\nAnother methodology is to semi-automatically generate a\nstarting point for an ontology. Many taxonomic structuresexist on the web or in the table of contents of documents.\nOne might crawl certain sites to obtain a starting taxonomic\nstructure and then analyze, modify, and extend that.\nOne question is where to look for existing ontologies or\nsources of information to be crawled. Many controlled\nvocabularies are being made available today. Sometimes\nstandards organizations, such as NIST (the National Institute\nof Standards and Technology -\nhttp://www.nist.gov/ ), support\nefforts in producing controlled vocabularies and ontologies.Some consortiums are forming to generate ontologies. See, for\nexample, RosettaNet (\nhttp://www.rosettanet.org ) in the area of\ninformation technology, electronic technology, electronic\ncomponents, and semiconductor manufacturing. They are\ncreating industry-wide open e-business standards and providing\na language for business processes. Sometimes trade\norganizations provide class hierarchies on their sites thatcan also be used as a standard structured controlled\nvocabulary. There are also broad sources of class structures.\nEssentially every e-commerce site today encodes at least a\ntaxonomic organization of terms. Sites like Amazon in\norganizing their book and music information provides a very\nbroad organization of information. Also, some government\nprograms are generating large ontologies that are being put\ninto the public domain for reuse, such as many ontologies' metadata={'source': 'Semantic_Web.pdf', 'page': 272}
"
"page_content='273\ngenerated in the Darpa High Performance Knowledge Base\nProgram, the Rapid Knowledge Formation Program(\nhttp://reliant.teknowledge.com/RKF/ ).\nAnother emerging trend is the use of markup languages.\nSome pages are being annotated using markup languages such as\nXML, RDF, DAML, etc. The pages including the annotations may\nbe using markup terms from controlled vocabularies. Some\nlibraries are emerging of ontologies potentially of use for\nmarkup. For example, the DAML program maintains a library of\nDAML ontologies in http://www.daml.org/ontologies/ .\nMuch of this section has introduced the idea of obtaining\neither a simple or complex ontology as a starting point and\nthen analyzing, modifying, and maintaining it over time. In\nthe next section, we will address the issue of implications\nand needs from ontology-based applications.\n6. Ontology-related Implications and Needs\nWhen starting an ontology-based application, the two major\nconcerns will be language and environment.\nLanguage:When considering ontology-related applications,\ninevitably the issue of ontology language will arise. An\nontology must be encoded in some language. If one is using a\nsimple ontology, few issues arise. However, if one is\nconsidering a more complex ontology, expressive power of a\nrepresentation and reasoning needs to be considered. As withany problem where a language is being chosen, it must be' metadata={'source': 'Semantic_Web.pdf', 'page': 273}
"
"page_content='274\nepistemologically adequate -- the language must be able to\nexpress the concepts in the domain. For example, if one wantsto do range checking in an e-commerce application, then it\nwould be unwise to choose a simple language that only contains\nsubclass and instance relationships and does not include\nproperty specification with value restrictions. There are a\nnumber of candidate ontology languages – in fact there are so\nmany that some research efforts arose in the last decade in\norder to produce standard specification languages (such as the\nKRSS effort – the Knowledge Representation System\nSpecification effort [Patel-Schneider-Swartout, 1992]),interchange formats (such as KIF -the Knowledge Interchange\nFormat which is now a proposed ANSI standard [KIF]), and\ncommon application programming interface standards (such as\nOKBC – Open Knowledge Base Connectivity [Chaudhri et al.,\n1997]).\nOne does not just want to consider representational\nconstructs in a language; one also wants to consider thereasoning that may be supported in the language. Some fields,\nsuch as description logics (\nwww.dl.kr.org), make this a\ncentral focus in language design. They look for tradeoffs\nthat maintain expressive power needed by applications and also\nconsider what it takes to provide inference engines that can\nprovide deductions based on the constructs represented in the\nlanguage. For example, if a language supports the notion of\nstating that two classes are disjoint, then a reasoning engine' metadata={'source': 'Semantic_Web.pdf', 'page': 274}
"
"page_content='275\nshould be able to be built that enforces the constraint that\nthe classes are disjoint. Thus, an inference engine should beable to warn a user if she is creating an instance or subclass\nof two disjoint classes.\nAlso, a language should be usable with existing platforms\nand should be something that non-experts can use to do their\nconceptual modeling. The web is clearly the most important\nplatform with which to be compatible today, thus any language\nchoice should be able to leverage the web. Additionally,\nframe-based systems have had a long history of being thought\nof as conceptually easy to use, thus a frame paradigm may beworth considering.\nLanguage efforts seen today attempt to take the best of\nthe research on expressive power along with reasoning power\nand provide representationally powerful languages that have\nknown reasoning properties, and of course, are efficient in\ntheir implementations. The DARPA Agent Markup Language\nprogram, for example, attempted to take the emerging weblanguages of today such as XML and RDF and create a language\nthat is web compatible, incorporates the ease of use of frame-\nbased systems, and draws on the 20 year history of description\nlogics in choosing language constructs along with reasoning\nparadigms. The resulting language –DAML+OIL – attempts to\nmerge the best of existing web languages, description logics,\nand frame-based systems. OIL, a modern description logic' metadata={'source': 'Semantic_Web.pdf', 'page': 275}
"
"page_content='276\naimed also at web compatibility, [Bechhofer et al., 2000]\nattempts to provide a layered approach to language design.\nEnvironment:Another consideration is how to generate,\nanalyze, modify, and maintain an ontology over time. If the\nontology is to be generated and maintained by subject matter\nexperts (and not require knowledge experts), some ontology\nsupport tools will be needed. There are a number of simple\nontology tools available commercially. Some information\nretrieval companies such as Verity ( www.verity.com) have\nprovided simple editors for generating and browsing simple\ngeneralization hierarchies. Verity, for example, has provideda ""topic editor"" for years which will support users in\ngenerating taxonomies and utilizing them in search queries.\nResearch efforts have existed for many years in producing\nontology toolkits. Stanford University’s previously mentioned\ntools of Ontolingua [Farquhar et al, 1997] and Chimaera\n[McGuinness et al., 2000] are just two examples, however\nexamples abound including OilEd (\nhttp://img.cs.man.ac.uk/oil/ )\nfrom Manchester University and Protégé [Protégé 2000] from\nStanford Medical Informatics, just to name a few. Application\ndevelopers may choose commercial vendors as their toolkit\nprovider, sophisticated research applications as the base, or\nsomewhere in between. Some companies with extensive ontology\nneeds such as VerticalNet ( http://www.verticalnet.com/ ) have\nor are developing their own ontology tools in order to build\nontologies that meet the needs of a sophisticated commercial' metadata={'source': 'Semantic_Web.pdf', 'page': 276}
"
"page_content='277\nontologist. Their tools were built after analyzing existing\nresearch prototypes and were then designed to meet thecommercial standards required in diverse, collaborative, e-\ncommerce applications of today.\nWhen choosing to use or build an ontology environment,\nthere are a number of issues that should be considered\nincluding the following:\n•Collaboration and distributed workforce support . Some\nontology environments allow users to share a common\nworkspace –i.e., see each other’s work environments. This\ncan be particularly useful for debugging. Ontolingua, forexample, supports this notion through its use of sessions.\nAdditionally, when workers are distributed in location, it\nbecomes important to have an environment that allows access\nfrom multiple places. This is becoming much more typical\ntoday with server/client architectures. Finally,\ncollaboration may require concurrency control, locking, and\na kind of versioning and permission system.\n•Platform interconnectivity . As applications become embedded\nin more complex platforms, it becomes important forenvironments to be able to read and write compatibleformats, be able to be integrated with multiplehardware/software environments, etc. Java-basedapplications provide a convenient approach to this problem\nbut other systems that support multiple input and output\nformats, understand common standards, and providetranslation and mapping services may help.' metadata={'source': 'Semantic_Web.pdf', 'page': 277}
"
"page_content='278\n•Scale. any ontology applications today may need to scale a\nfew orders of magnitude larger than past applications. It\nis important to look at scaling in terms of size ofontologies as well as numbers of simultaneous users.\n•\nVersioning. As applications become long-lived and also are\ndeployed in different environments possibly internationally,\nit becomes important to be able to support many versions ofontologies. In typical software engineering environments,there are source code control systems and versioning thataddress these issues and special ontology-oriented changemanagement systems are evolving.\n•\nSecurity. Some applications will have needs for differing\naccess to portions of the ontology. Thus, it is important\nto have an environment that can expose portions of theontology based on a security model. The security model may\nneed to support both read and write access.\n•\nAnalysis. Environments are expected to support acquisition,\nevolution, and maintenance of ontologies. Thus, it would becommon to expect ontologies to have periods when they are\nincomplete and incorrect. Analysis support that can focusthe user’s attention in areas that are likely to needmodification can be quite useful. The Chimaera ontologyenvironment, for example, supports a number of diagnostictests aimed at helping users identify provably incorrectontologies as well as possible problems.\n•\nLifecycle issues . As ontologies become larger and longer\nlived, it would be expected that application developers\nmight be maintaining ontologies over many years.Additionally, they may be constantly merging new ontologiesinto their system as their applications interconnect withmore diverse systems. Thus, it becomes important toconsider support for ontology evolution issues such asmerging terms, breaking apart terms, multiple name spaces,' metadata={'source': 'Semantic_Web.pdf', 'page': 278}
"
"page_content='279\nsource code control systems, truth maintenance systems,\nregression testing systems, etc.\n•Ease of use. Even if an environment has everything an\napplication developer may need, if it is difficult for the\nuser to decide how to use parts of the environment, they maynot get used. Thus training materials, tutorials,conceptual modeling support, graphical browsing tools, etc.\nall may be important. We have written separately on some of\nthe issues required to make description logic-based systemsusable in mainstream use. [McGuinness-Patel-Schneider,1998, Brachman et al., 1999].\n•\nDiverse user support . Some environments are made for power\nusers, some for naïve users, and some have settings that\nallow users to customize environments as appropriate to thetype of user. It is important to determine if theenvironment can support all of the types of usersanticipated. The support should be in all areas along thespectrum of initially generating the ontology in theplanning and conceptual modeling state, to evolving it,diagnosing it, maintaining it, etc.\n•\nPresentation Style . Possibly closely related to user type is\npresentation style. Some users need to see extensive\ndetail, some need pruned information, and some needabstractions. Presentation of information may be textual,graphical, or other. While no one environment needs tosupport all presentation styles, it is important that theenvironment is extensible enough to have new presentationmethods added when needed.\n•\nExtensibility. It will be impossible to anticipate all of\nthe needs an application will have. Thus, it is important\nto use an environment that can adapt along with the needs of\nthe users and the projects.' metadata={'source': 'Semantic_Web.pdf', 'page': 279}
"
"page_content='280\nConclusions\nIn this paper, we have noted the emergence of ontologies\nfrom academic obscurity into mainstream business and practice\non the web. We have introduced the term ontology along with a\nspectrum of properties that ontologies may exhibit. We have\nprovided criteria necessary, prototypical, and desirable for\nsimple and complex ontologies. We have also identified ways\nthat ontologies (both simple and complex) are being and may beused to provide value in many types of applications. We have\naddressed the issue of acquiring ontologies and then addressed\nthe issues of maintenance and evolution. Finally, we have\nidentified a number of ontology-related issues that arise from\nthe emergence of ontologies focusing on ontology language and\nenvironment. Finally, we concluded with issues that are\ngaining importance as ontologies grow in their importance and\ncentrality in diverse applications.\nAcknowledgements\nThis paper has evolved as a result of a talk initially\npresented at the Semantics for the Web Seminar of the Dagstuhl\nSeminar series in March, 2000\n(http://www.dagstuhl.de/DATA/Reports/00121/ and\nhttp://www.semanticweb.org/events/dagstuhl2000/ ). The ideas\nhave been enhanced by many people including many of mycollaborators on past ontology environments, in particular' metadata={'source': 'Semantic_Web.pdf', 'page': 280}
"
"page_content='281\ncollaborators on the CLASSIC (particularly Patel-Schneider,\nFindUR, and Chimaera environments. It also benefited fromjoint work with Ora Lassila using it as a foundation for a\nportion of work on the role of frame-based representation on\nthe semantic web. Additionally, support from the DARPA HPKB,\nRKF, and DAML programs has helped finance it, motivate, and\nguide it. Finally, it is the result of a longstanding interest\nin ontologies and the meanings of terms, first inspired by\nRichard McGuinness, my father. He generated the first spark\nmany years ago and then helped inspire me that the time had\ncome to take the work to the masses. His influence was stillfelt in the initial Dagstuhl talk but he has since passed and\nthus my continuing work is dedicated to him.\nReferences\n[Bechhofer et al., 2000] Sean Bechhofer, Jeen Broekstra, Stefan Decker, Michael Erdmann, Dieter Fensel,\nCarole Goble, Frank van Harmelen, Ian Horrocks, Michel Klein, Deborah McGuinness, Enrico Motta,\nPeter Patel-Schneider, Steffen Staab, and Rudi Studer, ""An informal description of Standard Oil and\nInstance OIL"", available on-line as http://www.ontoknowledge.org/oil/downl/oil-whitepaper.pdf\n[Berners-Lee, 2000] Tim Berners-Lee, ""Semantic Web on XML"", Keynote presentation for XML 2000. Slides\navailable at: http://www.w3.org/2000/Talks/1206-xml2k-tbl/slide1-0.html . Reporting available at:\nhttp://www.xml.com/pub/a/2000/12/xml2000/timbl.html\n[Berners-Lee, 1999] Tim Berners-Lee, ""Weaving the Web"", Harper, San Francisco, 1999.\nhttp://www.harpercollins.com/hc/bookpage/index.asp?isbn=0062515861\n[Berners-Lee et al, 1998] Tim Berners-Lee, Roy Fielding, and Larry Masinter, ""Uniform Resource Identifiers\n(URI): Generic Syntax"", Internet Draft Standard RFC 2396, August 1998; available on-line as\nhttp://www.isi.edu/in-notes/rfc2396.txt.' metadata={'source': 'Semantic_Web.pdf', 'page': 281}
"
"page_content='282\n[Brachman, 1983] Ronald J. Brachman, R. J. What ISA Is and Isn\'t: An Analysis of Taxonomic Links in\nSemantic Networks. IEEE Computer, 16 (10),30--6. 1983.\n[Brachman et al., 1999] Ronald J. Brachman, Alex Borgida, Deborah L. McGuinness ,a n dPeter F. Patel-\nSchneider . ""Reducing"" CLASSIC to Practice: Knowledge Representation Theory Meets Reality. In\nArtificial Intelligence 114(1-2) pages203-237, October, 1999.\n[Brickley & Guha, 2000] Dan Brickley & R.V.Guha, ""Resource Description Framework (RDF) Schema\nSpecification 1.0"", W3C Candidate Recommendation 27 March 2000, World Wide Web Consortium,\nCambridge (MA);available on-line as http://www.w3.org/TR/rdf-schema/.\n[Broekstra et. al., 2001] J. Broekstra, M. Klein, S. Decker, D. Fensel, F. van Harmelen, and I. Horrocks.\n""Enabling knowledge representation on the Web by Extending RDF Schema"", Proceedings of the\nInternationalConference onthe World WideWeb(WWW10), May2001.\n[Chaudhri et. al., 1998] Vinay Chaudhri, Adam Farquhar, Richard Fikes, Peter Karp, and James Rice; ""OKBC:\nAProgrammatic Foundationfor Knowledge Base Interoperability"", AAAI 1998.\n[Darr et. al., 1998] Tim Darr, Mark Fox, and Deborah L. McGuinness, editors. Special Configuration Issue of\nthe ArtificialIntelligence for EngineeringDesign, Analysis, and ManufacturingJournal1998.\n[Dublin Core, 1999] ""Dublin Core Metadata Element Set, Version 1.1: Reference Description"", Dublin Core\nMetadata Initiative, 1999;available on-line ashttp://purl.org/dc/documents/rec-dces-19990702.htm\n[Farquhar et al, 1997] Adam Farquhar, Richard Fikes, and James Rice; ""The Ontolingua Server: a Tool for\nCollaborative OntologyConstruction"", Intl. Journal ofHuman-Computer Studies 46, 1997\n[Fikes & Kehler, 1985] Richard Fikes & Tom Kehler, ""The Role of Frame-Based Representation in Reasoning"",\nCACM 28(9):904-920, 1985.\n[Fikes & McGuinness, 2001] Richard Fikes & Deborah L. McGuinness, ""An Axiomatic Semantics for RDF,\nRDF Schema, and DAML+OIL"", KSL Technical Report KSL-01-01, Stanford University, 2001;\navailable on-line as http://www.ksl.stanford.edu/people/dlm/daml-semantics/abstract-axiomatic-\nsemantics.html .\n[Google, 2000] Connie Guglielmo and Charles Babcock, ""Gaga over Google"" , Interactive Week, Nov 6, 2000.\nhttp://www.zdnet.com/intweek/stories/news/0,4164,2651081,00.html ,a n d\nhttp://www.google.com/about.html' metadata={'source': 'Semantic_Web.pdf', 'page': 282}
"
"page_content='283\n[Guarino, 1998] Nicola Guarino, ""Formal Ontology and Information Systems\'\'. In the Proceedings of Formal\nOntologyinInformation Systems, June 1998. Also inFrontiersin ArtificialIntelligence and Applications,IOS-Press, Washington, DC, 1998.\n[Gruber, 1993] Tom R. Gruber, ""A translation approach to portable ontologies"". Knowledge Acquisition,\n5(2):199-220,1993.\n[Hendler & McGuinness, 2000] James Hendler and Deborah McGuinness. ``The DARPA Agent Markup\nLanguage\'\'. InIEEE Intelligent SystemsTrendsand Controversies, November/December 2000. Available\nfromhttp://www.ksl.stanford.edu/people/dlm/papers/ieee-daml01-abstract.html .\n[Humphreys & Lindberg, 1993] B. L. Humphreys and D. A. B. Lindberg. ""The UMLS project: making the\nconceptual connection between users and the information they need. Bulletin of the Medical Library\nAssociation81(2):170.\n[Husserl, 1900] Edmund Husserl, Logische Untersuchungen, FirsteditionHalle:Niemeyer, 1900/01.\n[KIF] Knowledge Interchange Format, Language Description, draft proposed national standard. NCITS.T2/98-\n004. http://logic.stanford.edu/kif/kif.html.\n[Karp, 1992] Peter D. Karp, ""The design space of frame knowledge representation systems"", Technical Report\n520, SRI International AI Center;available online as ftp://www.ai.sri.com/pub/papers/karp-freview.ps.Z\n[Lassila, 1998] Ora Lassila, ""Web Metadata: A Matter of Semantics"", IEEE Internet Computing 2(4): 30-37\n(1998).\n[Lassila & Swick, 1999] Ora Lassila & Ralph Swick, ""Resource Description Framework (RDF) Model and\nSyntax Specification"", W3C Recommendation 22 February 1999, World Wide Web Consortium,\nCambridge (MA);available on-line as http://www.w3.org/TR/REC-rdf-syntax/ .\n[McGuinness et al., 1995] Deborah L. McGuinness, Lori Alperin Resnick, and Charles Isbell. ``Description\nLogic in Practice: A CLASSIC: Application.\'\' In\nProceedings of the 14th International Joint Conference on\nArtificial Intelligence , Montreal, Canada, August, 1995.\n[McGuinness, 1998] Deborah L. McGuinness ""Ontological Issues for Knowledge-Enhanced Search\'\'. In the\nProceedings of Formal Ontology in Information Systems, June 1998. Also in Frontiers in Artificial\nIntelligence and Applications, IOS-Press, Washington, DC, 1998.\n[McGuinness et al., 2000] Deborah L. McGuinness, Richard Fikes, James Rice, and Steve Wilder. An\nEnvironment for Merging and Testing Large Ontologies .In the Proceedings of the Seventh International' metadata={'source': 'Semantic_Web.pdf', 'page': 283}
"
"page_content='284\nConference on Principles of Knowledge Representation and Reasoning (KR2000), Breckenridge,\nColorado, USA. April 12-15, 2000.\n[McGuinness-Patel-Schneider ] Deborah L. McGuinness and Peter F. Patel-Schneider . ""Usability Issues in\nKnowledge Representation Systems\'\'. In Proceedings of the Fifteenth National Conference on Artificial Intelligence ,\nMadison, Wisconsin, July, 1998. This is an updated version of ``Usability Issues in Description LogicSystems\'\' published in\nProceedings of International Workshop on Description Logics , Gif sur Yvette, (Paris),\nFrance, September, 1997.\n[Minsky, 1975] Marvin Minsky, ""A Framework for Representing Knowledge"", in Patrick Henry Winston (ed.),\nThe PsychologyofComputer Vision, McGraw-Hill, NewYork, 1975.\n[Patel-Schneider-Swartout] Peter F. Patel-Schneider and Bill Swartout; ""Description-Logic Knowledge\nRepresentation System Specification""; KRSS Group of the ARPA Knowledge Sharing Effort.http://www-db.research.bell-labs.com/user/pfps/papers/krss-spec.ps\n[Protégé 2000]The Protege Project. http://protege.stanford.edu\n[Smith, 1998] Barry Smith, ""Basic Concepts of Formal Ontologies"", in N. Guarino (Ed.) Formal Ontology in\nInformationSystems, IOSPress, 1998.\n[Woods. 1975] William A. Woods, ""What\'s in a Link: Foundations for Semantic Networks"", in D.G.Bobrow &\nA.M.Collins (eds.), Representation and Understanding: Studies in Cognitive Science, 35-82, AcademicPress, NewYork, 1975.\n[XML 2000] Tim Bray, Jean Paoli, C. M. Sperberg-McQueen, and Eve Maler, editors. Extensible Markup\nLanguage (XML) 1.0 (Second Edition). W3C Recommendation 6 October 2000.\nhttp://www.w3.org/TR/2000/REC-xml-20001006\nFootnotes\n1Associate Director and Senior Research Scientist Knowledge Systems LaboratoryStanford University Stanford,\nCA94305, dlm@ksl.stanford.edu\n2http://www.w3.org/2000/Talks/1206-xml2k-tbl/slide10-0.html\n3This spectrum arose out of a conversation in preparation for an ontology panel at AAAI ’99. The panelists\n(Lehman, McGuinness, Ushold, and Welty), chosen because of their years of experience in ontologies' metadata={'source': 'Semantic_Web.pdf', 'page': 284}
"
"page_content='285\nfound that they encountered many forms of specifications that different people termed ontologies.\nMcGuinness refined the picture to the one included here.\n4Some prominent hierarchies such as Yahoo have renamed their classes to broad disjunctive categories such as\n""Apparel, Accessories, and Shoes"" presumably in order to provide for more strict subclass relationships.\nDisjunctive categories make inheritance more problematic however withclass-specific properties.\n5Frames were introduced by Minsky [Minsky 1975] and have been widely adopted, see for example [Fikes &\nKehler 1985, Karp1992, and Chaudhri-et-al1998].\n6Note, if one is using the common logical meanings of connectives, this class should really be named ""Fruits or\nvegetables or nuts or seeds"".' metadata={'source': 'Semantic_Web.pdf', 'page': 285}
"
"page_content='286\nII Knowledge support' metadata={'source': 'Semantic_Web.pdf', 'page': 286}
"
"page_content='287\n7. Sesame: An Architecture for Storing and Querying RDF Data\nand SchemaInformation\nJeen Broekstra1,Arjohn Kampman2, Frank van Harmelen3\n1. Introduction\nThe Resource Description Framework (RDF) [Lassila and\nSwick, 1999] is a W3C Recommendation for the notation of\nmeta-data on the World Wide Web. RDF Schema [Brickley andGuha, 2000] extends this standard by providing developers\nwith the means to specify vocabulary and to model object\nstructures.\nThese techniques will enable the enrichment of the Web\nwith machine-processable semantics, thus giving rise to\nwhat has been dubbed the Semantic Web. However, simply\nhaving this data available is not enough. Tooling is needed\nto process the information, to transform it, to reason with\nit. As a basis for this, we have developed Sesame, anarchitecture for efficient storage and expressive querying\nof large quantities of RDF meta-data. Sesame is being\ndeveloped by Aidministrator Nederland b.v.\n4as part of the\nEuropean IST project On-To-Knowledge5[Fensel et al., 2000].\nThis paper is organized as follows: in Section 2 we\ngive a short introduction to RDF and RDF Schema. This' metadata={'source': 'Semantic_Web.pdf', 'page': 287}
"
"page_content='288\nsection is only to make the paper self-contained, and can\nbe skipped by readers already familiar with these\nlanguages.\nIn Section 3 we discuss why a query language\nspecifically tailored to RDF and RDF Schema is needed, over\nand above existing query languages such as XQuery. In\nsection 4 and 5 we look in detail at Sesame’s architecture.Section 6 discusses our experiences with Sesame until now,\nand section 7 looks into possible future developments.\nFinally we provide our conclusions in Section Conclusion.\n2. RDF and RDF Schema\nThe Resource Description Framework (RDF) [Lassila and\nSwick, 1999] is a W3C recommendation that was originallydesigned to standardize the definition and use of metadata-\ndescriptions of Web-based resources. However, RDF is\nequally well suited to representing arbitrary data, be they\nmeta-data or not.\n2.1.RDF\nThe basic building block in RDF is an object-attribute-\nvalue triple, commonly written as A(O; V ). That is, an\nobjectOhas an attribute Awith valueV. Another way to\nthink of this relationship is as a labeled edge between two' metadata={'source': 'Semantic_Web.pdf', 'page': 288}
"
"page_content='289\nnodes:[ O ]_A![ V] . This notation is useful because RDF\nallows objects and values to be interchanged. Thus, any\nobject from one triple can play the role of a value in\nanother triple, which amounts to chaining two labeled edges\nin a graphic representation. The graph in Figure 7.1 for\nexample, expresses the following relationships:\nHasName (’http://www.famouswriters.org/twain/mark’,""Mark Twain"")\nhasWritten (’http://www.famouswriters.org/twain/mark’,\n’http://www.books.org/ISBN0001047582’)\ntitle (’http://www.books.org/ISBN0001047582’,\n""The Adventures of Tom Sawyer"")\nFigure 7.1 An example RDF data graph, capturing three\nstatements\nRDF also allows a form of reification6in which any RDF\nstatement itself can be the object or value of a triple.\nThis means graphs can be nested as well as chained. On theWeb this allows us, for example,to express doubt or support' metadata={'source': 'Semantic_Web.pdf', 'page': 289}
"
"page_content='290\nfor statements created by other people. Finally, it is\npossible to indicate that a given object is of a certain\ntype, such as stating that “ISBN0001047582” is of the type\nBook, by creating a type edge referring to the Book\ndefinition in an RDF schema:\ntype(’http://www.books.org/ISBN0001047582’,’http://www.\ndescription.org/schema#Book’)\nThe RDF Model and Syntax specification also proposes an\nXML syntax for RDF data models. One possible serialisation\nof the above relations in this syntax, would look like\nthis:\n<rdf:Description\nrdf:about=""http://www.famouswriters.org/twain/mark"">\n<s:hasName>Mark Twain</s:hasName>\n<s:hasWritten\nrdf:resource=""http://www.books.org/ISBN0001047582""/>\n</rdf:Description>\n<rdf:Description\nrdf:about=""http://www.books.org/ISBN0001047582"">\n<s:title>The Adventures of Tom Sawyer</s:title>\n<rdf:type\nrdf:resource=""http://www.description.org/schema#Book""/>\n</rdf:Description>' metadata={'source': 'Semantic_Web.pdf', 'page': 290}
"
"page_content='291\nSince the proposed XML syntax allows many alternative\nways of writing down information (and indeed still other\nsyntaxes may be introduced), the above XML syntax is just\none of many possibilities of writing down an RDF model in\nXML. It is important to note that RDF is designed to\nprovide a basic object-attribute-value model for Webdata.\nOther than this intentional semantics – described only\ninformally in the standard – RDF makes no data modeling\ncommitments. In particular, no reserved terms are defined\nfor further data modeling. As with XML, the RDF data model\nprovides no mechanisms for declaring property names that\nare to be used.\n2.2.RDFSchema\nRDF Schema [Brickley and Guha, 2000] is a mechanism\nthat lets developers define a particular vocabulary for RDF\ndata (such ashasWritten) and specify the kinds of objects\nto which these attributes can be applied (such as Writer).\nRDF Schema does this by pre-specifying some terminology,\nsuch asClass, subClassOf andProperty,which can then be\nused in application-specific schemata. RDF Schemaexpressions are also valid RDF expressions – in fact, the\nonly difference with ‘normal’ RDF expressions is that in' metadata={'source': 'Semantic_Web.pdf', 'page': 291}
"
"page_content='292\nRDF Schema an agreement is made on the semanticsof certain\nterms and thus on the interpretationof certain statements.\nFor example, the subClassOfproperty allows the\ndeveloper to specify the hierarchical organization of\nclasses. Objects can be declared to be instances of these\nclasses using the typeproperty. Constraints on the use of\nproperties can be specified using domainandrange\nconstructs.\nFigure 7.2 An example RDF Schema, defining vocabulary\nand a class hierarchy\nAbove the dotted line in Figure 7.2, we see an example\nRDF schema that defines vocabulary for the RDF example we\nsaw earlier:Book,WriterandFamousWriterare introduced as\nclasses, andhasWrittenis introduced as a property. A\nspecific instance is described in terms of this vocabulary\nbelow the dotted line.' metadata={'source': 'Semantic_Web.pdf', 'page': 292}
"
"page_content='293\n3. The need for an RDF/S Query Language\nRDF documents and RDF schemata can be considered at\nthree different levels of abstraction:\n1. at thesyntactic level they are XML documents\n2. at thestructure level they consist of a set of\ntriples\n3. at thesemantic level they constitute one or more\ngraphs with partially predefined semantics.\nWe can query these documents at each of these three\nlevels. We will briefly consider the pros and cons of doing\nso for each level in the next sections. This will lead us\nto conclude that RDF(S) documents should really be queried\nat the semantic level. We will briefly discuss RQL, alanguage for querying RDF(S) documents at the semantic\nlevel.\n3.1.Queryingatthesyntacticlevel\nAs we have seen in Section 2, any RDF model (and\ntherefore any RDF schema) can be written down in XML\nnotation. It would therefore seem reasonable to assume that\nwe can query RDF using an XML query language (for example,\nXQuery [Chamberlin et al., 2001]).' metadata={'source': 'Semantic_Web.pdf', 'page': 293}
"
"page_content='294\nHowever, this approach disregards the fact that RDF is\nnot just an XML dialect, but has its own data model that is\nvery different from the XML tree structure. Relationships\nin the RDF data model that are not apparent from the XML\ntree structure become very hard to query.\nAs an example, let us look again at the XML description\nof the RDF model in Figure 7.1.\n<rdf:Description\nrdf:about=""http://www.famouswriters.org/twain/mark"">\n<s:hasName>Mark Twain</s:hasName>\n<s:hasWritten\nrdf:resource=""http://www.books.org/ISBN0001047582""/>\n</rdf:Description>\n<rdf:Description\nrdf:about=""http://www.books.org/ISBN0001047582"">\n<s:title>The Adventures of Tom Sawyer</s:title><rdf:type\nrdf:resource=""http://www.description.org/schema#Book""/>\n</rdf:Description>\nIn an XML query language such as XQuery [Chamberlin et\nal., 2001], expressions to traverse the data structure are\ntailored towards traversing a node-labeled tree. However,\nthe RDF data model in this instance is a graph, not a tree,' metadata={'source': 'Semantic_Web.pdf', 'page': 294}
"
"page_content='295\nand moreover, both its edges (properties) and its nodes\n(subjects/objects) are labeled.\nIn querying at the syntax level, this is literally left\nas an excercise for the query builder: one cannot query the\nrelation between the resource signifying ‘Mark Twain’ and\nthe resource signifying ‘The Adventures of Tom Sawyer’\nwithout knowledge of the syntax that was used to encode theRDF data in XML. Ideally, we would want to formulate a\nquery like “Give me all the relationships that exist\nbetween Mark Twain and The Adventures of Tom Sawyer”.\nHowever, using only the XML syntax, we are stuck with\nformulating an awkward query like “Give me all the elements\nnested in a\nDescriptionelement with an aboutattribute with\nvalue ’http://www.famouswriters.org/twain/mark’, of which\nthe value of its resourceattribute occurs elsewhere as the\naboutattribute value of a Descriptionelement which has a\nnested element titlewith the value ‘The Adventures of Tom\nSawyer’.”\nNot only is this approach inconvenient, it also\ndisregards the fact that the XML syntax for RDF is not\nunique: different ways of encoding the same information in\nXML are possible and in use currently. This means that one\nquery will never be guaranteed to retrieve all the answersfrom an RDF model.' metadata={'source': 'Semantic_Web.pdf', 'page': 295}
"
"page_content='296\n3.2.Queryingatthestructurelevel\nWhen we abstract from the XML linearisation syntax, any\nRDF document represents a set of triples, each triple\nrepresenting a statement of the form Object-Attribute-Value. A number of query languages have been proposed and\nimplemented that regard RDF documents as such a set of\ntriples, and that allow to query such a triple set in\nvarious ways. See http://perso.enst.fr/˜ta/web/rdf/rdf-\nquery.html for a recent overview.\nThe RDF/RDF Schema example from Figure 7.2 corresponds\nto the following set of triples:\n(type Book Class)\n(type Writer Class)\n(type FamousWriter Class)\n(subClassOf FamousWriter Writer)\n(type hasWritten Property)\n(domain hasWritten Writer)\n(range hasWritten Writer)\n(type twain/mark FamousWriter)\n(type ISBN0001047582 Book)(hasWritten twain/mark ISBN0001047582)\nAn RDF query language would allow us to query which\nresources are known to be of type\nFamousWriter:' metadata={'source': 'Semantic_Web.pdf', 'page': 296}
"
"page_content='297\nselect ?x from ... where (type ?x FamousWriter)\nThe clear advantage of such a query is that it directly\naddresses the RDF data model, and that it is therefore\nindependent of the specific XML syntax that has been chosen\nto represent the data.\nHowever, a major shortcoming of any query-language at\nthis level is that it interprets anyRDF only as a set of\ntriples, including those elements which have been given a\nspecial semantics in RDF Schema.\nFor example, since\nhttp://www.famouswriters.org/twain/mark is of type\nFamousWriter, and since FamousWriteris a subclass of\nWriter,http://www.famouswriters.org/twain/mark is also of\ntypeWriter,by virtue of the intended RDF Schema semantics\noftypeandsubClassOf. However, there is no triple that\nexplicitly asserts this fact. As a result, the query\nSELECT ?x FROM (type ?x Writer)\nwill fail because the query only looks for explicit\ntriples in the store, whereas the triple (type /twain/mark\nWriter)is not explicitly present in the store, but is\nimplied by the semantics of RDF Schema. Notice that simply\nexpanding the query into something like\nSELECT ?x ?c1 ?c2 ?c3FROM (type ?x ?c1),' metadata={'source': 'Semantic_Web.pdf', 'page': 297}
"
"page_content='298\n(subClassOf ?c2 ?c3)\nWHERE ?c1 = ?c2\nwill solve the problem in this specific example, but\ndoes not cater for a chain of subClassOf triples, etc.\n3.3.Queryingatthesemanticlevel:RQL\nWhat is clearly required is a query language that is\nsensitive to the semantics of the RDF Schema primitives.\nRQL [Karvounarakis et al., 2000, Alexaki et al., 2000]\nis the first (and to the best of our knowledge currently\nthe only) proposal for a declarative query language for RDF\nand RDF Schema. It is being developed within the EuropeanIST project C-Web and its followup project MESMUSES by the\nInstitute of Computer Science at FORTH, in Greece\n7.\nRQL adopts the syntax of OQL [Cattel et al., 2000]. As\nOQL, RQL is a functional language: the output of RDF Schema\nqueries is again legal RDF Schema code, which allows the\noutput of queries to function as input for subsequent\nqueries.\nRQL is defined by means of a set of core queries, a set\nof basic filters, and a way to build new queries throughfunctional composition and iterators.\nThe core queries are the basic building blocks of RQL,\nwhich give access to the RDF Schema specific contents of an' metadata={'source': 'Semantic_Web.pdf', 'page': 298}
"
"page_content='299\nRDF triple store, with queries such as Class(retrieving all\nclasses),Property(retrieving all properties) or Writer\n(returning all instances of the class with name Writer).\nThis last query returns of course also all instances of\nsubclasses ofWriter, since these are also instances of the\nclassWriter, by virtue of the semantics of RDF Schema. We\ncan ask for all directinstances ofWriter(i.e. ignoring\nall instances of subclasses) through the query Writer.\nRQL can also query the structure of the subclass\nhierarchy. In our example, the query subClassOf(Writer)\nwould return the class FamousWriteras its only result. In\ngeneral, this would return all direct and indirect\nsubclasses of Writer, since RQL is aware of the\ntransitivity of the subclass relation. The query\nsubClassOfˆ(Writer) would return only the immediate\nsubclasses.\nOf course, being based on OQL, RQL also allows a\nselect-from-where construct. A final crucial feature of RQL\nare the path-expressions. These allow us to match patterns\nalong entire paths in RDF/RDF Schema graphs, such as the\none depicted in Figure 7.2. For example, the query\nSELECT Y FROM FamousWriter fXg. hasWrittenfYg' metadata={'source': 'Semantic_Web.pdf', 'page': 299}
"
"page_content='300\nreturns all books written by famous writers,\neffectively doing pattern-matching along a path in the\ngraph of Figure 7.2.\n3.4.Conclusion\nThe previous subsections have argued that RDF data\nshould not be queried at the level of their (rather\nincidental) XML encoding, and that RDF Schema data should\nnot be regarded as simply a set of RDF triples, since all\nintended semantics of the RDF Schema primitives are then\nlost. Consequently, we should be using a query language\nthat is sensitive to this RDF Schema semantics. RQL is apowerful (and currently the only) candidate for such a\nlanguage.\nIn the next few sections, we will discuss the\narchitecture we have designed for a query engine for RQL.\n4. Sesame’s Architecture\nThe Sesame system is a Web-based architecture that\nallows persistent storage of RDF data and schema\ninformation and subsequent online querying of that\ninformation. In section 4.1, we present an overview of\nSesame’s architecture. In the sections following that, we\nlook in more detail at several components.' metadata={'source': 'Semantic_Web.pdf', 'page': 300}
"
"page_content='301\n4.1.Overview\nAn overview of Sesame’s architecture is shown in Figure\n7.3. In this section we will give a brief overview of the\nmain components.\nFigure 7.3 Sesame’s architecture\nFor persistent storage of RDF data, Sesame needs a\nscalable repository. Naturally, a Data Base Management\nSystem (DBMS) comes to mind, as these have been used for' metadata={'source': 'Semantic_Web.pdf', 'page': 301}
"
"page_content='302\ndecades for storing large quantities of data. In these\ndecades, a large number of DBMS’s have been developed, each\nhaving their own strengths and weaknesses, targeted\nplatforms, and API’s. Also, for each of these DBMS’s, the\nRDF data can be stored in numerous ways.\nAs we would like to keep Sesame DBMS-independent and it\nis impossible to know which way of storing the data is bestfitted for which DBMS, all DBMS-specific code is\nconcentrated in a single architectural layer of Sesame: the\nRepository Abstraction Layer (RAL).\nThis RAL offers RDF-specific methods to its clients and\ntranslates these methods to calls to its specific DBMS. An\nimportant advantage of the introduction of such separate\nlayer is that it makes it possible to implement Sesame on\ntop of a wide variety of repositories without changing any\nof Sesame’s other components. Section 4.3 describes anumber of possible repository implementations.\nSesame’s functional modules are clients of the RAL.\nCurrently, there are three such modules:\n•The RQL query module.\nThis module evaluates RQL queries posed by the user\n(see Section 5.1).\n•The RDF administration module.' metadata={'source': 'Semantic_Web.pdf', 'page': 302}
"
"page_content='303\nThis module allows incremental uploading of RDF data\nand schema information, as well as the deleting of\ninformation (see Section 5.2).\n•The RDF export module.\nThis module allows the extraction of the complete\nschema and/or data from a model in RDF format (see Section\n5.3).\nDepending on the environment in which it is deployed,\ndifferent ways to communicate with the Sesame modules may\nbe desirable. For example, communication over HTTP may be\npreferable in a Web context, but in other contexts\nprotocols such as RMI (Remote Method Invocation)8or SOAP\n(Simple Object Access Protocol) [Box et al., 2000] may be\nmore suited.\nIn order to allow maximal flexibility, the actual\nhandling of these protocols has been placed outside the\nscope of the functional modules. Instead, protocol handlers\nare provided as intermediaries between the modules and\ntheir clients, each handling a specific protocol.\nThe introduction of the repository abstraction layer\nand the protocol handlers makes Sesame into a generic\narchitecture for RDF (S) storage and querying, rather than\njust a particular implementation of such a system. Adding\nadditional protocol handlers makes it easy to connect' metadata={'source': 'Semantic_Web.pdf', 'page': 303}
"
"page_content='304\nSesame to different operating environments. The\nconstruction of concrete RAL’s will be discussed in the\nnext section.\nSesame’s architecture has been designed with\nextensibility and adaptability in mind. The possibility to\nuse other kinds of repositories has been mentioned before.\nAdding additional modules or protocol handlers is alsopossible. The only part that is fixed in the architecture\nis the RAL.\n4.2.TheRepositoryAbstractionLayer\nAs we have seen in the previous section, the Repository\nAbstraction Layer (RAL) offers a stable, high level\ninterface for talking to repositories. This RAL is defined\nby an API that offers functionality to add data to, or to\nretrieve or delete data from the repository. RAL-\nimplementations translate calls to the API methods into\noperations on the underlying repository.\nRather than adopting or extending an existing RDF API,\nsuch as the “Stanford API” proposed by Sergey Melnik\n[Melnik, 2000], we have created a completely new API.\nThe main differences between our proposal and the\nStanford API are that:' metadata={'source': 'Semantic_Web.pdf', 'page': 304}
"
"page_content='305\na. The Stanford API is very much targeted at data that\nis kept in memory, whereas our API is considerably more\n“lightweight” as all data is returned one-at-a-time in data\nstreams.\nb. Our API supports RDF Schema semantics, such as\nsubsumption reasoning, whereas the Stanford API only offers\nRDF-related functionality.\nThe advantage of returning data in streams (point a) is\nthat at any one time only a small portion of the data is\nkept in memory. This streaming approach is also used in the\nfunctional modules, and even in the protocol handlers which\ngive results as soon as they are available. This approach\nis needed for Sesame to be able to scale to large volumes\nof data without requiring exceptionally expensive hardware.\nIn fact, Sesame requires close to zero memory for data and\nonly a small amount of memory for the program to run.\nThis, together with the option of using a remote data\nstore for the repository (see Section 4.3) makes Sesame\npotentially suitable for use as infrastructure in highly\nconstrained environments such as portable devices.\nOf course, reading everything from a repository and\nkeeping nothing in memory seriously hurts performance.\nThis performance problem can be solved by selectively\ncaching data in memory9. For small data volumes it is even' metadata={'source': 'Semantic_Web.pdf', 'page': 305}
"
"page_content='306\npossible to cache all data in memory, in which case the\nrepository only serves as a persistent storage. Sesame’s\narchitecture allows all of this to be done in a completely\ntransparent way, as will be shown in the next section.\n4.2.1. Stacking Abstraction Layers\nAn important feature of the RAL is that it is possible\nto put one on top of the other. To Sesame’s functionalmodules (the admin, query and export modules) this is\ncompletely transparent, as they will only see the RAL at\nthe top of the stack (see Figure 7.4). The RAL at the top\ncan perform some action when the modules make calls to it,\nand then forward these calls to the RAL beneath it. This\nprocess continues until one of the RALs finally handles the\nrequest.' metadata={'source': 'Semantic_Web.pdf', 'page': 306}
"
"page_content='307\nFigure 7.4 RALs can be stacked to add functionality\nOne good example where this construction makes sense is\nwhen implementing a cache. We implemented a RAL that caches\nall schema data in a dedicated data structure in main\nmemory. This schema data is often very limited in size and\nis requested very frequently. At the same time, the schema\ndata is the most difficult to query from a DBMS because of\nthe transitivity of the subClassOf and subPropertyOf\nproperties. This schema-caching RAL can be placed on top of\narbitrary other RALs, handling all calls concerning schema' metadata={'source': 'Semantic_Web.pdf', 'page': 307}
"
"page_content='308\ndata. The rest of the calls are forwarded to the underlying\nRAL.\n4.3.TheRepository\nThanks to the Repository Abstraction Layer, Sesame can\nbe based on any kind of repository that is able to store\nRDF. The following is a list of possible concrete\nimplementation of the repository, each with their own\nadvantages.\n•DMBS’s\nAny kind of database can be used: relational databases\n(RDBMS), object-relational databases (ORDBMS), etc.\n•Existing RDF stores\nA number of RDF stores are currently in development\n([Guha, 2001, Reggiori, 2001, Beckett, 2001, Wagner,\n2001]). Sesame can use such an RDF store if a RAL is\nwritten that knows how to talk to that specific RDF store.\n•RDF files\nFiles containing RDF can be used as repositories too. A\nflat file is not very practical on its own, as it will be\npainfully slow in storing and retrieving data. However,\nwhen combined with a RAL that caches all of the data in' metadata={'source': 'Semantic_Web.pdf', 'page': 308}
"
"page_content='309\nmemory it becomes a good alternative for small volumes of\ndata.\n•RDF network services\nApart from performance, there is no need for the\nrepository to be located close to Sesame. Any network\nservice that offers basic functionality for storing,\nretrieving and deleting RDF data can be used by Sesame. An\nexample of a system offering such functionality is, of\ncourse, Sesame itself. Many of the RDF stores mentioned\nabove can also be approached as Web services.\nThe last option in particular is very interesting. An\ninitial query is sent to a Sesame server somewhere on theWeb. This server can use not only its local repository to\nanswer the query, but also any number of remote\nrepositories that it knows about. In turn, some of these\nremote repositories might themselves either answer the\nquery using local data-stores, or in turn again approach\nyet other remote repositories. This opens up the\npossibility of a highly distributed architecture for RDF(S)storing and querying, that has been unexplored until now,\nbut that is truly in the spirit of the Semantic Web.\n4.3.1. PostgreSQL\nThe first and, so far, only repository that has been\nused with Sesame is PostgreSQL\n10. PostgreSQL is a freely' metadata={'source': 'Semantic_Web.pdf', 'page': 309}
"
"page_content='310\navailable (open source) object-relational DBMS that\nsupports many features that normally can only be found in\ncommercial DBMS implementations.\nOne of the main reasons for choosing PostgreSQL is that\nit is an object-relational DBMS, meaning that it supports\nsubtable relations between its tables. As these subtable\nrelations are also transitive, we use these to model thesubsumption reasoning of RDF Schema.\nThe RAL that was implemented uses a dynamic database\nschema that was inspired by the schema shown in\n[Karvounarakis et al., 2000]. New tables are added to the\ndatabase whenever a new class or property is added to the\nrepository. If a class is a subclass of other classes, the\ntable created for it will also be a subtable of the tables\nfor the superclasses. Likewise for properties being\nsubproperties of other properties. Instances of classes andproperties are inserted as values into the appropriate\ntables. Figure 7.5 gives an impression of the contents of a\ndatabase containing the data from Figure 7.2.\nThe actual schema involves one more table called\nresources.This table contains all resources and literal\nvalues, mapped to a unique ID. These ID’s are used in the\ntables shown in the figure to refer to the resources andliteral values. The\nresourcestable is used to minimize the' metadata={'source': 'Semantic_Web.pdf', 'page': 310}
"
"page_content='311\nsize of the database. It ensures that resources and literal\nvalues, which can be quite long, only occur once in the\ndatabase, saving potentially large amounts of memory.\nFigure 7.5 Impression of the object-relational schema\ncurrently used with PostgreSQL\n5. Sesame’s Functional Modules\nIn this section, we briefly describe the three modules\nthat are currently implemented in Sesame.' metadata={'source': 'Semantic_Web.pdf', 'page': 311}
"
"page_content='312\n5.1.TheRQLQueryModule\nAs we have seen in Section 4, one of the three modules\ncurrently implemented in Sesame is an RQL query engine. RQL\n[Karvounarakis et al., 2000, Alexaki et al., 2000] is aproposal for a declarative language for RDF and RDF Schema.\nIt is being developed within the European IST project C-Web\nand its followup project MESMUSES by the Institute of\nComputer Science at FORTH, in Greece.\nIn Sesame, a version of RQL was implemented that is\nslightly different from the language proposed by\n[Karvounarakis et al., 2000]. The Sesame version of RQLfeatures better compliance to W3C specifications, including\nsupport for optional domain- and range restrictions as well\nas multiple domain- and range restrictions. See [Broekstra\nand Kampman, 2001] for details. The Query Module follows\nthe path depicted in Figure 7.6 when handling a query.\nAfter parsing the query and building a query tree model for\nit, this model is fed to the query optimizer which\ntransforms the query model into an equivalent model that\nwill evaluate more efficiently.' metadata={'source': 'Semantic_Web.pdf', 'page': 312}
"
"page_content='313\nFigure 7.6 A query is parsed and then optimized into\nan query object model\nThe optimized model of the query is subsequently\nevaluated in a streaming fashion, following the tree\nstructure into which the query has been broken down. Each\nobject represents a basic unit in the original query and\nevaluates itself, fetching data from the RAL where needed.\nThe main advantage of this approach is that results can be\nreturned in a streaming fashion, instead of having to buildup the entire result set in memory first.\nIn Sesame, RQL queries are translated (via the object\nmodel) into a set of calls to the RAL. This approach means\nthat the main bulk of the actual evaluation of the RQL\nquery is done in the RQL query engine itself.\nFor example, when a query contains a join operation\nover two subqueries, each of the subqueries is evaluated,and the join operation is then executed by the query engine\non the results.' metadata={'source': 'Semantic_Web.pdf', 'page': 313}
"
"page_content='314\nAnother approach would be to directly translate as much\nof the RQL query as possible to a query specific for the\nunderlying repository. An advantage of this approach is\nthat, when using a DBMS, we would get all its sophisticated\nquery evaluation and optimization mechanisms for free.\nHowever, a large disadvantage is that the implementation of\nthe query engine is directly dependent on the repositorybeing used, and the architecture would lose the ability to\neasily switch between repositories.\nThis design decision is one of the major differences\nbetween Sesame and the RDF Suite implementation of RQL by\nICS-FORTH (see [Alexaki et al., 2000]). The RDF Suite\nimplementation relies on the underlying DBMS for query\noptimisation. However, this dependency means that RDF Suite\ncannot as easily be transported to run on top of another\nstorage engine.\nA natural consequence of our choice to evaluate queries\nin the RAL is that we need to devise several optimization\ntechniques in the engine, since we cannot rely on any given\nDBMS to do this for us. The Admin Module In order to be\nable to insert RDF data and schema information into a\nrepository, Sesame provides an admin module. The current\nimplementation is rather simple and offers two mainfunctions:' metadata={'source': 'Semantic_Web.pdf', 'page': 314}
"
"page_content='315\n1. incrementally adding RDF data/schema information;\n2. clearing a repository.\nThe admin module retrieves its information from an\nRDF(S) source (usually an online RDF(S) document in XML-\nserialized form) and parses it using a streaming RDF parser\n(currently, we use the SiRPAC RDF parser [Barstow and\nMelnik, 2000]). The parser delivers the information to theadmin module on a per-statement basis:\n(S; P;O).The admin\nsubsequently checks each statement for consistency with the\ninformation already present in the repository, and infers\nimplied information if necessary, as follows: if Pequals\ntype, then the admin infers that Omust be a class.\n•ifPequalssubClassOf, then the admin infers that both S\nandOare classes.\n•ifEequalssubPropertyOf, then the admin infers that both\nSandOare properties.\n•ifPequalsdomainorrange, the admin infers that Smust\nbe a property and Omust be a class.\nIn all these cases, the admin module checks whether the\ninferred information is consistent with the current\ncontents of the repository. and if so, the inferred\ninformation is added to the repository. If the admin moduleencounters a duplicate statement (i.e. a fact that is' metadata={'source': 'Semantic_Web.pdf', 'page': 315}
"
"page_content='316\nalready known in the repository),this is reported but\notherwise ignored.\n5.2.TheRDFExportModule\nThe RDF Export Module is a very simple module. This\nmodule is able to export the contents of a repository\nformatted in XML-serialized RDF. The idea behind this\nmodule is that it supplies a basis for using Sesame in\ncombination with other RDF tools, as all RDF tools will at\nleast be able to read this format. Some tools, like\nontology editors, only need the schema part of the data. On\nthe other hand, tools that don’t support RDF Schemasemantics will probably only need the non-schema part of\nthe data. For these reasons, the RDF Export Module is able\nto selectively export the schema, the data, or both.\n6. Experiences\nOur implementation of Sesame can be found at\nhttp://sesame.aidministrator.nl (July 2001), and is freelyavailable for non-commercial use. This implementation\nfollows the general architecture described in this paper,\nusing the following concrete implementation choices for the\nmodules:' metadata={'source': 'Semantic_Web.pdf', 'page': 316}
"
"page_content='317\n•As discussed above, the repository is realised by\nPostgreSQL.\n•A protocol handler is realised using HTTP.\n•The admin module uses the SiRPAC RDF parser.\n•In this section, we briefly report on our experiences\nwith various aspects of this implementation.\n6.1.UsingRQL\nAs we have seen in Section 5.1, Sesame supports\nquerying using a declarative language called RQL. RQL isvery powerful language that offers very expressive querying\ncapabilities. One of the most distinguishing features of\nRQL is its built-in support for RDF Schema semantics and\nthe possibility to combine data and schema information in a\nsingle query. However, RQL currently lacks support for\nsemantically querying\nreifiedstatements. The reason for\nthis is mainly that reification is poorly defined in the\nRDF specification. The direct result of the lack of support\nis that it is not possible to query such constructssemantically. When confronted with reified statements, RQL\nqueries will have to be formulated in terms of the\nstructure of such a statement.' metadata={'source': 'Semantic_Web.pdf', 'page': 317}
"
"page_content='318\n6.2.Application:On-To-Knowledge\nSesame is currently being deployed as the central\ninfrastructure of the European IST project On-To-\nKnowledge11. On-To-Knowledge aims at developing ontology-\ndriven knowledge-management tools. Figure 7.7 shows how\nSesame serves as the central data repository for a number\nof tools:\nFigure 7.7 Sesame is positioned as a central tool in\nthe On-To-Knowledge project\n•OntoExtract, developed by CognIT a.s., extracts\nontological conceptual structures from natural language\ndocuments. These ontologies are uploaded for storage in\nSesame.\n•The resulting ontologies can be downloaded into OntoEdit,\nan editor for ontologies developed by the the Institute' metadata={'source': 'Semantic_Web.pdf', 'page': 318}
"
"page_content='319\nAIFB of the University of Karlsruhe. When the user has\nedited an ontology, the result isagain stored in Sesame.\n•The resulting ontologies are downloaded into RDF Ferret,\na user front-end, developed by BT Adastral Park Research\nLabs, that provides search and query facilities for\nwebdata based on the ontologies.\nBecause Sesame is a server-based application, the\nintegration of all this functionality is done simply by\nestablishing HTTP connections to Sesame. We are currently\nin the process of applying this architecture in a number of\nknowledge-management applications.\n6.3.OntologiesandRDFSchema\nWhile developing Sesame, many unclarities in the RDF\nSchema specification were uncovered. One of the reasons for\nthis is that RDF Schema is defined in natural language: no\nformal description of its semantics is given. As a resultof this, the RDF Schema specification even contains some\ninconsistencies.\nAnother reason why RDF Schema is so hard to understand\nis that RDF Schema is self-describing in the sense that the\ndefinition of its terms is itself done in RDF Schema. This\nleads to strange circular dependencies in the term\ndefinitions (e.g. the term\nClassis both a subclass of and' metadata={'source': 'Semantic_Web.pdf', 'page': 319}
"
"page_content='320\nan instance of Resource,which is itself an instance of\nClassagain). In fact, primitives from different meta-levels\nof description have been mapped to identical terms,\nresulting in a rather unclear specification (see also\n[Nejdl et al., 2000]).\nOne of the consequences of the circular dependencies is\nthat RDF Schema is not only a language for,but also a partof ontologies. This means that all primitives defined in\nRDF Schema (i.e.\nsubClassOf, sub-PropertyOf, domain, range ,\netc.) are also in the ontology. We would argue that this is\ncounterintuitive.\nAt the very least this approach deviates from\napproaches taken by most other ontology languages.\n6.4.UsingPostgreSQL\nOur experiences with the database schema on PostgreSQL,\nas shown in Section 4.3.1, are not completely satisfactory.\nBoth data retrieval and data insertion are not as fast as\nwe would like. Especially incremental uploads of schema\ndata can be very slow, since table creation is very\nexpensive in PostgreSQL. Even worse,when adding a newsubClassOf relation between two existing classes, the\ncomplete class hierarchy starting from the subclass needs\nto broken down and must then be rebuilt again because' metadata={'source': 'Semantic_Web.pdf', 'page': 320}
"
"page_content='321\nsubtable relations can not be added to an existing table;\nthe subtable relations have to be specified when a table is\ncreated. Once created, the subtable relations are fixed.\n6.5.Scalabilityissues\nWe have been experimenting with several data sets\nand/or ontologies that are currently available on the Web.\nThe largest set of data that we have uploaded and\nsubsequently queried was the collection of nouns from\nWordnet12, consisting of about 400,000 RDF statements. This\ndata set almost completely exists of RDF data (i.e. hardly\nany schema information). While we have not performed anystructured benchmark testing, the following points are\nnoteworthy.\nFirst of all, all experimenting has been done using a\ndesktop computer (Sun UltraSPARC 5 workstation, 256MB) to\nrun Sesame. Java Servlets running on a web server were used\nas protocol handlers to communicate over HTTP. The database\nschema described in Section 4.3.1 in combination with\nPostgreSQL version 7.1.1 was used as repository.\nThe uploading of the information is not as fast as we\nwould like, mainly due to the database schema being used.\nJust adding a data statement to the database involves doing\nthe following steps:' metadata={'source': 'Semantic_Web.pdf', 'page': 321}
"
"page_content='322\n•Check whether the property is already known. If not, add\nit and create a table for it.\n•Check whether the subject is already known, adding it if\nnot.\n•Check whether the object is already known, adding it if\nnot.\n•Add a row representing the statement to the appropriate\ntable.\nMost of these steps have to be performed in sequential\norder, which is very time-intensive. Uploading the Wordnet\nnouns took approximately 94 minutes, which comes down to 71\nstatements per second. As was to be expected, the upload\ndid not show any significant signs of slowing down as the\namount of data in the repository increased (the amount ofdata is really not very large by DBMS standards).\nQuerying the information proved to be quite slow too,\nfor exactly the same reasons. Due to the distributed\nstorage over multiple tables, retrieving data from the\nrepository means doing many joins on tables, hindering\nperformance.' metadata={'source': 'Semantic_Web.pdf', 'page': 322}
"
"page_content='323\n7. Future directions\n7.1.DAML+OIL\nCurrently, Sesame understands the semantics of RDF and\nRDF Schema. We would like to extend this to more powerful\nlanguages like DAML+OIL [Horrocks et al., 2001]. DAML+OIL\nis an extension of RDF Schema and offers additional\nprimitives for creating schemata. Examples of the\nadditional expressive power of DAML+OIL are:\n•the use of arbitrary class expressions, including\ndisjunction, conjunction and negation (complement) of\nclasses\n•cardinality constraints on properties, expressing the\nminimal and maximal number of values a property can have\nfor each object\n•symmetric, transitive and inverse properties\nSince DAML+OIL allows more expressiveness and has more\ninferencing capabilities, a reasoner/query language that\nunderstands its semantics is significantly more\ncomplicated.' metadata={'source': 'Semantic_Web.pdf', 'page': 323}
"
"page_content='324\n7.2.Otherrepositories\nWe are planning to implement support for other\nDMBS/schema combinations so that we can compare the pros\nand cons of each approach. A first option will be toimplement a RAL based on a traditional relational DBMS,\ni.e. one that only uses standard SQL queries. Such a RAL\ncan be used on lots of DBMS’s as almost all DBMS’s support\nthese queries.\n7.3.AdminModule\nThe Admin Module currently offers very limited\nfunctionality for administrating the contents of\nrepositories. More fine-grained functionality is needed for\nthe module to be really useful. We are currently\ninvestigating the options to accomplish this. One of the\noptions is to extend RQL with primitives for updating anddeleting data, just like SQL does.\nConclusion\nIn this paper we have presented Sesame, a flexible\narchitecture for storing and querying both RDF data and RDF\nSchema information. Sesame is an important step beyond the\ncurrently available storage and query devices for RDF,' metadata={'source': 'Semantic_Web.pdf', 'page': 324}
"
"page_content='325\nsince it is the first publicly available implementation of\na query language that is aware of the RDF Schema semantics.\nAn important feature of the Sesame architecture is its\nabstraction from the details of any particular repository\nused for the actual storage. This makes it possible to port\nSesame to a large variety of different repositories,\nincluding relational databases, RDF triple stores, and evenremote storage services on the Web.\nSesame itself is a server-based application, and can\ntherefore be used as a remote service for storing and\nquerying data on the Semantic Web. As with the storage\nlayer, Sesame abstracts from any particular communication\nprotocol, so that Sesame can easily be connected to\ndifferent clients by writing different protocol handlers.\nWe have constructed a concrete implementation of the\ngeneric architecture, using PostgreSQL as a repository andusing HTTP as communication protocol handlers.\nImportant next steps to expand Sesame towards a full\nfledged storage and querying service for the Semantic Web\ninclude its extension from RDF Schema to DAML+OIL and\nimplementations for different repositories, notably those\nthat can live elsewhere on the Web.' metadata={'source': 'Semantic_Web.pdf', 'page': 325}
"
"page_content='326\nReferences\n[Alexaki et al., 2000] Alexaki, S., Christophides, V., Karvounarakis, G., Plexousakis, D., and Tolle,\nK.(2000).The RDFSuite: Managing Voluminous RDF Description Bases. Technical report, Institute\nof Computer Science, FORTH, Heraklion, Greece. See\nhttp://www.ics.forth.gr/proj/isst/RDF/RSSDB/rdfsuite.pdf.\n[Barstow and Melnik, 2000] Barstow, A. and Melnik, S. (2000). SiRPAC: Simple RDF Parser and\nCompiler. http://www.w3.org/RDF/Implementations/SiRPAC/.\n[Beckett, 2001] Beckett, D. (2001). Redland RDF Application Framework.\nhttp://www.redland.opensource.ac.uk/.\n[Box et al., 2000] Box, D., Ehnebuske, D., Kakivaya, G., Layman, A., Mendelsohn, N., Nielsen, H.\nF.,Thatte, S., and Winer, D. (2000). Simple Object Access Protocol (SOAP) 1.1. W3c note, World\nWide WebConsortium. See http://www.w3.org/TR/SOAP/.\n[Brickley and Guha, 2000] Brickley, D. and Guha, R. (2000). Resource Description Framework (RDF)\nSchema Specification 1.0. Candidate recommendation, World Wide Web Consortium. See\nhttp://www.w3.org/TR/2000/CR-rdf-schema-20000327.\n[Broekstra and Kampman, 2001] Broekstra, J. and Kampman, A. (2001). Query Language Definition. On-\nTo-Knowledge (IST-1999-10132) Deliverable 9, Aidministrator Nederland b.v. See\nhttp://www.ontoknowledge.org/.\n[Cattel et al., 2000] Cattel, R., Barry, D., Berler, M., Eastman, J., Jordan, D., Russell, C., Schadow,\nO.,Stanienda, T., and Velez, F. (2000). The Object Database Standard: ODMG 3.0. Morgan\nKaufmann.\n[Chamberlin et al., 2001] Chamberlin, D., Florescu, D., Robie, J., Simeon, J., and Stefanescu, M. (2001).\nXQuery: A Query Language for XML. Working draft, World Wide Web Consortium. See\nhttp://www.w3.org/TR/xquery/.\n[Fensel et al., 2000] Fensel, D., van Harmelen, F., Klein, M., Akkermans, H., Broekstra, J., Fluit, C., van\nder Meer, J., Schnurr, H.-P., Studer, R., Hughes, J., Krohn, U., Davies, J., Engels, R., Bremdal, B.,' metadata={'source': 'Semantic_Web.pdf', 'page': 326}
"
"page_content='327\nYgge, F., Lau, T., Novotny, B., Reimer, U., and Horrocks, I. (2000). On-To-Knowledge:\nOntologybased Tools for Knowledge Management. In Proceedings of the eBusiness and eWork\n2000(EMMSEC2000) Conference, Madrid, Spain.\n[Guha, 2001] Guha, R. (2001).rdfDB. http://web1.guha.com/rdfdb/.\n[Horrocks et al., 2001] Horrocks, I., van Harmelen, F., Patel-Schneider, P., Berners-Lee, T., Brickley, D.,\nConnoly, D., Dean, M., Decker, S., Fensel, D., Hayes, P., Heflin, J., Hendler, J., Lassila, O.,McGuinness, D., and Stein, L. A. (2001). DAML+OIL. http://www.daml.org/2001/03/daml+oil-\nindex.html.\n[Karvounarakis et al., 2000] Karvounarakis, G., Christophides, V., Plexousakis, D., and Alexaki, S.(2000).\nQuerying community web portals. Technical report, Institute of Computer Science, FORTH,\nHeraklion, Greece. See http://www.ics.forth.gr/proj/isst/RDF/RQL/rql.pdf.\n[Lassila and Swick, 1999] Lassila, O. and Swick, R. R. (1999). Resource Description Framework (RDF):\nModel and Syntax Specification. Recommendation,WorldWideWeb Consortium. See\nhttp://www.w3.org/TR/REC-rdf-syntax/.\n[Melnik, 2000] Melnik, S. (2000). RDF API Draft. public draft, Database Group, Stanford University. See\nhttp://www-db.stanford.edu/˜melnik/rdf/api.html.\n[Nejdl et al., 2000] Nejdl, W., Wolpers, M., and Capella, C. (2000). The RDF Schema Revisited. In\nModelle und Modellierungssprachen in Informatik und Wirtschaftsinformatik, Modellierung 2000,\nSt. Goar. FoelbachVerlag, Koblenz.\n[Reggiori, 2001]Reggiori, A. (2001).RDFStore. http://rdfstore.jrc.it/.[Wagner, 2001]Wagner, H. (2001).Extensible openrdf. http://eor.dublincore.org/ .\nFootnotes\n1Aidministrator Nederland b.v., jeen.broekstra@aidministrator.nl\n2Aidministrator Nederland b.v., arjohn.kampman@aidministrator.nl\n3Facultyof Sciences, Vrije Universiteit Amsterdam, frank.van.harmelen@cs.vu.nl' metadata={'source': 'Semantic_Web.pdf', 'page': 327}
"
"page_content='328\n4See http://www.aidministrator.nl/\n5Seehttp://wwww.ontoknowledge.org/\n6rei facere (lat.) “to make into a thing”\n7Seehttp://www.ics.forth.gr/\n8See http://java.sun.com/j2se/1.3/docs/guide/rmi/spec/rmiTOC.html\n9A good DBMSimplementation will also cache queryresultsto improve performance\n10Seehttp://www.postgresql.org/\n11http://www.ontoknowledge.org/\n12Thiscollectioncanbe found in RDF format http://www.semanticweb.org/library/' metadata={'source': 'Semantic_Web.pdf', 'page': 328}
"
"page_content='8. Enabling Task-CenteredKnowledge Supportthrough Semantic\nMarkup\nRob Jasper1and Mike Uschold2\n1. The Evolving Web\nThe current evolution of the web can be characterized from\nvarious perspectives:\n•Locating Resources —The way people find things on the web is\nevolving from simple keyword search to more sophisticated\nsemantic techniques both for search and navigation.\n•Users—Web resources are evolving from being primarily\nintended for human consumption, to being intended for use\nboth by humans and machines—most notably, software agents.\n•Semantics—The web is evolving from containing information\nresources that have little or no explicit semantics, to\nhaving a rich semantic infrastructure.\nThere is considerable activity going on, and significant\nprogress being made in each of these areas, by various\ncommunities, including research, standards organizations, andcommercial interests.\nLocating Resources. Commercial companies have made great\nprogress in developing search engines for the web, primarily\nfocusing on keyword-based search and text categorization\ntechniques.' metadata={'source': 'Semantic_Web.pdf', 'page': 329}
"
"page_content='330\nUsers.More and more, software programs are accessing and\nprocessing web pages automatically. Meta-search engines areone good example. There is a growing number of B2C web sites\nwho operate in a similar manner, by checking and comparing\nmany different web sites—e.g. for selling books, or online\ntravel. This works fine, but often requires customization by\nhumans to figure out what the information on a site ‘means’.\nBy looking at the text, and analyzing the underlying structure\nof the web site, it is possible to write CGI scripts, perform\nsome computation, and collate results back to the user. For\nvarious reasons, these sites are not a panacea. But moreimportantly, perhaps is the fact that there is no systematic\nand agreed way to represent and interpret the semantics of the\ninformation. This brings us to the semantic web.\nThe Semantic Web. There is a tremendous amount of activity\nby the W3C and research groups in addressing the issue of\nsemantics. From the perspective of the W3C, the idea of a\nsemantic web is to make the information machine-sensible. Theresearch community is working with the W3C to create the dream\nof a semantic web (Berners-Lee\net al2001, DAML 2001). A major\npart of this will entail representing and reasoning with\nsemantic metadata, and/or providing semantic markup in the\ninformation resources. A key benefit is that this will make it\nmuch easier and much faster for humans to find what they\nrequire, say compared to today’s ‘non-semantic’ search\nengines. However, this remains an unproven and largely' metadata={'source': 'Semantic_Web.pdf', 'page': 330}
"
"page_content='331\nuntested hypothesis. The main intent of the semantic web is to\ngive machines much better access to information resources sothey can be information intermediaries in support of humans.\nCurrently, much semantic markup has focused on providing\ncommon languages and infrastructure to enhance information\nretrieval and support e-business applications. While we\nbelieve this work is important, these applications often fail\nto recognize or support the underlying tasks users are\nperforming. Users are seldom just searching for documents but\nare in the process of performing some larger task (e.g.,\nselling a car, moving to a new city).\nConsider the interface to most information retrieval or\nknowledge management systems. These interfaces typically\ncapture a set of keywords, or at best, a complex Boolean\nquery, but fail to identify the task a user is performing.\nUnderstanding the user and their underlying task is critical\nin determining which resources are most appropriate. For\nexample, a system that understood whether a user’s task waspurchasing, selling, or repairing a car would be much better\nat supporting the user’s ultimate goal. Other researchers have\nidentified the need for understanding the underlying task a\nuser if performing [Dumais, 1999]; but little work has been\ndone on capturing and exploiting this information.\nA place to do things. In his presentation at the Knowledge\nTechnologies 2001 conference, Reid Smith, VP of knowledge' metadata={'source': 'Semantic_Web.pdf', 'page': 331}
"
"page_content='332\nmanagement at Slumberger introduced another perspective from\nwhich to view the evolution of the web.\nWeb tasks.The web will evolve from being primarily a\nplace tofindthings, to being a place to dothings as well\n[Smith, 2001].\nThis perspective is the focus of this paper. We describe\nsome important first steps in this evolution of the web into a\nplace to perform tasks. Provision of semantics for the web is\na necessary foundation on which to build our task-centered\napproach. It enables new kinds of applications that better\nsupport a user’s broader goals. We describe a semantics-basedprototype focused on supporting user’s tasks in the domain of\naerospace customer support.\n2. Web Problem Solving\nPeople use the web in a variety of contexts to solve many\ndifferent kinds of problems. The effectiveness of task-\ncentered knowledge support relies on identifying a convenientmechanism for expressing the user’s intentions and matching\nthose intentions with the relevant resources and integrating\nthem into a consistent view. In the short run, this requires\nthat the application anticipate the kinds of problems that\nusers want to solve and that those problems occur with some\ndegree of regularity.\nIn this section we note some key distinctions or\ndimensions that define a notional space of web problem solving' metadata={'source': 'Semantic_Web.pdf', 'page': 332}
"
"page_content='333\n(see Figure 8.1). Different points and regions in this space\nrequire different techniques. We identify two dimensions ofvariation: frequency of occurrence and how easy it is to\nanticipate a specific task that some user might have. Our\ntask-centered approach supports a space of problems that occur\nwith some regularity and that are possible, but not easy to\nanticipate.\n2.1.Dimensionsofvariation\nAnticipatability. This dimension represents a continuum\nranging from very easy to anticipate, to very difficult to\nanticipate. In the domain of U.S. history, a user may have a\nsimple task of determining who was the 19thpresident. This\ntask is fairly easy to anticipate. The answer can easily be\nfound using a standard search engine. Tasks that are easy to\nanticipate will often have existing web resources addressingthem. In this case there is a whole web page [IPL, 2001]\ndevoted to the 19\nthpresident, Rutherford Birhard Hayes. At the\nother end of this continuum, are tasks that are virtually\nimpossible to anticipate. An example would be the task of\ndetermining whether Rutherford Birhard Hayes is related to AI\nresearcher Pat Hayes. We were unable to locate a web page that\nhad the answer to this question. A task that is somewhere inthe middle of this continuum is that of finding out how many\nvice presidents were older than the president they served. It\nis rather harder to anticipate this specific question than the' metadata={'source': 'Semantic_Web.pdf', 'page': 333}
"
"page_content='334\nfirst one. However, it is possible to set up a database that\ncontains information about past presidencies which can answerthis and a wide variety of other similar questions. Each\nquestion is not by itself easy to anticipate.\nWho was\nthe19thUS\npresident?Which VPs\nwereolder\nthanthe\npresident?IsPatHayes\nrelatedto\nRutherford\nHayes?\nWho is the\ncurrentUS\npresident?Howmany\nVPsbecame\npresident?(unlikely)Hard to\nAnticipateEasyto\nAnticipate\nInfrequent\nFrequentModerately\nAnticipatable\nFigure 8.1 Notional Space of Problems\nFrequency—The other dimension represents a continuum of\nproblems ranging from frequently occurring to infrequently\noccurring. A simple task that may frequently arise would be tofind out who the current president is, or what the capitol\ncity is for a country or state.\nThese dimensions are distinct and largely orthogonal (see\nFigure 8.1). Easy to anticipate tasks may arise frequently\n(""Who is the current president?"") or infrequently (""Who is the\n19\nthpresident?""). Tasks in the middle of the anticipatability\ncontinuum, may also arise frequently (""How many vice' metadata={'source': 'Semantic_Web.pdf', 'page': 334}
"
"page_content='335\npresidents became president?"") or less frequently (Which VPs\nwere older than the president they served?). The dimensionsare partially correlated in that frequently arising tasks will\noften be easier to anticipate. Also, very few tasks that are\nvery difficult to anticipate will arise frequently. By\nlimiting the domain (e.g., U.S. Presidents) you can better\nanticipate the kinds of tasks or problems people might be\nworking on.\n2.2.SupportingTechnologies\nFigure 8.2 depicts how different technologies may be used\nto support problem solving in different areas in this space.\nSome commercial applications attempt to support portions of\nthis space, but in a very limited way. Ask Jeeves\n(www.ask.com) focuses on leveraging the responses from\nprevious searches. This requires the ability to match naturallanguage queries against categories of questions asked\npreviously by users. Jeeves attempts to answer very general\nquestions, in a virtually unrestricted domain. It is only\nsuccessful to the extent that similar questions have been\nasked before. It has limited ability to leverage domain\nknowledge as the application doesn\'t restrict the domain at\nall.' metadata={'source': 'Semantic_Web.pdf', 'page': 335}
"
"page_content='336\nStatic HTML\npagesNot cost\neffective Requires\nOmniscience\nStatic HTML\npagesTask Centere d\nKnowledge\nSupportRequires\nOmniscienceHard to\nAnticipateEasy to\nAnticipate\nInfrequen t\nFrequentModerately\nAnticipatable\nDynamic\nHTMLpages\n(CGI scripts)\nFigure 8.2 Problem Approaches.\nThe interface encourages the expressions of queries as\nquestions, which may in some instances correspond to the goalof the user. For example, the question, ""How do you build a\nhome?"" may indicate some interest in the user\'s desire to\nbuild a home. In fact, the results from Jeeves on this\nquestion led to better results than the simple query ""build\nhome"" on a standard search engine site. The Jeeves interface\nprovides some additional insight into the task the user is\nperforming over standard search engines. The query ""buildhome"" could also imply that the user is trying to build a home\npage. The Jeeves interface provides at least some hope of\ndisambiguation between home building and home page building.\nNevertheless, the interface doesn\'t elicit the task the user\nis performing, only the question they are asking. In some\ncases these coincide, in other cases they don\'t. In general,\ntask information cannot be leveraged from a purely question-\nbased interface.' metadata={'source': 'Semantic_Web.pdf', 'page': 336}
"
"page_content=""337\nSpecific kinds of questions and tasks can easily be\nsupported by standard HTML or dynamic HTML. This is especiallyif the tasks are sufficiently easy to anticipate that someone\nhas already put together a web page that can help solve it.\nSuppose the user is trying to determine who was the 19th\npresident of the United States. This is easy to anticipate,\nwhich in part explains why someone has built a web page\nfeaturing the 19th president Rutherford Birhard Hayes. On the\nother hand, if your task was to determine if President Hayes\nwas related to Pat Hayes (very difficult to anticipate) you\nwould have a much more difficult time.\nOur goal in describing this framework is primarily to\nstate that task-centered knowledge support focuses on the\nspace of frequently asked questions not supported easily by\nstandard static or dynamic HTML interfaces. In the middle area\nalong the anticipatability dimension, we can define spaces\nthat are domain specific and context rich. Limiting the domain\nprovides for simpler mechanism for expression of theunderlying task and allows for leveraging of domain knowledge.\nBoeing's Service Engineering organization provides an example\nof a context rich specific domain to illustrate the concept of\ntask-centered knowledge support."" metadata={'source': 'Semantic_Web.pdf', 'page': 337}
"
"page_content='338\n3. The Domain\nIn this section, we give an overview of the domain of\naerospace customer support and describe a problem-solving\nscenario that we are supporting.3\n3.1.AerospaceCustomerService\nAirline operators require assistance from manufacturers in\nsolving service-related problems with their airplanes. There\nis a constant stream of incoming requests that need to be\nhandled. Solving these kinds of problems requires significant\nhuman and computational infrastructure. People handling these\nrequests rely on dozens of different resources, scattered\nthroughout the company. In addition, they must also coordinatetheir work with several other people:\nThe customer: people responsible for maintenance and\nsafety of the aircraft they operate.\nFederal Aviation Administration (FAA) officials and\nrepresentatives responsible for safety and certification of\naircraft in the U.S.\n•Service Representatives (SR) functioning as first line of\nsupport to customers, typically located onsite with the\nairline.\n•Help Desk workers responsible for coordinating activities\nand making sure that the requests are given to the\nappropriate people for efficient and effective resolution.' metadata={'source': 'Semantic_Web.pdf', 'page': 338}
"
"page_content='339\n•Engineers: specialists in aircraft engineering and\nmaintenance, including the original designers.\n•A typical flow of events is:\n1.Airline customers experiencing some problem with their\nairplane contact an onsite service representative (SR). Many\ngeneral and routine problems can be fixed directly by the SR.\nNevertheless, they are generalists and often don’t have the\nknowledge or expertise to solve specialized engineering\nproblems.\n2.SRs enter problems requiring specialized knowledge\ninto a help desk system that describes the specific problem.\nThe requests for service are called help desk requests or HD\nrequests, for short.\n3.Each HD request is routed to the engineer whose\nexpertise is most appropriate to the given request. The\nengineer will coordinate their activities with other engineers\nas appropriate. The engineers also rely on a number of paperand online resources in responding to the HD request.\nDifferent resources are required for different kinds of\nproblems.\n4.Critical or safety related changes that need FAA\napproval are passed to the appropriate FAA representative.' metadata={'source': 'Semantic_Web.pdf', 'page': 339}
"
"page_content=""340\n3.2.Scenario\nIn this section, we outline a scenario for how a task-\ncentered approach can support aerospace customer service. A\nkey requirement is quick and reliable location of the\nappropriate engineering resources required to solve the\ncustomer's problem. Different kinds of tasks require differentresources. The same kind of task will require different\nresources depending on the nature of the underlying request.\nRequired resources include engineering databases, design\ndocuments, drawings, as well as the appropriate individuals\nfor bringing closure to the problem. A large amount of the\nexpertise, an engineer brings to the table is location of\nthese resources. The kinds of resources needed are dictated by\nthe specific task the engineer is working on. Tasks can be\ngrouped by several factors including, aircraft model,engineering area (e.g., systems, structures, payloads),\nlocation (e.g., fuselage, empennage), or problem category.\nExample problem categories are shown in Figure 8.3 as request\ntypes. A few examples are: part substitution, FAA approval,\nanimal infestation and drawing request.\nIn our prototype, we support location of relevant\nresources through understanding of the underlying task and keyconcepts from the original request. For example, an engineer\nmight be working on the task of part substitution in the area\nof flight control. This requires them to locate related HD"" metadata={'source': 'Semantic_Web.pdf', 'page': 340}
"
"page_content='341\nRequests, engineering experts and fleet in service summary\nreports (FISRs).\nTo submit such a query, the user fills out a web form (see\nFigure 8.3). For the prototype, we have enumerated typical\nproblem categories (also known as a request types) and four\nkinds of resources: HD Requests, Drawings, Fleet Issues\nSummary Reports (FISRs), and Engineering Experts. We have a\nsmall handful of concepts to select from, for demonstration\npurposes. In the future, we expect that these would come from\na controlled vocabulary of concepts.\nThe user begins by checking boxes that identify the\ncategory of task (i.e., request type) they are working on. In\nsome cases, multiple categories are appropriate. Each task\ncategory, or combination, has a set of associated resource\ntypes that are relevant.\nFigure 8.3 Query Web Form' metadata={'source': 'Semantic_Web.pdf', 'page': 341}
"
"page_content='342\nThe system automatically identifies these through a set of\npredefined mappings. In the future, we could apply some formof online learning (e.g., relevance feedback) to improve\nresource selection.\nIn addition, the user identifies concepts central to the\ncurrent task (or request) by checking boxes. A future\nenhancement would be to extract these concepts from the\nunderlying HD request. For demonstration purposes, we used a\nfixed set of concepts that had to be identified by the user.\nThe selected concepts act as a search filter, so that only\nrelevant resources are returned. At this point, they can pressthe\nsubmit querybutton, to locate the relevant resources.\nIn addition to these factors, the content of the incoming\nHD message often contains keywords that help identify the\nappropriate resources. We believe the combination of these\nfactors and the underlying text of the message can be used to\nidentify the resource relevant to the task the engineer is\nsolving.\n4. Enabling Infrastructure\nThis is the main section in this paper—here we describe\nthe details of our infrastructure and architecture for using\nsemantic metadata to enable task-centered knowledge support.\nWe start by presenting the main components of the\narchitecture, and we discuss some of the reasons for ourchoices. Section 4.2 gives full details of the' metadata={'source': 'Semantic_Web.pdf', 'page': 342}
"
"page_content='343\ninformation/knowledge repository, and Section 4.3 describes\nhow queries are handled. In the following section, we give acomplete worked example.\n4.1.MainComponents\nFigure 8.4 summarizes our prototype architecture for\nenabling task-centered knowledge support. The two centralclasses of functions provided by this architecture are:\n•\nSemantic Metadata Services —representing, querying, and\ninferencing over metadata about diverse engineeringresources (e.g., databases, documents, engineers)\n•\nUser Interaction —task identification and presentation of\nlinks to appropriate resources.\n4.1.1. Semantic Metadata Services\nWe chose Frame Logic [Kifer, 1990] and Resource\nDescription Framework (RDF) for representing facts, rules and\nqueries about the metadata describing key resources required\nto solve customer problems. We chose the Simple Logic-based\nRDF Interpreter (SiLRI) developed at University of Karlsruhe\n[Decker, 1998] for processing the queries. The RDF Model &\nSyntax specification [Lassila, 1999] defines a formal set-\ntheoretic data model, which can have several isomorphicrepresentations. The RDF triples representation is used by the\nSiLRI engine. The underlying technology behind SiLRI has been\ncommercialized by Ontoprise [Ontoprise, 2001].' metadata={'source': 'Semantic_Web.pdf', 'page': 343}
"
"page_content='344\nConcept-based search— Because Boeing is such a large and\ndiverse enterprise, language tends to be specialized. This notonly causes problems during verbal communication, but can lead\nto difficulties in querying for resources (e.g., databases)\ncontrolled by another group. To help reduce such problems, we\nchose to integrate a large aerospace Thesaurus into our\narchitecture [Clark, 2000]. The Thesaurus was developed by the\nBoeing Technical Libraries for the purpose of classifying and\nretrieving documents. It has been under development for many\nyears, and consists of a vast network of approximately 37,000\nconcepts with approximately 100,000 links between them. ThisThesaurus has been enhanced and exploited in a knowledge-based\nsearch application for locating experts in a given subject\narea.\nThis demonstrated that an existing corpus of knowledge\ncould be suitably enhanced and exploited in a context not\noriginally anticipated,\ni.e.,searching for experts, rather\nthan for documents. The Thesaurus can be thought of as aconceptual vocabulary, or ""lightweight ontology"". Current\nresearch at Boeing is focused on continuing to enhance the\nrepresentational aspects. The idea is to continue to exploit\nthe Thesaurus by improving it as required for a variety of\nother applications. In doing so, we were faced with the\nrealization that people will resist acceptance of a global\nvocabulary, and therefore ways must be developed to reap the\nadvantages of a standard vocabulary, while allowing' metadata={'source': 'Semantic_Web.pdf', 'page': 344}
"
"page_content='345\nindividuals to continue to use their own terms locally. Terms\nand their associated relations in the thesaurus wereautomatically converted into RDF syntax for use by SiLRI.\n4.1.2. User Interaction\nTo support interaction with the user, we chose to build a\ntemplate engine that supports 1) collection of user inputs, 2)\nprocessing of those inputs, and 3) generating the content of\nthe output to the user. User input parameters and RDF queries\nrepresented in F-logic specify how templates are to be\ninstantiated and expanded by a template engine. The queries\nare embedded in the un-instantiated template, and are sent tothe SiLRI engine for evaluation. Evaluation may result in\nadditional or partially bound, but still unevaluated\nexpressions. The query evaluation drives the template\ninstantiation process, which continues until there are no\nunevaluated query expressions left in the template. The\nexpanded template contains the\ncontentof the output to the\nuser, in XML format. Before it is presented to the user, it isfirst converted to HTML by the browser (IE 5.0) using a pre-\ndefined style sheet, written in XSL (see Figure 8.4).' metadata={'source': 'Semantic_Web.pdf', 'page': 345}
"
"page_content='346\nSiLRIBoeing\nThesaurusRDF & F-logic\nMetadata\nRepositoryHelpDesk\nXML\nTemplatesTemplate\nEngine\nXSL\nFigure 8.4 Prototype Architecture.\n4.1.3. Rationale\nThe choice of RDF in popularity and provided a means of\nrepresenting and storing metadata independent from the\nresources being described. This was an important consideration\nin the Boeing environment, where central management and\ncontrol over these resources doesn’t exist. Many of the\nresources used by the customer support organization are not\nowned or controlled by them. Other mechanisms for representing\nmeta-data including Topic Maps [TopicMaps, 2001] didn’t havethe kinds of support tools required when we started the\nproject. Since then, more tools have been developed to support\ntopic maps. SiLRI provided a convenient mechanism for querying\nthe underlying RDF and, as a bonus, supported representation\nof and inferencing over rules. This turned out to be an\nimportant part of our architecture.' metadata={'source': 'Semantic_Web.pdf', 'page': 346}
"
"page_content='347\nWe chose a template-driven approach to the user interface\nbecause of its generality and the ability to update the look-and-feel without programming. Originally, the templates\ncontained HTML with embedded queries to the SiLRI engine.\nAfter experimenting with this approach for several weeks, we\nkept wanting to extend the template language to support\nsorting, filtering, and other common operations. We realized\nthat XSL could support many of the operations we desired\nwithout having to build them ourselves. At this point, we\nchose to use XML as our template language rather than HTML and\nuse the facility in IE 5.0 to translate the XML into HTMLusing XSL.\n4.2.Information/KnowledgeRepository\nHere we give the formal details of how the information\ndescribed in the previous section is represented and used.There are various kinds of information that need to be stored\nand/or referred to in the resource metadata, encoded in F-\nlogic.\n•Concepts - the Boeing thesaurus, converted to F-logic\nsyntax.\n•Resources - FISRs, HD Requests, Engineering Experts\n•Rules - which characterize important relationships, and are\nused to specify queries.' metadata={'source': 'Semantic_Web.pdf', 'page': 347}
"
"page_content=""348\n4.2.1. Concepts\nWe have translated the Boeing Thesaurus into Frame Logic\n(F-logic) syntax. F-Logic is a declarative language that mixes\nfeatures of object-oriented and frame-based languages. It has\na model-theoretic semantics and a sound and complete\nresolution-based proof theory. The main components of F-logic\nsyntax are summarized below:\n•F [S1=>A ; S2=>>B ] declares that\n•Fis a frame with two slots, S1andS2\n•slotS1has values of frame type A\n•slotS2is multi-valued and has values of frame type B\n•F1::F2declares thatF1is a subtype of F2.\n•I:F[S1->V; S2->>{V1,V2, …, Vn}] declares that\n•Iis an instance of frame type F\n•slotS1ofIhas valueV\n•multi-valued slot S2ofIhas valuesV1–Vn\nNote that double arrows are used for defining the frames\n(e.g. '=>' or '=>>'). Single arrows are used for defining\ninstances (e.g. '->' or '->>' ). Also, two right angle\nbrackets in a row (e.g. '->>' or '=>>') denotes a multi-valued\nslot, otherwise a slot is single-valued.\nExample.A concept from the thesaurus has four slots:\nname, related_to, broader_than and narrower_than. These are\nstandard for a thesaurus. The definition for a concept, and a\nfew examples are given below."" metadata={'source': 'Semantic_Web.pdf', 'page': 348}
"
"page_content='349\nConcept::Object\n[Name => String;\nrelated_to =>> Concept;\nbroader_than =>> Concept;\nnarrower_than =>> Concept].\nhalon:Concept\n[name -> ""halon"";\nrelated_to ->> flight_control]\nflight_control:Concept\n[name -> ""flight control"";\nrelated_to ->> halon]\nWe also define a simple rule for indicating that concepts\nare near each other. F-Logic rules are written as backward\nimplications, just like Prolog rules.\n•near(1, C1, C2) is true when C1 is \'related_to\' C2, or C1 is\na broader or narrower term than C2.\nFORALL C1,Y near(1, C1,C2) <-\nC1[related_to ->> C2] or\nC1[broader_term ->> C2] or\nC1[narrower_term ->> C2]\nBy creating rules of this sort, one can specify different\ndegrees of relatedness, which can be exploited to provide\ngreater flexibility to the user in locating resources.' metadata={'source': 'Semantic_Web.pdf', 'page': 349}
"
"page_content='350\n4.2.2. Resources\nWhile it makes sense to refer to the F-logic code as\nmetadata from the perspective of its role in characterizing\nresources, from the perspective of an F-logic user, this is\nmore likely to be thought of as a knowledge base. Hence, we\nshall refer to the F-logic KB, which is the metadata for the\nresource base.\n4.2.2.1 Engineering Experts\nWe define a frame, or class called Person, which has three\nslots: a name, an employee id, and a list of subjects that\nthey have expertise in. The \'subjects\' that fill the latterslot must be of type, \'Concept\', another F-logic frame. The F-\nlogic syntax defining the frame Person, and two instances is\ngiven below.\nPerson::Object\n[Name => String;\nID => Integer;\nSubjectsExpertIn =>> Concept].\nperson1:Person\n[Name -> ""Robert Jasper"";\nID -> ""139988"";\nSubjectsExpertIn ->> {refueling, flight_control, smoke}].\nperson2:Person' metadata={'source': 'Semantic_Web.pdf', 'page': 350}
"
"page_content='351\n[Name -> ""John Thompson"";\nID -> ""42549"";SubjectsExpertIn ->> {smoke, halon}].\nFor convenience in specifying queries, we define the\nfollowing predicates. Again, the style is very Prolog-like.\n•has_expertise(P, C) is true when P is an instance of Person,\nand the slot SubjectsExpertIn contains Concept C.\n•has_expertise_related_to(P, C) is true when P is an\ninstance of Person, and either P has_expertise in C, or there\nis another concept, C0, which is \'near\' to C (in the concept\nthesaurus), and P has_expertise in C0.\nFORALL P,C has_expertise(P,C) <-\nP:Person[SubjectsExpertIn ->> C].\nFORALL P,C has_expertise_related_to(P,C) <-\nhas_expertise(P,C).\nFORALL P,C has_expertise_related_to(P,C) <-\n(EXISTS C0 has_expertise(P,C0) and near(1,C0,C)).\n4.2.2.2 Fleet Issues Summary Reports (FISRs).\nWe define a frame called FISR, which has five attributes,\na URL, a model number, a title, a list of references that\npertain to this FISR, and a set of concepts that this FISRrelates to. The last slot has the metadata tag that refers to' metadata={'source': 'Semantic_Web.pdf', 'page': 351}
"
"page_content='352\nthe resource, which is used when searching for FISRs relevant\nto the task at hand. In our prototype, this tagging is donemanually, but much of the information already exists in\nanother form. Techniques such as wrapper induction [Ashish,\n1997], could also be used.\nWe also define a separate frame for the references. These\nhave four slots, a label, a date, a URL and a location, which\nindicates where the hard copy of the FISR is physically\nlocated. These two frames, with examples are given below, in\nF-logic.\nFISR::Object[URL => String;\nModel => String;\nTitle => String;\nReferences =>> Reference;\nRelated_Concepts =>> Concept].\nReference :: Object\n[RefLabel => String;\nRefDate => Date;\nRefURL => URL;\nRefLocation =>> String].\nid_787_0066:FISR\n[URL-> ""yadayada.boeing.com/cgi?model=787&…"";\nModel -> ""787"";\nTitle -> ""Lateral Flight Control"";\nReferences ->> {id_787_8801, id_787_039A};' metadata={'source': 'Semantic_Web.pdf', 'page': 352}
"
"page_content='353\nRelated_Concepts->> flight_control].\nid_787_8801:Reference\n[RefLabel -> ""787 8801"";\nRefDate -> ""14-JAN-88"":String;\nRefLocation ->> {""Joe\'s Office"", ""Renton Library""};\nRefURL-> ""yadayada.boeing.com/787_8801-fisr-ref.html""].\nFor convenience in specifying queries, we define the\nfollowing predicates to determine which FISRs are related to a\ngiven concept.\n•fisr_related_to(C, U, L, M) is true when there is a FISR\nrelated to Concept C, and U is the FISR\'s URL, L [abel]is\nthe FISR\'s Title, and M is the FISR\'s Model. The\nrelationship may be direct, or it may be via an intermediateconcept, C0, as in the example with engineering experts.\n•fisr_directly_related_to(C, U, L, M) is true when there is a\nFISR directly related to concept C and U is the FISR\'s URL,L\n[abel]is the FISR\'s Title, and M is the FISR\'s Model.\nThese are given below as straightforward recursive\ndefinitions in F-logic.\nFORALL C, U, L, M\nfisr_related_to(C, U, L, M) <-\nfisr_directly_related_to(C, U, L, M).' metadata={'source': 'Semantic_Web.pdf', 'page': 353}
"
"page_content=""354\nFORALL C, U, L, M //for Concept, Url, Label, Model\nfisr_related_to(C, U, L, M) <-\n(EXISTS C0 fisr_directly_related_to(C0, U, L, M) and\nnear(1,C0,C) and\n(EXISTS F F:FISR[URL -> U; Title -> L; Model -> M].\nFORALL F, C, U, L, M\nfisr_directly_related_to(C, U, L, M) <-\nF:FISR[Related_Concepts ->> C] and\nF:FISR[URL -> U; Title -> L; Model -> M].\n4.2.2.3 HD Requests (HDs)\nWe define a frame, HD_Request which has slots for the URL,\nsubject, task type, and related concepts. There is a predicate\ncalled hd_related_to which is exactly analogous to\nfisr_related_to. This is summarized below, we include fewer\ndetails, to avoid repetition.\n•hd_related_to(C, U, S, T) is true when there is a HD request\nrelated to Concept C and U is the HD's URL, S is the HD's\nSubject, and T is the HD's task type. The relationship may\nbe direct, or it may be via an intermediate concept, C0, as\nin the above examples.\nHD_Request::Object[URL => String;"" metadata={'source': 'Semantic_Web.pdf', 'page': 354}
"
"page_content=""355\nSubject => String ;\nTaskType => String;Related_Concepts =>> Concept].\n4.3. HandlingQueries\nAn illustrated above, we have added meta-data which\nexplicitly relates resources to concepts. The concepts thatthe user specifies act like search keywords except that we are\nemploying concept-based search [Clark, 2000], which enables\nresources to be located which are tagged with concepts that do\nnot exactly match any string that is input by the user. The\nmetadata for the resources is stored as F-logic facts and\nrules, and acts as a database to be queried. In response to\nthe user's request for information (enacted by pressing the\nsubmit querybutton in Figure 8.3), the system will generate\nan XML file containing all the relevant resources. This isthen rendered via an XSL style sheet. Determining exactly\nwhich resources are related to the specified concepts requires\nquerying the metadata. Furthermore, we require that the degree\nof relatedness can be variable and tailored to different users\nneeds. The question is: how can you, from a single web page,\nissue many different queries, specifying different tasks\nand/or different concepts, and produce a different set ofresources, just the ones the user needs?\nTo support this kind of response, tailored to the user’s\nspecific tasks, we require a more flexible and general"" metadata={'source': 'Semantic_Web.pdf', 'page': 355}
"
"page_content='356\nmechanism for generating web pages, than is provided using\nstandard CGI scripts alone. The key idea, is to in effect, adda template feature to the XML language. Viewed another way, we\nhave designed an XML-based template language. By convention,\nthese have an .xmlt file extension. These files are pre-\nprocessed by a Perl script that expands the templates, and\noutputs an .xml file, which is rendered on the web page using\nan XSL style sheet. This is the response to the user’s query.\nTemplates contain standard XML mixed with variable\nreferences and queries written in F-logic. Note that we have\ntwo entirely different kinds of queries . The first is issued\nby the user by filling out the web form and clicking the SUBMIT\nQUERYbutton. The other kind is a query to the metadata that is\nencoded using the template language, and processed by the F-\nlogic inference engine, SiLRI. The first kind is a query from\nthe user’s perspective, so we refer to these as user queries.\nThe second kind is invisible to the user—we refer to those asa\nmetadata queries. Our architecture is general, so that any\nlanguage and query engine could be used to express and process\nthe metadata queries. In our prototype, all metadata queries\nare expressed in F-logic and handled by SiLRI.\nThe .xmlt file is transformed into an .xml file through a\nprocess of instantiation and expansion which occurs on the\nserver through CGI scripts written in Perl. There are two\nkinds of variables in the template, which differ according to\nwhen they get instantiated. The first kind gets instantiated' metadata={'source': 'Semantic_Web.pdf', 'page': 356}
"
"page_content='357\nwhen the user submits their query. We refer to these as global\nvariables,because wherever they occur in the templates in the\n.xmlt file, they refer to the same thing, and are instantiated\nto have the same value. They are bound in the usual fashion\nvia CGI. The other variables are called metadata variables ,\nbecause they refer to elements in the metadata, and are\ninstantiated during the process of answering metadata queries.\nThey are local to an individual template—i.e. different\nmetadata variables can have the same name, if they are in\ndifferent templates in the same .xmlt file.\nThe raw .xmlt template file contains a number of global\nvariables whose values are specified by the user when they\nfill out the web form. In our prototype, these variables\nidentify the category of task the user is working on, the\nkinds of resources they are interested in, and the concepts\nthat the resources are related to Figure 8.4. When the user\nsubmits their query, an interim, partially instantiated\ntemplate is created with all the global variablesinstantiated. If there are\nnometadata queries in the\ntemplate, then this is the final result; no significant\ntemplate language functionality would have been exercised. If\ntherearemetadata queries, the partially instantiated\ntemplate is the starting point for the expansion process. At\nthis point, the template will still contain unbound metadata\nvariables, local to individual templates. In order for them to\nbe bound, they must also be embedded in a metadata query. The' metadata={'source': 'Semantic_Web.pdf', 'page': 357}
"
"page_content='358\nexpansion engine delegates processing of the queries to SiLRI.\nWith the queries answered, some of the metadata variables willnow be bound. However, nesting is possible, so the resulting\ntemplate may still contain unbound metadata variables and\nunevaluated metadata queries. Templates are expanded\nrecursively, until all metadata queries are executed and all\nfree metadata variables are bound. This process is illustrated\nwith a worked example in the next section. The final XML\ndocument is translated by the IE browser into HTML via an XSL\nstyle sheet. This could have easily been done via a server-\nbased XSL engine such as Xalan [Apache, 2001].\nWe employ the F-logic language to enable tailoring of\nrules, which can be used to fine-tune what is meant by\n‘related-to’. For example, one can easily specify degrees of\nrelatedness based on how far away concepts are to each other\nin the Thesaurus. A user could submit their queries for\nrelevant resources using different degrees of ‘related to’.\nThis would have the effect of increasing the recall butdecreasing the precision, or vica versa.\nThe power and flexibility of this approach derives from\nthe fact that the Perl script queries the metadata to retrieve\nzero or more resources of each type. Each resource results in\nan instantiation of the template, in XML.' metadata={'source': 'Semantic_Web.pdf', 'page': 358}
"
"page_content='359\n5. Worked Example\nThe template language extends standard XML by adding three\nspecial tags and a syntax for referring to template variables\nthat will be bound to values as the template is expanded. The\nthree tags are: <GLOBAL-SUBST> , <META-SUBST>, and <HTML-\nTEMPLATE>. Template variables are strings prefixed with the\nsymbol: \'@\' (e.g. \'@Cnpt\') . They always occur inside an\n<HTML-TEMPLATE>; An \'@\' symbol occurring outside an <HTML-TEMPLATE> has no special significance. It is treated as raw\nXML. Below is an example showing how these are used. All\ntemplate language features are in boldface. Everything else is\nstandard XML.\n<GLOBAL-SUBST>\n<HTML-TEMPLATE>\n<FISRS>\n<META-SUBST QUERY=""FORALL URL,Label,Model <-\nselected(""@show_fisrs"") andfisr_related_to(@Cnpt, URL, Label, Model)."">\n<HTML-TEMPLATE>\n<FISR>\n<URL><![CDATA[\\/@URL]]></URL>\n<Model>@Model</Model>\n<Title>@Label</Title>\n</FISR></HTML-TEMPLATE>' metadata={'source': 'Semantic_Web.pdf', 'page': 359}
"
"page_content='360\n</META-SUBST>\n</FISRS>\n<HDS>\n<META-SUBST QUERY=""forall URL,Label <-\nselected(""@show_hds"") and\nEXISTS X hd_related_to(@Cnpt, URL, Label, X)."">\n<HTML-TEMPLATE>\n<HD>\n<URL><![CDATA[\\/@URL]]></URL>\n<Title>@Label</Title></HD>\n</HTML-TEMPLATE>\n</META-SUBST>\n</HDS>\n<EXPERTS>\n<META-SUBST QUERY=""FORALL N,Id <-selected(""@show_experts"") and\nEXISTS P has_expertise_related_to(P,@Cnpt) and\nP[Name -> N; ID->Id]."">\n<HTML-TEMPLATE>\n<EXPERT>\n<Name>@N</Name>\n<ID>@Id</ID>\n</EXPERT>' metadata={'source': 'Semantic_Web.pdf', 'page': 360}
"
"page_content=""361\n</HTML-TEMPLATE>\n</META-SUBST></EXPERTS>\n</HTML-TEMPLATE>\n</GLOBAL_SUBST>\nThe\n<GLOBAL-SUBST> and<META-SUBST>tags are for\nspecifying the scope of substitutions for global variables and\nmetadata variables, respectively. The <HTML-TEMPLATE> tag is\nused in conjunction with a specification of variable\nsubstitutions of the following form:\n{[VarA=valA1,VarB=valB1, …, VarN=valN1],\n[VarA=valA2,VarB=valB2, …, VarN=valN2], …}\nIn this case, there are two complete sets of variable\nsubstitutions. This would result in the <HTML-TEMPLATE>\ngetting instantiated and included in the final .xml file twice- once for each set of substitutions. Multiple inclusions of\ninstantiated templates, is what we mean by 'expansion'. The\nuse of an\n<HTML-TEMPLATE> immediately following the <GLOBAL-\nSUBST>tag is a special case, in that the query string only\npasses a single set of variable substitutions, so that\ntemplate is instantiated only once. The server generates this\nsubstitution specification when the user presses the submit\nquerybutton. It is contained in the query string that's\npassed to the CGI script. The relevant part of the query\nstring for our example is:\nshow_fisrs=T&show_hds=T&show_experts=T&Cnpt=flight_control"" metadata={'source': 'Semantic_Web.pdf', 'page': 361}
"
"page_content='362\nThis is the substitution specification for the global\nvariables. Performing this substitution results in theinstantiation of the outermost\n<HTML-TEMPLATE>; i.e. the one\nthat occurs in between the <GLOBAL_SUBST> tags. The first\nthree are boolean variables which are ‘ T’ if and only if the\ncorresponding resource type box is checked (see Figure 8.3).\nThe substitution specifications resulting from the < META-\nSUBST> tag are more interesting, in that multiple\ninstantiations of the < HTML-TEMPLATE> may result. In the\nexample, we saw that there were four FISRs. This is because\nthe F-logic query for related FISRs returned four sets ofvariable bindings as follows:\n{[Url=""http://…foo…"", Model=797, Label=""Refueling Valves""]\n[Url=""http://…bar…"", Model=787, Label=""Halon\nConcentration … Barrier""],\n[Url=""http://…baz…"", Model=787, Label=""Lateral Flight\nControl""],\n[Url=""http://…gaz…"", Model=787, Label=""Warm Flight Deck\nTemperatures""]}.\nThis is the substitution specification that is used for\nthe instantiation and expansion of the second <\nHTML-TEMPLATE>.\nThe <FISRS> and </FISRS> tags are outside the < HTML-TEMPLATE>\ntags, and contain no global variables, so they pass through to\nthe output .xml file unchanged. The resulting .xml code for\nthe FISRS is:\n<FISRS>' metadata={'source': 'Semantic_Web.pdf', 'page': 362}
"
"page_content='363\n<FISR>\n<URL><![CDATA[\\/yadayada.boeing.com/cgi?model=797&foo…]]><\n/URL>\n<Model>797</Model>\n<Title>Refueling Valves</Title>\n</FISR>\n<FISR>\n<URL><![CDATA[\\/yadayada.boeing.com/cgi?model=787&bar…]]></URL\n>\n<Model>787</Model><Title>Halon Concentration for Smoke Barrier</Title>\n</FISR>\n<FISR>\n<URL><![CDATA[\\/yadayada.boeing.com/cgi?model=787&baz…]]><\n/URL>\n<Model>787</Model>\n<Title>Lateral Flight Control</Title></FISR>\n<FISR>\n<URL><![CDATA[\\/yadayada.boeing.com/cgi?model=787&gaz…]]]></UR\nL>\n<Model>787</Model>\n<Title>Warm Flight Deck Temperatures</Title>\n</FISR>' metadata={'source': 'Semantic_Web.pdf', 'page': 363}
"
"page_content='364\n</FISRS>\nThe query to find related HD request fails, because there\nwere none found in the F-logic database. It returns the null\nset—thus the next <HTML-TEMPLATE> results in no .xml code at\nall. Again, the <HDS> </HDS> pass through to the output .xml\nfile unchanged. The resulting .xml code for the HDs is just:\n<HDS>\n</HDS>\nFinally, the query to find related experts, results in the\nsingle set of substitution bindings:\n{ [Name=""John Thompson"", Id=""42549] }.\nThus, the <HTML-TEMPLATE> is instantiated exactly once.\nThe resulting xml code for the experts is:\n<EXPERTS>\n<EXPERT>\n<Name>John Thompson</Name>\n<ID>42549</ID>\n</EXPERT></EXPERTS>' metadata={'source': 'Semantic_Web.pdf', 'page': 364}
"
"page_content='365\nFigure 8.5 Sample Output.\nThe final step is to present the information to the user\nin a convenient format. We used the XSL processor embedded in\nthe IE 5.0 browser.\nConclusion\nThe semantic web opens opportunities for fundamentally\nredefining our relationship with the web by defining resources\nin such a way that they are not only human-sensible but also\nmachine-sensible. Users are seldom just searching for\ndocuments on the web but are often in the process of\nperforming some larger task. Current interfaces often don’t\nprovide any means for the user to communicate theirintentions; therefore systems can’t leverage task information\nin support of the user. Making web resources machine-sensible\nwill gradually shift the primary consumers of raw web content' metadata={'source': 'Semantic_Web.pdf', 'page': 365}
"
"page_content='366\nfrom humans to agents who will play the role of information\nintermediaries. These agents will collect and integrateinformation based on the task users are currently performing.\nUnless the semantic web community provides a means of\ncapturing and exploiting task information, newly built\nsemantics-based systems will likely be only moderately better\nat supporting users than current systems. Our modest prototype\nsimply highlights the need and promise of taking a task-\ncentered approach to the semantic web.\nFuture research should focus on better mechanisms for\nidentifying and characterizing user tasks in a way that can beexploited by semantics based tools. We also believe there is\nfruitful research mixing semantics-based technologies with\nexisting information retrieval technologies. It’s doubtful\nthat all resources will ever be fully characterized in such a\nway that will eliminate the need for standard IR techniques.\nIn addition, there is significant opportunity to exploit\nonline machine learning techniques to improve performance oftask-centered systems over time.\nReferences\n[Apache, 2001] Apache Project (2001), Xalan. See\nhttp://xml.apache.org/xalan/.\n[Ashish, 1997] Ashish N and Knoblock C (1997). Wrapper\ngeneration for semi-structured internet sources. In' metadata={'source': 'Semantic_Web.pdf', 'page': 366}
"
"page_content='367\nProceedings of the Workshop on Management of Semi-structured\ndata, 1997.\n[Clark, 2000] Clark, P., Thompson, J., Holmback, H,\nDuncan, L. (2000). Exploiting a Thesaurus-Based Semantic Net\nfor Knowledge-Based Search. In Proc 12thConference on\nInnovative Applications of AI (AAAI, IAAI’ 2000), pages 988-\n995.\n[DAML, 2001] See http://www.daml.org/.\n[Decker, 1998] Decker, S., Brickley, D., Saarela, J.,\nAngele, J. (1998). A Query Service for RDF. The Query\nLanguages Workshop, 1998.http://www.w3.org/TandS/QL/QL98/pp/queryservice.html.\n[Dumais, 1999] Dumais, Susan (1999). Inductive Learning\nand Representation for Text Categorization. Talk at University\nof Washington. See\nhttp://murl.microsoft.com/LectureDetails.asp?177.\n[IPL, 2001] Internet Public Library, IPL (2001). See\nhttp://www.ipl.org/ref/POTUS/rbhayes.html.\n[Kifer, 1990] Kifer M., Lausen G., Wu J. (1990). Logical\nFoundations of Object-Oriented and Frame-Based Languages,\nJournal of the ACM.\n[Lassila, 1999] Lassila, O., Swick, R. (1999). The\nResource Description Framework (RDF) Model & Syntax. W3C\nProposed Recommendation. http://www.w3.org/TR/PR-rdf-syntax/.\n[Ontoprise, 2001] Ontroprise (2001). See\nhttp://www.ontoprise.de/.' metadata={'source': 'Semantic_Web.pdf', 'page': 367}
"
"page_content=""368\n[Smith, 2001] Smith, R (2001). What's Required in\nKnowledge Technologie s - A Practical View, Proceedings of\nKnowledge Technologies 2001. See\nhttp://www.gca.org/attend/2001_conferences/kt_2001/default.htm\n[TopicMaps, 2001] Topic Maps (2000). See\nhttp://www.topicmaps.org/.\nFootnotes\n1Rob Jasper jasperr@seattleu.edu Seattle University 900\nBroadway Seattle WA, USA 98122-4340\n2Mike Uscholdmichael.f.uschold@boeing.com Mathematics and\nComputing Technology The Boeing Company PO Box 3707, MS 7L-40\nSeattle WA, USA 98124-2207 Work phone: 425-865-3605 FAX: 425-\n865-2965\n3The details of this description are fictional to protect\nBoeing’s propriety information. It serves the purpose of\nillustrating our technology."" metadata={'source': 'Semantic_Web.pdf', 'page': 368}
"
"page_content='369\n9. KnowledgeMobility:Semantics for theWeb asaWhiteKnight\nfor Knowledge-Based Systems\nYolanda Gil1\n""No Man is an island\nEntire of itself.\nEvery man is a piece of the continent….""\n-- John Donne (1572-1631)\n1. Introduction\nOne of the challenges for knowledge-based systems is\ninteroperation with other software, intelligent or not. In\nrecent years, our research group has participated in\nvarious integration efforts, where interoperation was\nsupported through translation techniques, mostly at the\nsyntactic level and more recently through ontology-basedapproaches. In this article, I argue that the\ninteroperation challenge will not be met with current\napproaches, since they entail trapping knowledge into\nformal representations that are seldom shareable and often\nhard to translate, seriously impairing its mobility. I\npropose an approach to develop knowledge bases that\ncaptures at different levels of formality and specificityhow each piece of knowledge in the system was derived from' metadata={'source': 'Semantic_Web.pdf', 'page': 369}
"
"page_content='370\noriginal sources, which are often Web sources. If a\nknowledge base contains a trace of information about how\neach piece of knowledge was defined, it will be possible to\ndevelop interoperation tools that take advantage of this\ninformation. The contents of knowledge bases will be more\nmobile and no longer be confined within a formalism. The\nSemantic Web will provide an ideal framework for developingknowledge bases in this fashion. We are investigating\nthese issues in the context of TRELLIS, an interactive tool\nto elicit from users the rationale for choices and\ndecisions as they analyze information that may be\ncomplementary or contradictory. Starting from raw\ninformation sources, most of them originating on the Web,\nusers are able to specify connections between selected\nportions of those sources. These connections are initially\nvery high level and informal, and our ultimate goal is todevelop a system that will help users to formalize them\nfurther.\n2. The Need for Knowledge Mobility\nThis section argues the need for knowledge mobility\nfrom two viewpoints. First, knowledge-based systems need\nto be built to facilitate interoperability and thus theknowledge they contain needs to be more accessible to' metadata={'source': 'Semantic_Web.pdf', 'page': 370}
"
"page_content='371\nexternal systems. Second, our knowledge bases capture\nknowledge in such a way that it is very hard to get out or\ntranslate what they contain.\n2.1.NoKnowledgeBaseisanIsland\nKnowledge-based systems are no longer built to function\nin isolation. Every application that we have built with\nthe EXPECT architecture [Blyhe et al., 2001; Kim and Gil\n2000; Gil and Tallis, 1997; Gil and Melz, 1996] in recent\nyears has been integrated within a larger end-to-end system\nin order to provide the overall functionality required.\nThis section describes several integration efforts thatillustrate important challenges in terms of knowledge\nmobility:\n•\nSignificant differences in representation languages .W e\nhave found on several occasions that different systems\nuse representations and languages that adequately supportcertain functionality or problem solving capabilities.\nRequiring that all the systems in the integration adopt\nthe same representation may be an option in some cases,\nbut many times doing this may be technically challenging\nor simply unfeasible in practice. An alternative\napproach that ends up being more acceptable in practice\nis to allow each problem solver to use different' metadata={'source': 'Semantic_Web.pdf', 'page': 371}
"
"page_content='372\nlanguages and representations and then have ways to map\nback and forth between the two.\n•Discrepancies in modeling styles. Even when different\nknowledge bases are developed in similarly expressive\nlanguages, different knowledge engineers practice\ndifferent modeling styles and approaches. Translators\nbetween different languages help import knowledge bases\nwritten by different developers, but they only translate\none syntactic expression into another and do not address\ndeeper differences in representational styles. The\nrationale for modeling the original knowledge as a\ncertain suite of expressions is never captured in theknowledge base.\n•\nMaintaining consistency among related pieces of\nknowledge. A single domain description may be modeled\npiecemeal in separate parts of the knowledge base to\nreflect different views or functions of the description.\nThe individual pieces may not be explicitly related in\nthe knowledge base, especially when different pieces are\nonly used by different components of the overall\nintegration. In general, very few of the many and varied\nrelations between individual pieces of knowledge arecaptured in the resulting knowledge bases.' metadata={'source': 'Semantic_Web.pdf', 'page': 372}
"
"page_content='373\n2.1.1. Plan Generation and Evaluation\nFigure 9.1 shows the architecture of a knowledge-based\nsystem for Workarounds Analysis that we developed for the\nDARPA High Performance Knowledge Bases Battlespace\nChallenge Problem [Cohen et al., 1999]. This system\nestimates the delay caused to enemy forces when an obstacle\nis targeted (e.g., a bridge is destroyed or a road ismined), by reasoning about how they could bypass, breach,\nor improve the obstacle in order to continue movement\n(e.g., by repairing a damaged bridge or installing a\ntemporary one, fording a river, removing mines, choosing an\nalternative route). Several general ontologies relevant to\nbattlespace (e.g., military units, vehicles), anchored on\nthe HPKB upper ontology, were used and augmented with\nontologies needed to reason about workarounds (e.g.,\nengineering equipment). These ontologies were representedin LOOM, a knowledge representation and reasoning system\nbased on description logic [MacGregor 1991]. The system\nalso included two main problem solvers. A Course of Action\nGeneration problem solver creates several alternative\nsolutions to the problem. Each solution lists several\nengineering actions for that workaround (e.g., deslope the\nbanks of the river, then install a temporary bridge, etc.),includes information about the resources used (e.g., what' metadata={'source': 'Semantic_Web.pdf', 'page': 373}
"
"page_content='374\nkind of earthmoving equipment or bridge is used), and\nstates temporal constraints among the individual actions to\nindicate which can be executed in parallel. This problem\nsolver was developed using a state-of-the-art planner\n[Veloso et al., 1995]. A Temporal Estimation/Assessment\nproblem solver evaluates each of the alternatives and\nselects one as the most likely choice for an enemyworkaround. This problem solver was developed in EXPECT.\nIt used the information about engineering equipment and\ntechniques included in the ontologies as well as several\ndozen problem solving methods to estimate how long it would\ntake to carry out a given workaround plan generated by the\nCourse of Action Generation problem solver. This system\nwas the only one to attempt full coverage in this DARPA\nChallenge Problem, and demonstrated best performance at\nthis task.' metadata={'source': 'Semantic_Web.pdf', 'page': 374}
"
"page_content='375\nCourses of ActionMilitary units\nand vehiclesUpper Ontology\nFeatures and Terrain\nEngineering Techniques Engineering Equipment\nProblem Solving\nMethods\nfor Time\nEstimationEngineering\nActions\nA u g m e n t e dA c t i o nD e s c r i p t i o n s\nCourse of Action\nGeneration\nProblem SolverTemporal\nEstimation/\nAssessment\nProblem SolverONTOLOGIES\nPLAN EVALUATIONPLAN GENERATIONCourses of ActionMilitary units\nand vehiclesUpper Ontology\nFeatures and Terrain\nEngineering Techniques Engineering Equipment\nProblem Solving\nMethods\nfor Time\nEstimationEngineering\nActions\nA u g m e n t e dA c t i o nD e s c r i p t i o n s\nCourse of Action\nGeneration\nProblem SolverTemporal\nEstimation/\nAssessment\nProblem SolverONTOLOGIES\nPLAN EVALUATIONPLAN GENERATION\nFigure 9.1 A Knowledge-Based System for Plan\nGeneration and Evaluation.\nOne of the challenges for integration illustrated by\nthis system is differences in representation. We found a\nhuge gap between the representations used in the state-of-\nthe-art knowledge representation and reasoning systems andthose of a special-purpose reasoner, in our case a state-\nof-the-art plan generation system. The ontology of\nengineering actions shown in Figure 9.1 was sufficient to\nsupport the temporal estimation problem solver, but it\nneeded to be significantly augmented by knowledge engineers\nto develop the action descriptions required by the planner.\nThese descriptions could not be represented declarativelyin the ontology, and thus had to be separately developed\nand maintained. Conversely, the planner generated very' metadata={'source': 'Semantic_Web.pdf', 'page': 375}
"
"page_content=""376\ndetailed plans that included many causal and temporal links\namong the actions, as well as steps and bindings that were\nhelpful for plan generation but had no counterpart in an\nengineering plan. Thus, only portions of the final plan\nwere incorporated back in the knowledge base. It is\nimportant to notice that the issue was not a difference in\ncontent, but in the expressivity of the language regardingplanning-specific knowledge. Although it may be possible\n(though certainly non-trivial) to coerce the planner's\nrepresentations into the ontology, it is not clear that it\nis a superior representation for that kind of knowledge.\nAnother problem was maintaining consistency in the\nknowledge base. We needed to keep three different parts of\nthe knowledge base closely aligned: the ontology\nengineering actions, the ontology of engineering\ntechniques, the methods for time estimation, and theplanner's augmented engineering actions. Since each of\nthese ontologies required different expertise, different\nknowledge engineers were resposible for each of them. The\nEXPECT knowledge acquisition tools [Kim and Gil, 1999] were\nvery useful in pointing out inconsistencies between the\nmethods and some of the ontologies, but the planner's\nactions were not accessible to EXPECT. Consistency acrossthe different parts of the knowledge base had to be"" metadata={'source': 'Semantic_Web.pdf', 'page': 376}
"
"page_content='377\nmaintained largely by hand. Some of the performance\nproblems during the evaluation of this system were traced\nto these kinds of inconsistencies.\n2.1.2. Mixed-Initiative Plan Generation\nAnother active area of research within our project is\nmixed-initiative tools to help users create strategic\nplans, in particular in air campaign planning. In order toplan what air operations will be conducted in a campaign,\nmilitary planners use a strategies-to-task methodology\nwhere low-level tasks are derived from higher level\nnational and campaign goals. For example, a campaign\nobjective like attaining air superiority results in an\noperational subobjective of suppressing enemy air sorties,\nwhich in turn creates an operational task of damaging key\nairbase support facilities. Ultimately, these objectives\nare turned into missions stating which specific aircraft,crews, and airfields will be used to accomplish the lower-\nlevel tasks. At the higher, strategic levels of planning\nusers prefer to maintain control of the planning process\nand specify the objectives themselves, leaving automatic\nplan generation to the lower levels of the planning\nprocess. A series of plan editors were built to allow a\nuser to define objectives and decompose them intosubobjectives, possibly invoking automated plan generation' metadata={'source': 'Semantic_Web.pdf', 'page': 377}
"
"page_content='378\ntools to flush out the plan at the lower levels. Because\nthe plan creation process is mostly manual (at least at the\nhigher levels), it is prone to error. This is aggravated\nby the size of the plans (several hundreds of\ninterdependent objectives and tasks) and by the number of\ndifferent people involved in its creation. In order to\nhelp users detect potential problems as early as possiblein the planning process, we developed INSPECT, a knowledge-\nbased system built with EXPECT that analyzes a manually\ncreated air campaign plan and checks for commonly occurring\nplan flaws, including incompleteness, problems with plan\nstructure, and unfeasibility due to lack of resources. For\nexample, INSPECT would point out that if one of the\nobjectives in the plan is to gain air superiority over a\ncertain area then there is a requirement for special\nfacilities for storing JPTS fuel that is currently nottaken into account. Without INSPECT, this problem might\nonly be found when a logistics expert checks the plan, a\nday or more after the execution of the overall plan is\nstarted. INSPECT reasons about the kinds of objectives in\nthe plan, notices that gaining air superiority requires\nproviding reconnaissance missions, which are typically\nflown in stealth aircraft that need specific kinds of fuel(e.g., JPTS) that need to be stored in special facilities.' metadata={'source': 'Semantic_Web.pdf', 'page': 378}
"
"page_content=""379\nINSPECT was very successfully received by users, since it\nalways found unintentional errors in the plans created by\nINSPECT’s very own designers.\nEXPECT-based\nPlan Critiquer\n(INSPECT)Plan Decomposition\nAid\n(SDA)Plan Editor\n(Mastermind)Plan Server\n(CORBA)\nObjectives\nSpecification\nMap-based\nV isualization\nPlan\nGeneration\natlower levelsONTOLOGIES Logistics\nresources\nTime and\nlocationsAircraft\nandequipment\nAirfieldsAircampaign\nobjectivesProblem solving\nmethods\nfor critiquingPlansEXPECT-based\nPlan Critiquer\n(INSPECT)Plan Decomposition\nAid\n(SDA)Plan Editor\n(Mastermind)Plan Server\n(CORBA)\nObjectives\nSpecification\nMap-based\nV isualization\nPlan\nGeneration\natlower levelsONTOLOGIES Logistics\nresources\nTime and\nlocationsAircraft\nandequipment\nAirfieldsAircampaign\nobjectivesProblem solving\nmethods\nfor critiquingPlans\nFigure 9.2 An Integration Framework for a Plan\nCritiquer.\nINSPECT was integrated in several architectures of very\ndifferent nature. Figure 9.2 shows an integration of\nINSPECT with a few knowledge-based tools within a pre-existing software architecture that was CORBA-based. There\nwas a plan server that contained not only air campaign\nplans but also land and maritime activities in joint\noperations. The plan server was not amenable to any major\nchanges, so many of the plan details and constraints that\nwere used by the knowledge-based tools never made it there.\nFigure 9.2 also shows the different ontologies in INSPECT's"" metadata={'source': 'Semantic_Web.pdf', 'page': 379}
"
"page_content='380\nknowledge base, whose integration and development is\ndescribed elsewhere [Valente et al., 1999].\nAdvisable Planner\n(AP)EXPECT-based\nPlan Critiquer\n(INSPECT)Plan Editor\n(APAT)\nPlan ServerPlanning Cell\nManager\n(PRS) Scheduler\n(OPIS)Plan\nGeneration\n(SIPE)Simulation\n(ACS)Visualization\n(VISAGE)\nMulti-agent system\n(MPA)Advisable Planner\n(AP)EXPECT-based\nPlan Critiquer\n(INSPECT)Plan Editor\n(APAT)\nPlan ServerPlanning Cell\nManager\n(PRS) Scheduler\n(OPIS)Plan\nGeneration\n(SIPE)Simulation\n(ACS)Visualization\n(VISAGE)\nMulti-agent system\n(MPA)\nFigure 9.3 Integrating a Plan Critiquer in a Multi-\nAgent System.\nFigure 9.3 shows another integration, this time with\nseveral other planning aids within a multi-agent planning\narchitecture. This integration is another illustration of\nthe representational mismatch among different systems. The\nplan server in this architecture contained rich\nrepresentations of plans regarding their hierarchicaldecomposition, causal and temporal dependencies, and\noverall planning process management. It lacked, however,\nrich representations of objectives that were needed by the\nplan editor and by INSPECT in order to analyze the' metadata={'source': 'Semantic_Web.pdf', 'page': 380}
"
"page_content='381\nrequirements of each objective, and as a result these\nrepresentations were not incorporated in the plan server\nand were not available to any other tool. We suspect that\nother modules found similar discrepancies between their\nparticular representation formalisms and the plan server.\n2.1.3. Critiquing Courses of Action\nAnother important integration effort was to develop an\nend-to-end system to help users develop military courses of\naction, depicted in Figure 9.4. Users input a sketch on a\nmap to specify the activities of each force and a statement\nof the objectives of the course of action. Several\ncritiquers were developed by different groups to analyze\ndifferent aspects of the course of action in order to give\nusers feedback about possible problems in their design. We\ndeveloped a critiquer with EXPECT to check problems related\nto plan structure and use of resources. The othercritiquers had complementary capabilities since each of\nthem addressed different kinds of critiques.' metadata={'source': 'Semantic_Web.pdf', 'page': 381}
"
"page_content='382\nEXPECT\nPlanCritiquerPlan\nSketcher\nPlan\nStatements\nCase-Based\nCritiquerSketch and\nStatement\nMerger\nCritiques\nViewerSimulation-based\nCritiquer\n... Military unitsEquipmentResourcesUpper ontology\nTacticaltasksTasks\nPurposesPlans\nandactions\nEvaluationONTOLOGIES\nEXPECT\nPlanCritiquerPlan\nSketcher\nPlan\nStatements\nCase-Based\nCritiquerSketch and\nStatement\nMerger\nCritiques\nViewerSimulation-based\nCritiquer\n... Military unitsEquipmentResourcesUpper ontology\nTacticaltasksTasks\nPurposesPlans\nandactions\nEvaluationONTOLOGIES\nFigure 9.4 Critiquing Courses of Action.\nThe application-specific ontologies used by our system\nwere developed by other groups involved in this effort.Importing these ontologies into our knowledge base was a\nsignificant effort, as it was transforming the input course\nof action into a format consistent with our representation.\nThe simpler translation issues arise in translating\noriginal ontologies in MELD or KIF into LOOM, although\nsometimes mapping different names was necessary (e.g., to\nmap ""TranslationLocationChange"" into ""Move""). More\ncomplex translations are required because of deeper\nrepresentational mismatches. For example, some expressionsused to describe the course of action stated that a certain\ntask had protect as a purpose when there was something to' metadata={'source': 'Semantic_Web.pdf', 'page': 382}
"
"page_content='383\nprotect, while our representation created an instance of\nprotect as the purpose of the task. At times, some of the\ndecomposition structure of the course of action was\nimplicit in the order of the statements, and we had to\nreconstruct that structure so that it would be available in\nour knowledge base. We used the OntoMorph rewrite engine\nto support these more complex mappings, which are describedin more detail in [Chalupsky, 2000]. In essence,\nsupporting this integration was challenging even though the\nlanguages used by the different systems were comparable in\nterms of their expressivity. The differences in modeling\napproaches and representations were quite significant and\nrequired a complex translation system like OntoMorph.\n2.1.4. Translation among Intelligent Agents\nAs part of the initial stages of a new project to\ndevelop ontology-based translation services for multi-agentsystems, we conducted a study of an existing multi-agent\nsystem (not developed by us) to determine the requirements\nof such a translation service [Gil, 2000]. This multi-agent\nsystem was developed to support non-combatant evacuation\noperations, and was used to organize groups of helicopters\nto take people out of a dangerous area and into a safe\nheaven. The agents participating included a suite ofinterface agents that interact with users to get the' metadata={'source': 'Semantic_Web.pdf', 'page': 383}
"
"page_content='384\ninitial helicopter team composition and critical locations\nas well as unexpected threats to the mission (e.g.,\nexplosions), a route planner, a threat (SAM site) finder,\nand helicopter agents that can work in teams in a simulated\nenvironment. All of these agents were initially developed\nin radically different contexts, and originally did not\neven share the application domain.\nIn a typical run, a few thousand messages are exchanged\namong the agents. We analyzed the content of messages that\nare representative of the communications regarding\nsignificant events and activities during the mission. Some\nof the findings include:\n•Syntactic translators are relatively easy to build and\nare often readily available for many formats and\nlanguages. Yet, in the years ahead we will see large\ncommunities of heterogeneous agents where pairwise\ntranslations will become impractical. Each agent will\nhave to advertise its capabilities and requirements in\none (or just a few) formats, and rely on translators andmediators to map those requirements into those of other\nagents. In this particular system, syntactic\ntranslations were often required even though the\ndevelopers often agreed to message formats that would\nminimize these needs. Even when the same kind of' metadata={'source': 'Semantic_Web.pdf', 'page': 384}
"
"page_content='385\ninformation was transmitted different formats were used.\nFor example, the lat-long coordinates sometimes use the\nconvention of an ""X"" and ""Y"" label, in other cases the\ncoordinates were preceded by ""-lat"" and ""-long"" (this\nhappens when the critical locations are given to\nhelicopters by the interface agents), or just ordered\nwithin parentheses (this is the format used by the threatfinder to send threat sites to the helicopter agents). A\ncomplex case of syntactic mapping was required because\nthe threat finder takes queries in SQL format.\n•Mismatches across representations were numerous and often\ndue to modeling with different granularities and levelsof abstraction. For example, the route generated by the\nroute planner needed to be transformed to a coarser-\ngrained route in order to be useful to the helicopter\nagents. The route planner sends a route composed of\npoints that are 9 meters apart. The helicopters are\ntasked one route segment at a time, and when a helicopter\nis given a route that is of a small size (like 9 meters)it will say that the route is achieved without even\ntaking off. Dropping details from a plan is often needed\nwhen planning agents exchange plans. This may involve\ndropping steps, dropping parts of steps, or may require a\ncompletely different plan altogether. Another example of' metadata={'source': 'Semantic_Web.pdf', 'page': 385}
"
"page_content='386\nthe need for such transformations is that the helicopters\nconsider routes to be composed of point-to-point\nsegments, and the threat finder needed to be given a\nrectangular area to initiate its search. The route\nsegment was made into the diagonal of the rectangular\narea, and as a result there were threats returned that\nwere in the area but not very close to the route itself.Similarly, the interface agents specified helicopter\nlanding zones as areas, while the helicopter agents take\nonly a point as landing zone.\n•Maping among different representations may be complex,\nand invocations of third-party agents may be necessary.The route planner and the threat finder use a lat-long\ncoordinate system, the helicopters use an ""x,y, cell""\nformat, and the interface agents use UTM coordinates.\nAlthough it is possible to build ontology-based\ntranslators to mediate these communications, it may be\nmore practical to use the ontologies to simply detect the\nmismatch and then invoke a third party to do theconversion since many such conversion systems are already\navailable. Other cases when invocation of other agents\nwould be useful arise when an agent can fulfill a request\nbut needs information that the requesting agent may not\nhave. For example, the route planner required a map URL,' metadata={'source': 'Semantic_Web.pdf', 'page': 386}
"
"page_content='387\nthe interface agents require a range around a location,\netc.\nThis particular multi-agent system illustrates the\nchallenges in supporting interoperation among intelligent\nsystems, even in relative small scale and numbers. It\nwould not be simple to replace a subset of the agents\ninvolved by other agents of equivalent functionality, whichcould probably not be done without some additional changes\nand adaptations in the original remaining agents.\n2.1.5. Summary\nCurrent efforts in the knowledge-based systems\ncommunity aim to support interoperability through shared\nontologies and diverse translation tools. Drawing from\npast experiences within our own research project, this\nsection illustrates several points:\n•Shared ontologies do not address all integration issues.\nContent can be agreed upon, but representational needs\nare determined by the functionality required of the\nindividual problem solvers and components within thesystem.\n•Maintaining consistency in the knowledge used by several\ncomponents is a great challenge. Some components mayhave some consistency checking facilities, but that is' metadata={'source': 'Semantic_Web.pdf', 'page': 387}
"
"page_content=""388\noften not the case with all the components in the overall\nsystem.\n•Differences in modeling methodologies make translation an\narbitrarily complex task. Syntactic translation and\nmappings are adequate only when such differences are\nminor.\nTo paraphrase John Donne, no knowledge based-system is\nan island. There is an increasing demand to have\nindividually developed intelligent systems become part of\nlarger end-to-end application, and current paths to\nintegration are not able to support interoperability\nappropriately.\n2.2.EducatingKnowledgeBases\nLarge knowledge bases contain a wealth of information,\nand yet browsing through them often leaves an uneasy\nfeeling that one has to take the developer's word for whycertain things are represented in certain ways, why other\nthings were not represented at all, and where might we find\na piece of related information that we know is related\nunder some context. Although the languages that we use are\nquite expressive, they\nstill force knowledge into a\nstraightjacket: whatever fits the language will be\nrepresented and anything else will be left out. Many other"" metadata={'source': 'Semantic_Web.pdf', 'page': 388}
"
"page_content='389\nthings are also left out, but for other reasons such as\navailable time and resources or perhaps lack of detailed\nunderstanding of some aspects of the knowledge being\nspecified.\nFurthermore,knowledge ends up represented piecemeal,\ncompartmentalized in whatever expressions the modelinglanguage supports. Many of the connections betweendifferent pieces of knowledge are never stated, nor can\nthey be derived by the system given what it knows. We see\nno value in representing redundant information or\nalternative ways to deduce the same facts: if the system\ncan derive something in one way that may be more than\nsufficient.\nKnowledge base developers may consult many sources\npresenting contradictory or complementary information,\nanalyze the different implications of each alternativebelief, and decide what and how to model the knowledge. In\nessence, developers often capture in the knowledge base\nonly their final beliefs about some body of knowledge.\nThe\nrationale for modeling the knowledge the way it appears in\nthe knowledge base is not captured declaratively . Only\nconsistent and complete information is captured. No\nindication of inconsistent but possible statements is addedto the knowledge base.' metadata={'source': 'Semantic_Web.pdf', 'page': 389}
"
"page_content=""390\nAs Minsky argues it [Minsky, 1970]:\nThere is a real conflict between the\nlogician's goal and the educator's. The\nlogician wants to minimize the variety of\nideas, and does not mind a long thin path. The\neducator (rightly) wants to make the paths\nshort and does not mind -- in fact, prefers --\nconnections to many other ideas.\nKnowledge base developers seem to prefer the role of\nlogicians rather than seeing themselves as educators of\nintelligent systems.\nKnowledge\nAcquisition\nToolsRead/ask /study/listen...\n…reason/deduce/solve…analyze/group/index...\n…structure/relate/fit...\nKBDomain Expert\nKnowledge\nEngineer\nKnowledge\nAcquisition\nToolsRead/ask /study/listen...\n…reason/deduce/solve…analyze/group/index...\n…structure/relate/fit...\nKBDomain Expert\nKnowledge\nEngineer\nFigure 9.5 How Knowledge Bases are Built Today.\nFigure 9.5 illustrates the limited kinds of knowledge\nthat are captured in the final knowledge base. Developers"" metadata={'source': 'Semantic_Web.pdf', 'page': 390}
"
"page_content='391\n(at least non-experts) start by consulting manuals and\ntutorial material, asking questions, and requesting\nclarifications. Their main task is to analyze and\ndifferent information sources, grouping information,\nindexing related definitions and terms, and gathering as\nmuch raw material as possible in order to understand what\nneeds to be represented and how. Next, they organize theinformation in semi-formal ways by structuring it in\ntables, itemized lists, and detecting opposite and\ncomplementary descriptions. Finally, they build the\nknowledge base itself by turning the refined results of\nthis analysis into formal expressions that fit in the\nparticular knowledge representation language used.\nWhatever documentation ends up in the knowledge base will\nbe the only trace left of all the design and analysis\nprocess that was done to create it. None of thedocumentation is captured in declarative languages. The\nrationale of the knowledge base design is lost: the\noriginal sources, the analysis and structuring of the\nknowledge therein, and the tradeoffs that were considering\nbefore deciding on the final formalization. As a result:\n•It is hard to extend knowledge bases. When the knowledge\nbase needs to be extended or updated, the rationale for\ntheir design is lost and needs to be at least partially' metadata={'source': 'Semantic_Web.pdf', 'page': 391}
"
"page_content='392\nreconstructed. The knowledge sources are no longer\nreadily available and may need to be accessed.\n•It is hard to reuse knowledge contained in knowledge\nbases. While it is the case that entire knowledge bases\ncan be reused and incorporated into new systems, it is\nharder to extract only relevant portions of them that are\nappropriate in the new application. Parts of the\nknowledge base may be too inaccurate for the new task, or\nmay need to be modeled in a different way to take into\naccount relevant aspects of the new application.\nIn summary, knowledge has a very modest degree of\nmobility once it is incorporated into our current systems.Some researchers are creating shared upper ontologies that\ncan serve as a common substrate for the more detailed\nknowledge in specific knowledge bases, thus facilitating\ninteroperation and reuse. Some have argued that the\nbrittleness in our knowledge bases can be addressed by\nproviding common-sense and other background knowledge to\nthese systems. These approaches may be part of thesolution, but it will not address some of the issues\nbrought up here. Current intelligent systems are hard to\nintegrate, maintain, and understand because their\nknowledge\nbases have not been truly educated on the topics they are\nsupposed to know about.' metadata={'source': 'Semantic_Web.pdf', 'page': 392}
"
"page_content='393\n3. A New Generation of Knowledge Bases:\nResilient Hyper Knowledge Bases\nIn order to empower intelligent systems, we believe we\nneed to allow them access to the roots and rationale of the\nknowledge they contain. Furthermore, the knowledge base\nshould not just contain a body of formalized expressions;\nrather, we should extend our view of a knowledge base to\ninclude a variety of formats and representations as well as\nalternative renderings of the same (or related) knowledge.\nThey should include as many connections as possible, as\nstated in the original sources and as they result from the\nanalysis of the knowledge base developer. This approachwould create a new generation of knowledge bases:\nResilient Hyper Knowledge Bases (RHKBs), that will be more\nresilient to change and reuse and will be heavier in\nconnections and hyperlinks.' metadata={'source': 'Semantic_Web.pdf', 'page': 393}
"
"page_content='394\n(((\n))\n())))Richer representations\nMore ambiguous\nMore versatile\n(defconcept\nbridge ()))More formalMore concrete\nMore introspectibleIntroductory texts,experthints,explanations,dialogues,comments,examples,exceptions,...\nInfo.extraction templates,\ndialoguesegmentsandpegs,filled-outforms,high-levelconnections,...\nAlternativeformalizations\n(KIF,MELD, CML,…),alternativeviews ofthesame\nnotion(e.g., whatisathreat)Descriptionsaugmented\nwithprototypicalexamples&exceptions, problem-solvingstepsandsubsteps,...WWW\n(((\n))\n())))Richer representations\nMore ambiguous\nMore versatile\n(defconcept\nbridge ()))More formalMore concrete\nMore introspectibleIntroductory texts,experthints,explanations,dialogues,comments,examples,exceptions,...\nInfo.extraction templates,\ndialoguesegmentsandpegs,filled-outforms,high-levelconnections,...\nAlternativeformalizations\n(KIF,MELD, CML,…),alternativeviews ofthesame\nnotion(e.g., whatisathreat)Descriptionsaugmented\nwithprototypicalexamples&exceptions, problem-solvingstepsandsubsteps,...WWWWWW\nFigure 9.6 A Resilient Hyper Knowledge Base (RHKB).\nFigure 9.6 depicts a Resilient Hyper Knowledge Base in\ncontrast with the current approaches illustrated in Figure9.5. Originally, the development of the knowledge base\nstarts with documentation, examples, dialogues (perhaps\nwith experts), detailed explanations of special cases,\nnotes on exceptions, hints and comments on specific topics,\netc. From these, the developer will extract templates,\nrelevant dialogue segments, itemized lists and tables to\norganize information, etc. This should be done while\nalways keeping a trail of connections to the original\nsources. The developer will also indicate some connectionsbetween different portions of the original sources. It is' metadata={'source': 'Semantic_Web.pdf', 'page': 394}
"
"page_content='395\nour experience that many of the original sources either\nexist or are converted into resources on the Web, and as a\nresult the developer can exploit the hyperlinks and\nconnections that already exist in these original sources.\nAs the developer continues this analysis, additional\nsources may be sought and incorporated at the higher\nlevels, further enriching the grounding of the finalknowledge base that is being developed.\nNext, the developer can identify descriptions and\nassociate with them prototypical examples as well as\nexceptions, pieces of problem solving knowledge in terms of\nsteps and substeps, tables of parameters and values, etc.\nAny of these new distillations will continue to be\nconnected to any other pieces in the knowledge base that\nthey were derived from. The developer can also mark\nalternative views on the same knowledge, indicatecontradictory statements by different sources, and dismiss\nsome pieces of knowledge that may not seem useful for\ncurrent purposes.\nFinally, a developer can turn the more structured\ncomponents into formalized expressions, in one or more\nlanguages and formalisms. Contradictory statements can be\nformalized and connected and marked as contradictory, for' metadata={'source': 'Semantic_Web.pdf', 'page': 395}
"
"page_content='396\nsomeone to pick and choose as they incorporate knowledge\ninto a reasoning engine.\nDuring this process, the developer can annotate the\nreasons for making certain decisions regarding which\nknowledge to model and how to model it. These annotations\nwill help further in understanding the rationale for the\ndevelopment of the knowledge base.\nWe have described here the process with four stages to\nshow the incremental nature of this analysis, but there may\nbe as many levels of refinement as the nature of the\nknowledge and the final system may require.\nNotice that in the higher levels of refinement, the\nrepresentations may be richer, more versatile, but at the\nsame time more ambiguous. In some sense, plain human\nlanguage (i.e., text) may be the most mobile vehicle to\nstate knowledge. The many users of the World Wide Web usethe same pages for a variety of purposes and tasks, the\nultimate signature of true knowledge reuse. At the lowest\nlevels of refinement, the representations are more formal,\nmore concrete, and also more introspectible, lending\nthemselves more to automated analysis and reasoning.\nThere are many benefits to this approach:\n•\nKnowledge can be extended more easily. The formalized,\nfinal expressions may not necessarily contain every' metadata={'source': 'Semantic_Web.pdf', 'page': 396}
"
"page_content='397\ndetail in every knowledge source, but if the need arises\nthe system is better positioned to digest additional\nknowledge. This could be done in two ways: the developer\ncould incorporate the additional knowledge or perhaps the\nsystem could use some automated tools to extract that\nknowledge itself (since it has access to the sources and\nhow they were originally processed).\n•Knowledge can be reused and translated at any level.\nAnother system can be built by reusing only the higher\nlevels of the design process and incorporating other\nsources to create different final formalized expressions.\nOther developers can tap into any intermediate results ofthe analysis and do not have to start from scratch.\nKnowledge does not have to be reused only at the lowest\nlevel as it is today.\n•\nKnowledge can be integrated and translated at any level\nto facilitate interoperability. Translators can be built\nto transform and map knowledge at higher levels. The\nrationale and meaning of different pieces of knowledge\ncan be available to support translation and\ninteroperation.\n•Intelligent systems will be able to provide better\nexplanations. We find that many users are reluctant to\naccept the solutions presented by the systems and ask for' metadata={'source': 'Semantic_Web.pdf', 'page': 397}
"
"page_content='398\nexplanations not of how the system derived an answer\nautomatically but instead ask for explanations of why the\nsystem starts out with a certain fact or belief. When\nusers are shown the reasons for certain assumptions and\nthe fact that certain sources were consulted to make that\nassumption they are reassured in the competence of the\nsystem to provide those answers. Capturing this trailwithin the knowledge base will enable the system to\ngenerate these kinds of justifications and explanations.\n•\nContent providers will not need to be knowledge\nengineers.Although only those trained in the art of\ndesigning, modeling, and writing formal expressions canbuild the more refined portions of RHKBs, anyone can\ncontribute to the higher levels. Many people in diverse\ndisciplines acquire the analytical skills that suffice to\norganize and digest knowledge sources.\nMany existing tools for text extraction (e.g, to\nextract significant event descriptions from news articles)\nand discourse analysis (e.g., to segment text intomeaningful portions) could be used to support these earlier\nsteps of the analysis. Existing approaches to derive\ninterdependencies among pieces of knowledge may be used to\nhelp users create connections among diverse pieces of\nknowledge. Other tools can be developed to support' metadata={'source': 'Semantic_Web.pdf', 'page': 398}
"
"page_content='399\ntransformations at the lower levels (e.g., to turn tables\ninto instances and role values). The overhead that may be\nincurred in creating knowledge bases using this approach\nis, in our view, not as significant compared to the\nanalysis efforts that developers undergo. It may even save\ndevelopers time if others can look up the rationale trail\ninstead of asking them directly detailed questions aboutthe portion of the knowledge base they are developing.\nThe approach presented here has many relations to\nsoftware engineering methodologies to capture the rationale\nfor software development, and to higher-level languages and\nframeworks to develop knowledge-based systems.\nUnfortunately, these methodologies are not common practice\namong developers of knowledge bases for lack of adequate\ntools to support developers in this process. Moreover,\nthese methodologies are aimed at software and knowledgeengineers and are not very accessible to other potential\nknowledge base developers, such as end users and/or domain\nexperts.\nThe Semantic Web will provide an ideal substrate to\nground knowledge bases into their original knowledge\nsources, and to contain the progressively defined pieces of\nknowledge and the connections among them. More and moreevery day, knowledge originates and ends in the Web, and we' metadata={'source': 'Semantic_Web.pdf', 'page': 399}
"
"page_content='400\nfind ourselves extracting knowledge from the Web,\nprocessing it inside of a knowledge base, then putting the\nresults back on the Web. It only makes sense to integrate\nknowledge bases (their content and their reasoning) more\nclosely with the Web.\n4. TRELLIS: Building Resilient Hyper\nKnowledge Bases\nThe TRELLIS project is our first step towards enabling\nthe creation of RHKBs. In previous work within the EXPECT\nproject, we have investigated several approaches to\ndeveloping knowledge acquisition tools to enable end users\nto extend a knowledge base, including analysis ofInterdependency Models, scripts to plan acquisition\ndialogue, exploiting problem solving methods and other\nbackground knowledge, and creating English-based structured\neditors [Blythe et al., 2001; Kim and Gil, 2000; Gil and\nTallis, 1998; Swartout and Gil 1995]. EXPECT helps users\nenter knowledge at the lower levels of an RHKB, and has\nbeen shown to be quite effective in several userevaluations with subjects not familiar with programming and\nformal languages. TRELLIS acquires more informal knowledge\nand is aimed to support the higher levels of development of\nRHKBs.' metadata={'source': 'Semantic_Web.pdf', 'page': 400}
"
"page_content='401\nThe key innovative ideas behind our approach are:\n•Supporting users to create knowledge fragments from the\noriginal sources as well as from other fragments. The\nkey is to capture how a developer progressively generates\nnew knowledge that results in added value to the original\nraw information sources. Our goal is to support users to\nhighlight key salient information from large reports and\ndocuments, to add new knowledge fragments based on their\nanalysis and integration of existing information, and to\nfinally create semi-formal fragments.\n•Capturing and exploiting semantic interrelationships\namong information items. TRELLIS will 1) facilitate\nsemantic markup of relationships between different pieces\nof knowledge, 2) exploit semantic markups in given\nproblem solving contexts, and 3) suggest additionalrelationships based on those already specified by the\nuser. Users will be encouraged and rewarded to add\nvaluable annotations over raw information sources, since\nthe more annotations they add the more help the system\ncan provide in their work. When the user chooses to do\nlittle or no annotation, the system will provide weaker\nsupport (based on default heuristics and strategies) andwill still help the user as much as possible.' metadata={'source': 'Semantic_Web.pdf', 'page': 401}
"
"page_content='402\n•Extensible semantic markup of information items and their\nrelationships. Users will be able to draw from a core\nsemantic markup language that will contain a basicdomain-independent vocabulary to formulate annotations.\nThey will also be able to extend this core language with\nadditional terminology useful in their particular domain.\nUsing this language, users will be able to annotate not\nonly the information items themselves, but they will also\nbe able to annotate the relationships among them, which\nwill enable them to qualify and describe\ninterdependencies between different information sources\nand how they relate to a new conclusion or assessmentadded by the developer. In essence, links between the\ninformation items will be first class citizens in the\nknowledge base.\nFigure 9.7 shows an overview of the architecture of\nTRELLIS. A User typically starts searching the Web for a\ncertain document, or indicating a pointer to a specific Web\nresource that contains useful information. Each isconsidered an information item. Information items may\ninclude raw information sources (an image, a text document,\na video, etc.) as well as products of previous analysis (by\nthe user or by other users.) All the information items are\nin some sense the knowledge base that TRELLIS operates on,' metadata={'source': 'Semantic_Web.pdf', 'page': 402}
"
"page_content='403\nand we refer to it as the Semantically Marked Information\nBase, or SMIB. We refer to an information item as an EI2\n(Extended Information Items).\nSMIB\n(Semantically Marked\nInformation Base)\nEI2 (ExtendedInformation Items)SMIB\nAnalyzerEI2 Creation\nTool\nEI2Annotation\nToolSemantic\nAnnotation Vocabulary\nInterdependency\nSchema\nDomain SchemaTRELLIS\nQuery\nFacility Learning and\nAdaptive\nAssistantSMIB\n(Semantically Marked\nInformation Base)\nEI2 (ExtendedInformation Items)SMIB\nAnalyzerEI2 Creation\nTool\nEI2Annotation\nToolSemantic\nAnnotation Vocabulary\nInterdependency\nSchema\nDomain SchemaTRELLIS\nQuery\nFacility Learning and\nAdaptive\nAssistant\nFigure 9.7 Overview of the TRELLIS Architecture.\nUsers extend the SMIB using two tools: the Annotation\nTool and the Creation Tool. They can use the EI2\nAnnotation Tool to add semantic annotations to an EI2 to\ndescribe its contents and to relate them to other EI2. For\nexample, an EI2 may be annotated as containing a map, or an\ninteresting event. The Annotation tool can also be used torelate EI2. The tool will provide an editor with a set of\nconnectors. An example is a connector to denote that two\nEI2s are contradictory. This way, the user may link an EI2\nthat contains a description of a product as having a tag' metadata={'source': 'Semantic_Web.pdf', 'page': 403}
"
"page_content='404\nprice of $20 to another EI2 that has the same product with\na price of $25.\nThe Annotation tool draws on a library of semantic\nannotations and connectors that will be based on a core\ndomain-independent language defined by the Semantic\nAnnotation Vocabulary. An Interdependency Schema defines a\nvocabulary for connectors based on a variety of dimensions:pertinence, reliability, credibility, structural (x is\nexample of y, x is part of y, x describes y, etc.)\ncausality (x1 x2...xn contribute to y, x1 x2...xn indicate\ny, etc.) temporal ordering (x before y, x after y, x\nsimultaneous with y, etc.), argumentation (x may be reason\nfor y, x supports y, etc.). The Domain Schema contains a\ncore vocabulary to annotate the content of documents that\nextends the Interdependency Schema with domain terms. Our\nplan is that TRELLIS will provide a core vocabulary, andusers will be able to extend it with additional terms.\nThe Creation Tool enables users to create new EI2. For\nexample, a user may create an EI2 as an assessment that he\nor she formulates based on existing EI2. If a combination\nof some subparts of EI2 lets a user conclude or decide on\nsome definition, then the subparts can be captured into a\nnew Information Item, that drops all other irrelevant parts' metadata={'source': 'Semantic_Web.pdf', 'page': 404}
"
"page_content='405\nof the original EI2. A new EI2 can be added by extracting\nor summarizing some of the previous results.\nFigure 9.8 A Snapshot of the Current TRELLIS\nInterface.\nFigure 9.8 shows a snapshot of the current user\ninterface of TRELLIS. In this case, a user is using TRELLIS\nto decide whether a mission to take Navy SEALs to Athens is\nfeasible. Given the Web sources consulted and the indicated\ncapabilities of the SEAL team (shown on the left), the user\nhas entered the rationale for deciding that the operation\nis not feasible.\nWe plan to extend TRELLIS with learning and adaptive\ntechniques in order to offer to the user improved and' metadata={'source': 'Semantic_Web.pdf', 'page': 405}
"
"page_content='406\nextended capabilities over time. As users annotate more\nEI2 and create new EI2 that capture their analysis, TRELLIS\nwill be able to exploit this information and become\nincreasingly more proactive. We also plan to add a Query\nFacility that will allow users to search the SMIB based on\nthe semantic annotations of the EI2. It will include a\nstructured editor to guide users to formulate queries usingthe semantic annotation vocabulary defined in the schemas.\nIn summary, TRELLIS provides users with tools that\nenable them to specify information in increasingly more\nstructured form, and to specify semantic annotations that\ncan be exploited for processing and integration of separate\ninformation items.\nConclusions\nIntegrating knowledge-based systems within end-to-end\nsystems remains a challenge. In this article, we have\nshown some practical examples of the difficulties of\nenabling interoperability among knowledge bases. We have\nargued that current approaches will only partially solve\nthe interoperability problems, since the knowledge will\ncontinue to be trapped in low-level representations with no\nroots or connections to the rationale that was used increating them. We have presented a different approach that' metadata={'source': 'Semantic_Web.pdf', 'page': 406}
"
"page_content='407\nwould create Resilient Hyper Knowledge Bases, which contain\nknowledge from its initial rendering in unstructured raw\ninformation sources and captures how it was refined and\ninterrelated until the developer created the final formal\nrepresentations. This new generation of knowledge bases\nwill be more resilient to changes and integrations, and\nwill contain highly interconnected knowledge fragments atall levels of abstraction. It will also enable people who\nhave no training in knowledge engineering to contribute\ncontent, at least in the initial stages of development.\nThe Semantic Web is an ideal substrate for these knowledge\nbases, and will be a great contributor to solving\ninteroperability issues.\nThe spirit of the Web was clearly to empower all people\nto access and publish information. The Semantic Web will\nenable them to turn this information into knowledge thatcan be understood by machines. We must embrace this\nspirit, and not continue to keep knowledge bases out of the\nreach of the public at large. Or each other.\nAcknowledgements\nI would like to thank Jim Blythe, Jihie Kim, Larry\nKite, Surya Ramachandran, and Pablo Yanez for their helpfuldiscussions on TRELLIS, and Varun Ratnakar for implementing' metadata={'source': 'Semantic_Web.pdf', 'page': 407}
"
"page_content='408\nits interface. I would also like to thank Jim Blythe,\nJihie Kim, Surya Ramachandran, Bill Swartout , and Andre\nValente, for their participation in our group\'s integration\nefforts described in this paper, which motivated much of\nthis discussion, as well as other researchers that\ncontributed to the integration that are too many to list\nhere. The TRELLIS project is supported by a grant from theAir Force Office of Scientific Research (AFOSR) with award\nnumber F49690-00-1-0337. The integrations of EXPECT’s\nknowledge-based systems described here were funded under\nthe DARPA High Performance Knowledge Bases (HPKB) program\nwith award number F30602-97-1-0195, the DARPA/Rome Planning\nInitiative (ARPI) with award number DABT 63-95-C-0059, the\nDARPA Joint Forces Air Component Commander program (JFACC)\nwith award number F30602-97-C-0118, and the DARPA Control\nof Agent-Based Systems (CoABS) with award number F30602-97-1-0195.\nReferences\n[Blythe et al., 2001] Jim Blythe, Jihie Kim, Surya\nRamachandran, and Yolanda Gil. ""An Integrated Environment\nfor Knowledge Acquisition."" Proceedings of the 2001\nInternational Conference on Intelligent User Interfaces(IUI-2001), Santa Fe, New Mexico, January 2001.' metadata={'source': 'Semantic_Web.pdf', 'page': 408}
"
"page_content='409\n[Chalupsky, 2000] Hans Chalupsky. ""OntoMorph: A\nTranslation System for Symbolic Knowledge"". In Proceedings\nof the Seventh International Conference on Principles of\nKnowledge Representation and Reasoning (KR-2000),\nBreckenridge, CO, April 2000.\n[Cohen et al., 1999]. Paul R. Cohen, Robert Schrag,\nEric Jones, Adam Pease, Albert Lin, Barbara Starr, DavidEaster, David Gunning and Murray Burke. ""The DARPA High\nPerformance Knowledge Bases Project"". In Artificial\nIntelligence Magazine. Vol. 19, No. 4, pp.25-49, 1998.\n[Gil, 2000] Yolanda Gil. ""An Analysis of the CoABS TIE-\n1 Messages: Opportunities and Challenges for Agent\nTranslation Services"". USC/ISI Internal Project Report.\nMarina del Rey, CA, 2000.\n[Gil and Melz, 1996] Yolanda Gil and Eric Melz.\n""Explicit Representations of Problem-Solving Strategies toSupport Knowledge Acquisition."" Proceedings of the Thirteen\nNational Conference on Artificial Intelligence (AAAI-96),\nPortland, OR, August 4-8, 1996.\n[Gil and Tallis, 1997] Yolanda Gil and Marcelo Tallis.\n""A Script-Based Approach to Modifying Knowledge Bases"".\nProceedings of the 14th National Conference on Artificial\nIntelligence (AAAI-97), pp. 377-383, AAAI Press, July 27-311997.' metadata={'source': 'Semantic_Web.pdf', 'page': 409}
"
"page_content='410\n[Kim and Gil, 1999] Jihie Kim and Yolanda Gil.\n""Deriving Expectations to Guide Knowledge Base Creation.""\nProceedings of the 6th National Conference on Artificial\nIntelligence (AAAI-99), pp. 235-241, AAAI/MIT Press, July\n18-22 1999.\n[Kim and Gil, 2000] Jihie Kim and Yolanda Gil.\n""Acquiring Problem-Solving Knowledge from End Users:Putting Interdependency Models to the Test."" Proceedings of\nthe Fifteenth National Conference on Artificial\nIntelligence (AAAI-2000), Austin, TX, July 30-August 3,\n2000.\n[MacGregor, 1991] Robert MacGregor. ""The Evolving\nTechnology of Classification-Based Knowledge Representation\nSystems"". In J. Sowa (Ed.), Principles of Semantic\nNetworks. San Mateo, CA: Morgan Kaufmann. 1991.\n[Minsky, 1970] Marvin Minsky. ""Form and Content in\nComputer Science"". Journal of the ACM, 17(2), pp. 197-215,\nApril 1970.\n[Swartout and Gil, 1995] Bill Swartout and Yolanda Gil.\n""EXPECT: Explicit Representations for Flexible\nAcquisition"". In Proceedings of the Ninth Knowledge\nAcquisition for Knowledge-Based Systems Workshop, February\n26-March 3, 1995. Banff, Alberta, Canada.' metadata={'source': 'Semantic_Web.pdf', 'page': 410}
"
"page_content='411\n[Valente et al., 1999] Andre Valente, Thomas Russ,\nRobert MacGregor and William Swartout. ""Building and\n(Re)Using an Ontology of Air Campaign Planning"". In IEEE\nIntelligent Systems 14:1, pp. 27-36, Jan-Feb, 1999.\n[Veloso et al., 1995] Manuela Veloso, Jaime Carbonell,\nAlicia Perez, Daniel Borrajo, Eugene Fink and Jim Blythe.\n""Integrating Planning and Learning: The PRODIGYArchitecture."" Journal of Theoretical and Experimental AI,\n7(1), 1995.\nFootnotes\n1USC/Information Sciences Institute' metadata={'source': 'Semantic_Web.pdf', 'page': 411}
"
"page_content='10. KnowledgeModellingfor studyof domains andinter-domain\nrelationship –Knowledge Discovery\nSanjeev Thacker1, Amit Sheth1, and Shuchi Patel1\n1. Introduction\nRelationships are fundamental to supporting semantics\n[Wiederhold, 1997], [Sheth, 1996], and hence to the Semantic\nWeb [Berners-Lee, Hendler & Lassila, 2001], [Fensel & Musen,\n2001]. Till date, focus has been on simple relationships such\nas is-a and is-part-of, as in DAML/OIL [Ont]. In this work, weadapt our earlier work on MREF [Shah & Sheth, 1998] to develop\na framework for supporting complex relationships. A framework\nto manage complex relationships as discussed here becomes the\nbasis for knowledge discovery from the information interlinked\nby the Semantic Web.\nOur work primarily builds upon earlier research in\nintegrating information systems that has also been applied toexploiting web-accessible distributed across heterogeneous\ninformation sources. Primary focus of information integration\nsystems has been to model these diverse data sources and\nintegrate the data by resolving the heterogeneity involved to\nprovide global views of domains (one point access) for\nquerying. We shift the focus from modeling of the information\nsources for purpose of querying to extracting useful knowledge\nfrom these information sources. This, we believe, can be' metadata={'source': 'Semantic_Web.pdf', 'page': 412}
"
"page_content='413\nachieved by modeling the complex relationships among the\ndomains to study and explore the interaction that existsbetween them. In addition to information source and\nrelationship modeling, operations are also modeled as part of\nthe knowledge to exploit the semantics involved in performing\ncomplex information requests across multiple domains. The\nsystem’s framework provides a support for knowledge discovery.\nKnowledge representation and support for relationships, which\nare fundamental to the concept of Semantic Web are described\nin this chapter.\nConsider the capability provided by current research\nprototypes to support integration of information from diverse\nsources of data over a domain to provide the user with a\nunified structured (homogeneous) view of that domain for\nquerying. On an integrated view of ""earthquakes"" one can ask\nqueries of the nature ""find information of all the quakes that\noccurred in California since 1990"". However, there is still a\nlimitation on the type of queries that can be answered usingsuch integrated domain views. Assuming views on earthquakes\nand nuclear tests did exist, can one answer the question ""Do\nnuclear tests cause earthquakes?"" How can one study such\nrelationships between the two domains based on the data\navailable on diverse web accessible sources? Let us consider a\nknown relationship between air pollution and vegetation.\nAssuming the necessary views did exist can a question like\n""How does air-pollution affect vegetation"" be answered using' metadata={'source': 'Semantic_Web.pdf', 'page': 413}
"
"page_content='414\nonly the integrated views? These queries are beyond the realm\nof the existing systems. There is a compelling need to be ableto model the semantic correlation of data across the domains\nand then be able to pose complex information requests.\nSupport for semantic correlation involving complex\nrelationships has been is demonstrated in the InfoQuilt\n2, which\nprovides a framework and a platform to answer complex\ninformation requests of the above nature. The novel features\nof InfoQuilt are:\n•A mechanism to express and understand the complex semantic\ninter-domain relationships\n•A powerful interface which can use the semantic knowledge\nabout domains and their relationships to construct complex\ninformation requests known as Information Scapes (IScapes).\nMost information integration systems (e.g., SIMS [AKS96])\nfocus on efficiently retrieving data on a single domain\nonly. IScapes, on the other hand, are requests that couldspan across one or more domains and involve inter-domain\nrelationships too. These information requests have a much\nhigher degree of expressiveness compared to keyword based\nsearch techniques provided by web-based search tools and\ndatabase queries that focus only on the syntax and structure\nof the data.\n•Ability to analyze the data available from multitude of\nheterogeneous autonomous sources to explore and study\npotential relationships using IScapes. Although InfoQuilt' metadata={'source': 'Semantic_Web.pdf', 'page': 414}
"
"page_content='415\nprovides the tools necessary for data analysis, human\ninvolvement is a part of the process. This forms the basisof the knowledge discovery supported by InfoQuilt.\n•A framework to support complex operations that can be used\nfor post-processing of data retrieved from the sources (\ne.g.\nstatistical analysis) and as complex operators needed todefine inter-domain relationships.\nMajor issues addressed in building the InfoQuilt system\nare as follows:\n•A large portion of the data on the web is either\nunstructured or semi-structured. There are syntactic,\nstructural and semantic heterogeneities across different\nsources providing information about the same domain [Kashyap\n& Sheth, 1997], [Sheth, 1999]. In addition to these\ninconsistencies there is overlapping of information\n•The knowledge of domains and their sources need to be\nmodeled so that the system is able to automatically identify\nthe sources of data that could possibly provide useful\ninformation with respect to the information request while\ncarefully pruning the others, maximizing the ability toobtain faster and more comprehensive results from the same\navailable sources\n•Representation of complex relationships spanning across\nmultiple domains involves modeling the semantics involved in\ntheir interaction' metadata={'source': 'Semantic_Web.pdf', 'page': 415}
"
"page_content='416\n•Posing complex information requests containing embedded\nsemantic information requires the system to able to\nunderstand the semantics of the request to retrieve relevant\nresults corresponding to a request\n•Exploring new relationships is of special interest to us\nwhich might require an ability to post-process the data\nobtained from the sources in several ways\nThis chapter focuses on our work on semantic\ncorrelation and complex relationships, in the hope of\nsupporting ""deeper semantics"" in the Semantic web. Thechapter is organized as follows. Section 2 focuses on our\napproach to modeling the domains, inter-domain\nrelationships, information sources available to the system,\nand functions that form the system’s knowledge base.\nSection 3 addresses the use of IScapes in our system to\ndevelop and deploy complex information requests that are\nanswered using the system knowledge and set of resourcesavailable to the system. The knowledge discovery, which is\nthe ability of InfoQuilt to study domains, mine and analyze\nthe data available from the sources and explore\nrelationships, is described in Section 4. Section 5\ndiscusses the use of visual toolkits that are provided to\nconstruct knowledge base and construct and execute IScapes.\nWe compare our approach to other state of the art\ninformation integration systems in Section 6 and present our' metadata={'source': 'Semantic_Web.pdf', 'page': 416}
"
"page_content='417\nconclusions and planned future improvements in Section\nConclusions.\n2. Knowledge Modeling\nThe representation of information sources in the system\nand creation of an ""integrated structured view"" of the domain\nthat the users can use are two of the critical issues that\nneed to be addressed in any information integration system.\nThe two main approaches used for information integration are[Dus97]:\n•\nSource-Centric: The integrated view of the domain is modeled\nfirst. Both user queries and source views are specified interms of that view. For each information request, the\nintegration system needs to plan how to answer it using the\nsource views.\n•\nQuery-Centric: User queries are in terms of views\nsynthesized at a mediator that are defined on source views.After a view expansion at the mediator, the query is\ntranslated to a logical plan that is composed of source\nviews.\nThe term ‘view’ here implies some form of representation\nof the domain and not a view in a database. InfoQuilt adopts\nthe source-centric approach. The source-centric approach has\nthe following advantages over the query-centric approach.First, the integrated views of domains are created independent\nof their source views. Second, the source views are' metadata={'source': 'Semantic_Web.pdf', 'page': 417}
"
"page_content='418\nindependent of each other and are described in terms of their\ndomain model. Hence, adding, removing or modifying a sourcecan be done dynamically without affecting any other source\nviews. In the query-centric approach, adding and removing\nsources additionally requires redefining the domain view and\nthe sources need to be mapped with each other making schema\nintegration difficult. Lastly the source-centric approach is\nmore suitable for sources other than database sources.\nThis work has been built upon work done in [Ber98,\nLaksminarayanan, 2000]. InfoQuilt system knowledge comprises\nof knowledge about the domains, resources accessible to it,inter-domain relationships and complex operations like\nfunctions and simulations. We use ontologies to describe the\ndomains to the system. An ontology is meant to capture useful\nsemantics of the domain such as the domain characteristics,\nthe set of terms and concepts of interest involved and their\nmeanings. Section 2.1 describes how a domain is represented\nusing an ontology. We will use the terms ontology and domaininterchangeably in the rest of the chapter unless explicitly\nspecified. There can be multiple resources accessible to the\nsystem and an ontology can have several resources that provide\nrelevant data on it. Section 2.2 describes how we define\nresources in terms of the ontologies. Section 2.3 describes\nhow complex relationships between two or more domains are\nmodeled. Finally, section 2.4 describes how we support\noperations such as simulations and functions in the system.' metadata={'source': 'Semantic_Web.pdf', 'page': 418}
"
"page_content='419\nInfoQuilt uses XML as the knowledge representation language.\nWe provide a visual tool called Knowledge Builder , that lets a\nuser easily create and update the knowledge base of the\nsystem. Section 2.5 describes the Knowledge Builder and its\nfunctionalities in detail.\n2.1.Ontology(DomainModeling)\nAn ontology should be able to provide a good understanding\nof the domain it represents. This includes related\nterms/concepts, their definitions and/or meanings, their\nrelationships with each other, and characteristics of the\ndomain. It also helps in resolving differences between the\nmodels of the domain used by the available sources. This is\ndone by mapping the data available from all resources for that\ndomain from the local model used by the resource to the model\nspecified by the ontology, which the user can then use. Theuser can create a classification of real-world entities and\nrepresent them as ontologies in the system. This\nclassification is based on the human perception of the world\nbroken down into several domains and their sub-domains and so\non (real world objects as perceived from a modeling\nstandpoint). The representation of an ontology comprises of\nrelated terms (attributes), its place in the domain hierarchy,domain rules, and functional dependencies. The ontology of a\nsub-domain is said to inherit from the ontology of its parent' metadata={'source': 'Semantic_Web.pdf', 'page': 419}
"
"page_content='420\ndomain. A child ontology inherits all attributes, domain rules\nand functional dependencies of its parent ontology.\nExample 1:Consider the domain of disasters. They could be\nsub-categorized as natural disasters and man-made disasters.\nNatural disasters could be further sub-categorized into\nearthquakes, volcanoes, tsunamis, etc. Similarly, man-made\ndisasters can have sub-categories like nuclear tests. An\nexample hierarchy is shown in Figure 10.1. An ontology’s place\nin the domain hierarchy is represented by specifying its\nparent ontology, if any. However, it is not necessary for an\nontology to be a part of some hierarchy.\nFigure 10.1 Example domain hierarchy\n2.1.1. Attributes\nThe terms and concepts of the domain are represented as\nattributes of the ontology. As mentioned earlier, ontology' metadata={'source': 'Semantic_Web.pdf', 'page': 420}
"
"page_content='421\ninherits all attributes of its parent ontology. The meaning of\neach attribute and its syntax (type and format) isstandardized so that it has a precise interpretation and use.\nExample 2:An earthquake can have attributes like the date\nit occurred, region where it occurred, latitude and longitude\nfor its epicenter, a description, number of people that died,\nmagnitude and an image showing some damage or fault line as\nseen in Figure 10.1. We will also use the following notation\nto represent ontology.\nEarthquake ( eventDate, description, region, magnitude,\nlatitude, longitude, numberOfDeaths,damagePhoto );\n2.1.2. Domain rules\nThe characteristics and semantics of a domain are\ndescribed by domain rules and functional dependencies. Domain\nrules describe a condition that always holds true for all\nentities in the domain. These can be used for query validation\nand optimization of query plans.\nExample 3:\nA simple fact that the latitude of an earthquake should\nlie between –90oand 90ocan be described by the following rule\non the ontology Earthquake:\nlatitude >= -90 and latitude <= 90\nThe ontology can then be represented as follows:\nEarthquake ( eventDate, description, region, magnitude,\nlatitude, longitude, numberOfDeaths,' metadata={'source': 'Semantic_Web.pdf', 'page': 421}
"
"page_content='422\ndamagePhoto,\nlatitude >= -90 and latitude <= 90 );\n2.1.3. Functional Dependencies (FD)\nA functional dependency specifies that two entities having\nthe same values for all attributes appearing on the left-hand\nside (LHS) of the FD will have the same values for the\ncorresponding variables appearing on the right-hand side\n(RHS). The domain rules and FDs help in understanding the\ncharacteristics of the domains. Web sources constitute a large\nportion of the set of resources available to the system. The\nintegrated domain model is a comprehensive model and it isvery likely to come across resources that do not provide\ncertain attributes of the domain model. The information about\nthe FDs of a domain is used by the system to retrieve\ninformation (attributes) that is missing from a resource by\nusing another resource (an\nassociate resource ) thereby\ndeducing extra information and retrieving more comprehensive\nresults with the same available resources.\nExample 4:\nA functional dependency on the ontology Earthquake could\nbe that the region implies the latitude and longitude of the\nplace. This can be represented as:\nregion -> latitude longitude\nThe ontology can therefore be represented as follows:\nEarthquake ( eventDate, description, region, magnitude,' metadata={'source': 'Semantic_Web.pdf', 'page': 422}
"
"page_content='423\nlatitude, longitude, numberOfDeaths,\ndamagePhoto,latitude >= -90 and latitude <= 90,\nregion -> latitude longitude );Assume that\nthe system has access to two sources that provide information\nabout earthquakes -\nSignificantEarthquakesDB that provides the\neventDate,description, region, magnitude, latitude,\nlongitude, numberOfDeaths, anddamagePhotofor significant\nearthquakes (say, with a magnitude > 5) all over the world and\nEarthquakesAfter1990 that provides eventDate, region,\nmagnitude, numberOfDeaths, anddamagePhotofor earthquakes\nthat occurred after January 1, 1990. Suppose the user has the\nfollowing information request:\n""Find all earthquakes with epicenter in a 5000 mile radius\narea around the location at latitude 60.790 North and\nlongitude 97.570 East.""\nAssume that the calculation of the distance between two\nlocations, given their latitudes and longitudes, is possible.Also, the ontology for earthquake does have attributes\nlatitudeandlongitudethat specify these. So the system\nshould be able to answer the query. However, the resource\nEarthquakesAfter1990 does not supply values for these\nattributes. Hence, we would need to return only the\ninformation that was available from the resource\nSignificantEarthquakesDB . The results that the user sees will\nhave all significant earthquakes (with magnitude > 5) that' metadata={'source': 'Semantic_Web.pdf', 'page': 423}
"
"page_content='424\noccurred in that region. But to be able to return all\nearthquakes, the system can use the knowledge about the domain\nthatregion -> latitude longitude. The system can check if it\ncan deduce the latitudes and longitudes of epicenters of any\nearthquakes in EarthquakesAfter1990 by checking the regions of\nearthquakes available from SignificantEarthquakesDB . For all\nthe earthquakes for which the latitude and longitude of the\nepicenter could be deduced, the system can now check if they\nfall within the 5000 mile radius area. Using the resource\nEarthquakesAfter1990 to answer this query could not have been\npossible without the use of the FD.\n2.2.Resources\nInformation sources in InfoQuilt are described in terms of\ntheir corresponding ontologies. This description is meant to\nsupply details about the resource, which can be used forefficient planning. It consists of a set of attributes,\nbinding patterns (BP), data characteristic (DC) rules, and\nlocal completeness (LC) rules. Sections 2.2.1 to 2.2.4\ndescribe each of them and the rationale for including them in\nthe knowledge base. The goal is: [Levy et al., 1996].\n•To be able to add, modify and delete resources for an\nontology dynamically without affecting the systems knowledge\n•To be able to specify the sources in a manner such that one\ncan declaratively query them' metadata={'source': 'Semantic_Web.pdf', 'page': 424}
"
"page_content='425\n•To be able to identify the exact usefulness of resources in\nthe context of a particular IScape and prune the others\n2.2.1. Resource Attributes\nSince the way the resource perceives its data can be\ndifferent than our perception represented by the ontology of\nthe domain, the data needs to be mapped after it is retrieved.\nThis allows for interoperability between sources withheterogeneous data [Guntamadugu, 2000]. Additionally, since\nthe ontology is ideally a comprehensive perception of the\ndomain, it is common to come across resources that supply only\na part of the information. In other words, a resource may not\nprovide values for all the attributes of the ontology. The\nresource’s description therefore lists the attributes that it\ncan provide.\nExample 5:\nConsider the resources SignificantEarthquakesDB and\nEarthquakesAfter1990 . The example mentions a list of\nattributes that the resources provide values for. The\nresources would therefore be represented as follows:\nSignificantEarthquakesDB ( eventDate, description, region,\nmagnitude, latitude, longitude,\nnumberOfDeaths, damagePhoto );\nEarthquakesAfter1990 ( eventDate, region, magnitude,\nnumberOfDeaths, damagePhoto );' metadata={'source': 'Semantic_Web.pdf', 'page': 425}
"
"page_content='426\nWe will use the notation above to represent resources.\n2.2.2. Binding Pattern (BP)\nThe sources accessible to the system that are not\ndatabases do not have the ability to execute queries. Most of\nthe web sources fall in this category. However, some web\nsources have a limited query capability. This is supported by\nallowing users to search, based on some attributes. These web\nsources require that values for some attributes be provided to\nretrieve results. The source can be queried only by specifying\nvalues for those attributes. Additionally, some sources may\nprovide finite number of optional ways to query (differentsets of attributes). For example, a user can query a site\nproviding information about movies by actors, director, title,\netc. Such query limitations and characteristics of resources\nare important to consider while planning a query. Some of the\ncommon motivations for having such limitations are [Duschka,\n1997]:\n•\nPrivacy/Security. For example, a company might not want one\nto be able to get a listing of all its employees but allows\na search on an employee by name.\n•Performance.The data could be indexed and would then be\nmore efficient to query the source on the indexed attributes\nfor efficient retrieval.\n•Efficiency.The data might be enormous and hence it might\nnot be efficient to query all of it. The values supplied for' metadata={'source': 'Semantic_Web.pdf', 'page': 426}
"
"page_content='427\nbound attributes are used to narrow down the search and\nlimit the data retrieved.\nThey are represented in the knowledge base as a set of\nbinding patterns (BP). A BP is a set of attributes that the\nsystem must be able to supply values for in order to query the\nresource. If the resource has several BPs, the system can\nselect the most appropriate one. The values for the BP can be\nobtained from the query constraint or provided by some other\nresource.\nExample 6:\nConsider theFlightontology that represents a flight from\none city to another within United States. Most web sites for\nair travel reservation have forms that require the user to\nspecify source, destination, dates of travel, etc. One or more\ncombinations of values could be required as input for the web\nsite to obtain any useful information. One of the possible\ncombinations of BP could be:\n[fromCity, fromState, toCity, toState, departureDate]Suppose we use the AirTran Airway web site\n(\nwww.airtran.com) as a source. The resource would then be\nrepresented as follows:\nAirTranAirways ( airlineCompany, flightNumber, fromCity,\nfromState, toCity, toState,\ndepartureDate,\nfare, departureTime, arrivalTime,\n[fromCity, fromState, toCity, toState,' metadata={'source': 'Semantic_Web.pdf', 'page': 427}
"
"page_content='428\ndepartureDate] );\n2.2.3. Data Characteristic (DC) Rules\nData characteristic rules are similar to domain rules\ndiscussed in Section 2.1.2 but they apply only to the specific\nresource. Knowledge about the data characteristics of a\nresource can be useful for the system to predict whether a\nresource will provide any useful results for the particular\ninformation request. This can be used to prune the resource if\nit is possible to infer from the DC rules that the resource\nwill not provide any useful results for the Iscape. It can\nalso be used to optimize the query plan by eliminating aconstraint if it can be deduced that the constraint will\nalways be true for all the data retrieved from that resource.\nThe DC rules are also used to select an appropriate associate\nresource for a resource with BP or missing attributes.\nExample 7:\nConsider theAirTranAirways resource introduced in the\nprevious example that provides data for the ontology Flight.We know that it only provides information about all flights\noperated by AirTran Airways. This characteristic of the\nresource can be represented as follows:\nAirTranAirways ( airlineCompany, flightNumber, fromCity,\nfromState, toCity, toState,\ndepartureDate,\nfare, departureTime, arrivalTime,\n[dc] airlineCompany = ""AirTran Airways"",' metadata={'source': 'Semantic_Web.pdf', 'page': 428}
"
"page_content='429\n[fromCity, fromState, toCity, toState,\ndepartureDate] );\nWe use [dc] and [lc] to distinguish data characteristic\n(DC) rules from local completeness (LC) rules. LC rules are\ndescribed in Section 2.2.4.\nConsider the following query using the ontology Flight.\n""Find all the flights operated by Delta Airlines from\nBoston, MA to Los Angeles, CA on February 19, 2001.""\nClearly, AirTranAirways will not provide any information\nabout a Delta flight. The system can use this knowledge to\ndeduce that the resource AirTranAirways should not be used toanswer this query.\nNow suppose the user modifies the query to look for\nflights operated by AirTran Airways. This time the system\nknows that it can use AirTranAirways. Additionally, it can\nalso eliminate the check for ""AirTran Airways"" since all\nflights available from AirTran Airways are known to be\noperated by AirTran Airways.\n2.2.4. Local Completeness (LC) Rules\nA local completeness (LC) rule on a resource has the same\nformat as a DC rule or a domain rule. But it has a different\ninterpretation. A characteristic of web sources is overlapping\nand incomplete information. Hence, using just one source to\nanswer an information request in many cases does not guarantee\nretrieval of all the possible information. The general\napproach to this solution has been to use all the sources (for' metadata={'source': 'Semantic_Web.pdf', 'page': 429}
"
"page_content='430\nthat ontology) and compute a union of the results retrieved\nfrom all of them to provide maximum possible information toevery request. However, it is also possible to find sources\nthat do provide complete information about some subset of the\ndomain. LC rules are used to model this. They specify that the\nresource is complete for a subset(s) of information on a\nparticular ontology. In other words, the information contained\nin the resource is\nallthe information for the subset\n(specified by the rule) of the domain. Hence, the system\ncannot retrieve any additional information (for that subset)\nby querying other sources.\nExample 8:\nConsider theAirTranAirways resource used earlier again.\nWe know that information about allflights operated by AirTran\nAirways will be available from it. It is thus locally complete\nfor all flights with airlineCompany = ""AirTran Airways"".\nAirTranAirways ( airlineCompany, flightNumber, fromCity,\nfromState, toCity, toState,\ndepartureDate,\nfare, departureTime, arrivalTime,\n[dc] airlineCompany = ""AirTran Airways"",\n[lc] airlineCompany = ""AirTran Airways"",\n[fromCity, fromState, toCity, toState,\ndepartureDate] );\nNow, any information request that needs only the subset of\nflights that are operated by AirTran Airways can use only' metadata={'source': 'Semantic_Web.pdf', 'page': 430}
"
"page_content='431\nAirTranAirways to retrieve data about all such flights. This\nwould be faster than querying all sources available forFlight.\n2.3.Inter-OntologicalRelationships\nThe real-world entities that were classified into domains\nand sub-domains can be related to each other in various ways.These relationships can be very simple like the ""is a""\nrelationship implied by inheritance. For example, a nuclear\ntest ""is a"" man-made disaster and so on. They can also be very\ncomplex, for example, an earthquake can ""cause"" a tsunami. A\nrelationship may involve more than two domains (ontologies).\nSuch complex inter-ontological relationships represent real-\nworld concepts and characteristics. A novel feature of\nInfoQuilt is that it provides an infrastructure to model and\nlearn about such complex relationships between differentontologies and to use them to specify information requests.\nModeling such inter-ontological relationships requires\nunderstanding the semantics involved in their interaction and\ncannot be expressed using only simple relational and logical\noperators. The relationships already known can be directly\nmodeled (defined) using the Knowledge Builder toolkit.\nAdditionally, we may want to explore hypotheticalrelationships and formalize them, if they can be established\nby using the available information sources. Established\nrelationships can be used to study the interaction between the' metadata={'source': 'Semantic_Web.pdf', 'page': 431}
"
"page_content='432\ninvolved ontologies. Further two relationships ""A affects B""\nand ""B affects C"" could lead to transitive finding ""A affectsC"".\nExample 9:\nConsider the relationship between a nuclear test and an\nearthquake. We use the Earthquake ontology from the example 4\nhere. Suppose we model nuclear test as follows:\nNuclearTest ( testSite, explosiveYield, bodyWaveMagnitude,\ntestType,\neventDate, conductedBy, latitude, longitude,\nbodyWaveMagnitude > 0,bodyWaveMagnitude < 10,\ntestSite -> latitude longitude );\nWe can say that some nuclear test could have ""caused"" an\nearthquake if we see that the earthquake occurred ""some time\nafter"" the nuclear test was conducted and ""in nearby region"".\nNotice the use of operators ""some time after"" and ""in nearby\nregion"". These are specialized user defined operators that arenot a part of the set of relational operators (<, >, <=,\netc.). These are possible due to InfoQuilt’s ability to\nsupport user defined functions, as described in Section 2.4.\nFor now, assume that there are two functions called\ndateDifference and distance available to the system. The\nfunction dateDifference takes two dates as arguments and\nreturns number of days from date1 to date2. The function\ndistance takes the latitudes and longitudes of two places and' metadata={'source': 'Semantic_Web.pdf', 'page': 432}
"
"page_content='433\ncalculates the distance between them. Given that we can use\nthese functions, we can represent the relationship as follows:\nNuclearTest Causes Earthquake:\ndateDifference(NuclearTest.eventDate,\nEarthquake.eventDate) < 30\nAND\ndistance(NuclearTest.latitude, NuclearTest.longitude,\nEarthquake,latitude, Earthquake.longitude) <\n10000\nThe values 30 and 10000 here are arbitrary. In fact, a\nuser can try different values to analyze the data. This is a\npart of the knowledge discovery support that the system’s\nframework provides, as described further in Section 4.\n2.4.Operations\nA distinguishing feature of InfoQuilt is its framework to\nsupport use of operations. As seen in the previous example, we\nused the functions dateDifference and distance as operators to\ndescribe a complex inter-ontological relationship between\nNuclearTest and Earthquake. The user can also use them to\nspecify constraints in their information requests.\nExample 10:\nConsider the information request:' metadata={'source': 'Semantic_Web.pdf', 'page': 433}
"
"page_content='434\n""Find all earthquakes with epicenter in a 5000 mile radius\narea of the location at latitude 60.790 North and longitude97.570 East""\nThe system needs to know how it can calculate the distance\nbetween two points, given their latitudes and longitudes, in\norder to check which earthquakes’ epicenters fall in the range\nspecified.\nOperations are also used to resolve syntactic\nheterogeneities between sources by providing a fuzzy matching\nmechanism to map the two sources. Consider the use of\nfunctional dependency region -> latitude longitude fromexample 4 to solve the missing attribute (latitude and\nlongitude) problem of the source EarthquakesAfter1990. It is\nhighly unlikely that the sources SignificantEarthquakesDB and\nEarthquakesAfter1990 will have exact same values for the\nattribute region. The value available from one source could be\n""Nevada, USA"" and that from another source could be ""NV, USA"".\nThe two are semantically equal but syntactically unequal.[Kashyap & Sheth, 1996]\nAnother important advantage of using operations is that\nthe system can support complex post-processing of data. An\ninteresting form of post-processing is the use of simulation\nprograms. These independent programs can be integrated with\nthe system. For instance, researchers in the field of\nGeographic Information Systems (GIS) use simulation programs\nto forecast characteristics like urban growth in a region' metadata={'source': 'Semantic_Web.pdf', 'page': 434}
"
"page_content='435\nbased on a model. InfoQuilt supports the use of such\nsimulations like any other operation. They provide valuableadditional information that is not often available from the\nresources directly.\nExample 11:\nClarke’s Urban Growth Model [Cla] is a model to forecast\nthe urban growth in a region based on information about the\nareas in the region where it is known that growth cannot occur\ndue to some reasons, roads, slopes and vegetation in the\nregion. It requires that this information be specified as a\nset of maps and generates a series of maps showing theprogressive urban growth using a specified time step. This\nsimulation can be run on data that can be retrieved from some\nresource (or multiple resources) that has the maps needed\nassuming that they are in the format that the program expects.\nTo be able to dynamically and easily add new operations,\nupdate and delete existing ones, InfoQuilt maintains what is\nknown as a\nFunction Store . The Function Store contains\ninformation about all the functions known to the system. We\nwill use the terms functionandoperationinterchangeably in\nthe rest of the chapter. The description of a function\ncontains its name, a description of its functionality, a list\nof arguments that it takes as inputs along with their types\nand descriptions of what they are, the type of return value,\nand information about how the system can use it. The user\nprovides an implementation for the function. Once the' metadata={'source': 'Semantic_Web.pdf', 'page': 435}
"
"page_content='436\nimplementation is provided and it has been added to the\nFunction Store, the system can make use of it as describedearlier.\n3. Information Scapes\nThe goal of the InfoQuilt system is to develop a framework\nfor knowledge discovery support through use of the available\nresources of data. Users can form complex information requests\non data available from multiple heterogeneous distributedresources. Note that we use the term ""information request""\ninstead of ""query"". A query generally explicitly specifies the\nexact sources (tables in a RDBMS) that need to be used and how\nthe data from these sources should be integrated (join\nconditions in a RDBMS). Additionally, it does not ""understand""\nwhat the user is asking. An information request, on the other\nhand, can understand what the user is enquiring about by\nembedding semantic information within the request\n3.I n\nInfoQuilt, we refer to them as Information Scapes or IScapes.\nThis work has been built upon the work done in [Palsena,\n2000], [Shah & Sheth, 1998].\nExample 12:\nAgain consider the following information request.\n""Find all earthquakes with epicenter in a 5000 mile radius\narea of the location at latitude 60.790 North and longitude\n97.570 East and find all tsunamis that they might havecaused.""' metadata={'source': 'Semantic_Web.pdf', 'page': 436}
"
"page_content='437\nIn addition to the obvious constraints, the system needs\nto understand what the user means by saying "" find all tsunamis\nthat might have been caused due to the earthquakes "". The\nrelationship that an earthquake caused a tsunami is a complex\ninter-ontological relationship.\nAny system that needs to answer such information requests\nwould need a comprehensive knowledge of the terms involved and\nhow they are related. An IScape is specified in terms of the\ncomponents of the knowledge base of the system such as\nontologies, inter-ontological relationships and operations,\nwhich the system understands. This helps the system inunderstanding the semantics of the request. Additionally, it\nabstracts the user from having to know the actual sources that\nwill be used by the system to answer it and how the data\nretrieved from these sources will be integrated.\nAn IScape is defined as a set of information semantically\nrelated in a complex manner. We use XML to represent an\nIScape. It specifies the ontologies involved, inter-ontological relationships, preset constraint, runtime\nconfigurable constraint, how the results should be grouped,\nany aggregations that need to be computed or constraints that\nneed to be applied to the grouped data and finally the\ninformation that needs to be returned in the result to the\nuser. The ontologies in the IScape identify the domains that\nare involved in the IScape and the inter-ontological\nrelationships specify how they are related to each other. The' metadata={'source': 'Semantic_Web.pdf', 'page': 437}
"
"page_content='438\npreset constraint and the runtime configurable constraint are\nfilters used to describe the subset of data that the user isinterested in. For example, a user may be interested in\nearthquakes that occurred in only a certain region and had a\nmagnitude greater than 5. The difference between the preset\nconstraint and the runtime constraint is that the runtime\nconstraint can be set at the time of executing the IScape. In\nthe IScape template certain constraints are pre-set, while\nsome others can be configured at execution. The runtime\nconstraint forms an important mechanism to support the\nknowledge discovery, as described in Section 4. Constraintsare essentially conjunctive boolean expressions. The results\nof the IScape can be grouped based on attributes and/or\nspecified functions. If the results are to be grouped, the\nuser can also specify any aggregations that the user wants to\nbe returned as a part of the result or specify additional\nconstraint on the groups formed (similar to the HAVING clause\nin the SELECT statement in SQL). The aggregates supported bythe system are sum (SUM), average (AVG), count (COUNT),\nminimum (MIN) and maximum (MAX). Finally, the user specifies a\nlist of all the information that is to be returned as a part\nof the result. We refer to this as the\nprojection list .I t\ncould include certain information modeled by the ontologies\ndirectly (attributes), aggregates, values of functions\nevaluated on the data, and results of some simulation\nprograms.' metadata={'source': 'Semantic_Web.pdf', 'page': 438}
"
"page_content='439\nA graphical toolkit known as the IScape Builder is\navailable for the user to construct and execute these IScapesand analyze the results. It provides a platform for ease of\ndevelopment and deployment of IScapes using the knowledge base\nwithout having to understand the underlying formats used by\nthe system.\n4. Knowledge Discovery\nInfoQuilt provides a framework that allows users to access\ndata available from a multitude of diverse autonomous\ndistributed resources and provide tools that help them to\nanalyze the data to gain a better understanding of the domains\nand the inter-domain relationships as well as help users to\nexplore the possibilities of new relationships. This section\ndiscusses the conceptual framework using a series of examples,\nwhile the next section discusses some of the software\ncomponents of the InfoQuilt framework.\nThe inter-ontological relationships defined in the\nknowledge base of the system describe the interaction that\nexists between domains as they contain embedded semantic\ninformation. Existing relationships provide a scope for\ndiscovering new aspects of relationships through transitive\nlearning as discussed in example 13.\nExample 13:\nConsider the ontologies Earthquake, Tsunami and\nEnvironment. Assume that the relationships Earthquake affects' metadata={'source': 'Semantic_Web.pdf', 'page': 439}
"
"page_content='440\nEnvironment,Earthquake causes Tsunami andTsunami affects\nEnvironmentare defined and known to the system. We can see\nthat since Earthquake causes a Tsunami and Tsunami affects the\nenvironment, effectively this is another way in which an\nearthquake affects the environment (by causing a tsunami). If\nthis aspect of the relationship between an earthquake and\nenvironment was not considered earlier, it can be studied\nfurther.\nAnother valuable source of knowledge discovery is studying\nexisting IScapes that make use of the ontologies, their\nresources and relationships to retrieve information that is ofinterest to the users. The results obtained from IScapes can\nbe analyzed further by post processing of the result data. For\nexample, the Clarke UGM model forecasts the future patterns of\nurban growth using information about urban areas, roads,\nslopes, vegetation in those areas and information about areas\nwhere no urban growth can occur.\nFor the users that are well-versed with the domain, the\nInfoQuilt framework supports exploring new relationships. The\ndata available from various sources can be analyzed by using\ncharts, statistical analysis techniques, etc. to study and\nexplore trends or aspects of the domain. Such analysis can be\nused to hypothesize new relationships between domains and to\nsee if the data invalidates the hypothesis or supports it\nsufficiently as demonstrated by example 14.\nExample 14:4' metadata={'source': 'Semantic_Web.pdf', 'page': 440}
"
"page_content='441\nSeveral researchers in the past have expressed their\nconcern over nuclear tests as one of the causes of earthquakesand suggested that there could be a direct connection between\nthe two. The underground nuclear tests cause shock waves,\nwhich travel as ripples along the crust of the earth and\nweaken it, thereby making it more susceptible to earthquakes.\nAlthough this issue has been addressed before, it still\nremains a hypothesis that is not conclusively and\nscientifically proven. Suppose we want to explore this\nhypothetical relationship.\nConsider the NuclearTest and Earthquake ontologies again.\nWe assume that the system has access to sufficient resources\nfor both the ontologies such that they together provide\nsufficient information for the analysis. These resources\ninclude non-traditional, non-database sources like web-based\nsources.\nIf the hypothesis is true, then we should be able to see\nan increase in the number of earthquakes that have occurredafter the nuclear testing started. We proceed as follows.\nFirst, we check to see when nuclear testing began.\nIScape 1:\n""Find when was the earliest recorded nuclear test\nconducted.""\nWe find that nuclear testing began in 1950. Next we check\nthe trend of the number of earthquakes that have occurred\nsince the nuclear testing started. It is believed that some' metadata={'source': 'Semantic_Web.pdf', 'page': 441}
"
"page_content='442\nearthquakes below the intensity of 5.8 on the Richter scale\nwould have passed unrecorded in the earlier part of thecentury when measuring devices were less sensitive and less\nubiquitous. But for bigger earthquakes, the records are\ndetailed and complete [Whiteford, 1989]. We therefore check\nthe number of earthquakes with a magnitude 5.8 or higher\noccurring every year in this century.\nIScape 2:\n""Find the total number of earthquakes with a magnitude 5.8\nor higher on the Richter scale per year starting from year\n1900.""\nWe can then plot a chart to analyze the trend in the\nnumber of earthquakes occurring every year. It reveals that\nthere seems to be a sudden increase in the number of\nearthquakes since 1950. We modify the query to try to\napproximately quantify this rise.\nIScape 3:\n""Find the average number of earthquakes with a magnitude\n5.8 or higher on the Richter scale per year for the period\n1900-1949 and for the period 1950-present.""\nWe see that in the period 1900-1949, the average rate of\nearthquakes was 68 per year and that for 1950-present5was 127\nper year, that is it almost doubled [Whiteford, 1989].\nNext, we try to analyze the same data grouping the\nearthquakes by their magnitudes.\nIScape 4:' metadata={'source': 'Semantic_Web.pdf', 'page': 442}
"
"page_content='443\n""For each group of earthquakes with magnitudes in the\nranges 5.8-6, 6-7, 7-8, 8-9, and magnitudes higher than 9 on\nthe Richter scale per year starting from year 1900, find the\naverage number of earthquakes.""\nThe results show that the average number of earthquakes\nwith magnitude greater than 7 on the Richter scale have\nremained practically constant over the century (about 19)\n[Whiteford, 1989]. We can therefore deduce that the\nearthquakes caused by nuclear tests usually are of magnitudes\nless than 7 on the Richter scale. We can then try to explore\nthe data at a finer level of granularity by trying to look forspecific instances of earthquakes that occurred within a\ncertain period of time after a nuclear test was conducted in a\nnear by region.\nIScape 5:\n""Find nuclear tests conducted after January 1, 1950 and\nfind any earthquakes that occurred not later than a certain\nnumber of days after the test and such that its epicenter was\nlocated no farther than a certain distance from the test\nsite.""\nNote the use of "" not later than a certain number of days ""\nand ""no farther than a certain distance "". The IScape does not\nspecify the value for the time period and the distance. These\nare defined as runtime configurable parameters, which the user\ncan use to form a constraint while executing the IScape. The\nuser can hence supply different values for them and execute' metadata={'source': 'Semantic_Web.pdf', 'page': 443}
"
"page_content='444\nthe IScape repeatedly to analyze the data for different values\nwithout constructing it repeatedly from scratch. This is whereruntime configurable constraint is useful. Also, note the use\nof functions as user-defined operators to calculate the\ndifference in date (dateDifference) and the distance between\nthe epicenter of the earthquake and the nuclear test site\n(distance). Some of the interesting results that can be found\nby exploring earthquakes occurring that occurred no later than\n30 days after the test and with their epicenter no farther\nthan 5000 miles from the test site are listed below.\nChina conducted a nuclear test on October 6, 1983 at Lop\nNor test site. USSR conducted two tests, one on the same day\nand another on October 26, 1983, both at Easter Kazakh or\nSemipalitinsk test site. There was an earthquake of magnitude\n6 on the Richter scale in Erzurum, Turkey on October 30, 1983,\nwhich killed about 1300 people. The epicenter of the\nearthquake was about 2000 miles away from the test site in\nChina and about 3500 miles away from the test site in USSR.The second USSR test was just 4 days before the quake.\nUSSR conducted a test on September 15, 1978 at Easter\nKazakh or Semipalitinsk test site. There was an earthquake in\nTabas, Iran on September 16, 1978. The epicenter was about\n2300 miles away from the test site.\nMore recently, India conducted a nuclear test at its\nPokaran test site in Rajasthan on May 11, 1998. Pakistan\nconducted two nuclear tests, one on May 28, 1998 at Chagai' metadata={'source': 'Semantic_Web.pdf', 'page': 444}
"
"page_content='445\ntest site and another on May 30, 1998. There were two\nearthquakes that occurred soon after these tests. One was inEgypt and Israel on May 28, 1998 with its epicenter about 4500\nmiles away from both test sites and another in Afghanistan,\nTajikistan region on May 30, 1998, with a magnitude of 6.9 and\nits epicenter about 750 miles away from the Pokaran test site\nand 710 miles from Chagai test site.\n5. Visual Interfaces\nThis section describes the graphical tools we provide to\naid in creation of the knowledge base, creation and execution\nof Iscapes and for monitoring the execution of Iscapes. These\ncomponents of the InfoQuilt system are most relevant to the\nknowledge discovery which is the focus of this chapter, the\nremaining components - primarily the distributed agent based\nrun-time system is described in [Patel & Sheth, 2001].\n5.1.KnowledgeBuilder\nThe Knowledge Builder (KB) is the graphical toolkit that\nhelps the user in creating the knowledge base of the system.\nIt allows the user to declaratively specify ontologies,\nrelationships, resources and functions (including\nsimulations). Use of KB provides the following advantages:\n•The user does not need to know the format of the XML\nspecification used by the system to represent ontologies,\nrelationships and functions. The KB provides an easy to' metadata={'source': 'Semantic_Web.pdf', 'page': 445}
"
"page_content='446\nfollow graphical interface that the users can use and\nthereby provides an abstraction from the details of theformats used internally by the system. See Figure 10.2.\nFigure 10.2 Knowledge Builder.\n•The KB provides tools that help the user relate the\ninformation in the knowledge base in a better way. For\nexample, the user can look at the entire knowledge base as a\ngraphical tree that lists all the ontologies defined in the\nsystem, their details including rules and FDs defined on\nthem, relationships involving the ontology with their' metadata={'source': 'Semantic_Web.pdf', 'page': 446}
"
"page_content='447\ndetails and resources available for the ontologies with\ntheir details like the attributes they supply, the datacharacteristic rules, the local completeness rules and the\nbinding patterns that they need.\n•The KB structures the knowledge in a manner that allows for\neasy access to knowledge and in the form that can help one\nunderstand and learn about a domain.\n•The KB also helps the user while trying to modify the\nknowledge base. For example, a user may want to remove an\nattribute from an ontology. The KB will not allow this ifthe attribute is being used in a rule on the ontology, a FD\non the ontology, set of attributes provided by some\nresource, a data characteristic rule on a resource, a local\ncompleteness rule on a resource or a binding pattern on a\nresource. The user is required to manually take care of\nthese before removing the attribute. If the knowledge base\nis huge, it may be a tedious and error-prone task to gothrough the specifications of all these to find where the\nattribute is being used. Even worse, the user would have to\ngo through the XML specifications in the absence of a tool\nlike KB to correctly make the modification. Using the\ngraphical tree display provided by the KB, the user finds it\neasier locate such uses of the attribute. See Figure 10.3.' metadata={'source': 'Semantic_Web.pdf', 'page': 447}
"
"page_content='448\nFigure 10.3 Ontology hierarchy.\n5.2.IScapeBuilder\nThe IScape Builder (IB) is a stand-alone Java application\nthat provides a graphical interface to create and execute\nIScapes. Use of this tool has the following advantages:\n•It provides a simple and intuitive interface that allows the\nuser to create and execute IScapes in a step-by-step manner.\nSee Figure 10.4.' metadata={'source': 'Semantic_Web.pdf', 'page': 448}
"
"page_content='449\nFigure 10.4 Iscape Builder\n•The user does not need to be aware of the format of the XML\nspecification used internally by the system to represent\nIScapes.\n•It is aware of the knowledge base of the system. The user\ntherefore does not need to look it up to create new IScapes.\nFor example, names of ontologies, relationships and\nfunctions appear in combo boxes wherever required. The user\ncan easily make his selection from there.\n•It implements basic validity checks to make sure that the\nIScape being created is valid. For example, if it involves' metadata={'source': 'Semantic_Web.pdf', 'page': 449}
"
"page_content='450\nuse of a function call, the tool makes sure that the user\nhas specified where the values for all the arguments to thefunction should be supplied from. It also performs a type\nmatch.\n•It can provide various tools to help users better analyze\nthe results of the IScapes. For example, the current version\nof the IB provides a charting tool, which allows the user tocreate charts to analyze the results. This helps in\nproviding a learning environment to the users.\n5.3.Web-accessibleinterfacetoexecuteIScapes\n•We also provide a web-accessible interface that provides a\nlearning environment and allows execution of already\nexisting IScapes.\n•The interface is web-accessible. It allows execution of\nexisting IScapes by setting the runtime constraint. However,\nit does not allow users to create new IScapes. The result of\nexecuting the NuclearTest causes Earthquake is demonstratedin Figure 10.5.\n•It describes the entire knowledge base of the system that\nhelps the users in understanding the domains that aremodeled by the ontologies, how the ontologies are related to\neach other in complex ways (inter-ontological relationships\nlike affects, causes, etc) and the functions and simulations\navailable in the system.' metadata={'source': 'Semantic_Web.pdf', 'page': 450}
"
"page_content='451\nFigure 10.5 Iscape Results using the Web interface\n5.4.IScapeProcessingMonitor\nThe IScape Processing Monitor (IPM) is a graphical\ninterface used to monitor the execution of IScapes. The usercan choose to run the IScape with or without the processing\nmonitor. The web-accessible interface however does not support\nthe monitor.\nThe various agents in the runtime system generate log\nentries that are sent to the monitor and displayed as color-\ncoded table. The log entries can be very detailed. They\ninclude a time stamp, the name of the agent sending the log, abrief message, a more descriptive message and associated data,' metadata={'source': 'Semantic_Web.pdf', 'page': 451}
"
"page_content='452\nif any. The associated data could be, for example, the\nexecution plan generated by the planner or the results atvarious stages in the IScape execution.\nThe IPM is very useful in the following ways:\n•It helps in monitoring the execution of the IScape as it\nproceeds and locate any failures easily.\n•The availability of time-stamps with all the log entries\nallows us to evaluate which phases of the IScape processing\nare taking the most time. This helps us evaluate our system\nbetter and identify areas that need improvement.\nFigure 10.6 Iscape Processing Monitor.\n•The detailed log messages generated by various agents\ndescribe in considerable detail exactly what is going on\nduring processing. The IPM is therefore extremely useful as\na high-level debugging tool.' metadata={'source': 'Semantic_Web.pdf', 'page': 452}
"
"page_content='453\n6. Related Work\nSIMS [AKS96], TSIMMIS [CMH+94], Information Manifold [Levy\net al., 1996], OBSERVER [Mena et al., 2000] and InfoSleuth\n[Bayardo, 1997] are some of the efforts to integrate\ninformation from multiple heterogeneous sources for querying.\nMost other systems focus on retrieving and integrating ""data""\nfrom multiple sources and not on the ""learning, exploring and\nunderstanding"" aspects. The following are the features ofInfoQuilt that are not supported by any other systems:\n•A framework to study, analyze and learn about domains and\ninter-domain relationships.\n•Functions and simulations to post-process the data retrieved\nfrom the resources thereby adding value to the data\n•Complex relationships and constraints representing the\nsemantic correlation of information across multiple domains\nthat cannot be expressed using relational and logical\noperators can be modeled\n•Powerful semantic query interface (IScapes)\n•Additionally, in comparing the general approach of\ninformation integration to the other systems we identify the\nfollowing noteworthy differences.\nThe mediator in SIMS [Arens, Knoblock and Shen, 1996]\nsystem is specialized to a single application domain, which is\nsource dependent and query dependent. An application domain in\nSIMS models a single hierarchy of classes. It does not support' metadata={'source': 'Semantic_Web.pdf', 'page': 453}
"
"page_content='454\ninter-ontological relationships. SIMS uses Loom [Gre90], a\nmember of the KL-ONE family knowledge representation systemsto model domains as well as describe information sources. They\ndo not consider use of local completeness information about\nsources and support only one binding pattern per web resource.\nOBSERVER [Mena et al., 2000] uses ontologies to describe\ninformation sources and inter-ontology relationships like\nsynonyms, hyponyms and hypernyms across terms in different\nontologies to be able to translate a query specified using\nsome ontology that the user selected into another query that\nuses related ontologies describing relevant information. Thisapproach of using relationships to achieve interoperability\nbetween the sources is limited to basic relationships.\nTSIMMIS [Chawathe et al., 1994],[Garcia-Molina, 1995] uses\na mediator-based architecture [Wiederhold, 1993] with a query-\ncentric approach. It uses Mediator Specification Language\n(MSL) to define mediators. The specification encodes how the\nsystem should use the available resources. The mediators arethen generated automatically from these specifications. Since\nthe MSL definitions need to be created manually, adding or\nremoving information sources is not easy as it requires\nupdating them after determining how the sources should be used\nto answer the queries and then recompiling them. It has a set\nof pre-defined query templates that it knows to answer. User\nqueries are then answered by relating them to the existing' metadata={'source': 'Semantic_Web.pdf', 'page': 454}
"
"page_content='455\nquery templates. The types of queries that can be answered\nusing this approach are limited compared to our system.\nInformation Manifold (IM) [Levy et al., 1996] uses an\napproach similar to ours in that the user creates a world\nview, a collection of virtual relations and classes. The world\nview however does not capture semantics of the domains as\nInfoQuilt can using domain rules and FDs. Information sources\nare described to the system as a query over the relations in\nthe world view. Locally complete resources cannot be modeled\nprecisely. IM uses capability records to capture query\ncapability limitations of sources. These records specify,among others, a set of input parameters and minimum and\nmaximum number of inputs allowed. The system then arbitrarily\nselects a subset of the set of input parameters with at least\nthe minimum number of allowed parameters in the set. The\nsubset selected is arbitrary. Therefore, the capability\nrecords cannot precisely specify the binding patterns.\nSemantic network is a related concept in terms of modeling\nknowledge and relationships [Mylopoulu et al., 1990]. Unlike\ninformation integration systems, the main purpose of semantic\nnetwork is to create a logical, orderly and aesthetically\nconsistent relationship of pages (page is an elemental unit of\nsemantic network). The relationships modeled are hierarchical\nor similarity based are can be used to understand semantics\ninvolved within and across domains, but are limited in terms' metadata={'source': 'Semantic_Web.pdf', 'page': 455}
"
"page_content='456\nof their ability to model the complex semantic relationships\nlike the ""cause"" or ""affects"" relationships.\nConclusions\nThis chapter discussed our approach for knowledge\ndiscovery on the evolving Semantic Web. It involves modeling\nknowledge in terms of complex relationships among Web-\naccessible semantically related but otherwise heterogeneous\ninformation. Iscape, a representation used for this comprisesof ontologies, inter-ontological relationships, information\nsources and complex operations including functions and\nsimulations. The chapter described the use of IScapes to\nconstruct and deploy complex information requests. Of\nparticular interest was the use of inter-ontological\nrelationships and functions to answer those requests.\nSimulations can also be integrated with the system to perform\npost-query analysis on the result. Iscape also form the basis\nfor knowledge discovery, through the ability to study andexplore new (complex) relationships.\nThe IScapes, inter-ontological relationships, support for\nfunctions and knowledge discovery are the distinguishing\nfeatures of InfoQuilt. The system can easily adapt to new\nsources of information and is very scalable. Further, the\nsystem has been implemented and it makes use of query planning\nand optimization with a multi-threaded execution to exploitthe parallelism in the plans [Patel & Sheth, 2001].' metadata={'source': 'Semantic_Web.pdf', 'page': 456}
"
"page_content='457\nSome of the improvements to the system planned are as\nfollows. The system will be enhanced to allow the use ofrecursive query plans, which would further expand its query\ncapability. It needs to make use of inductive learning to\ninfer rules and use them appropriately, which can speed up\nquery processing [Hsu & Crai, 1994]. In using the current\nframework to support simulations, further investigation might\nbe necessary to support simulations with more complex\ninteractions.\nReferences\n[Arens, Hsu and Knoblock, 1996] Y. Arens, C. Hsu and C. A. Knoblock. Query processing in the SIMS\ninformation mediator. In Austin Tate, editor, Advanced Planning Technology. The AAAI Press, Menlo\nPark, CA, 1996.\n[Arens, Knoblock and Shen, 1996] Y. Arens, C. A. Knoblock, and W. Shen. Query reformulation for dynamic\ninformationintegration. JournalofIntelligentInformationSystems, Vol. 6, pp. 99-130, 1996.\n[Bayardo, 1997] R. J. Bayardo Jr., W. Bohrer, R. Brice, et al. InfoSleuth: Agent-Based Semantic Integration of\nInformation in Open and Dynamic Environments. In SIGMOD-97, pp. 195-206, Tucson, AZ, USA, May\n1997.\n[Bertram, 1998] C. Bertram. InfoQuilt: Semantic Correlation of Heterogeneous Distributed Assets. Masters\nThesis, Computer Science Department, UniversityofGeorgia, 1998.\n[Cla] Clarke’s Urban Growth Model, Project Gigalopolis, Department of Geography, University of California,\nSanta Barbara. http://www.ncgia.ucsb.edu/projects/gig/ncgia.html\n[Chawathe, 1994] S. Chawathe, H. Garcia-Molina, J. Hammer, K. Ireland, Y. Papakonstantinou, J. Ullman, and\nJ. Widom. The TSIMMIS Project: Integration of Heterogeneous Information Sources. Proceedings of\n10thAnniversaryMeetingofthe InformationProcessingSocietyofJapan, pp. 7-18,Tokyo, Japan, 1994.\n[Duschka, 1997] O. M. Duschka. Query Planning and Optimization in Information Integration. Ph. D. Thesis,\nComputer Science Department, Stanford University, 1997.' metadata={'source': 'Semantic_Web.pdf', 'page': 457}
"
"page_content='458\n[Fensel &Musen, 2001] D., Eds., The Semantic Web: ABrainfor Humankind, Special issue of IEEE Intelligent\nSystemsonSemanticWeb Technology, March-april2001.\n[Garcia-Molina, 1995] H. Garcia-Molina, Y. Papakonstantinou, D. Quass, A. Rajaraman, Y. Sagiv, J. Ullman,\nand J. Widom. The TSIMMIS Approach to Mediation: Data Models and Languages. In Proceedings of\nNGITS(NextGenerationInformationTechnologiesand Systems), 1995.\n[Guntamadugu, 2000] M. Guntamadugu. MÉTIS: Automating Metabase Creation from Multiple Heterogeneous\nSources. MastersThesis, Computer Science Department, UniversityofGeorgia, 2000\n[Hsu & Crai, 1994] Chun-Nan Hsu and Craig A. Knoblock. Rule Induction for Semantic Query Optimization.\nProceedingsonthe 11thInternational Conference onMachine Learning, SanMateo, CA, 1994\n[Kashyap & Sheth, 1996] V. Kashyap, A. Sheth. Schematic and Semantic Similarities between Database\nObjects: AContext-based Approach-inthe VLDB Journal 5 (4).\n[Kashyap & Sheth, 1997] V. Kashyap, A. Sheth. Semantic Heterogeneity in Global Information Systems: The\nRole of Metadata, Context and Ontologies. M. Papzoglou, and G. Schlageter, (Eds.), Academic\nPress,1997\n[Kashyap & Sheth, 2000] V. Kashyap. A. Sheth. Information Brokering Across Heterogeneous Digital Data – A\nMetadata-based Approach. Kluwer Academic Publishers, 2000.\n[Laksminarayanan, 2000] Laksminarayanan S. Achieving Semantic Inter-operability in Digital Libraries by use\nof Inter-Ontological Relations. Masters Thesis, Computer Science Department, University of Georgia,\n2000.\n[Berners-Lee, Hendler & Lassila, 2001] Time Berners-Lee, James Hendler and Ora Lassila. The Semantic Web\npublished as an article in Scientific American. http://www.sciam.com/2001/0501issue/0501berners-\nlee.html\n[Levy et al., 1996] A. Y. Levy, A. Rajaraman, J. J. Ordille. Querying heterogeneous information sources using\nsource descriptions. Proceedings of the 22nd International Conference on Very Large Databases VLDB-\n96, Bombay, India, September 1996.\n[Mylopoulu et al, 1990] J. Mylopoulus, A. Borgida, M. Jarke, M. Koubarakis. Telos: Representing knowledge\naboutinformation systems. ACM transactiononinformationsystems, 1990.' metadata={'source': 'Semantic_Web.pdf', 'page': 458}
"
"page_content='459\n[Mena et al., 2000] E. Mena, A. Illarramendi, V. Kashyap, A. P. Sheth. OBSERVER: An approach for query\nprocessing in global information systems based on interoperation across pre-existing ontologies.InternationalJournalonDistributed and ParallelDatabases, Vol. 8, No. 2,pp.223-271, April2000.\n[Ont] Ontology-based information exchange for knowledge management and electronic commerce.\nhttp://www.ontoweb.org .\n[Palsena, 2000] N. Palsena. A collaborative Approach to learning Using Information Landscapes. Masters\nThesis, Computer Science Department, UniversityofGeorgia, 2000.\n[Patel & Sheth, 2001] S. Patel and A. Sheth. Planning And Optimizing Semantic Information Requests On\nHeterogeneous Information Sources Using Semantically Modeled Domain And Resource Characteristics,\n2001.LSDISTechnical Report, UniversityofGeorgia, March2001\n[Sheth, 1996] A. Sheth, ""Data Semantics: What, Where, and How?"", in Data Semantics (IFIP Transactions), R.\nMeersmanand L. Mark, Eds., Chapmanand Hall, London, 1996, pp. 601-610.\n[Sheth, 1999] A. Sheth. Changing focus on Interoperability: FromSystem, Syntax, Structure to Semantics. In M.\nGoodchild, M. Egenhofer, R. Fegeas, and C. Kottman, editors, Interoperating Geographic InformationSystems, Kluwer AcademicPublishers, 1999.\n[Shah & Sheth, 1998] K. Shah and A. Sheth. Logical Information Modeling of Web-accessible Heterogeneous\nDigital Assets: Proceedings of the Forum on Research and Technology Advances in Digital Libraries(ADL), Santa Barbara, CA, April, 1998.\n[Wiederhold, 1993] G. Wiederhold. Mediators in the architecture of future information systems. IEEE\nComputer, 25(3), pp. 38-49.\n[Wiederhold, 1997] G. Wiederhold. Value-added mediation in Large-Scale Information Systems. Database\nApplication Semantics, Chapmanand Hall, 1997.\n[Whiteford, 1989] G. T. Whiteford. Earthquakes and Nuclear Testing: Dangerous Patterns and Trends. In\nproceedings of the 2nd Annual Conference on the United Nations and World Peace, Seattle, Washington,\nApril1989.\nFootnotes\n1Large Scale Distributed Information Systems (LSDIS) Lab, Department of Computer Science, University of\nGeorgia, Athens, GA30602 USA, http://lsdis.cs.uga.edu,Email: {sanjeev, amit, shuchi}@cs.uga.edu' metadata={'source': 'Semantic_Web.pdf', 'page': 459}
"
"page_content='460\n2One of the incarnations of the InfoQuilt system, as applied to the geographic information as part of the NSF\nDigital Libraryinitiative is the ADEPT-UGAsystem http://alexandria.uscb.edu/\n3Use of ontologies, context and relationships are critical in defining information requests and in supporting\nsemantics– see for example DS-6 proceedings, esp. [Wie97] and [She96]\n4The information presented in this example is based on the findings of GaryT. Whiteford published in the paper\n""Earthquakes and Nuclear Testing: Dangerous Patterns and Trends"" presented at the 2ndAnnual\nConference on the United Nations and World Peace in Seattle, Washington on April 14, 1989. It has been\nrecognized as the most exhaustive study yet of the correlation between nuclear testing and earthquakes.[Whi89]\n5The period of1950-1989 impliesthe period 1950-1989, since the data presented here was published byGaryT.\nWhiteford in1989.' metadata={'source': 'Semantic_Web.pdf', 'page': 460}
"
"page_content='461\n11. SEmanticportAL— The SEALapproach\nAlexanderMaedche1,3,SteffenStaab1,2,Nenad\nStojanovic1,RudiStuder1,2,3,andYorkSure1,2\n1. Introduction\nThe widely-agreed core idea of the Semantic Web is the\ndelivery of data on a semantic basis. Intuitively the delivery\nof semantically apprehended data should help with establishing\na higher quality of communication between the information\nprovider and the consumer. How this intuition may be put into\npractice is the topic of this paper. We discuss means tofurther communication on a semantic basis. For this one needs\na theory of communication that links results from semiotics,\nlinguistics, and philosophy into actual information\ntechnology. We here consider\nontologiesas a sound semantic\nbasis that is used to define the meaning of terms and hence to\nsupport intelligent access, e.g.by semantic querying [Decker\net al., 1999] or dynamic hypertext views [Staab et al., 2000].\nThus, ontologies constitute the foundation of our SEAL\n(Semantic portal) approach. The origin of SEAL lie inOntobroker [Decker et al., 1999], which was conceived for\nsemantic search of knowledge on the Web and also used for\nsharing knowledge on the Web [Benjamins & Fensel, 1998]. It\nthen developed into an overarching framework for search and\npresentation offering access at a portal site [Staab et al.,' metadata={'source': 'Semantic_Web.pdf', 'page': 461}
"
"page_content='462\n2000]. This concept was then transferred to further\napplications [Angele et al., 2000], [Staab & Maedche, 2001],[Sure, Maedche, & Staab, 2000] and is currently extended into\na commercial solution\n(cf.http://www.time2research.de ).\nHere, we describe how we have applied SEAL to a real-world\ncase study,viz.the AIFB web site. By the history of SEAL and\nrelated projects, we have distilled a methodology for\nconstruction of ontology-based knowledge systems that has been\napplied for the construction of the AIFB web site (Section 3).\nFollowing the description of this methodology and the\nexperiences we made with its application to the AIFB site, wedescribe the SEAL core modules and its overall architecture\n(Section 4). Thereafter, we go into several technical details\nthat are important for human and machine access to a semantic\nportal.\nIn particular, we describe a general approach for semantic\nranking (Section 5). The motivation for semantic ranking is\nthat even with accurate semantic access, one will often findtoo much information. Underlying semantic structures,\ne.g.\ntopic hierarchies, give an indication of what should be rankedhigher on a list of results. Then, we tackle the issue of\nsemantic personalization (Section 6). The principal idea is\nthat underlying semantics may be very useful for presenting\npersonalized views, because they allow for content-based views\nonto the web site. Finally, we present mechanisms to deliver\nand collect machine-understandable data (Section 7). They' metadata={'source': 'Semantic_Web.pdf', 'page': 462}
"
"page_content='463\nextend previous means for better digestion of web site data by\nsoftware agents. Before we conclude, we give a short survey ofrelated work.\n2. Ontology and knowledge base\nFor our AIFB intranet, we explicitly model relevant\naspects of the domain in order to allow for a more concise\ncommunication between agents, viz.within the group of\nsoftware agents, between software and human agents, and — lastnot least — between different human agents. In particular, we\ndescribe a way of modeling an ontology that we consider\nappropriate for supporting communication between human and\nsoftware agents.\n2.1.Ontologiesforcommunication\nResearch in ontology has its roots in philosophy dealing\nwith the nature and organisation of being. In computer\nscience, the term ontology refers to an engineering artifact,\nconstituted by a specific vocabulary used to describe a\nparticular model of the world, plus a set of explicit\nassumptions regarding the intended meaning of the words in the\nvocabulary. Both, vocabulary and assumptions, serve human and\nsoftware agents to reach common conclusions whencommunicating.\nReference and meaning .The general context of\ncommunication (with or without ontology) is described by the' metadata={'source': 'Semantic_Web.pdf', 'page': 463}
"
"page_content='464\nmeaning triangle [Odgen & Richards, 1993]. The meaning\ntriangle defines the interaction between symbols or words,concepts and things of the world\n(cf.Figure 11.1).\nThe meaning triangle illustrates the fact that although\nwords cannot completely capture the essence of a reference (=\nconcept) or of a referent (= thing), there is a correspondence\nbetween them.\nFigure 11.1 The Meaning Triangle.\nThe relationship between a word and a thing is indirect.\nThe correct linkage can only be accomplished when an\ninterpreter processes the word invoking a corresponding\nconcept and establishing the proper linkage between his\nconcept and the appropriate thing in the world.\nLogics.An ontology is a general logical theory\nconstituted by a vocabulary and a set of statements about a\ndomain of interest in some logic language. The logical theoryspecifies relations between signs and it apprehends relations\nwith a semantics that restricts the set of possible\ninterpretations of the signs. Thus, the ontology reduces the' metadata={'source': 'Semantic_Web.pdf', 'page': 464}
"
"page_content='465\nnumber of mappings from signs to things in the world that an\ninterpreter who is committed to the ontology can perform — inthe ideal case each sign from the vocabulary eventually stands\nfor exactly one thing in the world.\nFigure 11.2 Communication between human and/or software\nagents.\nFigure 11.2 depicts the overall setting for communication\nbetween human and software agents. We mainly distinguish three\nlayers: First of all, we deal with things that exist in thereal world, including in this example human and software\nagents, cars, and animals. Secondly, we deal with symbols and\nsyntactic structures that are exchanged. Thirdly, we analyze\nmodels with their specific semantic structures.\nLet us first consider the left side of Figure 11.2 without\nassuming a commitment to a given ontology.\nTwo human agents HA1 and HA2 exchange a specific sign,\ne.g.a word like “jaguar”. Given their own internal model each' metadata={'source': 'Semantic_Web.pdf', 'page': 465}
"
"page_content='466\nof them will associate the sign to his own concept referring\nto possibly two completely different existing things in theworld,\ne.g.the animalvs.the car. The same holds for\nsoftware agents: They may exchange statements based on a\ncommon syntax, however, they may have different formal models\nwith differing interpretations.\nWe consider the scenario that both human agents commit to\na specific ontology that deals e.g.with a specific domain,\ne.g.animals. The chance that they both refer to the same\nthing in the world increases considerably. The same holds for\nthe software agents SA1 and SA2. They have actual knowledgeand they use the ontology to have a common semantic basis.\nWhen agent SA1 uses the term “jaguar”, the other agent SA2 may\nuse the ontology just mentioned as background knowledge and\nrule out incorrect references,\ne.g.ones that let “jaguar”\nstand for the car. Human and software agents use their\nconcepts and their inference processes, respectively, in order\nto narrow down the choice of referents (e.g., because animals\ndo not have wheels, but cars have).\nA new model for ontologies. Subsequently, we define our\nnotion of ontology. However, in contrast to most other\nresearch about ontology languages it is not our purpose to\ninvent a new logic language or to redescribe an old one.\nRather what we specify is a way of modellingan ontology that\ninherently considers the special role of signs (mostly strings\nin current ontology-based systems) and references.' metadata={'source': 'Semantic_Web.pdf', 'page': 466}
"
"page_content='467\nOur motivation is based on the conflict that ontologies\nare for human and software agents, but logical theories aremostly for mathematicians and inference engines. Formal\nsemantics for ontologies is a\nsine qua non. In fact, we build\nour applications on a well-understood logical framework, viz.\nF-Logic [Kifer, Lausen, & Wu, 1995] . However, in addition tothe benefits of logical rigor, user and developer of an\nontology-based system profit from ontology structures that\nallow to elucidate possible misunderstandings.\nFor instance, one might specify that the sign “jaguar”\nrefers to the union of the set of all animals that are jaguarsand the set of all cars that are jaguars. Alternatively, one\nmay describe that “jaguar” is a sign that may either refer to\na concept “animal-jaguar” or to a concept “car-jaguar”. We\nprefer the second way. In conjunction with appropriate GUI\nmodules\n(cf.Sections 4ff) one may avoid presentations of\n‘funny symbols’ to the user like “animal-jaguar”, while\navoiding ‘funny inference’ such as may arise from artificialconcepts like\n(‘animal-jaguar’ [‘car-jaguar’).\n2.2.Ontologyvs.knowledgebase\nConcerning the general setting just sketched, the term\nontology is defined — more or less — as some piece of formal\nknowledge. However, there are several properties that warrant the\ndistinction of knowledge contained in the ontology vs.knowledge' metadata={'source': 'Semantic_Web.pdf', 'page': 467}
"
"page_content='468\ncontained in the so-called knowledge base, which are summarised in\nTable 11.1.\nTable 11.1Distinguishingontologyandknowledgebase\nOntology Knowledgebase\nSet of logic\nstatements\nTheory\nStatements are mostly\nConstruction\nDescription logicsYes\ngeneral\ntheory\nintensional\nset up once\nT-BoxYes\ntheory of particular\ncircumstances\nextensional\ncontinuous change\nA-Box\nThe ontology constitutes a general logical theory, while\nthe knowledge base describes particular circumstances. In the\nontology one tries to capture the general conceptual\nstructures of a domain of interest, while in the knowledgebase one aims at the specification of the given state of\naffairs. Thus, the ontology is (mostly) constituted by\nintensionallogical definitions, while the knowledge base\ncomprises (mostly) the extensionalparts. The theory in the\nontology is one which is mostly developed during the set up\n(and maintenance) of an ontology-based system, while the facts\nin the knowledge base may be constantly changing. Indescription logics, the ontology part is mostly described in\nthe T-Box and the knowledge base in the A-Box. However, our\ncurrent experience is that it is not always possible to' metadata={'source': 'Semantic_Web.pdf', 'page': 468}
"
"page_content='469\ndistinguish the ontology from the knowledge base by the\nlogical statements that are made. In the conclusion we willbriefly mention some of the problems referring to some\nexamples of following sections.\nThe distinctions (“general”\nvs.“specific”, “intensional”\nvs.“extensional”, “set up once” vs.“continuous change”)\nindicate that for purposes of development, maintenance, and\ngood design of the software system it is reasonable to\ndistinguish between ontology and knowledge base. Also, they\ndescribe a rough shape of where to put which parts of a\nlogical theory constraining the intended semantic models thatfacilitate the referencing task for human and software agents.\nHowever, the reader should note that none of these\ndistinctions draw a clear cut borderline between ontology and\nknowledge base in general. Rather, it is typical that in a few\npercent of cases it depends on the domain, the view of the\nmodeler, and the experience of the modeler, whether she\ndecides to put particular entities and relations into theontology or into the knowledge base.\nBoth following definitions of ontology and knowledge base\nspecify constraints on the way an ontology (or a knowledge\nbase) should be modeled\nin a particular logical language like\nF-Logic or OIL:\nDefinition 1 (Ontology) An ontology is a sign system O :=\n(L, F, G, C, H, R, A), which consists of' metadata={'source': 'Semantic_Web.pdf', 'page': 469}
"
"page_content='470\nAlexicon:The lexicon contains a set of signs (lexical\nentries) for concepts, LC, and a set of signs for relations, LR.\nTheirunionisthelexicon L:= LC∪LR..\nTworeference functions F, G, with F: 2Lc→LCand G:2Lr\n→2R.F :and G, link sets of lexical entries {Li} ⊂Lto the\nset of concepts and relations they refer to, respectively, in\nthe given ontology. In general, one lexical entry may refer to\nseveral concepts or relations and one concept or relation may\nbe refered to by several lexical entries. Their inverses are F-\n1and. G-1.\nIn order to map easily back and forth and because there is\na n to m mapping between lexicon and concepts/relations, F and\nG are defined on sets rather than on single objects.\nA set Cofconcepts: About each C ∈C Cexists at least one\nstatement in the ontology, viz. its embeddinginthetaxonomy.\nAtaxonomyH: Concepts are taxonomically related by the\nirreflexive, acyclic, transitive relation H,(H ⊂C∗C). H(C1,\nC2) means that C1is C1 a subconcept of C2.\nA set of binary relationsR: R denotes a set of binary\nrelations4They specify pairs of domain and ranges (D, R )\nwith D, R ∈C. The functions d and r applied to a binary\nrelation Q yield the corresponding domain and range concepts\nD and R , respectively.\nA set ofontology axioms,A .' metadata={'source': 'Semantic_Web.pdf', 'page': 470}
"
"page_content='471\nThe reader may note that the structure we propose is very\nsimilar to the WordNet model described by Miller [Miller,1995]. WordNet has been conceived as a mixed linguistic /\npsychological model about how people associate words with\ntheir meaning. Like WordNet, we allow that one word may have\nseveral meanings and one concept ( synset ) may be represented\nby several words. However, we allow for a seamless integration\ninto logical languages like OIL or F-Logic by providing very\nsimple means for definition of relations and for knowledge\nbases.\nWe define a knowledge base as a collection of object\ndescriptions that refer to a given ontology.\nDefinition 2 (Knowledge Base) We define a knowledge base\nas a 7- tupel\nKB:= (L, J, I, W, S, A, O), that consists of\n•alexiconcontaining a set of signs for instances, L .\n•Areference function J w i t hJ:2L→2I.. J Jlinks sets of\nlexical entries {L i}⊂L to the set of instances they\ncorrespond to.\nThereby, names may be multiply used, e.g. “Athens” may be\nused for “Athens, Georgia” or for “Athens, Greece”.\n•a set ofinstances I .About each I k ∈I, k = 1,…,l exists\nat least one statement in the knowledge base, viz. a\nmembership to a concept C from the ontology O.' metadata={'source': 'Semantic_Web.pdf', 'page': 471}
"
"page_content='472\n•Amembership function Ww i t hW:2I→2C.W assigns sets of\ninstances to the sets of concepts they are members of.\n•Instantiated relations ,S, are described, viz. S ⊆{(x, y,\nz)x∈I, y∈R, z∈I}.\n•A set of knowledge base axioms, A.\n•A reference to an ontology O .\nOverall the decision to model some relevant part of the\ndomain in the ontology vs.in the knowledge base is often\nbased on gradual distinctions and driven by the needs of the\napplication. Concerning the technical issue it is sometimes\neven useful to let the lexicon of knowledge base and ontology\noverlap,e.g.to use a concept name to refer to a particular\ninstance in a particular context. In fact researchers innatural language have tackled the question how the reference\nfunction\nJcan be dynamically extended given an ontology, a\ncontext, a knowledge base and a particular sentence.\n3. Ontology engineering\nThe conceptual backbone of our SEAL approach is the\nontology. For our intranet, we had to model the conceptsrelevant in this setting. As SEAL has been maturing, we have\ndeveloped a methodology for setting up ontology-based\nknowledge systems which we sketch here. Its extended\ndescription can be found in [Staab et al., 2001]. We also' metadata={'source': 'Semantic_Web.pdf', 'page': 472}
"
"page_content='473\ndescribe some experiences made during the ontology\ndevelopment.\n3.1.Methodologyforontologyengineering\nUntil a few years ago the building of ontologies was done\nin a ratherad hocfashion. Meanwhile there have been some\nfew, but seminal proposals for guiding the ontologydevelopment process (\ne.g.[Uschold & Gruninger, 1996], [Gomez-\nPerez, 1996], [Guarino & Welty, 2000]). For instance Guarino &\nWelty [Guarino & Welty, 2000] give formal guidelines for\nconstructing a consistent and reusable ontology. Another\napproach, the Methontology framework [Gomez-Perez, 1996],\nincludes the identification of the ontology development\nprocess, and stages through which an ontology passes during\nits lifetime. In contrast to these methodologies, which\nmostly restrict their attention within the ontology itself,our approach (\ncf.Figure 11.3) focuses on the application-\ndriven development of ontologies' metadata={'source': 'Semantic_Web.pdf', 'page': 473}
"
"page_content='474\nFigure 11.3OntologyDevelopment.\nKickoff phase for ontology development .The result of the\nkickoff phase is an ontology requirements specification\ndocument (ORSD) describing what an ontology should support,\nsketching the planned area of the ontology application and\nlisting,e.g., valuable input sources for the gathering of the\nbaseline taxonomy in the refinement phase. Analysis of these\ninput sources delivers an “initial lexicon” containing\nrelevant lexical entries. In general, the ORSD should guide an\nontology engineer to decide about inclusion and exclusion oflexical entries, their linkings to concepts / relations and\nthe hierarchical structure of the ontology. In this early\nstage one should look for already developed and potentially\nreusable ontologies.' metadata={'source': 'Semantic_Web.pdf', 'page': 474}
"
"page_content='475\nRefinement phase. The goal of the refinement phase is to\nproduce a mature and application-oriented “target ontology”according to the specification given by the kickoff phase. It\nis divided into several subphases. First, the initial lexicon\nis linked to corresponding concepts / relations and the\nconcepts are ordered in a taxonomy to form a “baseline\nontology”. Second, a knowledge elicitation process with domain\nexperts based on the initial input from the baseline ontology\nis performed to develop a “seed ontology”. There, the initial\nbaseline ontology is modified and / or extended and axioms are\nadded on top. Third, a formalization phase where the seedontology is transferred into the target ontology which is\nexpressed in formal representation languages like F-Logic\n[Kifer, Lausen, & Wu, 1995] , OIL [Decker et al., 2000] or\nConceptual Graphs [Sowa, 1992]. During the formalization phase\nthe ontology engineer has to draw the line between ontology\nand knowledge base (\ncf.Section 2.2).\nThe usage of potentially reusable ontologies (identified\nduring the kickoff phase) may improve the speed and quality of\nthe development during the whole refinement phase. These\nontologies might e.g.give useful hints for modeling\ndecisions.\nEvaluation phase. The evaluation phase serves as a proof\nfor the usefulness of developed ontologies and their\nassociated software environment. In a first step, the ontology\nengineer checks, whether the target ontology suffices the' metadata={'source': 'Semantic_Web.pdf', 'page': 475}
"
"page_content='476\nontology requirements specification document. In a second\nstep, the ontology is populated by adding instances to theknowledge base and tested in the target application\nenvironment — again, requirements from the ORSD serve as a\nbase for evaluation. Feedback from beta users may be a\nvaluable input for further refinement of the ontology. A\nvaluable input may be the usage patterns of the ontology. The\nprototype system has to track the ways users navigate or\nsearch for concepts and relations. With such a “semantic\nlogfile” (\ncf.Section 6.2) we may trace what areas of the\nontology are often “used” and others which were not navigated.This phase is closely linked to the refinement phase and an\nontology engineer may need to perform several cycles until the\ntarget ontology reaches the envisaged level — the “roll out”\nof the target ontology finishes the evaluation phase.\nMaintenance phase. In the real world things are changing—\nand so do the specifications for ontologies. To reflect these\nchanges ontologies have to be maintained frequently like otherparts of software, too. We stress that the maintenance of\nontologies is primarily an organizational process. There must\nbe strict rules for the update-delete-insert processes within\nontologies. We recommend that the ontology engineer gathers\nchanges to the ontology and initiates the switch-over to a new\nversion of the ontology after thoroughly testing possible\neffects to the application,\nviz.performing additional cyclic\nrefinement and evaluation phases. Similar to the refinement' metadata={'source': 'Semantic_Web.pdf', 'page': 476}
"
"page_content='477\nphase, feedback from users and analysis of usage patterns may\nbe a valuable input for identifying the changes needed.Maintenance should accompany ontologies as long as they are on\nduty.\n3.2.Experiencewithontologydevelopment\nThe methodology describes in general how to develop\nontologies. We now describe experiences made while performing\nthe described steps and include some aspects which were not\ncovered by the methodology.\nKickoff phase for ontology development. Setting up\nrequirements for the AIFB ontology we had to deal mainly with\nmodeling the research topics done by different groups of our\ninstitute, teaching related topics and last but not least\npersonal information about members of our institute.\nWe took ourselves as an “input source” and collected a\nlarge set of lexical entries for research topics, teaching\nrelated topics and personal information. By the sheer nature\nof these lexical entries, the ontology developers were not\nable to come up with all relevant lexical entries by\nthemselves. Rather it was necessary to go through several\nsteps with domain experts ( viz.our colleagues) in the\nrefinement phase.\nRefinement phase. We started to develop a baseline\ntaxonomy that contained a heterarchy of research topics\nidentified during the kickoff phase. An important result for' metadata={'source': 'Semantic_Web.pdf', 'page': 477}
"
"page_content='478\nus was to recognize that categorization was not based on an\nisA-taxonomy, but on a much weaker HASSUBTOPICrelationship. We\nthen switched to the second subphase of the refinement phase,\nviz.the development of the seed ontology through knowledge\nelicitation with our colleagues. There we needed three steps.\nIn the first step, lexical entries were collected by all\nmembers from the institute. Though we had already given the\npossibility to provide a rough categorization, the categories\nmodeled by nonknowledge engineers were not oriented towards a\nmodel of the world, but rather toward the way people worked in\ntheir daily routine. Thus, their categorization reflected aparticular rather than a shared view onto the domain. A lesson\nlearned from this was that people need an idea about the\nnature of ontologies to make sound modeling suggestions. It\nwas very helpful to show existing prototypes of ontology-based\nsystems to the domain experts.\nIn the second step, we worked towards a common\nunderstanding of the categorization and the derivation ofimplicit knowledge, such as “someone who works in logic also\nworks in theoretical computer science ” and inverseness of\nrelations,\ne.g.“an author has a publication” is inverse to “a\npublication is written by an author”.\nIn the third step, we mapped the gathered lexical entries\nto concepts and relations and organized them at a middle\nlevel. Naturally, this level involved the introduction of more\ngeneric concepts that people would usually not use when' metadata={'source': 'Semantic_Web.pdf', 'page': 478}
"
"page_content='479\ncharacterizing their work (such as “optimization”), but it\nwould also include “politically desired concepts”, because oneown’s ontology exhibits one’s view onto the world. Thus, the\nontology may become a political issue!\nModeling during early stages of the refinement phase was\ndone with pen and paper, but soon we took advantage of our\nontology environment OntoEdit (\ncf.Figure 11.4) that supports\ngraphical ontology engineering at an epistemological level as\nwell as formalization of the ontology. Our underlying\ninference engine ( cf.Section 4) is based on F-Logic that we\ntherefore chose as representation language for the targetontology. Like mentioned before, formalization is a non-\ntrivial process where the ontology engineer has to draw the\nline between ontology and knowledge base. Our final decisions\nwere much disputed. In the conclusion we will mention some of\nthe intricacies that arise from excerpts of our\nontology/knowledge base such as the ones given in Section 5.\nEvaluation phase. After all we found that participation by\nusers in the construction of the ontology was very good and\nmet the previously defined requirements, as people were very\ninterested to see their work adequately represented. Some\npeople even took the time to learn about OntoEdit. However,\nthe practical problem we had was that our environment does not\nyet support an ontology management module for cooperative\nontology engineering.' metadata={'source': 'Semantic_Web.pdf', 'page': 479}
"
"page_content='480\nWe embedded the ontology in it’s version 1.0 into our\napplication and enabled semantic logfiles ( cf.Section 6.2) to\ntrack the usage of the ontology. On top of that we are\ncollecting feedback from our users — basically colleagues and\nstudents from our institute. Currently we are still running\nthe ontology version 1.0, but we expect maintenance to be a\nrelevant topic soon.\n4. SEAL infrastructure and core modules\nThe aim of our intranet application is the presentation of\ninformation to human and software agents taking advantage of\nsemantic structures. In this section, we first elaborate on\nthe general architecture for SEAL (SEmantic PortAL), before we\nexplain functionalities of its core modules.' metadata={'source': 'Semantic_Web.pdf', 'page': 480}
"
"page_content='481\nFigure 11.4OntoEdit.\n4.1.Architecture\nThe overall architecture and environment of SEAL is\ndepicted in Figure 11.5:\nThebackboneof the system consists of the knowledge\nwarehouse,i.e.the data repository, and the Ontobroker\nsystem,i.e.the principal inferencing mechanism. The latter\nfunctions as a kind of middleware run-time system, possiblymediating between different information sources when the\nenvironment becomes more complex than it is now.\nAt the front end one may distinguish between three types\nof\nagents:software agents ,community users andgeneral users.' metadata={'source': 'Semantic_Web.pdf', 'page': 481}
"
"page_content='482\nAll three of them communicate with the system through the web\nserver. The three different types of agents correspond to\nthree primary modes of interaction with the system. First,\nremote applications ( e.g.software agents) may process\ninformation stored at the portal over the internet. For this\npurpose, theRDF generatorpresents RDF facts through the web\nserver. Software gents with RDF crawlersmay collect the facts\nand, thus, have direct access to semantic knowledge stored at\nthe web site.\nSecond, community users and general users can access\ninformation contained at the web site. Two forms of accessingare supported: navigating through the portal by exploiting\nhyperlink structure of documents and searching for information\nby posting queries. The hyperlink structure is partially given\nby the portal builder, but it may be extended with the help of\nthe\nnavigationmodule. The navigation modules exploits\ninferencing capabilities of the inference engine in order to\nconstruct conceptual hyperlink structures. Searching andquerying is performed via the\nquerymodule. In addition, the\nuser can personalise the search interface using the semantic\npersonalization preprocessing module and/or rank retrieved\nresults according to semantic similarity (done by the\npostprocessing module for semantic ranking ). Queries also take\nadvantage of the Ontobroker inferencing.\nThird, only community users can provide data. Typical\ninformation they contribute includes personal data,' metadata={'source': 'Semantic_Web.pdf', 'page': 482}
"
"page_content='483\ninformation about research areas, publications, activities and\nother research information.\nFigure 11.5AIFBIntranet-Systemarchitecture.\nFor each type of information they contribute there is (at\nleast) one concept in the ontology. Retrieving parts of the\nontology, thetemplatemodule may semi-automatically produce\nsuitable HTML forms for data input. The community users fill\nin these forms and the template modules stores the data in the\nknowledge warehouse.\n4.2.Coremodules\nThe core modules have been extensively described in [Staab\net al., 2000]. In order to give the reader a compact overview' metadata={'source': 'Semantic_Web.pdf', 'page': 483}
"
"page_content='484\nwe here shortly survey their function. In the remainder of the\npaper we delve deeper into those aspects that have been addedor considerably extended recently,\nviz.semantic ranking\n(Section 5), semantic personalization (Section 6), and\nsemantic access by software agents (Section 7).\nOntobroker.The Ontobroker system [Fensel et al., 1998] is\na deductive, object-oriented database system operating either\nin main memory or on a relational database (via JDBC). It\nprovides compilers for different languages to describe\nontologies, rules and facts. Beside other usage, in this\narchitecture it is also used as an inference engine (server).It reads input files containing the knowledge base and the\nontology, evaluates incoming queries, and returns the results\nderived from the combination of ontology, knowledge base and\nquery.\nThe possibility to derive additional factual knowledge\nfrom given facts and background knowledge considerably facilitates\nthe life of the knowledge providers and the knowledge seekers. For\ninstance, one may specify that if a person belongs to a researchgroupofinstitute\nAIFB, he also belongs to AIFB. Thus, it is unnecessary to\nspecify the membership to his research group andto AIFB.\nConversely, the information seeker does not have to take care\nof inconsistent assignments, e.g.ones that specify membership\nto an AIFB research group, but that have erroneously left out\nthe membership to AIFB.' metadata={'source': 'Semantic_Web.pdf', 'page': 484}
"
"page_content='485\nKnowledge warehouse. The knowledge warehouse [Staab et\nal., 2000] serves as repository for data represented in theform of F-Logic statements. It hosts the ontology, as well as\nthe data proper. From the point of view of inferencing\n(Ontobroker) the difference is negligible, but from the point\nof view of maintaining the system the difference between\nontology definition and its instantiation is useful. The\nknowledge warehouse is organised around a relational database,\nwhere facts and concepts are stored in a reified format. It\nstates relations and concepts as first-order objects and it is\ntherefore very flexible with regard to changes and amendmentsof the ontology.\nNavigation module. Beside the hierarchical, tree-based\nhyperlink structure which corresponds to hierarchical\ndecomposition of domain, the navigation module enables complex\ngraph-based semantic hyperlinking, based on ontological\nrelations between concepts (nodes) in the domain. The\nconceptual approach to hyperlinking is based on the assumptionthat semantic relevant hyperlinks from a web page correspond\nto conceptual relations, such as memberOf or hasPart, or to\nattributes, like has Name. Thus, instances in the knowledge\nbase may be presented by automatically generating links to all\nrelated instances. For example, on personal web pages (\ncf.\nFigure 11.7) there are hyperlinks to web pages that describethe corresponding research groups, research areas and project\nweb pages.' metadata={'source': 'Semantic_Web.pdf', 'page': 485}
"
"page_content='486\nQuery module. The query module puts an easy-to-use\ninterface on the query capabilities of the F-Logic queryinterface of Ontobroker. The portal builder models web pages\nthat serve particular query needs, such as querying for\nprojects or querying for people. For this purpose, selection\nlists that restrict query possibilities are offered to the\nuser. The selection lists are compiled using knowledge from\nthe ontology and/or the knowledge base. For instance, the\nquery interface for persons allows to search for people\naccording to research groups they are members of. The list of\nresearch groups is dynamically filled by an F-Logic query andpresented to the user for easy choice by a drop-down list (\ncf.\nsnapshot in Figure 11.6).\nEven simpler, one may apprehend a hyperlink with an F-\nLogic query that is dynamically evaluated when the link is\nhit. More complex, one may construct an is A, a has Part, or a\nhas Subtopic tree, from which query events are triggered when\nparticular nodes in the tree are navigated.\nTemplate module. In order to facilitate the contribution\nof information by community users, the template module\ngenerates an HTML form for each concept that a user may\ninstantiate. For instance, in the AIFB intranet there is an\ninput template ( cf.Figure 11.7, upper left) generated from\nthe concept definition of person ( cf.Figure 11.7, lower\nleft). The data is later on used by the navigation module to' metadata={'source': 'Semantic_Web.pdf', 'page': 486}
"
"page_content='487\nproduce the corresponding person web page ( cf.Figure 11.7,\nright hand side).\nIn order to reduce the data required for input, the portal\nbuilder specifies which attributes and relations are derived\nfrom other templates. For example, in our case the portal\nbuilder has specified that project membership is defined in\nthe project template. The co-ordinator of a project enters\ninformation about which persons are participants of the\nproject and this information is used when generating the\nperson web page taking advantage of a corresponding F-Logic\nrule for inverse relationships. Hence, it is unnecessary toinput this information in the person template.\nFigure 11.6 Searching form based on definition of\nconcept Person.' metadata={'source': 'Semantic_Web.pdf', 'page': 487}
"
"page_content='488\nOntology lexicon. The different modules described here\nmake extensive use of the lexicon component of the ontology.The most prevalent use is the distinction between English and\nGerman (realized for presentation, though not for the template\nmodule, yet). In the future we envision that one may produce\nmore adaptive web sites making use of the explicit lexicon.\nFor instance, we will be able to produce short descriptions\nwhen the context is sufficiently narrow,\ne.g.working with\nambiguous acronyms like ASP5or SEAL6.\n5. Semantic ranking\nThis section describes the architecture component\n“Semantic ranking” which has been developed in the context of\nour application. First, we will introduce and motivate the\nrequirement for a ranking approach with a small example we are\nfacing. Second, we will show how the problem of semantic\nranking may be reduced to the comparison of two knowledge\nbases. Query results are reinterpreted as “query knowledgebases” and their similarity to the original knowledge base\nwithout axioms yields the basis for semantic ranking. Thereby,\nwe reduce our notion of similarity between two knowledge bases\nto the similarity of concept pairs [Maedche & Staab, 2000].\nLet us assume the following ontology:' metadata={'source': 'Semantic_Web.pdf', 'page': 488}
"
"page_content='489\nFigure 11.7 Templates generated from concept definitions\n1: Person :: Object [worksIn ÿProject].\n2: Project :: Object [worksIn ÿTopic].\n3: Person :: Object [worksIn ÿTopic].\nTo give an intuition of the semantic of the F-Logic\nstatements, in line 1 one finds a concept definition for a\nPerson being an Object with a relation worksIn .The range of\nthe relation for this Person is restricted to Project.\nLet us further assume the following knowledge base:\n4 : KnowledgeManagement: Topic.' metadata={'source': 'Semantic_Web.pdf', 'page': 489}
"
"page_content='490\n5 : KnowledgeDiscovery: Topic [subtopicOf →\nKnowledgeManagement].\n6 : Gerd : Person [worksIn →OntoWise].\n7 : OntoWise : Project[hasTopic →KnowledgeManagement].\n8 : Andreas : Person[worksIn →TelekomProject].\n9 : TelekomProject : Project[hasTopic →\nKnowledgeDiscovery].\n10: FORALL X, Y, Z Z[hasTopic →Y]←X[subtopicOf →Y]\nand [hasTopic →X].\nDefinitions of instances in the knowledge base are\nsyntactically very similar to the concept definition in F-\nlogic. In line 5 the instance KnowledgeDiscovery of the\nconceptTopicis defined. Furthermore, the relation subtopicOf\nis instantiated between KnowledgeDiscovery and\nKnowledgeManagement. Similarly in line 6, it is stated\nthat Gerd is a Person working in OntoWise.\nNow, an F-Logic query may ask for all people who work in a\nknowledge management project by:\nwhich may result in the tuples M 1T: = (Gerd, OntoWise)\nand M 2T: = (Andreas, TelekomProject). Obviously, both answers\nare correct with regard to the given knowledge base and\nontology, but the question is, what would be a plausible\nranking for the correct answers. This ranking should be' metadata={'source': 'Semantic_Web.pdf', 'page': 490}
"
"page_content='491\nproduced from a given query without assuming any modification\nof the query.\n5.1.Reinterpretingqueries\nOur principal consideration builds on the definition of\nsemantic similarity that we have first described in [Maedche &\nStaab, 2000]. There, we have developed a measure for thesimilarity of two knowledge bases. Here, our basic idea is to\nreinterprete possible query results as a “query knowledge\nbase” and compute its similarity to the original knowledge\nbase while abstracting from semantic inferences. The result of\nan F-Logic query may be re-interpreted as a\nquery knowledge\nbase(QKB) by the following approach. An F-Logic query is of\nthe form or can be rewritten into the form7:\nWithXbeing a vector of variables (X1,…,X n), k being\na vector of constants, and Pbeing a vector of conjoined\npredicates. The result of a query is a two-dimensional matrix\nM of sizemxn,with n being the number of result tuples and\nm being the length X of and, hence, the length of the result\ntuples. Hence, in our example above X:= (Y, Z), k:=\n(‘‘knowledge management’’), P:=(P1, P2), P1(a, b, c) :=a\n[worksIn →b],P:=(P1, P2), P2(a, b, c) : = b[hasTopic\n→c] and' metadata={'source': 'Semantic_Web.pdf', 'page': 491}
"
"page_content='492\nNow,wemaydefinethequeryknowledgebase i(QKBi i)by\nThe similarity measure between the query knowledge base\nand the given knowledge base may then be computed in analogy\nto [Maedche & Staab, 2000]. An adaptation and simplificationof the measures described there is given in the following\ntogether with an example.\n5.2.Similarityofknowledgebases\nThe similarity between two objects (concepts and or\ninstances) may be computed by considering their relative place\nin a common hierarchy H. Hmay, but need not be a taxonomy H.\nFor instance, in our example from above we have a\ncategorization of research topics, which is not a taxonomy!\nOur principal measures are based on the cotopies of the\ncorrespondin objects as defined by a given hierarchy H H,e.g.\nan ISA hierarchy H H, an part-whole hierarchy, or a\ncategorization of topics. Here, we use the upwards cotopy (UC)\ndefined as follows:\nUC is overloaded in order to allow for a set of object M\nas input instead of only single objects, viz.' metadata={'source': 'Semantic_Web.pdf', 'page': 492}
"
"page_content='493\nBased on the definition of the upwards cotopy (UC) the\nobject match (OM) is defined by:\nBasically, OM reaches 1 1when two concepts coincide (number of\nintersections of the respective upwards cotopies and number of\nunions of the respective cotopies is equal); it degrades to the\nextent to which the discrepancy between intersections and unionsincreases (a OM between concepts that do not share common\nsuperconceptsyieldsvalue0).\nExample.We here give a small example for computing UC and OM\nbased on a given categorization of objects H.Figure 11.8depicts\ntheexamplescenario.\nThe upwards cotopy UC (knowledge discovery, H)is given by\nUC (knowledge discovery, H) = {knowledge discovery ;knowledge\nmanagement }. The upwards cotopy UC (optimization );H)is computed\nby UC(optimization );H)) = {optimization }.' metadata={'source': 'Semantic_Web.pdf', 'page': 493}
"
"page_content='494\nFigure 11.8ExampleforcomputingUCandOM\nComputing the object match OM between KnowledgeManagement\nand Optimization results in 0, the object match between\nKnowledgeDiscovery and CSCW computes to 1/3.\nThe match introduced above may easily be generalized to\nrelations using a relation hierarchy Hr. Thus, the predicate\nmatch (PM) for two n-ary predicate P1, P2is defined by a mean\nvalue. Thereby, we use the geometric mean in order to reflect\nthe intuition that if the similarity of one of the components\napproaches 0the overall similarity between two predicates\nshould approach 0— which need not be the case for the\narithmetic mean:\nThis result may be averaged over an array of predicates. Wehere simply give the formula for our actual needs, where a\nquery knowledge base is compared against a given knowledgebase KB:' metadata={'source': 'Semantic_Web.pdf', 'page': 494}
"
"page_content='495\nFor instance, comparing the two result tuples from our example\nabove with the given knowledge base:\nFirst, M1^T := (Gerd ;OntoWise). Then, we have the query\nknowledge base ( QKB1):\nand its relevant counterpart predicates in the given knowledge\nbase(KB)are:\nT\nhis is a perfect fit. Therefore Simil(QKB1, KB) computes to\n1.\nSecond, M 2T:= (Andreas ;TelekomProject ).) Then, we have the\nquery knowledge base (QKB2):\nand its relevant counterpart predicates in the given knowledge\nbase(KB)are:\nHence, the similarity of the first predicates indicates a\nperfect fit and evaluates to 1 1, but the congruency of\nTelekomProject[hasTopic →KnowledgeManagement] with\nTelekomProject[hasTopic →KnowledgeManagement] ]measures less\nthan 1. The instance match of KnowledgeDiscovery and' metadata={'source': 'Semantic_Web.pdf', 'page': 495}
"
"page_content='496\nKnowledgeManagement returns 1/2 in the given topic hierarchy.\nTherefore, the predicate match returns (1* 1* 1/2)^1/3 ≈0, 79.\nThus, overall ranking of the second result is based on 1/2\n*(1+0,79) = 0,895\nRemarks on semantic ranking. The reader may note some\nbasic properties of the ranking: (i)similarity of knowledge\nbases is an asymmetric measure, (ii)the ontology defines a\nconceptual structure useful for defining similarity, (iii)the\ncore concept for evaluating semantic similarity is cotopy\ndefined by a dedicated hierarchy. The actual computation ofsimilarity depends on which conceptual structures (\ne.g.\nhierarchies like taxonomy, part-whole hierarchies, or topichierarchies) are selected for evaluating conceptual nearness.\nThus, similarity of knowledge bases depends on the view\nselected for the similarity measure.\nRanking of semantic queries using underlying ontological\nstructures is an important means in Order to allow users a\nmore specific view onto the underlying knowledge base. The\nmethod that we propose is based on a few basic principles:\n•Reinterprete the combination of query and results as query\nknowledge bases that may be compared with the explicitly\ngiven information.\n•Give a measure for comparing two knowledge bases, thus\nallowing rankings of query results.' metadata={'source': 'Semantic_Web.pdf', 'page': 496}
"
"page_content='497\nThus, we may improve the interface to the underlying\nstructures without changing the basic architecture. Of course,the reader should be aware that our measure may produce some\nrankings for results that are hardly comparable. For instance,\nresults may differ slightly because of imbalances in a given\nhierarchy or due to rather random differences of depth of\nbranches. In this case, ranking may perhaps produce results\nthat are not better than unranked ones —but the results will\nnot be any worse either.\n6. Semantic personalization\nPersonalization of web sites might be enabled on different\nlevels likee.g.so-called ”Check-Box Personalization“ and\n”Preference-based Personalization“ ( cf.[FAQ]). Both rely on\nthe interaction between users and the underlying systems and\naim at providing person-specific services and content to\nusers. But they are differing the way systems are tracking a\nuser’s interests to personalize web sites.\nCheck-box personalization offers configuration\npossibilities to users, allowing them to select from a given\nset of services and contents the ones they are looking for.\nContent is presented based on the check boxes marked by users.\nPreference-based personalization keeps track of users access\npatterns in logfiles. E.g.web usage mining tries to make\nsense of the web usage data created by surfers [Srivastava etal., 2000].' metadata={'source': 'Semantic_Web.pdf', 'page': 497}
"
"page_content='498\nConsidering check-box personalization, common systems rely\non the selection of services and specific content areas andfor preference-based personalization on monitoring of user-\nactivities based on the sequence of clicked URLs. Our portal\ndiffers from common systems in offering semantic access. All\nusers who access the web site use the underlying ontology for\nnavigating, browsing and querying. To address check-box\npersonalization users may store personalized\nsemantic\nbookmarks. They rely on the semantic structure provided by the\nunderlying ontology and like common bookmarks they facilitate\naccess to regulary needed information.\nWhile accessing the semantic web site, users leave\nfootprints in form of clicked hyperlinks, but they also leave\na trace of concepts and relations. Every query is composed\nfrom the ontology and (almost) every navigation follows\nunderlying ontological structures. To enable preference-based\npersonalization, we upgrade our logfiles with semantics to\nsemantic logfiles . The user habits may then be semantically\ntracked, analyzed and used for personalization, general\noptimization of the web site and especially evaluation and\nmaintenance of the ontology .\n6.1.Semanticbookmarks\nThe AIFB mainly targets students and researchers. Both\ngroups typically have different foci. Students tend to look\nfor teaching-related topics and researchers tend to look for' metadata={'source': 'Semantic_Web.pdf', 'page': 498}
"
"page_content='499\nresearch-related topics. To satisfy their needs, we provide\nlinks to both areas from the starting page of our web site.But users sometimes need to have persistent pointers to\nspecific information. Navigating and browsing through our web\nsite as well as posting queries relies on the underlying\nontology, therefore we have introduced\nsemantic bookmarks .\nBecause many navigation facilities of our web site like\ne.g.hyperlinks and listboxes are created on the fly by our\ninference engine, semantic bookmarks basically contain\npredefined8query formulas. Upon selection bookmarks send their\nqueries to the inference engine that reproduces theinformation shown to the user during his bookmarking process.\nDue to the fact that bookmarks contain query formulas they\nalways produce most recent\ni.e.updated results. Semantic\nbookmarks are modeled in the ontology ( cf.(16)Bookmark),\ntheir instantiations are stored in the knowledge warehouse\n(cf.(16)Bookmark 1):\nIn addition to the QUERYformula, bookmarks contain\nseveral options for personalization. First, users may give a\nspecific NAME for their bookmarks to describe the\nfunctionality. Second, they may choose a STYLESHEET from a\ngiven set of stylesheets for result presentation. Finally,' metadata={'source': 'Semantic_Web.pdf', 'page': 499}
"
"page_content='500\nsemantic bookmarks might be marked as a STARTbookmark, so it\nwill be executed as soon as users enter the starting page ofour web site. This allows users to have quickest possible\naccess to often needed informations. Every user may execute,\nedit and delete his own semantic bookmarks — identified by the\nrelation OWNER.\nIn order to deliver personalized information the system\nneeds to recognize users. We implemented a very simple\nontology-based user administration allowing users to be\nrecognized by their user-id. Therefore our ontology was\nexpanded by user-specific concepts and relations (like User,ID, NAME etc.). Our system generates for each user an\nidentifying id which is stored together with all relevant user\ninformation in our knowledge warehouse. For convenience, user-\nids are also stored locally in cookies so that users are\nrecognized automatically by the id stored on their computer.\nPossible pitfalls of such a simple approach are\ne.g.multi-\nuser access from single computers or single-user access frommultiple computers.\n6.2.Semanticlogfiles\nAgents interact with our system through a web server ( cf.\nFigure 11.5) who logs every request ( viz.http-requests) into\nlogfiles. Queries are processed to our inference engine\nthrough embedding query formulas into hyperlinks. Therefore\nall semantics are contained within logged hyperlinks.' metadata={'source': 'Semantic_Web.pdf', 'page': 500}
"
"page_content='501\nTypically web servers track the following items: Cookie,\nIP number,Timestamp,Request. We take advantage of the\ninformation given. Cookies help to identify authenticated\nusers and IP numbers in combination with timestamps help to\ndistinguish non-authenticated users. Finally, the request\nstring contains all concepts and relation of the ontology a\nuser is interested in — due to the nature9of our ontology-\nenabled querying, navigation and browsing.\nCurrently we are working on transforming these logfiles\ninto appropriate formats and to apply data mining methods and\ntools (like association rules). We are interested inanswering,\ne.g., the following questions:\n•Does a single authenticated user have a special interest in\na certain part of the ontology?\n•Are there user groups, having similar interests?\n•Which parts of the ontology are relevant to users, which\nones are not?\nAnswering these questions will help us to optimize our\nsystem in iterative steps, e.g., to enable ranked index lists\nproviding each user with personalized shortcuts. Especiallythe last question is important for evaluation and maintenance\nof the ontology (\ncf.Section 3). To keep an ontology updated\none might want to expand highly accessed parts, shrink rarely\naccessed parts and finally delete unaccessed parts. These\ntopics are still ongoing research.' metadata={'source': 'Semantic_Web.pdf', 'page': 501}
"
"page_content='502\n7. RDF outside — from a semantic web site to the\nSemantic Web\nIn the preceding sections we have described the\ndevelopment and the underlying techniques of the AIFB semantic\nweb site. Having developed the core application we decided\nthat RDF-capable software agents should be able to understand\nthe content of application. Therefore, we have built anautomatic RDF GENERATOR that dynamically generates RDF\nstatements on each of the static and dynamic pages of the\nsemantic knowledge portal. Our current AIFB intranet\napplication is “Semantic Web-ized” using RDF facts\ninstantiated and defined according to the underlying AIFB\nontology. On top of this generated and formally represented\nmetadata, there is the RDF C\nRAWLER, a tool that gathers\ninterconnected fragments of RDF from the internet.\n7.1.RDFGENERATOR—anexample\nThe RDFMAKERestablished in the O NTOBROKERframework (cf.\n[Decker et al., 1999]) was a starting point for building theRDF G\nENERATOR. The idea of RDFM AKERwas, that from O NTOBROKER’S\ninternal data base, RDF statements are generated.\nRDF GENERATORfollows a similar approach and extends the\nprincipal ideas. In a first step it generates an RDF(S)-based\nontology that is stored on a specific XML namespace, e.g.in\nour concrete application' metadata={'source': 'Semantic_Web.pdf', 'page': 502}
"
"page_content='503\nhttp://ontobroker.semanticweb.org/ontologies/aifb-onto-2001-\n01-01.rdfs. Additionally, it queries the knowledge warehouse.Data,\ne.g.for a person, is checked for consistency, and, if\npossible, completed by applying the given F-Logic rules. We\nhere give a short example of what type of data may be\ngenerated and stored on a specific homepage of a researcher:\n<rdf:RDF\nxmlns:rdf = ""http://www.w3.org/1999/02/22-rdf-syntax-ns#""\nxmlns:aifb = ""http://ontobroker.semanticweb.org/aifb-2001-01-\n01.rdfs#"">\n<aifb:PhDStudent rdf:ID=""person:ama""><aifb:name>Alexander Maedche</aifb:name>\n<aifb:email>ama@aifb.uni-karlsruhe.de</aifb:email>\n<aifb:phone>+49-(0)721-608 6558</aifb:phone>\n<aifb:fax>+49-(0)721-608 6580</aifb:fax>\n<aifb:homepage>http://www.aifb.uni-\nkarlsruhe.de/WBS/ama</aifb:homepage>\n<aifb:supervisorrdf:resource = ""http://www.aifb.uni-\nkarlsruhe.de/Staff/studer.html#person:rst""/>\n</aifb:PhDStudent>\n</rdf:RDF>\nRDF G\nENERATORis a configurable tool, in some cases one may\nwant to use inferences to generate materialized, complete RDF\ndescriptions on a home page, in other cases one may want to\ngenerate only ground facts of RDF. Therefore, RDF G ENERATOR' metadata={'source': 'Semantic_Web.pdf', 'page': 503}
"
"page_content='504\nallows to switch axioms on and off in order to adopt the\ngeneration of results to varying needs.\n7.2.RDFCRAWLER\nThe RDF CRAWLER10is a tool which downloads interconnected\nfragments of RDF from the internet and builds a knowledge base\nfrom this data. Building an external knowledge base for thewhole AIFB (its researcher, its projects, its publications, .\n. . ) becomes easy using the RDF CRAWLER and machine-\nprocessable RDF data currently defined on AIFB‘s web. We here\nshortly describe the underlying techniques of our RDF C\nRAWLER\nand the process of building a knowledge base. In general, RDFdata may appear in Web documents in several ways. We\ndistinguish between pure RDF (files that have an extension\nlike “*.rdf”), RDF embedded in HTML and RDF embedded in XML.\nOur RDF C\nRAWLERuses RDF-API11that can deal with different\nembeddings of RDF described above.\nOne problem of crawling is the applied filtering\nmechanism: Baseline crawlers are typically restricted by a\ngiven depth value. Recently several new research work on so-\ncalledfocused crawling has been published ( e.g. cf.\n[Chakrabarti, van den Berg, & Dom, 1999]). In their approach,they use a set of predefined documents associated with topicsin a Yahoo like taxonomy to built a focused crawler. Two\nhypertext mining algorithms constitute the core of their\napproach. A classifier evaluates the relevance of a hypertext' metadata={'source': 'Semantic_Web.pdf', 'page': 504}
"
"page_content='505\ndocument with respect to the focus topics and a distiller\nidentifies hypertext nodes that are good access points to manyrelevant pages within a few links. In contrast, our approach\nuses ontological background knowledge to judge the relevance\nof each page. If a page is highly relevant, the crawler may\nfollow the links on the particular web site. If RDF data is\navailable on a page, we judge relevance with respect to the\nquantity and quality of available data and by the existing\nURI’s.\nExample: Erdoes numbers .As mentioned above we here give a\nsmall example of a nice application that may be easily built\nusing RDF metadata taken from AIFB using the RDF C RAWLER. The\nso-calledErdoes numbers have been a part of the folklore of\nmathematicians throughout the world for many years12.\nScientific papers are frequently published with co-\nauthors. Based on information about collaboration one may\ncompute the Erdoes number (denoted PE (R) )) for a researcher R.\nIn the AIFB web site the RDF-based metadata allows for\ncomputing estimates of Paul Erdoes numbers of AIFB members.\nThe numbers are defined recursively:\n1.PE(R)=0,ifRisPaulErdoes\n2.PE(R) = min{PE(R1) + 1} else, whereR1varies over the set of all\nresearchers who have collaborated with R, i.e.have written a\nscientificpapertogether.\nTo put this into work, we need lists of publications\nannotated with RDF facts. The lists may be automatically' metadata={'source': 'Semantic_Web.pdf', 'page': 505}
"
"page_content='506\ngenerated by the RDF G ENERATOR. Based on the RDF facts one may\ncrawl relevant information into a central knowledge base andcompute these numbers from the data.\n8. Related work\nThis section positions our work in the context of existing\nweb portals and also relates our work to other basic methods\nand tools that are or could be deployed for the construction\nof community web portals, especially to related work in theareas of personalization and semantic ranking of query\nresults.\nRelated work on Knowledge Portals. One of the well-\nestablished web portals on the web is Yahoo13.In contrast to\nour approach Yahoo only utilizes a very light-weight ontology\nthat solely consists of categories arranged in a hierarchical\nmanner. Yahoo offers keyword search (local to a selected topic\nor global) in addition to hierarchical navigation, but is only\nable to retrieve complete documents, i.e.it is not able to\nanswer queries concerning the contents of documents, not to\nmention to combine facts being found in different documents or\nto include facts that could be derived through ontological\naxioms. Personalization is limited to check-box\npersonalization. We get rid of these shortcomings since our\nportal is built upon a rich ontology enabling the portal to\ngive integrated answers to queries. Furthermore, our semantic' metadata={'source': 'Semantic_Web.pdf', 'page': 506}
"
"page_content='507\npersonalization features provide more flexible means for\nadapting the portal to the specific needs of its users.\nA portal that is specialized for a scientific community\nhas been built by the Math-Net project [Dalitz, Gr¨otschel, &\nLügger, 1997]. At http://www.math-net.de/ the portal for the\n(German) mathematics community is installed that makes\ndistributed information from several mathematical departments\navailable. This information is accompanied by meta-data\naccording to the Dublin Core14Standard [Weibel et al., 1998].\nThe Dublin Core element “Subject” is used to classify\nresources as conferences, as research groups, as preprintsetc. A finer classification (\ne.g.via attributes) is not\npossible except for instances of the publication category.\nHere the common MSC-Classification15is used that resembles a\nlight-weight ontology of the field of mathematics. With\nrespect to our approach Math-Net lacks a rich ontology that\ncould enhance the quality of search results (esp. via\ninferencing), and the smooth connection to the Semantic Webworld that is provided by our RDF generator.\nThe Ontobroker project [Decker et al., 1999] lays the\ntechnological foundations for the AIFB portal. On top of\nOntobroker the portal has been built and organizational\nstructures for developing and maintaining it have been\nestablished. Therefore, we compare our system against\napproaches that are similar to Ontobroker.' metadata={'source': 'Semantic_Web.pdf', 'page': 507}
"
"page_content='508\nThe approach closest to Ontobroker is SHOE [Heflin &\nHendler, 2000]. In SHOE, HTML pages are annotated viaontologies to support information retrieval based on semantic\ninformation. Besides the use of ontologies and the annotation\nof web pages the underlying philosophy of both systems differs\nsignificantly: SHOE uses description logic as its basic\nrepresentation formalism, but it offers only very limited\ninferencing capabilities. Ontobroker relies on Frame-Logic and\nsupports complex inferencing for query answering. Furthermore,\nthe SHOE search tool neither provides means for a semantic\nranking of query results nor for a semantic personalizationfeature. A more detailed comparison to other portal approaches\nand underlying methods may be found in [Staab et al., 2000].\nRelated work on Personalization. Personalization is a\nfeature of portals that attracts more and more interest, both\nfrom a research as well as from a commercial point of view. In\ncontrast to our semantic personalization approach that\nexploits the conceptualization as offered by the ontology andthe inferencing capabilities as provided by our ontobroker\ncomponent, preference-based personalization approaches\ntypically rely on some notion of web mining exploiting the\ncontent of hypertext documents (web content mining), analyzing\nthe hypertext links structure (web structure mining) or\nserver/browser logs (web usage mining) [Kosala & Blockeel,\n2000].\nI.e., the organization and presentation of the web site\nmight be optimized over time based on the analysis of such' metadata={'source': 'Semantic_Web.pdf', 'page': 508}
"
"page_content='509\nlogfiles. While users are accessing the web sites, their\nhabits are compared to previous users’ behaviors to offer thempersonalized content like\ne.g.ranked index-lists ( cf.\n[Perkowitz & Etzioni, 1999]).\nFrom a marketing point of view the analysis of customer\nbehaviour might be used to relate the interaction of customers\nwith the web site to aspects that are important for customer\nrelationship management. E.g., Easyminer [Anand et al., 2000]\nis a web intelligence tool that allows to analyze the customer\nbehaviour with respect to aspects like the clicks-to-close\nvalue,i.e.how easily customers can find the information they\nare interested in and how this value can be improved through\npersonalization. However, in contrast to our semantic\npersonalization approach the data mining algorithms used in\nEasyminer are analyzing the syntactical link structures.\nRelated work on Semantic Similarity. Since our semantic\nranking is based on the comparison of the query knowledge base\nwith the given ontology and knowledge base, we relate our workto the comparison of ontological structures and knowledge\nbases (covering the same domain) and to measuring the\nsimilarity between concepts in a hierarchy. Although there has\nbeen a long discussion in the literature about evaluating\nknowledge-bases [Menzis, 1998], we have not found any\ndiscussion about comparing two knowledge bases covering the\nsame domain that corresponds to our semantic ranking approach.\nSimilarity measures for ontological structures have been' metadata={'source': 'Semantic_Web.pdf', 'page': 509}
"
"page_content='510\ninvestigated in areas like cognitive science, databases or\nknowledge engineering ( cf. e.g., [Rada et al., 1989], [Resnik,\n1995] , [Richardson, Smeaton, & Murphy, 1994], [Hovy, 1998]).\nHowever, all these approaches are restricted to similarity\nmeasures between lexical entries, concepts, and template slots\nwithin one ontology.\nClosest to our measure of similarity is work in the NLP\ncommunity, named semantic similarity [Resnik, 1995] which\nrefers to similarity between two concepts in a isA-taxonomy\nsuch as the WordNet or CYC upper ontology. Our approach\ndiffers in two main aspect from this notion of similarity:Firstly, our similarity measure is applicable to a hierarchy\nwhich may, but not need be a taxonomy and secondly it is\ntaking into account not only commonalties but also differences\nbetween the items being compared, expressing both in semantic-\ncotopy terms. This second property enables the measuring of\nself-similarity and subclass-relationship similarity, which\nare crucial for comparing results derived from the inferencingprocesses, that are executed in the background.\nConceptually, instead of measuring similarity between\nisolated terms (words), that does not take into account the\nrelationship among word senses that matters, we measure\nsimilarity between “words in context”, by measuring similarity\nbetween Object-Attribute-Value pairs, where each term\ncorresponds to a concept in the ontology. This enables us to\nexploit the ontological background knowledge (axioms and' metadata={'source': 'Semantic_Web.pdf', 'page': 510}
"
"page_content='511\nrelations between concepts) in measuring the similarity, which\nexpands our approach to a methodology for comparing knowledgebases.\nFrom our point of view, our community portal system is\nrather unique with respect to the collection of methods used\nand the functionality provided. We have extended our community\nportal approach that provides flexible means for providing,\nintegrating and accessing information [Staab et al., 2000] by\nsemantic personalization features, semantic ranking of\ngenerated answers and a smooth integration with the evolving\nSemantic Web. All these methods are integrated into oneuniform system environment, the SEAL framework.\nConclusions\nIn this paper we have shown our comprehensive approach\nSEAL for building semantic portals. In particular, we have\nfocused on three issues.\nFirst, we have considered the ontological foundation of\nSEAL and the methodological aspects of building ontologies for\nknowledge systems. There, we have made the experience that\nthere are many big open issues that have hardly been dealt\nwith so far. In particular, the step of formalizing the\nontology raises very principal problems. The issue of where to\nput relevant concepts, viz.Into the ontology vs.into the\nknowledge base, is an important one that deeply affectsorganization and application. However, there exist no' metadata={'source': 'Semantic_Web.pdf', 'page': 511}
"
"page_content='512\ncorresponding methodological guidelines to base the decision\nupon so far. For instance, we have given the example ontologyand knowledge base in (1) and (2). Using description logics\nterminology, we have equated the ontology with the “T-Box” and\nwe have put the topic hierachy into the knowledge base (“A-\nBox”). An alternative could have been to formalize the topic\nhierarchy as an isA-hierarchy, which however it isn’t and put\nit into the T-Box. We believe that both alternatives exhibit\nan internal fault,\nviz.the ontology should not be equated\nwith the T-Box, but rather should its scope be independent\nfrom an actual formalization with particular logicalstatements. Its scope should to a large extent depend on soft\nissues, like “Who updates a concept?” and “How often does a\nconcept change?” such as already indicated in Table 1.\nSecond, we have described the general architecture of the\nSEAL approach, which is also used for our real-world case\nstudy, the AIFB web site. The architecture integrates a number\nof components that we have also used in other applications,like Ontobroker, navigation or query module.\nThird, we have extended our semantic modules to include a\nlarger diversity of intelligent means for accessing the web\nsite,\nviz.semantic ranking, personalization and machine\naccess by crawling. Thus, we have shown a comprehensive\napproach to meet many of the challenges put forth in\n[Perkowitz & Etzioni, 1997].' metadata={'source': 'Semantic_Web.pdf', 'page': 512}
"
"page_content='513\nFor the future, we see a number of new important topics\nappearing on the horizon. For instance, we consider approachesfor ontology learning [Maedche & Staab, 2001] in order to\nsemi-automatically adapt to changes in the world and to\nfacilitate the engineering of ontologies. Currently, we work\non providing intelligent means for providing semantic\ninformation,\ni.e.we elaborate on a semantic annotation\nframework that balances between manual provisioning from\nlegacy texts ( e.g.web pages) and information extraction\n[Staab, Maedche, & Handschuh, 2001]. Given a particular\nconceptualization, we envision that one wants to be able touse a multitude of different inference engine taking advantage\nof different inferencing capabilities (temporal, nonmonotonic,\nhigh scalability, etc.). Then, however, one needs means to\nchange from one representation paradigm to the next [Staab,\nErdmann, & Maedche, 2001] .\nFinally, we envision that once semantic web sites are\nwidely available, their automatic exploitation may be broughtto new levels. Semantic web mining considers the level of\nmining web site structures, web site content, and web site\nusage on a semantic rather than at a syntactic level yielding\nnew possibilities,\ne.g.for intelligent navigation,\npersonalization, or summarization, to name but a few\nobjectives for semantic web sites [Hotho & Stumme, 2001].' metadata={'source': 'Semantic_Web.pdf', 'page': 513}
"
"page_content='514\nAcknowledgements.\nThe research presented in this paper would not have been\npossible without our colleagues and students at the Institute\nAIFB, University of Karlsruhe, and Ontoprise GmbH. We thank\nJürgen Angele, Kalvis Apsitis (now: RITI Riga Information\nTechnology Institute), Nils Braeunlich, Stefan Decker (now:\nStanford University), Michael Erdmann, Dieter Fensel (now: VU\nAmsterdam), Siegfried Handschuh, Andreas Hotho, Mika Maier-Collin, Daniel Oberle, and Hans-Peter Schnurr. Research for\nthis paper was partially financed by Ontoprise GmbH,\nKarlsruhe, Germany, by US Air Force in the DARPA DAML project\n“OntoAgents”, by EU in the IST-1999-10132 project “On-To-\nKnowledge” and by BMBF in the project “GETESS” (01IN901C0).\nReferences\n[Anand et al., 2000] S.S. Anand, M. Baumgarten, A. Buechner, and M. Mulvenna. Gaining insights into web\ncustomers using web intelligence. In Proceedings of ECAI’2000, pages 681–685, Berlin, Germany,\nAugust2000.\n[Angele et al., 2000] J. Angele, H.-P. Schnurr, S. Staab, and R. Studer. The times they are a-changin’ —the\ncorporate history analyzer. In D. Mahling and U. Reimer, editors, Proceedings of the Third International\nConference on Practical Aspects of Knowledge Management. Basel, Switzerland, October 30-31, 2000,2000.http://www.research.swisslife.ch/pakm2000/.\n[Benjamins & Fensel, 1998] V. Richard Benjamins and Dieter Fensel. Community is knowledge! (KA)\n2.I n\nProceedings of the 11th Workshop on Knowledge Acquisition, Modeling, and Management (KAW ’98),\nBanff, Canada, April1998, 1998.\n[Chakrabarti, van den Berg, & Dom, 1999] S. Chakrabarti, M. van den Berg, and B. Dom. Focused crawling: a\nnewapproachto topicspecific web resource discovery. InProceedingsofWWW-8, 1999.' metadata={'source': 'Semantic_Web.pdf', 'page': 514}
"
"page_content='515\n[Dalitz, Gr¨otschel, & Lügger, 1997] W. Dalitz, M. Gr¨otschel, and J. Lügger. Information Services for\nMathematics in the Internet (Math-Net). In A. Sydow, editor, Proceedings of the 15th IMACS WorldCongress on Scientific Computation: Modelling and Applied Mathematics, volume 4 of Artificial\nIntelligence and Computer Science, pages773–778. Wissenschaftund TechnikVerlag, 1997.\n[Decker et al., 1999] S. Decker, M. Erdmann, D. Fensel, and R. Studer. Ontobroker: Ontology Based Access to\nDistributed and Semi-Structured Information. In R. Meersman et al., editors, Database Semantics:\nSemantic IssuesinMultimedia Systems, pages351–369. Kluwer Academic Publisher, 1999.\n[Decker et al., 2000] S. Decker, D. Fensel, F. van Harmelen, I. Horrocks, S. Melnik, M. Klein, and J. Broekstra.\nKnowledge representation on the web. In Proceedings of the 2000 International Workshop on Description\nLogics(DL2000), Aachen, Germany, 2000.\n[Fensel et al., 1998] D. Fensel, S. Decker, M. Erdmann, and R. Studer. Ontobroker: The Very High Idea. In\nProceedings of the 11th International Flairs Conference (FLAIRS-98), Sanibel Island, Florida, May,\n1998.\n[Gomez-Perez, 1996] A. Gomez-Perez. A framework to verify knowledge sharing technology. Expert Systems\nwith Application, 11(4):519–529, 1996.\n[Guarino & Welty, 2000] N. Guarino and C. Welty. Identity, unity, and individuality: Towards a formal toolkit\nfor ontological analysis. Proceedings of ECAI-2000, August 2000. available fromhttp://www.ladseb.pd.cnr.it/infor/ontology/Papers/OntologyPapers.html.\n[Heflin & Hendler, 2000] J. Heflin and J. Hendler. Searching the web with shoe. In Artificial Intelligence for\nWeb Search. Papersfromthe AAAI Workshop. WS-00-01, pages35–40. AAAI Press, 2000.\n[Hotho & Stumme, 2001] A. Hotho and G. Stumme, editors. Semantic Web Mining — Workshop at ECML-\n2001 /PKDD-2001,Freiburg, Germany, 2001.\n[Hovy, 1998] E. Hovy. Combining and standardizing large-scale, practical ontologies for machine translation\nand other uses. InProc. ofthe FirstInt. Conf. onLanguage Resourcesand Evaluation(LREC), 1998.\n[Kifer, Lausen, & Wu, 1995] M. Kifer, G. Lausen, and J. Wu. Logical Foundations of Object-Oriented and\nFrame-Based Languages. Journalofthe ACM, 42:741–843, 1995.\n[Kosala & Blockeel, 2000] R. Kosala and H. Blockeel. Web mining reseach: A survey. SIGKDD Explorations,\n2(1):1–15,2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 515}
"
"page_content='516\n[Maedche & Staab, 2000] A. Maedche and S. Staab. Discovering conceptual relations from text. In Proceedings\nofECAI-2000. IOSPress, Amsterdam, 2000.\n[Maedche & Staab, 2001] A. Maedche and S. Staab. Ontology learning for the semantic web. IEEE Intelligent\nSystems,16(2),2001.\n[Menzis, 1998] T.J. Menzis. Knowledge maintenance: The state of the art. The Knowledge Engineering Review,\n10(2), 1998.\n[Miller, 1995] G. Miller.Wordnet:Alexicaldatabase for English. CACM, 38(11):39–41, 1995.\n[Odgen &Richards, 1993] C.K. Odgenand I.A. Richards. The Meaningof Meaning: A Studyof the Influence of\nLanguage upon Thought and of the Science of Symbolism. Routledge & Kegan Paul Ltd., London, 10\nedition, 1923.\n[Perkowitz & Etzioni, 1997] M. Perkowitz and O. Etzioni. Adaptive web sites: an AI challenge. In Proceedings\nof the 15thInternational Joint Conference on AI (IJCAI-97), pages 16–23, Nagoya, Japan, August 23-29\n1997.\n[Perkowitz & Etzioni, 1999] M. Perkowitz and O. Etzioni. Adaptive web sites: Conceptual cluster mining. In\nProceedingsofthe 16thInternationalJointConference on AI (IJCAI-99), pages264–269,1999.\n[FAQ] personalization.com. Frequently asked questions: Are there different types of personalization?\nhttp://www.personalization.com/basics/faq/faq2.asp observed atFeb 14, 2001, 2001.\n[Rada et al., 1989] R. Rada, H. Mili, E. Bicknell, and M. Blettner. Development and application of a metric on\nsemantic nets. IEEE TransactionsonSystems, Man, and Cybernetics, 19(1), 1989.\n[Resnik, 1995] P. Resnik. Knowledge maintenance: The state of the art. In Proceedings of IJCAI-95, pages 448–\n453, Montreal, Canada, 1995.\n[Richardson, Smeaton, & Murphy, 1994] R. Richardson, A. F. Smeaton, and J. Murphy. Using wordnet as\nknowledge base for measuring semantic similarity between words. Technical Report CA-1294, Dublin\nCityUniversity, SchoolofComputer Applications, 1994.\n[Sowa, 1992] J.F. Sowa. Conceptual Structures: Information Processing in Mind and Machine. Addison-\nWesley, 1992.\n[Srivastava et al., 2000] J. Srivastava, R. Cooley, M. Deshpande, and P. Tan. Web usage mining: Discovery and\napplicationsofusage patternsfromweb data. SIGKDD Explorations, 1(2):12–23, 2000.' metadata={'source': 'Semantic_Web.pdf', 'page': 516}
"
"page_content='517\n[Staab et al., 2000] S. Staab, J. Angele, S. Decker, M. Erdmann, A. Hotho, A. Maedche, H.-P. Schnurr, R.\nStuder, and Y. Sure. Semantic community web portals. Proc. of WWW9 / Computer Networks, 33(1-6):473–491, 2000.\n[Staab, Erdmann, & Maedche, 2001] S. Staab, M. Erdmann, and A. Maedche. Semantic patterns. Technical\nreport,Institute AIFB, UniversityofKarlsruhe, 2001.\n[Staab & Maedche, 2001] S. Staab and A. Maedche. Knowledge portals — ontologies at work. AI Magazine,\n21(2), Summer 2001.\n[Staab, Maedche, & Handschuh, 2001] S. Staab, A. Maedche, and S. Handschuh. An annotation framework for\nthe semantic web. In Proceedings of the First Workshop on Multimedia Annotation, Tokyo, Japan,\nJanuary30-31, 2001,2001.\n[Staab et al., 2001] S. Staab, H.-P. Schnurr, R. Studer, and Y. Sure. Knowledge processes and ontologies. IEEE\nIntelligentSystems, 16(1), 2001.\n[Sure, Maedche, & Staab, 2000] Y. Sure, A. Maedche, and S. Staab. Leveraging corporate skill knowledge -\nFromProPer to OntoProper. In D. Mahling and U. Reimer, editors, Proceedings of the Third InternationalConference on Practical Aspects of Knowledge Management. Basel, Switzerland, October 30-31, 2000,\n2000.http://www.research.swisslife.ch/pakm2000/.\n[Uschold & Gruninger, 1996] M. Uschold and M. Gruninger. Ontologies: Principles, methods and applications.\nKnowledge Sharingand Review, 11(2),June 1996.\n[Weibel et al., 1998] S. Weibel, J. Kunze, C. Lagoze, and M. Wolf. Dublin Core Metadata for Resource\nDiscovery. Number 2413 inIETF.The InternetSociety, September 1998.\nFootnotes\n1Institute AIFB, University of Karlsruhe, D-76128 Karlsruhe, Germany, http://www.aifb.uni-karlsruhe.de/WBS ,\nmailto: {ama, sst, nst, rst, ysu}@aifb.uni-karlsruhe.de\n2Ontoprise GmbH, Haid-und-NeuStraße 7, 76131 Karlsruhe, Germany, http://www.ontoprise.de\n3ZI Research Center for Information Technologies, Haid-und-Neu Straße 10-14, 76131 Karlsruhe, Germany,\nhttp://www.fzi.de/wim\n4ere at the conceptual level, we do not distinguishbetweenrelationsand attributes.\n5ctive server pages vs.active service providers.' metadata={'source': 'Semantic_Web.pdf', 'page': 517}
"
"page_content='518\n6“SouthEast Asian Linguistics Conference” vs.“Conference on Simulated Evolution and Learning” vs.“Society\nfor Evolutionary Analysis in Law” vs.“Society for Effective Affective Learning” vs.some other dozens\n—several of whichare indeed relevant inour institute.\n7Negationrequiresspecial treatment.\n8Experts mightstoreanypossiblequeryinto bookmarksbymanuallyeditingthequeries.\n9Our system is based on java servlets and uses URL-encoded queries.\n10RDF CRAWLERis freelyavailable for download at http://ontobroker.semanticweb.org/rdfcrawler.\n11RDF-API isfreelyavailable at http://www-db.stanford.edu/˜melnik/rdf/api.html.\n12The interested reader may have a look at http://www.oakland.edu/˜grossman/erdoshp.html for an overall\nprojectoverview.\n13http://www.yahoo.com\n14http://www.purl.org/dc\n15cf.Mathematical Subject Classification; http://www.ams.org/msc/' metadata={'source': 'Semantic_Web.pdf', 'page': 518}
"
"page_content='III.Dynamic aspect' metadata={'source': 'Semantic_Web.pdf', 'page': 519}
"
"page_content='520\n12. Semantic Gadgets: Ubiquitous Computing Meets the Semantic\nWeb\nOra Lassila1& Mark Adler1\n1. Introduction\nUbiquitous computing is an emerging paradigm of personal\ncomputing, characterized by the shift from dedicated computing\nmachinery (that requires the user’s attention e.g., PCs) to\npervasive computing capabilities embedded in our everyday\nenvironments [Weiser, 1991], [Weiser, 1993]. Characteristic toubiquitous computing are small, handheld, wireless computing\ndevices. The pervasiveness and the wireless nature of devices\nrequire network architectures to support automatic,\nad hoc\nconfiguration [e.g., Huitema, 1998]. An additional reason fordevelopment of automatic configuration is that this technology\nis aimed at ordinary consumers.\nA key technology of true ad hoc networks is\nservice\ndiscovery, functionality by which ""services"" (i.e., functions\noffered by various devices on an ad hocnetwork) can be\ndescribed, advertised, and discovered by others. Several\nframeworks and formalisms for service discovery and capability\ndescription have already emerged. Examples of these include\nSun’s ""Jini"" and Microsoft’s Universal Plug and Play (UPnP)\n[e.g., Richard, 2000] as means of describing services and\ninvoking them, as well as World Wide Web Consortium’s (W3C)' metadata={'source': 'Semantic_Web.pdf', 'page': 520}
"
"page_content='521\nComposite Capability/Preference Profile (CC/PP) [Reynolds et\nal., 2000] as a means of describing device characteristics.\nAll of the current service discovery and capability\ndescription mechanisms are based on ad hocrepresentation\nschemes and rely heavily on standardization (i.e., on a priori\nidentification of all those things one would want tocommunicate or discuss). In addition, ""Jini"" relies on the\nJava object system and instance serialization, and UPnP uses\nXML and its own flavor of HTTP.\nUPnP, for example, aims to render a user interface for\nsome device (on another device) and facilitate the remotecontrol by a human via the second device. In contrast, our\napproach aims to accomplish this task without the human in the\nloop. In other words, the ultimate goal is the discovery and\nutilization of services by other automated systems without\nhuman guidance or intervention, thus enabling the automatic\nformation of\ndevice coalitions through this mechanism. We call\nthese devices, capable of semantic discovery and coalitionformation,\nsemantic gadgets .\n2. About Representation\nVarious Artificial Intelligence technologies, particularly\nfrom the area of Knowledge Representation (KR) will be useful\nand necessary to build ""richer"" discovery mechanisms. Given\nthat we are dealing with networked devices and distributedsoftware systems, the notion of the\nsemantic web[e.g.,' metadata={'source': 'Semantic_Web.pdf', 'page': 521}
"
"page_content='522\nFensel, 2000] fits well in this context. Technically speaking,\nby semantic web we mean the emerging knowledge representationformalism DAML (DARPA Agent Markup Language, [Hendler &\nMcGuinness, 2000]) and its foundation, W3C’s RDF (Resource\nDescription Framework, [Lassila, 1998], [Lassila & Swick,\n1998], [Brickley & Guha, 1999]). In broad terms, the semantic\nweb encompasses efforts to populate the Web with content which\nhas formal semantics; thus the semantic web will enable\nautomated agents to reason about Web content, and produce an\nintelligent response to unforeseen situations. Our vision is\nto overlay the semantic web on a ubiquitous computingenvironment, making it possible to represent and interlink\ndevices, their capabilities, and the functionality they offer.\nRDF is the W3C’s standard for metadata, but it extends the\ntraditional notion by allowing any ""resource"" on the WWW to be\ndescribed. Because RDF uses Uniform Resource Identifiers\n(URIs) for addressing, it can even describe things that are\nnot on the Web as long as they have a URI. RDF serves as thefoundation for DAML, an emerging, more expressive KR language,\nsuitable for building ontologies. We foresee that RDF will\ndescribe services and device functionality for the purposes of\ndiscovery. Just as the success of the deployment of the\nsemantic web will largely depend on whether useful ontologies\nwill emerge, so will discovery services benefit from\nmechanisms that allow shared agreements about vocabularies for\nknowledge representation. Why is this important? Sharing' metadata={'source': 'Semantic_Web.pdf', 'page': 522}
"
"page_content='523\nvocabularies and models allows automated interoperability;\ngiven a base ontology shared by two agents, each agent canextend the base ontology while achieving\npartial\nunderstanding. A base ontology is analogous to OOP systems,\nwhere a base class defines ""common"" functionality.\nTo simply describe devices and functionality, frame-based\nrepresentation, with its close kinship to more widely accepted\ntechnologies such as object-oriented modeling and programming,\nmay be the right paradigm of KR [Lassila & McGuinness, 2001].\nThe concept of a framewas proposed in the 1970\'s [Minsky,\n1975], andframe systemssubsequently gained ground as basic\ntools for representing knowledge [Fikes & Kehler, 1985],\n[Karp, 1992] ,[Chaudhri et al., 1998]. The idea of a frame\nsystem is simple: A frame represents an object or a concept.\nAttached to the frame is a collection of attributes (slots),\npotentially filled initially with values. When a frame is\nbeing used the values of slots can be altered to make the\nframe correspond to the particular situation at hand. In thecontext of device description one could think of a device as a\nframe, and to represent its characteristics as slots (this, in\nfact, is the approach taken by CC/PP in its use of RDF).\n3. Scenario: Semantic Gadget In a Museum\nTo illustrate how a semantic gadget (e.g., a next\ngeneration personal communicator, subsequently referred to as""SG"") will work, and particularly how it will integrate and' metadata={'source': 'Semantic_Web.pdf', 'page': 523}
"
"page_content='524\ninteroperate with other semantic devices, we have constructed\na hypothetical scenario of gadget usage in an art museuminstrumented with semantic devices and services.\nIn the car:As we approach the art museum, we check the\ndashboard map for parking options. Our museum membership\nentitles us to reduced parking fees at the two lots that are\nhighlighted. A snow storm is predicted; knowing our dislike of\ncleaning snow off the car, the SG suggests parking in the\ngarage instead of parking in the outside lot, even though\nparking in the garage means a longer walk to the entrance and\npaying a slightly higher fee. The gate lifts as we approach,and the dashboard map indicates an available parking spot on\nthe third floor near the exit. We park, grab our mobile SG,\nand head for the stairs as our vehicle shuts off the lights\nand arms the security system. Our SG records the location of\nthe car, and plots our route to the nearest museum entrance.\nIn the museum: As we enter the art museum, our SG\nnegotiates our admission by supplying our membership numberand confirming our reservation for the exhibit in the main\ngallery. Before leaving the lobby, the SG suggests that we\ncheck our coats because the temperature inside the museum is\ntoo warm to wear a coat, and the SG knows how much we dislike\ncarrying our coats. A map on the SG guides us to the coatroom.\nThe gallery is currently near capacity, so our SG recommends a\ndetour through other galleries to see some recent\nimpressionistic acquisitions. A map of the museum with the' metadata={'source': 'Semantic_Web.pdf', 'page': 524}
"
"page_content=""525\nsuggested path appears on the touch screen. As we follow the\npath, a more detailed view appears, with a flashing icon forthe paintings that are of special interest. As we approach a\npainting, additional icons appear on the screen, indicating\navailable information about the artist, the period, details\nabout the museum's acquisition of the painting, and pointers\nto related art works. By clicking on the icons, we obtain the\nunderlying information.\nAfter a pleasant 15-minute diversion strolling through\nseveral galleries, we arrive at the main exhibition and enter\nwithout any delay. The first gallery seems crowded, but the SGsuggests viewing the exhibit in reverse order because we\nprefer to avoid crowded viewing conditions. Using the\nBluetooth-enabled headset, we listen to the museum's\ndescriptions as we stroll through the exhibit. As we make our\nway through the exhibit again on the way to the exit, the SG\nreminds us of several displays that we missed the first time\nwe walked through.\nIn the gift shop: Naturally, one cannot exit without\npassing through the gift shop. Ordinarily, we avoid this\nspending opportunity, but the SG flashes a message reminding\nus that we need a gift for my mother's birthday the following\nweek. Based on her preference for writing notes long hand and\nher love of impressionistic art, the SG suggests purchasing a\nbox of Monet stationery. The SG interacts with the cashier,\nobtains the member discount, charges the purchase to my credit"" metadata={'source': 'Semantic_Web.pdf', 'page': 525}
"
"page_content='526\ncard, and arranges to have the stationery gift-wrapped and\nshipped in time for Mom’s birthday.\nExiting the museum: As we leave the gift shop, the SG\npresents a list of suggested activities: It proposes (1)\nviewing additional art works that are highly correlated to the\npaintings that we spent the most time viewing; (2) attending a\nlecture associated with the exhibit; (3) eating at the museum\nrestaurant; or (4) leaving the museum and going home. We\nchoose the latter, indicating our choice verbally. The SG maps\nour path to exit and return to our car.\nIn the parking garage: As we approach the car, the SG\nunlocks the doors. We plug in the SG to recharge, and the\ndisplay switches to the dashboard screen. Our SG handles the\nparking fee, including our member discount, and we are on our\nway home.\n4. Semantic Discovery\nSemantic gadget technology begins with the discovery of\nfunctionality and services. As mentioned before, a number of\nmechanisms for low-level service discovery have emerged\n(examples include Sun\'s ""Jini"" and Microsoft\'s Universal Plug\nand Play); these mechanisms attack the problem at a syntactic\nlevel, and rely heavily on the standardization of a\npredetermined set of functionality descriptions.\nStandardization, unfortunately, can only take us halfwaytoward our goal of intelligent automated behavior\nvis-a-vis' metadata={'source': 'Semantic_Web.pdf', 'page': 526}
"
"page_content='527\ndiscovery, as our ability to anticipate all possible future\nneeds is limited. The semantic web offers the possibility toelevate the mechanisms of service discovery to a ""semantic""\nlevel. Here a more sophisticated description of functionality\nis possible, and the shared understanding between the consumer\nand the service provider can be reached via the exchange of\nontologies, which provide the necessary vocabulary for a\ndialogue.\nSemanticdiscovery mechanisms will undoubtedly be layered\non top of existing, lower-level services. These services\ninvolvead hocnetworking technologies and other mechanisms\nthat are beyond the scope of this article. It is sufficient to\nstate that physical devices, their functionality and the\nservices they offer, will be abstracted as software agents .\nThese agents will advertise services (if providers) and/or\nwill query for services they need (if consumers). Both the\nadvertisements and the queries will be abstract descriptions\nof functionality (in fact, there is no difference between thetwo, as Sycara has pointed out [Sycara et al., 1999]). Through\na matchmaking process (either by the provider, by the\nconsumer, or by a third party ""matchmaker"") we are able to\nassociate compatible advertisements with queries. The match\nmight be\nperfect(in which case a discovered service will\nexactly meet the need of the consumer) or partial(in which\ncase the consumer might have to combine the service with some\nadditional functionality; it can do this by itself, or – as we' metadata={'source': 'Semantic_Web.pdf', 'page': 527}
"
"page_content='528\nwill demonstrate later – continue to discover the ""missing\npieces"" and finally compose a service that meets its need).\nThe semantic web plays two key roles in the discovery\nprocess. First, semantic web techniques provide a rich\nmechanism for describing functionality. This is important in\nbuilding and exploiting ontologies that describe the concepts\nand vocabulary needed to discuss functionality and services.\nSecond, the semantic web provides a unifying layer of naming\nand distribution – that is, an addressing mechanism that can\nencompass virtual and physical entities, and a way for various\npieces of the ""puzzle"" to reside on various servers, devicesetc. For example, a device description can refer to an\nontology elsewhere, and this ontology in turn can be a\nspecialization or extension of another ontology, again\nsomewhere else. As mentioned earlier, this\npolymorphicnature\nof ontologies and their extensions will allow broader\ninteroperation through partial understanding and agreement.\n5. Contracting the Use of Services\nOnce we have discovered and identified the service (or\nservices) that we want to use, there are several rather\n""bureaucratic"" issues to be dealt with. These include (but are\nnot limited to):\n•assuring security, privacy, and trust,\n•compensating the service provider, and\n•determining execution locus.' metadata={'source': 'Semantic_Web.pdf', 'page': 528}
"
"page_content='529\nThe semantic web promises to be extremely useful when it\ncomes to matters of security, privacy and trust, as these arelargely issues of representation. Generally, the semantic web\nrests heavily on a framework of trust partially constructed\nusing digital signatures and other types of cryptographic\ncertificates. Any agent can expose its reasoning about trust\nusing the same mechanisms by which everything else is\nrepresented on the semantic web. These representations of\nreasoning (we could call them ""proofs"") might themselves be\nexchanged between agents as a means of more ""compelling""\ncommunication (e.g., for access to restricted resources orservices).\nWe anticipate services specific to assisting agents with\ntheir security, privacy, and trust issues (e.g., there might\nbe a service that rates the ""reputation"" of other services:\nreliability, trustworthiness, or some other relevant metric).\nAgain, these services themselves can be discovered and their\nuse contracted.\nGiven a functional security and trust framework, we can\nintroduce the notion of\npayments. This is required for the\npurpose of compensating providers for services rendered.\nGenerally, we anticipate third-party services (which, again,\nare discoverable) to facilitate payments or other types of\ncompensation. Note that we are not trying to imply that\neverything on the semantic web will cost something, but\ncertainly some services will emerge that are not free.' metadata={'source': 'Semantic_Web.pdf', 'page': 529}
"
"page_content='530\nAdvertising (of products and services for humansthis time)\nwill no longer be as viable as a revenue model once automatedagents take care of a large part of the information exchange,\nreasoning and service utilization. The interoperability of\nphysical devices is an objective worth pursuing: the devices\nhave typically already been purchased, and it is unlikely that\na single company will be engaged in the manufacture of all the\ndifferent types of devices that we anticipate will make up the\nweb of semantic gadgets (for example, Nokia makes cellular\nphones and other wireless communication devices but it does\nnot make thermostats; yet the consumer might benefit from awireless device that communicates with a thermostat).\nAs an issue related to security, the determination of\nexecution locus is an interesting issue. A particular service\nmight be executed by the agent offering the service (the\ntypical case), or it might involve\ntrusted mobile code\ndownloaded to the requester’s computational environment, orsome combination thereof. We will assume that this issue isresolved and acknowledge that it is beyond the scope of this\narticle.\n6. Composition of Services\nThe discovery of services based on some description of a\nrequirement of new functionality might result in a partial\nmatch [e.g., Sycara et al., 1999]. In this case the requestercan attempt to provide the missing parts itself or continue' metadata={'source': 'Semantic_Web.pdf', 'page': 530}
"
"page_content='531\nthe discovery process and identify other services. They can\nthen be pieced together to form an aggregate service thatfulfills the original requirement.\nComposition of exact required functionality from partially\nmatched discovered services should be viewed as a process of\ngoal-driven assembly . For example, automated planning or\nconfiguration techniques could be used to achieve the\nassembly. In the context of ubiquitous computing and semantic\ngadgets, contracting the use of services should always be\nviewed as a goal-driven activity because of the ""volatile""\nnature of ubiquitous computing environments (not only can anyof the devices and services fail or be removed from the\nenvironment at any time, but new ones can be added to it; thus\nopportunisticexploitation of services might be beneficial).\nThe goal-driven approach takes information system\ninteroperability beyond what mere standardization or simple\ninterface sharing enables, since it is based on ""deeper""\ndescriptions of service functionality and can be performed ad\nhocand on demand. In fact, the dynamically composed aggregate\nservices are the semantic web’s virtual equivalent of ""real-\nlife""value chains: large quantities of information (i.e.,\n""raw material"") may be obtained, and at each step the value of\ninformation increases and its volume decreases.\nGiven that the services discovered represent actual\n(possibly physical) functionality of devices, aggregate\nservices could be seen as device coalitions . Not only can' metadata={'source': 'Semantic_Web.pdf', 'page': 531}
"
"page_content='532\nindividual devices extend their functionality, but the device\ncoalitions form a type of ""super-devices"".\n7. Museum Scenario Revisited: an Analysis\nThere are several technologies that are required to\nimplement the ubiquitous computing functionality illustrated\nin the art museum scenario:\n•context awareness (including location, outside using GPS,\nand some analogous system inside, as well as additional\nsensory data that might be relevant),\n•service discovery (finding available service providers in a\nwireless network),\n•requirements/preferences (making the user\'s desires known to\nother service providers),\n•user interface design (touch screen, voice input, speech\noutput, etc.),\n•the ability to match requirements to services (including\nplanning functions to compose services to meet the user\'s\nneeds), and\n•machine learning to improve performance over time, and adapt\nto better meet the user\'s needs.\nMany of these technologies fall within the scope of this\narticle. Generally, enabling all this functionality is a rich,\nshared, frame-based representation of the underlying\ninformation.' metadata={'source': 'Semantic_Web.pdf', 'page': 532}
"
"page_content=""533\nIn the car:Within the confines of the car, various\ngadgets can establish a network connection through Bluetooth,or a wired connection such as a recharging port, so the SG can\nuse the dashboard display, the radio speakers, onboard\ncomputing resources, sensors, etc. Today's cars already have\nGPS sensors, maps, and wireless connectivity. In this\nscenario, we combine these tools with the ability to access\nweather reports, and digital wallet features including museum\nmembership information, user preferences, and the ability to\ncommunicate with devices outside the bounds of the car itself\nlike the parking garage tollgate. Finally, recording the car’slocation in the garage requires some location service inside\nthe garage, since GPS is not effective inside a building.\nBeyond the connectivity issues, quite a bit of information\nmust be exchanged to provide this functionality. Location\ninformation is of course one of the keys here, but so are\npersonal preferences and tradeoffs among them, privacy of\npersonal information, and knowledge of typical tasks, such asthe steps involved in parking a car in a public garage, and\nshutting down network connections that are severed when the SG\nis removed from the car's environment.\nIn the museum: In this non-familiar environment, the SG\nmust use its own user interfaces rather than rely on available\nperipherals. In addition, discovery of available services is\nof utmost importance. Here we see examples of services that\ninclude an automated box office, interactions with temperature"" metadata={'source': 'Semantic_Web.pdf', 'page': 533}
"
"page_content=""534\nsensors, crowd capacity services, interior location and map\nservices, coat check services, and especially catalogs ofinterrelated knowledge about art works, and again user\npreferences combined with the monitoring of our progress\nthrough the exhibit. In a ubiquitous computing environment,\nthere might be several possible implementations that could\nprovide this functionality to the user. Privacy concerns may\ndictate that each person’s own SG plays an active role in\ntracking each users progress, rather than allowing sensors in\nthe room to capture one's position over time. The availability\nof required knowledge over network access is again criticalto these functions.\nIn the gift shop: The shopping experience in the\nubiquitous computing world has little to do with the fact that\nthis gift shop is in the museum. Here the SG combines personal\ncalendar information about birthdays, conventions about\nbirthday gifts [Charniak, 1972], personal preference\ninformation (in this case for others, involving trust andrequiring the system to deal with privacy issues), and\ndiscovery of descriptions of available purchase inventory.\nIt is an interesting separate problem to determine what\nthe appropriate context is for the SG to trigger the gift\nreminder. Not every shopping opportunity is appropriate: for\nexample, it would seem out of place for such a reminder to\nappear while shopping for groceries."" metadata={'source': 'Semantic_Web.pdf', 'page': 534}
"
"page_content='535\nThe act of purchasing the item involves the digital wallet\nagain, this time including credit card charges as well asmuseum membership, and the availability of a member discount.\nAn example of service composition is illustrated by the\ncombination of additional services of gift-wrapping and\nshipping (which also requires address lookup capabilities).\nExiting the museum: One of the interesting aspects of this\nscenario is that of context. As we leave the gift shop, we are\nchanging context. We have completed that scenario and are\nready to proceed to the next one. It is important that the SG\ncan determine these transition points as we move through ourdaily tasks.\nAt these transition points, there are multiple knowledge\nsources that influence the possible choices. There are\nadditional activities at the museum, our current frame of\nreference, but there are opportunities outside of this\ncontext. Eating at the museum restaurant is an interesting\ncombination that would satisfy the urge to eat, while leavingavailable additional museum activities after the meal.\nIn the parking garage: Returning to the car involves a\nreversal of the car security features that were enacted on our\narrival. Docking the SG provides a means for recharging, but\nit could also be a convenient way to transfer information for\nbackup or additional planning purposes.' metadata={'source': 'Semantic_Web.pdf', 'page': 535}
"
"page_content='536\nConclusions\nWe have presented how semantic web technologies can be\nused in the context of ubiquitous computing to enrich the\ncapabilities of service discovery mechanisms. By abstracting\ndevice functionality as software agents, and then using\nsemantic web technologies (e.g., distributed frame-based\nrepresentation) to describe agent services, we can build a\n""semantic"" discovery service capable of function beyond a\nprioristandardization. Through the composition of partially\nmatching (discovered) services into virtual value chains we\nare able to form device coalitions which opportunistically\nexploit a dynamically changing ubiquitous computing\nenvironment.\nReferences\n[Brickley & Guha, 2000] Dan Brickley & R.V.Guha: ""Resource Description Framework (RDF) Schema\nSpecification1.0"",W3CCandidate Recommendation2000-03-27\n[Charniak, 1972] Eugene Charniak: ""Toward a Model of Children’s Story Comprehension"", MIT AI Lab Tech\nReportAI-TR-266, December 1972\n[Chaudhri et al., 1998] Vinay Chaudhri, Adam Farquhar, Richard Fikes, Peter Karp & James Rice; ""OKBC: A\nProgrammatic Foundationfor Knowledge Base Interoperability"", Proc. AAAI 1998\n[Fensel, 2000] Dieter Fensel (ed.): ""The Semantic Web and its Languages"", IEEE Intelligent Systems 15(6): 67-\n73 (November/December 2000)\n[Fikes & Kehler, 1985] Richard Fikes & Tom Kehler: ""The Role of Frame-Based Representation in Reasoning"",\nCACM 28(9):904-920(1985)' metadata={'source': 'Semantic_Web.pdf', 'page': 536}
"
"page_content='537\n[Hendler & McGuinness, 2000] James Hendler & Deborah L. McGuinness: ""The DARPA Agent Markup\nLanguage"", in[Fensel, 2000]\n[Huitema, 1998] Christian Huitema: ""Plug and Play"", in IPv6: the New Internet Protocol, Prentice-Hall, Upper\nSaddle River (NJ), 1998\n[Karp, 1992] Peter D. Karp: ""The design space of frame knowledge representation systems"", Technical Report\n520, SRI International AI Center, 1992\n[Lassila, 1998] Ora Lassila: ""Web Metadata: A Matter of Semantics"", IEEE Internet Computing 2(4): 30-37\n(1998)\n[Lassila & McGuinness, 2001] Ora Lassila & Deborah L. McGuinness: ""The Role of Frame-Based\nRepresentation on the Semantic Web"", Electronic Transactions on AI (to appear); available as a Stanford\nKSLtechnicalreportKSL-01-02\n[Lassila & Swick, 1999] Ora Lassila & Ralph Swick: ""Resource Description Framework (RDF) Model and\nSyntaxSpecification"", W3CRecommendation1999-02-22\n[Minsky, 1975] Marvin Minsky: ""A Framework for Representing Knowledge"", in Patrick Henry Winston (ed.),\nThe PsychologyofComputer Vision, McGraw-Hill, NewYork(NY), 1975\n[Reynolds et al., 2000] Franklin Reynolds, Chris Woodrow & Hidetaka Ohto: ""Composite Capability/Preference\nProfiles(CC/PP):Structure"", W3CWorkingDraft2000-07-21\n[Richard, 2000] Golden G. Richard III: ""Service Advertisement and Discovery: Enabling Universal Device\nCooperation"",IEEE InternetComputing4(5):(2000)\n[Sycara et al., 1999] Katia Sycara, Matthias Klusch, Seth Widoff & Jianguo Lu: ""Dynamic Service\nMatchmaking Among Agents in Open Information Environments"", ACM SIGMOD Record 28(1): 47-53\n(March1999)\n[Weiser, 1991] Mark Weiser: ""The Computer for the Twenty-First Century"", Scientific American, September\n1991\n[Weiser, 1993] MarkWeiser:""Some Computer Science ProblemsinUbiquitousComputing"", CACM, July1993\nFootnotes\n1Nokia ResearchCenter, 5 Wayside Road, BurlingtonMA01803, USA' metadata={'source': 'Semantic_Web.pdf', 'page': 537}
"
"page_content='538' metadata={'source': 'Semantic_Web.pdf', 'page': 538}
"
"page_content='13. Static and DynamicSemantics oftheWeb\nChristopher Fry1, Mike Plusch2and Henry Lieberman3\n1. Introduction\nThe original perception of the Web by the vast majority of\nits early users was as a static repository of unstructureddata. This was OK for browsing small sets of information by\nhumans, but this static model is now breaking down as programs\nattempt to dynamically generate information, and as human\nbrowsing is increasingly assisted by intelligent agent\nprograms.\nThe next phase of the Web, as represented in this book\'s\nmovement towards the ""Semantic Web"", lies in encodingproperties of and relationships between, objects represented\nby information stored on the Web. It is envisioned that\nauthors of pages include this semantic information along with\nhuman-readable Web content, perhaps with some machine\nassistance in the encoding. Parsing unstructured natual\nlanguage into machine-understandable concepts is not feasible\nin general, although some programs may be able to make partial\nsense out of Web content.\nHowever, this semantics is primarily\ndeclarative\nsemantics, semantics that changes only relatively slowly as\nWeb pages are created, destroyed, or modified, typically by\nexplicit, relatively coarse-grained human action.' metadata={'source': 'Semantic_Web.pdf', 'page': 539}
"
"page_content=""540\nLess concern has been given to dynamicsemantics of the\nWeb, which is equally important. Dynamic semantics have to dowith the\ncreationof content, actions which may be guided by\n•User-initiated interface actions\n•Time\n•Users' personal profiles\n•Data on a server\nand other conditions.\nEven less concern has been given to methods for cleanly\nintegrating the static and dynamic aspects of the Web. In this\npaper, we discuss the need for dynamic semantics, and show how\ndynamic semantics will be enabled by and useful to the new\ngeneration of intelligent agent software that will\nincreasingly inhabit the Web. Though there will be autonomous\nagents, the more interesting agents will cooperate\ninteractively with humans, helping them to achieve their goalsmore efficiently than a user could on their own. We also\npresent a new language,\nGlue, that fully integrates static and\ndynamic semantics, while keeping close to the XML framework\nthat has made the Web successful.\nBeyond that, we envision that Web end users and Web\napplication developers will not be routinely writing code\ndirectly in Glue or any other formal semantic language, but\ninstead avail themselves of Programming by Example [Lieberman,\ned., 2001] and other interactive agent interfaces that will"" metadata={'source': 'Semantic_Web.pdf', 'page': 540}
"
"page_content=""541\nhide the details of the formal languages. But transition to\nthese future interfaces will be greatly aided by a foundationthat can cleanly integrate static and dynamic semantics.\n2. Static Semantics\n2.1.The Web's Link Structure Mimics a Semantic\nNet\nA semantic net [Woods, 1975] is a network of concepts\nlinked by relations. The Web is, of course, a network of\npages, each containing text, pictures, other media types, andlinks to other Web pages. Though the Web has far less\nstructure than typical AI semantic nets, the Web pages that\nconstitute the nodes of the Web's network often do represent\nconcepts and the links between them represent relations\nbetween those concepts. For example, my home page is the Web's\nrepresentation of me, in a sense. The links leading off my\nhome page - to my publication list, my e-mail address, coursesthat I teach, etc. - represent the relation of me to, e.g. the\narticles I have published.\nThe only problem is that these relations are expressed in\nhuman-understandable natural language and human-understandable\npictures. Short of full natural language understanding, it is\ndifficult for a computer program to automatically extract\nthose concepts and relations in order to do query answering,\ninference and other tasks."" metadata={'source': 'Semantic_Web.pdf', 'page': 541}
"
"page_content='542\n2.2.ShouldtheSemanticWebBeStatic?\nThe Semantic Web movement, represented in many of the\narticles in this book, and in Web standards initiatives such\nas RDF, DAML, and OIL, is an attempt to introduce common\nformal languages for expressing concepts and relations in a\nmachine readable way. To leverage existing Web tools andemulate the Web\'s social success, such efforts strive to embed\nthe descriptive information in pages similar to the way text,\npictures and conventional media are already described using\nHTML and XML.\nHowever, all this is basically limited to\nstatic\nsemantics. The interaction paradigm is that knowledgedescriptions are authored by a developer in the same way that\nHTML pages are presently authored by a Web designer, then\n""published"" to the Web to make them available in the network.Sometimes, the descriptions may be automatically produced by a\nprogram from the results of user interaction in a manner\nsimilar to the way many WYSIWYG Web editors such as Macromedia\nDreamweaver or Adobe GoLive produce HTML automatically from\nuser editing operations.\nIn all of this, there is the underlying assumption that\nsemantics\n•Is\nrepresented declaratively. It is represented in passive\ndata that is descriptive and can be retrieved, e.g. a Web\npage on a Web server, and' metadata={'source': 'Semantic_Web.pdf', 'page': 542}
"
"page_content='543\n•Changes relatively slowly. The Web publishing events happen\nrarely relative to actions such as browsing a page or\nclicking a link.\nStructured static semantics are a huge advance for the web\nsince they will enable software agents to find and reason\nabout a colossal volume of information, essentially turning\nmere data into knowledge. But the larger and more complex theknowledge, the less complete and useful static representations\nbecome.\n3. Dynamic Semantics\nIn addition to the static semantics of Web pages, links,\nand Web markup, there is also what we call dynamic semantics.\nDynamic semantics\n•Isrepresented procedurally . It can be computed by programs\nrunning on the client or server side, based on immediate\ninteractive user input. This computation can depend on theimmediate\ncontext- including time, personal information\nabout the user, user-initiated actions, etc.\n•Changes relatively rapidly . A single user click can cause\nthe semantics to be generated or to change, or it can be\nchanged by the actions of programs continuously in real-\ntime.\nAs the web matures, there are many ways in which static\nsemantics are being augmented and supplanted by dynamic\nsemantics. As a simple example, some URLs are not addresses of' metadata={'source': 'Semantic_Web.pdf', 'page': 543}
"
"page_content=""544\nstatic pages stored on Web servers, but rather act as\ndirectives to the server to initiate some computation. CGIscripts are an example of this. The question-mark in the URL\nis a signal for the server to retrieve some named program and\nexecute it, possibly with arguments. An Active Server Page\nqueries a database and constructs a page on the fly. Even\nsearch engine results pages, and customized ads based on\ncookies are examples of dynamically created Web pages.\nStreaming audio, video and other media also make the Web more\ndynamic.\n3.1.Transparency Between Static and Dynamic\nSemantics\nThe key is that, to the browser, the HTTP stream delivered\nby the procedure is identical to that which would have come\nfrom a statically stored page, so that the requester need not\nconcern themselves with the question of whether that\ninformation was stored or computed.\nThat kind of transparence between static and dynamic data\nis an extremely important property that a system can have. Itmeans that a system can always be extended by replacing some\npiece of formerly static data with a new, dynamically\ngenerated object, as long as the new object's behavior is\ncompatible with the old. This property has long been\nappreciated in the communities of AI and HCI languages such as"" metadata={'source': 'Semantic_Web.pdf', 'page': 544}
"
"page_content=""545\nLisp, Prolog and Smalltalk, though it has been\nunderappreciated in the communities of users of moreconventional languages such as C and Java. In the knowledge\nrepresentation community, this has long been studied under the\nname\nprocedural attachment . Our aim is to extend the principle\nof equivalence of static and dynamic data as the Web moves\ntoward encoding more semantics.\n4. Sources of Dynamic Semantics\nIn addition to the examples of procedural Web data cited\nabove, there are several other sources of dynamic semantics\nfor the Web. The first is in the process of Web browsing\nitself.\n4.1.WebBrowsingGeneratesDynamicSemantics\nThe process of the user navigating through Web pages might\nresult in new objects and relations being created that need to\nbe represented, both on the client's machine and also on the\nWeb servers with which the client communicates. These may\neither be represented statically and stored explicitly, or\nproduced dynamically as a result of user action. For example,\npersonal information about the user, such as their current\ninterests, might be communicated from the client to theserver. Now, cookies are used as a very primitive means of\nclient-to-server communication, but they can only communicate\na single piece of information. Information like the user's"" metadata={'source': 'Semantic_Web.pdf', 'page': 545}
"
"page_content='546\ncurrent interests might be represented by a complex structure\nwith dynamic contingencies.\n4.2.AgentsGenerateDynamicSemantics\nAn alternative to having Web page creators explicitly\nauthor meta-data, is to have the meta-data computed by agents\nfrom human-readable information. An active area of research ishaving agents ""read"" Web pages containing natural language and\nformatted text intended for humans, and compute meta-data by\nusing machine learning to infer ""wrappers"" that describe the\nstructure of the text [Kushmerick, Weld & Doorenbos, 1997].\nThis can be done in many cases without having to completely\nsolve the natural language problem. The field of Information\nExtraction uses partial parsing to perform tasks like semi-\nautomatic topic categorization and summarization. Examples are\nprice-comparison shopbots that extract prices from on-linecatalogs, or filters that remove advertisements. Users may\neven define these wrappers dynamically [Bauer, Dengler & Paul,\n2001].\n4.3.WebEditingGeneratesDynamicSemantics\nFinally, the evolution of the Web itself leads to dynamic\nsemantics. As pages are modified, new pages added and old ones\ndisappear, both Web clients and Web servers might want to\ntrack and represent how pages change, or keep history that may' metadata={'source': 'Semantic_Web.pdf', 'page': 546}
"
"page_content=""547\nbe dynamically accessible in different ways. This could be as\nsimple as displaying the date of the last change to a page, orhighlighting the parts that have changed.\n5. Web Agents Make Use of Dynamic Semantics\nA revolution that is currently underway is the growing\npopularity of intelligent agents on the Web. Agents are\nprograms that act as assistants to the user in the interface.\nThey can track user interests, explore the Web proactively,learn through interacting with the user, provide personalized\ndata and services, and much more.\nExamples are Letizia and Powerscout [Lieberman, Fry &\nWeitzman, 2001], which act as\nreconnaissance agents , building\na profile of the users' interests by watching his or her Web\nbrowsing, and dynamically and incrementally crawling the Web\nor using traditional search engines as subsidiary tools to\nsuggest related material in real time."" metadata={'source': 'Semantic_Web.pdf', 'page': 547}
"
"page_content='548\nFigure 13.1 Letizia ""spirals out"" from the user’s\ncurrent page, filtering pages through the user’s interestprofile.\nWhat sets these kinds of agents apart from the more\ntraditional tools like search engines and cookie-personalized\nsites is their more dynamic nature. They are computing\nconcepts and relations dynamically from the data stored and\nretrieved on the Web, procedures which are attached to that\ndata, and also from the dynamic process of the user\'sinteractive navigation through the Web sites.' metadata={'source': 'Semantic_Web.pdf', 'page': 548}
"
"page_content='549\n6. Information-Retrieval and Theorem-Proving\nPerspectives\nIt is instructive to consider how the advent of the Web\nchanged the perspective of information-seeking activities from\nthe old ""information retrieval"" model, essentially a static\nmodel, to a newer model of dynamic, continuous and cooperative\ninformation navigation. As we embed more semantics into theWeb, we need to make a similar shift in perspective from the\nold ""theorem proving"" model of inference, to a new model of\ndynamic and cooperative reasoning and problem solving.\nHere\'s a caricature of what we consider the dominant\nparadigm of Information Retrieval field to have been prior to\nthe advent of the Web. The old Information Retrieval model was\nthat information was stored in a ""database"", essentially alarge, static big bag of ""records"" and ""fields"" that changes\nonly slowly [via ""database updates""]. The user\'s only option\nfor interfacing with the database is to throw a ""query"" at it,\na statement of the user\'s interests in a formal query language\nlike SQL. The user was expected to have in mind a Platonic\n""ideal document"" that was described by the query. The job of\nthe database was to return one or more documents in the\ndatabase ordered by how well they satisfied the query. Today\'s\nsearch engines are the modern manifestation of this paradigm.' metadata={'source': 'Semantic_Web.pdf', 'page': 549}
"
"page_content='550\nQuery\nDocument(s)?\nDatabase\nFigure 13.2 The traditional Information Retrieval\nparadigm.\nWhat\'s wrong with this paradigm for the Web? Well…\n•It\'s difficult for users to express queries precisely. In\nthe old days of IR, users were expert librarians whoformulated Boolean queries in formal languages. Now,\nordinary users type one or two words to search engines.\nThese don\'t express intent precisely\n•\nThere may not be a ""best document"" in the Web. Any query can\npotentially return an infinite number of documents. You\ncan\'t tell which is ""best"" from a single query alone.\n•Query-response interaction is a ""batch processing"" view. It\nis sequential - either you or the retrieval system are\nworking, not both at the same time. Except for query\nrefinement, each query and response is essentially an\nindependent event, and unrelated to anything else you might\nbe doing.' metadata={'source': 'Semantic_Web.pdf', 'page': 550}
"
"page_content=""551\nThere are also many other critiques of the old IR\nparadigm, but that will suffice for the moment.\nAgent software on the Web breaks all of these assumptions.\nAgents like Letizia and Powerscout track the history of user\nbrowsing and use it as a persistent context from which to\ninfer user interests. Rather than globally ranking documents,\nthey present context-dependent suggestions that can improve\nover time. Rather than use the query-response paradigm, they\nare always active, and deliver their recommendations in a\ncontinuous stream in real-time. They essentially integrate\nbrowsing and searching into a unified process.\nThe goal is not to find the best document, but to make the\nbest use of the user's time. In short, they treat browsing as\na continuous, co-operative activity between one or more humans\nand one or more software agents.\n6.1.Thetheorem-provingparadigm\nAdding semantics to the Web allows agents to do problem-\nsolving by using traditional theorem-proving techniques to\nprocess assertions and descriptions stored on the Web. Again,\nthough, we believe that the paradigm has to change to\naccommodate the dynamic and fluid nature of the Web. By\nanalogy, we present a caricature of the old theorem-provingparadigm."" metadata={'source': 'Semantic_Web.pdf', 'page': 551}
"
"page_content='552\nLogical query\nTrue/False, Variable bindings?\nAssertions and\nDescriptions\nFigure 13.3 The traditional theorem-proving paradigm.\nThe old theorem-proving paradigm treated a knowledge base\nas a big bag of assertions and descriptions expressed in a\nlogical language. Again, the way the user was assumed to\ninteract with this was to issue a logical query in the form of\nan assertion to be proved true or false, possibly filling in\nthe values of logical variables contained in the assertion.This would launch an inference procedure that would find ""the\nanswer"".\nWhat\'s wrong? Well…\n•\nIt\'s difficult for users to express logical queries\nprecisely.We can\'t expect users of Web applications to be\nmathematicians. We need to have interfaces that interact\nwith the user and help formulate queries before they can be\nsent to an inference system.\n•There may not be a ""best answer"". How much is that plane\nflight? Well, when are you asking? Do you have a discount?\nShould we ask for a price on Priceline? Buy one on Ebay? How\nlong are you willing to wait for the answer? Can you leave a' metadata={'source': 'Semantic_Web.pdf', 'page': 552}
"
"page_content='553\nday earlier? … We need the ability to put procedural hooks\nin the answers.\n•Query-response interaction is a ""batch processing"" view.\nAgain, in the standard view, no opportunity for dynamic user\ninput or user-agent cooperation is provided for.\nOnce again, the modern view should be that problem-solving\nand inference should be a cooperative venture between one ormore humans and one or more computer agents. Interaction and\nparallelism should be available at any point in the process.\nAfter all, the expensive component is not the net connection,\nthe client computer or even the servers that store the\ninformation, it’s the user’s\ntime. This means that the\ncomponents of the future Semantic Web should be able to\nintegrate not only text, pictures, links, and semanticdescriptions, but also dynamic and procedural objects. But\nhow?\n7. The Semantic Web shouldn\'t sit on the Tower\nof Babel\nThe approach to the Semantic Web advocated in this book\nvia languages like DAML and OIL aims to leverage existing Web\nstandards like XML and RDF, and add new facilities that allow\nexpressing formal semantic information embedded in traditional\nHTML documents and enabling inference. This has the advantage\nthat encoding semantics in the Web becomes an evolutionary and\nnot disruptive step in the evolution of the Web. However,' metadata={'source': 'Semantic_Web.pdf', 'page': 553}
"
"page_content=""554\nprocedural information has not been covered by any of the\nexisting proposals.\n7.1.Notmydepartment?\nOne approach is simply to say, as the current standards\ndo, that it is out of the scope of Web standards to dictate\nhow Web applications will be programmed. Fear of thedivisiveness of arguments over programming languages in the\ncomputer science community has been motivating this abdication\nof responsibility for encoding of procedures.\nBut look where it's gotten us. Many of today's Web\napplications are programmed piecemeal in a bewildering array\nof programming languages, for example,\n•Javascript\n•Java\n•Perl\n•VBScript\n•PHP\njust to name a few. It is not uncommon for what appears to\nthe end user as a single Web application to use, in total, 7\nor 8 of these languages. The disadvantages of such multi-\nlanguage environments should be obvious.\n•\nDifficulty of learning multiple programming languages. Not\nonly does it duplicate the effort multiple times of learning\nsyntax and semantics, but there is no rational relationship"" metadata={'source': 'Semantic_Web.pdf', 'page': 554}
"
"page_content=""555\nbetween the languages, e.g. Perl has nothing to do with\nJava. Maddeningly, despite their names and superficialsimilarity, Javascript and Java contain major differences in\ntheir type and object systems. Having to learn two or more\nto get a task done is more than twice as hard as one\nlanguage because the interface between the languages is\nalways additional hair, usually poorly documented. You also\nmust learn\nwhento use one language or the other.\n•Difficulty of integrating Web data with multiple languages.\nIt is worthwhile to keep in mind that the majority of these\nlanguages were originally designed for a purpose that had\nnothing to do with the Web. Java was designed as a control\nlanguage for small devices; Javascript was a scripting\nlanguage for Netscape; VBScript as an extension of Basic forMicrosoft desktop applications; Perl, for string\nmanipulation via regular expressions. They were all pasted\ntogether in an unprincipled manner.\n•\nNecessity of conversion between different formats.\nConversion wastes computation time and storage and opens up\nthe possibility for errors due to mismatches in data\nsemantics.\n•Difficulty of debugging across multiple languages and\nsystems.If something goes wrong with a multi-language\nprogram, how do you tell who's at fault? None of these\nlanguages has anything approaching a decent debugger, even"" metadata={'source': 'Semantic_Web.pdf', 'page': 555}
"
"page_content='556\nfor programs written solely in that language, so if more\nthan one language is involved, it becomes a nightmare.\nAnd, perhaps the worst problem as far as Web semantics is\nconcerned, is that the plethora of languages prevents\nrepresenting procedural semantics in any sort of principled\nway. We need consolidation of existing Web functionality.\n8. We need another language like a hole in the\nhead\nNew Web languages seem to be born monthly. Rather than\nintroduce a new language for implementing some specialized\nfunctionality, we recognize that sooner or later that\nfunctionality will need general purpose utilities like\nconditional execution,\nloops, functional abstraction, etc. When these are added\non to special purpose languages late in the game, elegance is\ncompromised by compatibility with the original specialized\nlanguage and we end up with a mess.\nInstead, we propose, as DAML/OIL does for static Web\nsemantics, to gently extend the semantics of the widely\naccepted HTML for markup and XML for static data, to encode\nprocedural semantics in Web pages. The extension is called\nGlue.\nGlue is a language for the web that embodies the three\nprimary functionalities needed for general purpose information\nmanipulation into one unified language:' metadata={'source': 'Semantic_Web.pdf', 'page': 556}
"
"page_content='557\n•Markup. Since Glue is a superset of HTML, it inherits all\nits capability.\n•Data. Glue permits the description of persistent structured\ndata on the web via XML like syntax yet having the\ncapability of dynamically computing values that may contain\nself-referential interconnections.\n•Code. Glue is a general purpose object oriented programming\nlanguage that is, at its core, more flexible than\nJavascript, VBScript and Java.\nGlue provides a way to define functions and call them in\naddition to defining and instantiating objects. The object\nsystem is a multiple-inheritance, prototype-based object\nsystem with annotations. Thus it is not merely a vanillaprocedural/object oriented general purpose language grafted on\nto HTML and XML, but rather a language whose very core\nsupports the intimate mixture of unstructured content,\nstructured data and active values through a highly dynamic\nobject system.\n9. Is Procedural Attachment Rope to Hang\nYourself?\nAdvocates of declarative representations always get\nnervous when someone advocates letting the user call a\nprocedure from any point in a declarative representation.\nThere is the danger that the code can have unpredictable' metadata={'source': 'Semantic_Web.pdf', 'page': 557}
"
"page_content=""558\neffects, and that the reasoning systems cannot guarantee\nanything about the behavior of descriptions that containembedded code. In this view, procedural attachment is giving\nthe user rope to hang themselves.\nTo some extent, that's true. But we should recognize that\nmany operations that Web applications will want to do will\ninevitably go beyond purely declarative representations. I/O\noperations, especially network I/O, user interface operations\nthat interact in real time with the user, and side effects to\nshared data structures, often have this character. If we\ndisallow procedures to be embedded in the declarativerepresentation, we are merely pushing the procedural\ninformation outside of the declarative representation\nentirely. While this might gain some cleanliness in the\ndeclarative part, this doesn't alter whatever properties of\nunpredictability the entire system, procedures and data, has\nas a whole. And, after all, that's what we're really\ninterested in.\n9.1.ProceduralMarkup\nA better approach is to allow procedures to be embedded in\ndata, accepting the risk, but to also encourage the programmer\nto do what we might call procedural markup , analogous to\nmarkup for text. Markup for text [e.g. <b>] supplies\nadditional declarative annotation that serves as advice to the\nrenderer about how to display the text. Markup for procedures"" metadata={'source': 'Semantic_Web.pdf', 'page': 558}
"
"page_content=""559\nis to include with the embedded procedures a declarative\nrepresentation of the result of the procedure, so that thereasoning system can operate on it. For example, a procedure\nthat computes the price of an airline ticket might assert that\nthe result is a positive number in US dollars.\nOf course, the results of the reasoning will only be valid\nif the markup accurately describes the result of the\nprocedure. Although it is impossible in general to predict the\nresult of an arbitrary program, in some cases, automatic\nprogram verification might actually be able to either generate\nthe assertions automatically or prove that the code actuallysatisfies the assertions. To enable this, it is best to keep\nthe code close at hand to the places where it is used. And for\ndebugging, it is invaluable to have a seamless interface that\nintegrates procedures and data so the programmer can see if\nthere is a mismatch between what the program produced and what\nhe or she is expecting.\n10. Glue's Provides a Smooth Path From Text to\nCode\nLike HTML, Glue permits you to just write a paragraph of\nEnglish text and call it a web page. Also like HTML, you can\ntake another pass and add markup without having to rewrite\nyour original text. You need only learn the HTML tags that youneed to know."" metadata={'source': 'Semantic_Web.pdf', 'page': 559}
"
"page_content='560\nHowever, should you require more dynamic behavior, with\nGlue you needn\'t learn a new scripting syntax such asJavascript, or worse, a whole new programming environment such\nas Java. You can simply insert Glue tags into your page using\nthe same basic syntax that your markup is in. Plain text,\nmarkup, data, and code can be freely intermixed with no\nbarriers between those functionalities and no ""impedance\nmismatches"". Glue tries hard to give the user the most\nfunctionality per learning effort, emphasizing economy and\nelegance at the expense of hairy and rarely used features.\n10.1.Who\'stheuser?\nThe target audience for Glue is the web site author who\nneeds more than HTML can offer yet is intimidated (and rightly\nso) by multi-language programs. Although Glue can fulfill most\nof the needs of the general purpose programmer, someone who\'sspent years learning a difficult language like C or Java is\nhard to convince to give up on their investment even if they\ncan exceed their previous productivity in a few weeks. The\nHTML author looking for more flexibility is an easier sell.\nAnd there are millions of them. But the suitability of Glue is\nnot limited to toy programs. Glue is not simplified at the\nexpense of being able to accommodate complex programmingtasks.' metadata={'source': 'Semantic_Web.pdf', 'page': 560}
"
"page_content='561\n11. Glue\'s Distinguishing Features\nGlue has a unique approach to bridging the apparent gap\nbetween static and dynamic semantics by unifying what in other\nlanguages are objects and function calls. Yet it doesn\'t start\noff by throwing today\'s web author in cold water either.\n•Minimal differences between markup, data, and code. We have\nalready discussed this point.\n•Minimal differences between classes and instances. Glue\'s\nobject system uses prototypes instead of classes [Lieberman,\n1986]. No need to learn separate operations for classes and\ninstances since there\'s no distinction between a class and\nan instance. An object can be used ""as an instance"", and/or\nit can be ""subclassed"" with the new object inheriting the\ndesired characteristics of its parent(s) while other\ncharacteristics are modified to differentiate the new object\nfrom its parent(s).\n•The language Self [Ungar & Smith, 1987] had a simple and\nelegant prototype-based object system. Self\'s object system\ndiffers from Glue in that it was only single-inheritance andhad a ""copy down"" semantics for inherited values rather than\nthe ""dynamic look-up"" mechanism of Glue. The dynamic lookup\nof Glue makes object creation faster and uses less memory\nthan ""copy-down"". It also preserves locality of reference\nfor shared data which may have additional speed advantages.\nBut if ""copy-down"" is desired, the ""init"" function for' metadata={'source': 'Semantic_Web.pdf', 'page': 561}
"
"page_content='562\nobject creation of a given parent object can choose to copy\ndown desired fields.\n•Minimal difference between ""instance variables"" and\n""methods"".Each are stored as values of fields in an object.\nYou can get the value of an instance variable or a method by\njust getting the value of a named field. Methods are\nimplemented by objects just like everything else in thelanguage. To call a method, you use the function calling\nsyntax which looks like using an HTML tag.\n•\nMinimal differences between a function call and object\ncreation.The tag name refers to the parent object. The\nparameters after the tag name serve as either field\ninitializers or function arguments depending on the value of\nthe tag.\n•Minimal differences between aggregate data types. Objects,\nvectors and hash tables are all represented by the same data\nstructure. An object is a set of fields whose keys can be\nany object [interned strings, numbers, other objects]. When\nyou\'re treating an object as a vector, a looping mechanism\npermits looping over all fields whose keys are integers. A""size"" field makes finding out the length of the vector\nquick as well as facilitating ""adding an element to the end\nof the vector"".\n•\nNo differences between the object system and the type\nsystem.For example, ""integer"" can be thought of as a ""type""' metadata={'source': 'Semantic_Web.pdf', 'page': 562}
"
"page_content='563\nbut its really just another object in the object tree that\nhappens to be the parent object of all integers. You canreference all objects used as types via the path syntax,\njust like you can reference all fields of objects. In fact,\nsince any object can become a parent, any object can\neffectively be a type.\n•\nMinimal differences between initialization and normal\nmethods.Aninitmethod can, in fact, return any type of\nobject and should declare the returned type of object.\n•Minimal [but very significant] differences between local\nvariables, fields, and subobjects for creating, setting and\nreferencing.\n•Minimal differences between a field and an annotation to\nthat field.Glue provides a way to add information ABOUT a\nfield. Say you have a field named ""color"" in an object named\n""car"". You might want to add a comment about the field such\nas ""all colors besides black and white cost extra"" or\ndeclare that the type of the field must be an integer.\nAnnotations are the mechanism that Glue uses to associate\ninformation about a field with that field. Annotations of afield ""foo"" are indicated by another field with a naming\nconvention of ""foo@annotation-name"". A looping mechanism\nmakes it easy to find all annotations of a given field or to\nignore all annotations of an object when you want to loop\nthrough an object\'s field values.' metadata={'source': 'Semantic_Web.pdf', 'page': 563}
"
"page_content='564\n•Glue provides an easy way to specify the ""evaluation kind""\nof each parameter in a method definition. This controls how\neach argument in a call to the method is interpreted. It can\nbe treated as code and evaluated, which is the default. It\ncan be treated as an expression to be parsed but not\nevaluated, which is especially good for ""delayed evaluation""\nwhere a method takes code as an argument and can evaluatethe code when it chooses. It can be treated as the string of\nits source code (and not even parsed), and hypertext, which\ntreats text within angle brackets as code to evaluate and\nother text just as strings (especially convenient for\nimplementing HTML tags as Glue objects or method calls).\n•\nGlue permits the parent of an object to be changed at\nruntime.This is not a common situation, but makes it easy\nfor a parent to ""adopt"" a child.\n•Glue allows optional keywords. In HTML you usually use\nkeywords to specify each attribute. XML requires the use of\nkeywords. In Java and Javascript you can\'t use keywords to\nspecify any argument. Glue permits you to use keywords when\nyou want to be more explicit or pass arguments ""out oforder"" and pass arguments by position (without keywords)\nwhen you want to be more concise. There is no extra overhead\nfor declaring keywords when defining a method, they are\nsimply the parameter\'s name.' metadata={'source': 'Semantic_Web.pdf', 'page': 564}
"
"page_content='565\n•Glue permits ""Active Values"" on object fields. These\nfacilitate simple constraint systems, and, along with other\ndynamic features, help to implement specification changes\nafter most of the implementation is done by permitting field\nreferences and setters to turn into method calls without\nchanging the referencing and setting code at all.\nGlue is especially easy to write interactive programming\nenvironment tools for, due to its extensive introspection\ncapabilities, evaluation kinds, elegant object system, uniform\nsyntax, ultra-dynamic behavior and small size. Below, we\npresent a summary of Glue syntax, for those interested in the\ndetails. An example of Glue code follows.\nFigure 13.4 Glue syntax table.\n12. A Glue Example\nGlue permits arbitrary code intermixed with HTML. Here\'s a\nsnippet of ordinary HTML:' metadata={'source': 'Semantic_Web.pdf', 'page': 565}
"
"page_content='566\n<font size=""3"">Hello World</font>\nWith Glue we can stick code anywhere within this such as\nan attribute value:\n<font size=1.<random 7/> > Hello World</font>\nGlue really has two syntaxes, a pure XML syntax and one\nthat permits some short cuts such as ""by position arguments""\nwhich makes using attribute names unnecessary. Both syntaxes\ncan be used in the same body of code.\nHere\'s a more complex example of generating a catalogue\nfor a store. First we set up our inventory ""database"". This\nmight come from another file or another method call but forsimplicity we enter it directly as a vector of vectors like\nso:\n<set root.inventory\n<vector\n<vector ""Flannel Top Sheet"" ""17.95""/>\n<vector ""Satin Pillow Case"" ""11.45""/> /> />\n<set page\n<p>For our everyday unbeatable price we have\n</p> />\n<set page <p>For our everyday unbeatable price we have</p>\n/>\nroot.inventory.<for_each>' metadata={'source': 'Semantic_Web.pdf', 'page': 566}
"
"page_content='567\npage.content.<push field_value.0/>\npage.content.<push "" for the low low price of ""/>page.content.<push field_value.1/>\npage.content.<push <br/> />\n</for_each>\nAt the end of running this program the ""page"" variable\ncontains our page object. We can get the string of HTML like\nso:\npage.<to_html/>\nLet\'s add some variability based on the day of the month:\n<set root.is_sale_day <date/>.day_of_month.<same 1/> />Now is_sale_day is true if its the first day of the month\nand false otherwise.\n<set page <if root.is_sale_day <p>On Sale today we\nhave</p>\ntrue <p>For our everyday unbeatable price we\nhave</p>\n</if> />\nThe heading to our page is now customized, so let\'s do the\nsame for the body:\nroot.items.<for_each>\n<set price\nfield_value.1.<times <if> root.is_sale_day .75\ntrue 1\n</if>\n/>' metadata={'source': 'Semantic_Web.pdf', 'page': 567}
"
"page_content='568\n/>\npage.content.<push field_value.0/>\n"" for the low low price of ""/>\nprice\n<br/>\n/>\n</for_each>\nAbove the price will be multiplied by .75 if we\'re on the\nfirst of the month.\n13. Comparison with Java\nSome of Glue\'s features provide fixes for inconsistencies\nand other unnecessary complexities in Java [Lemay & Cadenhead,\n2001].\n•Unlike Java, all Glue data types are full-fledged objects.\nThere are no ""ints"" and ""Integers"", just ""integers"".\n•Unlike Java, Glue has true multiple inheritance. There is no\nextra ""interface"" mechanism.\n•Unlike Java, Glue supports both a prefix syntax and an infix\nsyntax -automatically. Glue does not need precedence rulesor parentheses.\n•Unlike Java, the types of elements in vectors and hash\ntables can be declared. There is no need for casting whenyou extract an element from a vector or a hash table.' metadata={'source': 'Semantic_Web.pdf', 'page': 568}
"
"page_content='569\n•Unlike Java, the types of fields and method return values\nneed not be declared. They default to the most general type\nof object. However, type declarations are encouraged as they\nhelp declare the programmer\'s intent and can be used by\nprograms to find inconsistencies in the programmer\'s intent\nas well as speedup execution.\n•Unlike Java, the ""init"" method is just like a regular\nmethod. Its body returns a value [usually but not\nnecessarily a subobject of the called object]. It is named\nand has a return type declaration just like a regularmethod.\n•Unlike Java, instance variables can be created or removed\nwithin an object at run time.\n•Unlike Java, you can add methods to a system class (or any\nother), extending its behavior without having to edit and\nrecompile the original source. Glue gives the programmermore flexibility in modularity so that a method for a class\nneed not reside in the same file as the class definition if\nthat\'s what the programmer chooses.\n•Unlike Java, Glue\'s evaluation kinds permit the easy\nconstruction of high-level code manipulation methods which\nin many cases reduce the complexity of packaging up and\ncalling advanced functionality.\n•Unlike Java, there is rarely a need to create a ""singleton"",\nie a class with one instance object. That\'s because in Glue,' metadata={'source': 'Semantic_Web.pdf', 'page': 569}
"
"page_content='570\na ""class"" object can be treated just like an instance\nobject. You can call its methods directly using the ""class""as ""this"". There is no need to have a distinction between\nstatic variables and instance variables, nor static and\ninstance methods. And each ""instance"" object in Glue can get\nits own special version of method, if the programmer so\nchooses, to distinguish its behavior from that of its\nsibling objects. ""Static"" is another concept you just don\'t\nhave to know about in Glue.\n•Compared to Java, Glue is much more consistent with itself.\nFor example, Java has three different syntaxes for\nprogrammatically determining the length of an array, a\nvector and a string. Glue has one.\n14. Comparison with Javascript\nGlue has a lot in common with Javascript [Goodman, 2000]:\n•Glue and Javascript can be embedded in HTML.\n•Glue and Javascript are interpreted.\n•Glue and Javascript both have ""eval"" though Javascript\ndoesn\'t have a ""parsed but not evaled"" representation using\nfor programs that manipulate code.\n•Glue and Javascript objects can both have fields added\ndynamically, after an object is created.\n•But there are a lot of differences as well:' metadata={'source': 'Semantic_Web.pdf', 'page': 570}
"
"page_content='571\n•Glue can be ""more"" embedded than Javascript within HTML.\nGenerally speaking, Javascript can only be attached to\ncertain control attributes of Javascript tags. Glue permits\nactive code just about anywhere within HTML.\n•Glue\'s syntax is much more like HTML than Javascript\'s.\n•The object system in Javascript is designed to be a\n""prototype"" object system. Yet it is, at the very best,\npoorly documented. Glue\'s prototype object system is easier\nto use.\n•Glue permits (but does not force) the declaration of types\nfor arguments and object fields. Javascript does not permit\ntype declarations.\n•Glue has much more flexible argument definitions which can\ntake default values and ""evaluation kinds"" in addition to\nnames and types.\n•Glue has a simple, concise syntax for referencing objects\nthrough long paths in the object hierarchy and\ninterconnected field values.\nConclusion\nWe are now at a crossroads in the evolution of the Web.\nThe Web has evolved from a relatively static collection ofpages and links, to a dynamic, interactive interface to\nsemantic information. We are at the verge of being able to\ncreate the Semantic Web, in terms of declaratively' metadata={'source': 'Semantic_Web.pdf', 'page': 571}
"
"page_content=""572\nrepresenting objects that are already human-readable on the\nWeb. Next, we need to make it the Dynamic Semantic Web byencoding procedures in Web material as first-class objects.\nWe've presented an argument for dynamic semantics, along\nwith a language, Glue, that integrates procedures seamlessly\ninto Web pages, just as XML and DAML/OIL integrate\ndescriptions. Some may think we place too much emphasis on the\nlanguage. It is true that good environments can be built on\ntop of mediocre languages, if you dedicate a great deal of\neffort. The current Web itself may be viewed an example of\nthat. But great environments need a language that supportsthe easy construction of dynamic, interactive and\nintrospective tools. The difference between good environments\nand great environments is tens or even hundreds of percents in\nspeed of implementing reliable, maintainable programs.\nIncreasing productivity of Web applications is the ultimate\ngoal. We can do this not just by handing existing programmers\nmore powerful tools, but by giving people who considerthemselves non-programmers, as many of today's HTML authors\ndo, the power to radically customize their computer.\nReferences\n[Bauer, Dengler & Paul, 2001] Mathias Bauer, Dietmar Dengler, and Gabriele Paul, Programming by\nDemonstration for Information Agents, in[Lieberman, ed. 01].\n[Goodman, 2000] DannyGoodman'sJavascriptHandbook, IDGBooks, 2000."" metadata={'source': 'Semantic_Web.pdf', 'page': 572}
"
"page_content=""573\n[Kushmerick, Weld & Doorenbos, 1997] Nicholas Kushmerick, Daniel S. Weld, Robert Doorenbos, Wrapper\nInduction for InformationExtraction. Intl. JointConference on ArtificialIntelligence (IJCAI), 1997.\n[Lemay & Cadenhead, 2001] Laura Lemay and Rogers Cadenhead, Teach Yourself Java 2 in 21 Days, Sams\nPress, 2001.\n[Lieberman, 1986] Henry Lieberman, Using Prototypical Objects to Implement Shared Behavior in Object-\nOriented Systems , First Conference on Object-Oriented Programming Languages, Systems, and\nApplications[OOPSLA-86], ACM SigCHI, Portland, Oregon, September 1986.\n[Lieberman, ed., 2001] Henry Lieberman, ed., Your Wish is My Command: Programming by Example, Morgan\nKaufmann, San Francisco, 2001.\n[Lieberman, Fry & Weitzman, 2001] Why Surf Alone? Exploring the Web with Reconnaissance Agents,\nCommunicationsofthe ACM, to appear, 2001.\n[Ungar & Smith, 1987] Self: The Power of Simplicity. ACM Conference on Object-Oriented Programming\nLanguages, Systems, and Applications [OOPSLA-87].\n[Woods, 1975] Woods, W. (1975), What's in a Link: Foundations for Semantic Networks, in D.G. Bobrow & A.\nCollins (eds.), Representationand Understanding, Academic Press.\nFootnotes\n1Bowstreet, Inc., Lynnfield, MA, USA\n2Glueworks, Wellesley, MA, USA\n3Media Laboratory, MassachusettsInstitute ofTechnology, Cambridge, MA, USA"" metadata={'source': 'Semantic_Web.pdf', 'page': 573}
"
"page_content='14. SemanticAnnotation for WebContentAdaptation\nMasahiro Hori1\n1. Introduction\nWeb contents are becoming accessible from a wide range of\nmobile devices such as cellular phones, pagers, and palmtopcomputers. Since these devices do not have the same rendering\ncapabilities as desktop computers, it is necessary for Web\ncontents to be adapted for transparent access from a variety\nof client agents. For example, a large full-color image may be\nreduced with regard to size and color depth, removing\nunimportant portions of the content. Such content adaptation\nis exploited for either an individual element or a set ofconsecutive elements in a Web document, and results in better\npresentation and faster delivery to the client device\n[Bickmore and Schilit 1997; Fox and Brewer 1996; Rousseau et\nal. 1999]. Transformation of information from one form to\nanother is often called\ntranscoding, and it is particularly\ncalled Web-content transcoding when the transformation is\nconducted along the Web transaction path. The Web-content\ntranscoding is a way of adding value to Web contents, and\nfacilitates re-purposing the Web contents. The transcoding isthus crucial for universal Web access under different\nconditions, which may depend on client capabilities, network\nconnectivity, or user preferences.' metadata={'source': 'Semantic_Web.pdf', 'page': 574}
"
"page_content='575\nMarkup languages such as HTML embed annotations into\ndocuments. For example, an <ol> tag indicates the start of anordered list, and a paragraph begins with a <p> tag. However,\nannotations can be external, residing in a file separate from\nthe original document. It seems be impractical to incorporate\nthe data about Web documents, namely, Web metadata into\nexisting HTML documents, because of the difficulty of changing\nthe established HTML specification to meet the application-\nspecific annotation needs. Although making annotations\nexternal may require additional bookkeeping tasks, it has the\nsubstantial advantage of not requiring any modification ofexisting Web documents. More importantly, the external\nannotation facilitates re-purposing Web documents through the\nreuse of annotations that can be shared across Web documents.\nExternal annotation is thus a promising approach to\nfacilitating the Web-content transcoding.\nIt is important to note here that the result of applying\nan annotation to a Web document depends on a transcodingpolicy. Annotations provide additional information about Web\ncontents, so that an adaptation engine can make better\ndecisions on the content re-purposing. The role of annotations\nis to provide explicit semantics that can be understood by a\ncontent adaptation engine. Although Web-content annotation or\nmetadata has a variety of potential applications [Lassila\n1998], they can be categorized into three types: discovery,\nqualification, and adaptation of Web contents. The primary' metadata={'source': 'Semantic_Web.pdf', 'page': 575}
"
"page_content='576\nfocus of this article is on the Web-content adaptation, and\nwould not necessarily address the other kinds of applicationssuch as accurate searches of Web resources (i.e., discovery)\nand descriptions of users’ preferences regarding privacy\n(i.e., qualification).\nIn pursuit of Web content re-purposing, transcoding\nsystems that adopt the external annotation approach are\nemerging [Hori et al. 2000a; WTP Developer’s Guide 2000; Nagao\net al. 2001; Asakawa and Takagi 2001). In the remainder of\nthis article, a framework of external annotation is introduced\nfirst, and a high-level overview of annotation-basedtranscoding is explained with emphasis on the idea of\nauthoring-time transcoding. HTML-page splitting is then taken\nas an example of Web-content adaptation, and the results of\napplying the transcoding module to real-life Web contents are\ninvestigated. Finally, a preliminary empirical evaluation is\npresented in the case of the HTML-page splitting plug-in, and\nthe annotation-based transcoding approach is compared withrelated works.\n2. External Annotation Framework\nA framework of external annotation prescribes a scheme for\nrepresenting annotation files and a way of associating\noriginal documents with external annotations. The role of\nannotation is to characterize ways of content adaptationrather than to describe individual contents themselves. The' metadata={'source': 'Semantic_Web.pdf', 'page': 576}
"
"page_content='577\nbasic ideas behind this annotation framework are twofold. One\nis that new elements and/or attributes should not beintroduced into a document-type definition of documents to be\nannotated. The other is that annotations need to be created\nfor arbitrary parts of annotated documents.\nAnnotations can be embedded into a Web document as an\ninline annotation. Inline annotations are often created as\nextra attribute of document elements. Most of existing HTML\nbrowsers ignore unknown attributes added to HTML elements,\nwithout being bothered by the proprietary inline annotations.\nBecause of its simplicity, inline annotation has been oftenadopted as a way of associating annotation to HTML documents\n[Mea et al. 1996; Rousseau et al. 1999; Erdmann et al. 2000;\nHeflin and Hendler 2000]. An advantage of the inline\nannotation approach is the ease of annotation maintenance\nwithout the bookkeeping task of associating annotations with\ntheir target document. The inline approach, however, requires\nannotators to have document ownership, because annotateddocuments need to be modified whenever inline annotations are\ncreated or revised.\nThe external annotation approach, on the other hand, does\nnot suffer from the issues related to the document ownership.\nMoreover, the most important point of the external annotation\nis that this approach facilitates the sharing and reuse of\nannotations across Web documents. Since an external annotation' metadata={'source': 'Semantic_Web.pdf', 'page': 577}
"
"page_content='578\npoints to a portion of a Web document, the annotation can be\nshared across Web documents that have the same documentfragment. Furthermore, mixing of contents and metadata would\nnot be desirable according to the design consideration that\nseparates content from presentation [Style Sheets 2000).\nFigure 14.1 depicts paths from a Web document to different\nclient devices. When a Web document is provided with an\nannotation document, a transcoding proxy may adapt the\ndocument on the basis of associated annotations upon receiving\na request from a personal device (Figure 14.1 (b)). When a Web\ndocument can be rendered as in the case of HTML documents, thedocument must be viewable in a normal browser on a desktop\ncomputer even if it is associated with an annotation document\n(Figure 14.1 (a)).\nFigure 14.1 Overview of an annotation-based transcoding.\nExternal annotation files contain metadata that addresses\na part of a document to be annotated. [Xpath, 1999] and' metadata={'source': 'Semantic_Web.pdf', 'page': 578}
"
"page_content='579\n[Xpointer, 2001] are used to associate annotated portions of a\ndocument with annotating descriptions. Figure 14.2 illustratesa way of associating an external description with a portion of\nan existing document. An annotation file refers to portions of\nan annotated document. A reference may point to a single\nelement (e.g., an IMG element), or a range of elements (e.g.,\nan H2 element and the following paragraphs). For example,\n/HTML/BODY/P[3] points to the third P element of the BODY\nelement of the annotated document. If a target element has an\nid attribute, the attribute can be used for direct addressing\nwithout the need for a long path expression. While XPathexpressions basically selects a node or subtree of a target\ndocument tree, XPointer could point to a sub-string text\ncontents, or a range of consecutive nodes that may not\nnecessarily constitute a subtree.\nFigure 14.2 Framework of external annotation' metadata={'source': 'Semantic_Web.pdf', 'page': 579}
"
"page_content='580\nAs the fundamental syntax of annotation files, the\nResource Description Framework [RDF, 1999] can be used. Anannotation file, which is an XML document, therefore consists\nof a set of RDF descriptions. The RDF data model defines a\nsimple model for describing relations among resources in terms\nof named properties and values. In addition, it is necessary\nto deal with user preferences and device capabilities for the\ncontent adaptation. Such information profiles can be described\nby using the specification of Composite Capability/Preference\nProfiles, which is often abbreviated as CC/PP [CCPP, 2000].\nThe CC/PP specifies client-side profiles can be delivered to aproxy server over HTTP [CCPP-exchange, 1999]. Furthermore, it\nis currently investigated ways of describing document profiles\nso that requirements for desired rendering can be clarified\n[XHTML-prof, 1999], and RDF is being employed for encoding the\nconformance profiles. Taking account of the situations of\nthese standardization activities, it is reasonable for\nannotation vocabularies to be encoded in RDF, so thatcomprehensive content adaptation mechanisms can be pursued in\naccordance with open standards.\nWhen annotation files are stored in a repository, an\nappropriate annotation file for a Web document needs to be\nselected dynamically from the repository either implicitly by\nmeans of a structural analysis of the subject document or\nexplicitly by means of a reference contained in the subject\ndocument or some other association database. The explicit' metadata={'source': 'Semantic_Web.pdf', 'page': 580}
"
"page_content='581\nassociation, for example, can be done by using <link> tag\n[HTML, 1999] or [Xlink, 2000]. An annotation file can beassociated with a single document file, but the relation is\nnot limited to one-to-one. It is possible for multiple\nannotation files to be associated with a single document file,\nwhen each annotation file contains descriptions related to\ndifferent portions of an annotated document. On the other\nhand, a single annotation file may contain an annotation\ndescription to be shared among multiple document files. This\ntype of annotation would be useful when it is necessary to\nannotate common parts of Web documents, such as a page header,a company logo image, and a side bar menu.\n3. Annotation-Based Transcoding System\nSince content adaptation can be done on either a content\nserver, a proxy, or a client terminal, an adaptation engine\nshould not be forced to reside in any particular location. In\norder to resolve this limitation, a proxy-based approach hasbeen adopted for content adaptation [Fox and Brewer 1996;\nSchickler et al. 1996; Barrett and Maglio 1998; WTP 2001;\nBritton et al. 2001]. Computational entities stay along the\nWeb transaction path are called intermediaries [Barrett and\nMaglio 1999], and existing approaches to annotation systems\nconfirm to a common abstract architecture based on\nintermediaries [Vasudevan and Palmer, 1999].' metadata={'source': 'Semantic_Web.pdf', 'page': 581}
"
"page_content='582\n3.1.TranscodingArchitecture\nAs shown in Figure 14.3, intermediaries are entities that\nreside along the path of information streams, and facilitate\nan approach to making ordinary information streams into smart\nstreams that enhance the quality of communication [Barrett et\nal., 1999]. An intermediary processor or a transcoding proxycan operate on a document to be delivered, and transform the\ncontents with reference to associated annotation files. From a\ncomputational perspective, the use of an intermediary\narchitecture is an approach to providing pluggable services\nbetween a Web client and server [Thompson et al., 1999]. To\nput it another way, intermediaries provide special-purpose\nproxy servers for protocol extension, document caching, Web\npersonalization, content adaptation, and so on [Barrett et\nal., 1998]. The intermediary-based approach is suitable forthe realization of content adaptation by means of external\nannotation, because the intermediary transcoding modules do\nnot require changing the existing HTTP-based information\nstreams.' metadata={'source': 'Semantic_Web.pdf', 'page': 582}
"
"page_content='583\nFigure 14.3 Intermediary between client and server.\n3.2.Authoring-TimeTranscoding\nCreation and revision of annotations would not easy solely\nwith a simple source tag editor. For example, addressing byXPath/XPointer may require to following a hierarchy of\ndocument elements from the root to a focal element for the\ncreation of an annotation, and it is also necessary for\nannotator to navigate from an existing annotation to a portion\nof an annotated document designated by a corresponding\nXPath/XPointer expression. Furthermore, it is substantially\nhelpful if the results of content adaptation can be verifiedthrough a previewer. The results of adaptation are difficult\nto anticipate when it transforms the structure of an original\ndocument, and often comes out with unexpected results due to\ninappropriate specification of the annotations. Therefore,\ntranscoding needs to be done not only at the run time, but\nalso at the design time on demand in the course of annotation' metadata={'source': 'Semantic_Web.pdf', 'page': 583}
"
"page_content='584\nauthoring, so that the result of adaptation can be checked\nimmediately.\nThe idea of authoring-time transcoding is depicted in\nFigure 14.4. An annotation tool consists of an editor for the\ncreation and revision of annotations, and a viewer to show the\nresult of applying the annotations to a target document. The\neditor is employed not only to edit annotation descriptions,\nbut also to specify a portion of a target document to be\nannotated. When an annotator creates an annotation file from\nscratch, a typical scenario of the authoring-time transcoding\nwould be as follows. A target document is opened in the editor(Figure 14.4 (1)), which allows an annotator to create\nannotations (Figure 14.4 (2)). The created annotations are\nsaved as an annotation file, and then stored in an annotation\nrepository or an HTTP server (Figure 14.4 (3)). When the\nviewer is invoked, a transcoding proxy is called over HTTP and\nthe corresponding annotation is applied to a target document\n(Figure 14.4 (4)). An adapted document is then sent back tothe viewer for the display (Figure 14.4 (5)). If the\nadaptation results were not desirable for the annotator, the\nannotation authoring can be continued to revising the\nannotations seamlessly in the same authoring environment.' metadata={'source': 'Semantic_Web.pdf', 'page': 584}
"
"page_content='585\nFigure 14.4 Authoring-time transcoding\nThe authoring-time transcoding would be crucial when\nannotations are employed for content adaptation, rather than\ndiscovery or qualification of contents, because the content\nadaptation often changes the structure of original documents\nas the results of transcoding. In most annotation tools forHTML annotation, it is assumed that a target HTML document is\nsolely displayed on an HTML browser and can never be edited\n[Denoue and Vignollet, 2000, Erdmann et al., 2000, Nagao et\nal. 2001, Sakairi and Takagi 2001]. On the other hand, there\nis an annotation tool that is fully integrated with a WYSIWYG\nHTML editor [Hori et al., 2000b], and allows users to annotate\nan HTML document as well as editing the document to be\nannotated.\nConfigurations of annotation tools depend on the\nsituations of annotation. The browser-based annotation tools' metadata={'source': 'Semantic_Web.pdf', 'page': 585}
"
"page_content='586\nare desirable when annotators are not allowed for editing\ntarget documents without the document ownership. On the otherhand, an annotation tool based on a WYSIWYG editor is helpful,\nwhen annotators are responsible for not only the creation of\nannotations but also the editing of target documents.\nRegardless of the variety of emerging annotation tools, a\nsignificant limitation of the current annotation tools is the\nlack of extensibility, because the existing tools are\ndeveloped solely for a particular annotation vocabulary, and\nprovided with predefined views for the authoring. An\nannotation tool framework is currently being pursued in orderto realize the flexibility in the annotation tool\nconfiguration [Abe and Hori, 2001].\n4. HTML-Page Splitting for Small-Screen\nDevices\nThe annotation framework mentioned above prescribes a\nskeletal structure of annotation, without regard to the\nspecifications of any annotation vocabulary and the behavior\nof any content adaptation module. As an example of the\nannotation-based transcoding, this section explains an\nannotation vocabulary [AWCT, 1999] and a content adaptation\nmodule [Hori et al., 2000a] that splits HTML pages into\nsmaller fragments to be displayed on small-screen devices.' metadata={'source': 'Semantic_Web.pdf', 'page': 586}
"
"page_content='587\n4.1.AnnotationVocabulary\nAnnotation vocabulary for HTML-page splitting needs to be\nspecified for constraining the possibilities for\ndecomposition, combination, and partial replacement of\ncontents. The vocabulary includes three types of annotation:\nalternatives,splitting hints andselection criteria .A\nnamespace [XML-names, 1999] prefix ""pcd"" is used for the\ntranscoding vocabulary as well as ""rdf"" for the constructs of\nRDF. Further details on this annotation vocabulary can be\nfound in another article [AWCT, 1999].\nAlternativesAlternative representations of a document or\nany set of its elements can be provided. For example, a color\nimage may have a grayscale image as an alternative for clients\nwith monochrome displays. A transcoding proxy selects the one\nalternative that best suits the capabilities of the requestedclient device. Elements in the annotated document can then be\naltered either by replacement or by on-demand conversion.\nSplitting hints. An HTML file, which can be shown as a\nsingle page on a normal desktop computer, may be divided into\nmultiple pages on clients with smaller display screens. A\npcd:Groupelement specifies a set of elements to be considered\nas a logical unit, and provides hints for determiningappropriate page break points. For example, the annotation\ndescription in Figure 14.5(a) indicates that the range of' metadata={'source': 'Semantic_Web.pdf', 'page': 587}
"
"page_content='588\nelements from the second occurrence of an H2 element through\nthe first occurrence of a TABLE element is annotated as agroup.\nFigure 14.5 Examples of annotation descriptions\nSelection criteria An annotation may contain information\nto help a transcoding module select from several alternative\nrepresentations the one that best suits the client device. A\npcd:roleelement, for example, specifies the role of an\nannotated element. This role element is provided with a value\nattribute, which may be specified as proper content, side\nmenu, or decoration, for example. A pcd:importance element' metadata={'source': 'Semantic_Web.pdf', 'page': 588}
"
"page_content='589\nspecifies the priority of an annotated element relative to the\nother elements in the page. When the importance of an elementis low, for example, it will be ignored or may be displayed in\na smaller font. The importance value is a real number ranging\nfrom -1 (lowest priority) to 1 (highest priority). The default\nimportance value is 0. For example, when an element is\nprovided with a decoration role and a low importance value\nsuch as -0.2, the element may not be sent to a lightweight\nclient. An example of such annotation description is given in\nFigure 14.5 (b).\n4.2.AdaptationEngine\nThe HTML-page splitting module runs on an intermediary\nserver called WBI [WBI, 2000]. WBI is a programmable processor\nfor HTTP requests and responses. It receives an HTTP request\nfrom a client such as a Web browser, and produces an HTTPresponse to be returned to the client. Modules or plug-ins\navailable at an intermediary processor controls the processing\nin between. WBI plug-in is constructed from three fundamental\nbuilding blocks:\nmonitor,editor, andgenerator[Barrett et\nal., 1998]. Monitors observe transactions without affecting\nthem. Editors modify outgoing requests or incoming documents.\nGenerators produce documents in response to requests.\nAn HTML-page splitting module was implemented as a WBI\nplug-in [Hori et al., 2000a]. It adapts requested documents in' metadata={'source': 'Semantic_Web.pdf', 'page': 589}
"
"page_content='590\naccordance with the capabilities of each client (Figure 14.6).\nHints for the adaptation are expressed by using the annotationvocabulary mentioned above, and provided as external\nannotations. The execution sequence of the page splitting\nplug-in is briefly explained below.\nUpon receipt of a request from a client device, an\noriginal HTML page is retrieved from a content server (Figure\n14.6 (1)), and parsed into an internal data structure (Figure\n14.6 (2)). The editor component of the plug-in then tries to\nfind out the locations of annotation files. The editor\ncomponent first check if a <link> tag is given in the HTMLdocument, and tries to lookup a database of mapping from an\nURL of the HTML page to URLs of annotations. Annotation files\nare then retrieved from an annotation repository with\nreference to the URLs (Figure 14.6 (3)). The internal\nstructure of the HTML page is elaborated incorporating the\nretrieved annotation descriptions. Note that if no URL of\nannotation files is found, the HTML page is returned as it is,and the session is terminated.' metadata={'source': 'Semantic_Web.pdf', 'page': 590}
"
"page_content='591\nFigure 14.6 Annotation-based transcoding by a page\nsplitting plug-in\nTaking account of client profile data included in the HTML\nrequest header, the generator component selects a portion of\nthe document structure. The generator then creates and returns\nan adapted page that is split off as a separate page from the\noriginal page (Figure 14.6 (4)). When another fragment of the\noriginal page is requested, the generator component of the\nplug-in is activated (Figure 14.6 (5)). The generator examinesthe requested URL, and determines which part of the original\npage is to be sent back. A split-off page is then created and\nreturned to the client. Note here that each anchor element\nlinking to another fragment of the same page must have an\n""href"" attribute given with a special URL, which is created by\nthe page splitting plug-in at run time. In the current\nimplementation, such URLs include host names for the generator' metadata={'source': 'Semantic_Web.pdf', 'page': 591}
"
"page_content='592\ncomponent and a session identifier for specifying the original\npage.\n4.3.Applicationtoreal-lifeHTMLpages\nThis section shows the results of applying the page\nsplitting plug-in to real-life Web documents. The Web page\nused as an example is a news page from a corporate Web site(Figure 14.7). Use of tables for page layout is inappropriate\nnot only as regards a clear distinction between style and\ncontent, but also as regards Web content accessibility.\nAccording to the accessibility guidelines [WCAG, 1999],\ncontent developers are encouraged to make contents navigable.\nIn reality, however, there are a large number of HTML pages in\nwhich table elements are employed for layouting. The news page\nin Figure 14.7 consists of three tables stacked from top to\nbottom as depicted in the left of Figure 14.8. The top andmiddle tables correspond respectively to a header menu and a\nsearch form. The bottom table, which is labeled as ""Layouter\n(3)"" in Figure 14.8, is used for layouting.' metadata={'source': 'Semantic_Web.pdf', 'page': 592}
"
"page_content='593\nFigure 14.7 Layout of a real-life news page.\nFigure 14.8 illustrates how the news page will be\nfragmented in a small display. According to the header role of\nthe top table in the original page, the same header appears in\neach of the split pages. The ""[Side menu]"" anchor in thecenter is created in accordance with the auxiliary role of the\nvertical side bar menu in the original page. In contrast,\nbecause the importance value is ""-1.00,"" the search form table' metadata={'source': 'Semantic_Web.pdf', 'page': 593}
"
"page_content='594\nis omitted in every split page. The main news content then\nstarts after the ""[Side menu]"" anchor, and allows users toaccess the primary content of the page directly.\nFigure 14.8 Annotation for fragmentation of an actual\nnews page\nFigure 4.9 shows annotations to be associated with the\nnews page mentioned above. The annotation contains RDF\ndescriptions specifying the roles of the tables. For example,\nthe first description in the figure is about the top table,which is indicated by ""Header (1)"" in the left of Figure 14.8.\nAccording to the header role annotation, the page splitting\nplug-in adds the table element as a header of every split\npage. In addition, the importance value ""+1.00"" indicates that\nthis table element should not be omitted in any case. The\nfourth description (Figure 4.9 (d)) concerns the left menu' metadata={'source': 'Semantic_Web.pdf', 'page': 594}
"
"page_content='595\nbar (""Side bar menu (31)"" in Figure 14.8). Since the role of\nthis element is annotated as auxiliary, this portion of thenews page will be presented as a separate page upon receipt of\na request from a small-screen device. On the other hand, the\nrole of the bottom table in the news page (""Layouter (3)"" in\nFigure 4.9) is annotated as layout (Figure 4.9 (c)).\nTherefore, the bottom table will not be retained in the\ndisplay for small-screen devices. The last description (in\nFigure 14.9(f)) annotates a table cell that is used solely for\nembedding a space for adjusting the page layout. The spacer\nrole given to the table cell helps the page splitting plug-into decide removing the cell in small screen devices. In this\nway, annotations provide content semantics explicitly, which\nmay not necessarily be given in the original documents.' metadata={'source': 'Semantic_Web.pdf', 'page': 595}
"
"page_content='596\nFigure 14.9 Annotations for splitting the news page.\nFigure 4.10 shows the contents displayed on an HTML\nbrowser in a small screen device. Figure 4.10 (a) shows thenews page without content adaptation, presenting only the top\none-ninth of the original content. In contrast, Figure 4.10\n(b) shows the result of adaptation by the page splitting plug-\nin. It is important to note here that the page splitting not\nonly reduces the content to be delivered, but also places the\nprimary content near the top of the fragmented page that is' metadata={'source': 'Semantic_Web.pdf', 'page': 596}
"
"page_content='597\nprovides with navigational features. This result of adaptation\nfollows the design guidelines for reducing scrolling duringinteraction with small screens:\nplacing navigational features\n(menu bars etc.) near the top of pages ,placing key\ninformation at the top of pages , andreducing the amount of\ninformation on the page [Jones et al,. 1999, p. 58].\nFigure 14.10 Comparison of display on a small-screen\ndevice\nSmall screens force users to employ frequent scrolling\nactivities that may affect the accessibility of contents as\nwell as the usability of devices. It has been reported that\nusers with small screens were 50% less effective than those\nwith large screens in completing retrieval tasks [Jones et\nal., 1999]. Therefore, page fragmentation based on the' metadata={'source': 'Semantic_Web.pdf', 'page': 597}
"
"page_content='598\nsemantic annotation will be more appropriate than page\ntransformation done by solely syntactic information, such asremoving white spaces, shrinking or removing images, and so\non. Semantic rearrangement is one of the critical limitations\nof the syntactic transformation approach. The navigational\nfeatures achieved by this semantic annotation are noteworthy\nfrom the perspective of Web content accessibility. Important\npoint here is that the semantic annotation help the page\nsplitting plug-in make better decision on the content\nadaptation.\n5. Discussion\n5.1.EmpiricalEvaluation\nReal-life Web documents cannot be the same for the long\ntime, but are updated and changed occasionally. Therefore, the\nfeasibility of the external annotation approach relies on the\nrobustness of an addressing expression annotating a portion of\na target document. Such addressing expressions, which are\ndescribed with XPath in this article, may encounter two types\nof problems due to the updates of an annotating document. One\nis the case when an addressing expression points no document\nelement to be annotated. Another case may happen when anexpression is forced to point an incorrect element as the\nresult of modification of the target document structure. The' metadata={'source': 'Semantic_Web.pdf', 'page': 598}
"
"page_content='599\nlatter case would be difficult to detect, because the proper\nsemantics of the original document are not representedexplicitly. The lack of the explicit semantics is the\nmotivation of the semantic annotations. The integrity of\naddressing location in the second type is an important issue\nthat requires further research, and beyond the scope of this\narticle. The first type of the addressing problem is taken\ninto account of the evaluation here.\nRobustness of the annotations for the news page (Figure\n14.9) is investigated with regard to the gradual changes of\nthe news page, considering the existence of pointing node inthe target document tree. Figure 14.11 shows a portion of the\ndocument tree of the original news page, with indication of\nthe nodes pointed by the six annotation descriptions in Figure\n14.9. The minimum depth of the annotated nodes is 2 ((a), (b),\nand (c) in Figure 14.11), while the maximum depth of the\nannotated node is 9 (Figure 14.11(e)). The news page of the\nsame URL has been saved as an HTML file once a day for 60days. The depth of the saved document trees was 22, and did\nnot changed throughout the 60 days.' metadata={'source': 'Semantic_Web.pdf', 'page': 599}
"
"page_content='600\nFigure 14.11 Annotated nodes in the news page\nRegardless of the unchanged maximum depth of the document\ntree, the news page was actually changed during the period.\nFigure 14.12 shows the numbers of changed nodes in each of\nsaved pages against the original news page. Changed nodes are\ncounted by calculating the difference between two document' metadata={'source': 'Semantic_Web.pdf', 'page': 600}
"
"page_content='601\ntrees [TreeDiff, 1999)]. The depth of changed nodes is\ndistinguished in Figure 14.12, and the number of changed nodeswas always more than 20 after the first 10 days. However, all\nthe changes were done for the nodes whose depth is greater\nthan or equal to 10, while the maximum depth of the annotated\nnodes was 9. Therefore, the node changes made no influence on\nthe locations of annotated nodes during the observed period.\nThis is merely a statement obtained from the observation of a\nparticular Web document during the limited period, and can\nnever be generalized to different situations. However, it is\npossible to draw an implication to a tactics for making theexternal annotations robust. The descriptions in Figure 14.9\nare annotating auxiliary portions of the news page, such as\nheader, side menu, and stock quote table. The auxiliary parts\nwould not be subject to change so often as compared with the\ntext contents of the news stories and their surrounding area.\nThe text of the lead story in the original news page was\nactually located in the table cell, whose depth was 13, asindicated at the bottom of Figure 14.11. Furthermore, only one\ntype of XPath expressions was used in the annotations in\nFigure 14.9, because that type of expressions allows to point\nat most one node regardless of the document structure.\nHowever, it is possible to provide other types of XPath\nexpressions, taking account of the robustness of the\naddressing. This is also an important research issue that\nrequires further investigation.' metadata={'source': 'Semantic_Web.pdf', 'page': 601}
"
"page_content='602\nFigure 14.12 Number of changed nodes in the news page\n5.2.ComparisonwithRelatedWork\nAlthough annotation-based transcoding is an approach to\nrealizing content adaptation, it is possible to think about\nthe other approaches on the basis of the intermediary-based\ntranscoding platform. One is to provide a custom-tailored\ntranscoding module that runs without any external annotations.An automatic adaptation process has been proposed for device-\nindependent access to Web contents [Bickmore et al., 1997]. A\nheuristic planner, which searches a document transformation\nspace, selects the most promising state that occupies the\nsmallest display. It is reported, however, that in the worst\ncase the planner produces 80 versions of the document during\nthe search process. If metadata or annotation is provided' metadata={'source': 'Semantic_Web.pdf', 'page': 602}
"
"page_content='603\nwith the planner, the search space will be pruned more\neffectively. Note here that it is not an issue of whethermetadata is embedded or external. The point is that metadata\nmust be provided explicitly rather than implicitly in the\nadaptation algorithm.\nAnother approach is to use a general-purpose\ntransformation engine such as an XSLT processor that employs\nexternally provided transformation rules [XSLT, 1999]. XSLT\nrules can also be regarded as external annotations, because\nXSLT rules can be given as a separate style sheet externally\nand each rule entails an XPath expression that points totarget nodes to be transformed. The advantage of the general-\npurpose transformation engine is the broadness of its\napplicability, while the HTML-page splitting plug-in, for\nexample, is limited to the page-splitting task at hand.\nHowever, XSLT or XSL Transformation Language is more like a\nprogramming language rather than a declarative markup\nlanguage. Therefore, authors of XSLT rules need to have in-depth understanding of the programming by XSLT, so that the\nauthors can fully exploit the capability of the language.\nIn contrast, the advantage of a task-specific transcoding\nengine lies in the task-specific semantics that can be made\nexplicit in the document definition of annotation vocabulary.\nTo put it another way, adoption of task-specific transcoding\napproach is to trade the scope of applicability in the' metadata={'source': 'Semantic_Web.pdf', 'page': 603}
"
"page_content='604\ngeneral-purpose transformation approach, for task-specific\nsemantics articulated in the specification of an annotationvocabulary. In the case of the page splitting plug-in, roles\nsuch as header, auxiliary, and spacer supplement semantics\nthat cannot be prescribed in the existing Web documents. In\nthis sense, the importance of external annotation lies in the\nrole of the mediating representation that articulates the\nsemantics to be shared between human annotators and a content\nadaptation engine.\nConclusions\nThe external annotation framework presented in this\narticle is applicable not only to transcoding for Web-enabled\npersonal devices, but also to other cases in which content\nadaptation is desirable. For example, when HTML documents are\ntranslated into multiple target languages by means of a\nmachine translation engine, linguistic annotations would be\nhelpful for improving the translation accuracy [Nagao et al.,2001]. In other situations, content adaptation may be needed,\nso that user-side constraints can be taken into account. For\nexample, text contents should be transcoded into audio content\nfor those who cannot rely on the visual Web access [Asakawa et\nal., 2001].\nWeb-content transcoding allows Web documents to be reused\nfor purposes that are not necessarily expected by the original' metadata={'source': 'Semantic_Web.pdf', 'page': 604}
"
"page_content='605\ncontent creators. Taking account of the situations of content\nre-purposing, Web documents are not always given with explicitsemantics that are understandable by a content adaptation\nsoftware. The benefit of annotation as supplementary semantics\nis obvious for HTML documents, because they are encoded with\nan presentation markup, namely, HTML for the display on Web\nbrowsers. However, XML documents can also be the target of\nexternal annotation. Platform-independent markup languages\nhave been investigated for the abstract specifications of Web\napplications [Gellersen and Gaedke, 1999; Kitayama et al.,\n1999], XML user interface [Abrams et al., 1999], Web sites[Ceri et al., 2000], and online interaction [Xforms, 2001].\nSuch abstract specifications ultimately need to be specialized\nto be an platform-dependent representations. Web-content\nannotation is an approach promising for the specializations of\nabstract contents, and the external annotation framework\npresented in this article is applicable to XML documents as\nwell as HTML documents, as long as they are represented asinstances of a document object model [DOM, 1998]. Semantic\nannotation is thus a key to taking the full advantage of Web\ncontents, by means of not only re-purposing the existing,\nlegacy contents, but also elaborating platform-independent\nabstract content models for diverse needs of content use.' metadata={'source': 'Semantic_Web.pdf', 'page': 605}
"
"page_content='606\nAcknowledgements\nThis chapter has grown out of the two papers. One is\n""Authoring tool for Web content transcoding"" by M. Hori, K.\nOno, G. Kondoh, and S. Singhal presented at Markup\nTechnologies ’99, Philadelphia, PA, 7-9 December, 1999.\nAnother paper is ""Annotation-based Web content transcoding"" by\nM. Hori, G. Kondoh, K. Ono, S. Hirose, and S. Singhal\npresented at the 9thInternational World Wide Web Conference,\nAmsterdam, Netherlands, 15-19 May, 2000. The author would like\nto thank the participants at the both conferences whose\ncontributions have aided the development of this article.\nReferences\n[Abe & Hori, 2001] Abe, M. and Hori, M. (2001). Visual composition of XPath expressions for external\nmetadata authoring. ResearchReportRT-0406, IBMTokyo Research Laboratory.\n[Abrams et al., 1999] Abrams, M., Phanouriou, C., Batongbacal, A. L., Williams, S. M., and Shuster, J. E.\n(1999). UIML: an appliance-independent XML user interface language. Proceedings of the 8th\nInternationalWorld WideWeb Conference (WWW8),pp.618-630,Toronto, Canada.\n[Asakawa & Takagi, 2001] Asakawa, C. and Takagi, H. (2001). Transcoding system for non-visual Web access\n(2): annotation-based transcoding. Sixteenth International Conference on Technologies and Persons with\nDisabilities(CSUN2001).\n[AWCT, 1999] AnnotationofWeb Content for Transcoding. W3CNote, http://www.w3.org/TR/annot/.\n[Barret & Maglio, 1998] Barrett, R. and Maglio, P. P. (1998). Intermediaries: New places for producing and\nmanipulating Web content. Proceedings of the 7th International World Wide Web Conference (WWW7),pp. 509-518,Brisbane, Australia.' metadata={'source': 'Semantic_Web.pdf', 'page': 606}
"
"page_content='607\n[Barret & Maglio, 1999] Barrett, R. and Maglio, P. P. (1999). Intermediaries: An approach to manipulating\ninformation streams. IBM Systems Journal, Vol. 38, No.4, pp. 629-641.\n[Bickmore and Schilit 1997] Bickmore, T. W. and Schilit, B. N. (1997). Digestor: Device-independent access to\nthe World Wide Web. Proceedings of the 6th International World Wide Web Conference (WWW6), pp.\n1075-1082, SantaClara, CA.\n[Britton et al., 2001] Britton, K. H., Li, Y., Case, R., Seekamp, C., Citron, A., Topol, B., Floyd, R., and Tracey,\nK. (2001). Transcoding: extending e-business to new environments. IBM Systems Journal, Vol. 40, No.\n1, pp.153-178.\n[Ceri et al., 2000] Ceri, S., Fraternali, P., and Bongio, A. (2000). Web modeling language (WebML): a modeling\nlanguage for designing Web sites. Proceedings of the 9th International World Wide Web Conference\n(WWW9),pp. 137-157, Amsterdam, Netherlands.\n[CCPP, 2000] Composite Capabilities/Preference Profiles: Requirements and Architecture. W3C Working Draft,\nhttp://www.w3.org/TR/CCPP-ra/.\n[CCPP-exchange, 1999] CC/PP exchange protocol based on HTTP Extension Framework, W3C Note,\nhttp://www.w3.org/TR/NOTE-CCPPexchange.\n[Denoue & Vignollet, 2000] Denoue, L. and Vignollet, L. (2000). An annotation tool for Web browsers and its\napplications to information retrieval. Proceedings of the 6thConference on Conten-Based Multimedia\nInformation Access(RIAO 2000), Paris, France.\n[DOM, 1998] Document Object Model (DOM) Level 1 Specification Version 1.0. W3C Recommendation,\nhttp://www.w3.org/TR/REC-DOM-Level-1/.\n[Erdmann et al., 2000] Erdmann, M., Maedche, A., Schnurr, H.-P., and Staab, S. (2000). From manual to semi-\nautomatic semantic annotation: about ontology-based text annotation tools. Proceedings of the COLING2000Workshop onSemanticAnnotationand Intelligent Content, Luxembourg.\n[Foxand Brewer 1996] Fox, A. and Brewer, E. A. (1996). Reducing WWW latencyand bandwidth requirements\nbyreal-time distillation. Proceedingsofthe 5thInternational World Wide Web Conference (WWW5), pp.1445-1456,Paris, France.\n[Gellersen & Gaedke, 1999] Gellersen, H.-W. and Gaedke, A. (1999). Object-oriented Web application\ndevelopment. IEEE InternetComputing, Vol. 3, No. 1, pp. 60-68.' metadata={'source': 'Semantic_Web.pdf', 'page': 607}
"
"page_content='608\n[Heflin&Hendler, 2000] Heflin, J. and Hendler, J.(2000).Semantic interoperabilityonthe Web. Proceedings of\nExtreme Markup Languages2000, pp. 111-120.\n[Hori et al., 2000a] Hori, M., Kondoh, G., Ono, K., Hirose, S., and Si nghal, S. ( 2000a). Annotation-based Web\ncontent transcoding. Proceedings of the 9th International World Wide Web Conference (WWW9), pp.\n197-211,Amsterdam, Netherlands.\n[Hori et al., 2000b] Hori, M., Ono, K., Kondoh, G., and Singhal, S. ( 2000b). Authoring tool for Web content\ntranscoding. Markup Languages:Theory&Practice, Vol. 2, No. 1, pp. 81-106.\n[HTML, 1999] HTML4.01Specification. W3CRecommendation, http://www.w3.org/TR/html401/.[Jones et al., 1999] Jones, M., Marsden, G., Nasir, N., Boone, K., and Buchanam, G. (1999). Improving Web\ninteraction on small displays. Proceedings of the 8th International World Wide Web Conference\n(WWW8),pp. 51-59,Toronto, Canada.\n[Kitayama et al., 1999] Kitayama, F., Hirose, S., Kondho, G., and Kuse, K. (1999). Design of a framework for\ndynamic content adaptation to Web-enabled terminals and enterprise applications. Proceedings of the\nSixth Asia Pacific Engineering Conference (APSEC’99), pp. 72-79,Takamatsu, Japan.\n[Lassila 1998] Lassila, O. (1998).Web metadata:a matter ofsemantics. IEEE Internet Computing, Vol. 2, No. 4,\npp. 30-37.\n[Mea et al., 1996] Mea, V. D., Beltrami, C. A., Roberto, V., and Brunato, D. (1996). HTML generation and\nsemantic markup for telepathology. Proceedings of the 5th International World Wide Web Conference\n(WWW5),pp. 1085-1094,Paris, France.\n[Nagao et al., 2001] Nagao, K., Shirai, Y., and Kevin, S. (2001). Semantic annotation and transcoding: making\nWeb content more accessible. IEEE Multimedia, Vol.8, No.2 (toappear).\n[RDF, 1999] Resource Description Framework (RDF) Model and Syntax Specification. W3C Recommendation,\nhttp://www.w3.org/TR/REC-rdf-syntax/.\n[Rousseau et al. 1999] Rousseau, F., Macias, J. A., de Lima, J. V., and Duda, A. (1999). User adaptable\nmultimedia presentations for the World WideWeb.Proceedingsofthe 8thInternational World WideWebConference (WWW8),pp.195-212,Toronto, Canada.\n[Sakairi & Takagi, 2001] Sakairi, T. and Takagi, H. (2001). An annotation editor for non-visual Web access.\nProceedings of the 9\nthInternational Conference on Human-Computer Interaction (HCI International\n2001), NewOrleans, LA(to appear).' metadata={'source': 'Semantic_Web.pdf', 'page': 608}
"
"page_content='609\n[Schickler et al., 1996] Schickler, M. A. , Mazer, M. S., and Brooks, C. (1996). Pan-Browser support for\nannotations and other meta-information on the World Wide Web. Proceedings of the 5th InternationalWorldWide Web Conference (WWW5), pp. 1063-1074,Paris, France.\n[Style Sheets, 2000] Style Sheets Activity Statement. W3C User Interface Domain Activity Statement,\nhttp://www.w3.org/Style/Activity.\n[Thompson et al., 1999] Thompson, C., Pazandak, P., Vasudevan, V., Manola, F., Palmer, M., Hansen, G., and\nBannon, T. (1999). Intermediaryarchitecture: interposing middleware object services between Web client\nand server. ACM ComputingSurveys 31(2es) #14.\n[TreeDiff, 1999] XMLTreeDiff. alphaWorks, IBM Corp. http://www.alphaworks.ibm.com/tech/xmltreediff.\n[Vasudevan & Palmer, 1999] Vasudevan, V. and Palmer, M. (1999). On Web annotations: promises and pitfalls\nof current Web infrastructure. Proceedings of the 32\nndHawaii International Conference on Systems\nSciences, Maui, Hawaii.\n[WCAG, 1999] Web Content AccessibilityGuidelines 1.0. W3C Recommendation,http://www.w3.org/TR/WAI-\nWEBCONTENT/.\n[WBI,2000]Web Intermediaries (WBI). http://www.almaden.ibm.com/cs/wbi/.\n[WTP, 2001] WebSphere Transcoding Publisher, IBM Corp.\nhttp://www.ibm.com/software/webservers/transcoding/.\n[WTP Developer’s Guide, 2000]. IBM WebSphere Transcoding Publisher Version 3.5 Developer’s Guide. IBM\nCorp.\n[Xforms, 2001]. XForms1.0. W3CWorkingDraft, http://www.w3.org/TR/xforms/.\n[XML-names, 1999].NamespacesinXML. W3CRecommendation, http://www.w3.org/TR/REC-xml-names/.\n[XHTML-prof, 1999]. XHTML Document Profile Requirements. W3C Working Draft,\nhttp://www.w3.org/TR/xhtml-prof-req/.\n[Xlink, 2000]. XML Linking Language (XLink) Version 1.0. W3C Proposed Recommendation,\nhttp://www.w3.org/TR/xlink/.\n[Xpath, 1999]. XMLPathLanguage (XPath) Version1.0. W3CRecommendation, http://www.w3.org/TR/xpath.\n[Xpointer, 2001]. XML Pointer Language (XPointer) Version 1.0. W3C Working Draft,\nhttp://www.w3.org/TR/xptr.' metadata={'source': 'Semantic_Web.pdf', 'page': 609}
"
"page_content='610\n[XSLT, 1999]. XSLTransformations (XSLT) Version1.0. W3C Recommendation, http://www.w3.org/TR/xslt.\nFootnotes\n1IBM Tokyo Research Laboratory 1623-14 Shimo-tsuruma, Yamato-shi, Kanagawa 242-8502 Japan, Email:\nhorim@jp.ibm.com Phone:+81-462-73-4667, Fax:+81-462-74-4282' metadata={'source': 'Semantic_Web.pdf', 'page': 610}
"
"page_content='15. TaskAchievingAgents on the World Wide Web\nAustin Tate1, Jeff Dalton1, John Levine1and Alex Nixon1\n1. Introduction and Motivation\nThe World Wide Web currently acts as a vast electronic\nlibrary, serving information and providing search facilitiesfor accessing that information. However, given that the Web\nactually consists of a vast network of task achieving agents\n(humans and computers), this view of the Web as a static pool\nof information is only using a small fraction of its real\ncapabilities.\nThe idea of the Web being a place where you can ask agents\nto\ndothings and to planactivities seems intuitively\nattractive. However, the data models and standards developed\nto date for the Web mostly relate to information retrieval,\nrather than activity and the planning of future activity. In\norder to make the Web a place for ""doing things"" as well as\n""finding things"", we need shared models and ontologies to\nrepresent the entities involved in planning and doing:\nactivities, tasks, plans, agent capabilities, and so on.\nThe AI planning and the process modelling communities have\nrecently started to develop standards in these areas, for thepurpose of working on common models and sharing information\nabout activities and processes [Tate, 1998]. These common\nmodels and ontologies might form the generic core of a shared' metadata={'source': 'Semantic_Web.pdf', 'page': 611}
"
"page_content='612\n612ontology to support the movement of information and data\nrelating to activities over the World Wide Web.\nThis paper is in two parts. In the first part, we describe\nwork towards the creation of a common ontology and\nrepresentation for plans, processes and other information\nrelated to activity. We briefly describe the work going on in\ntwo areas: military planning and standards for representing\nactivities and processes.\nOur own systems are based on an underlying activity\nontology called <I-N-OVA>; this is described, together with\nthe more general <I-N-CA> constraint-based model forrepresenting synthesised artefacts. In both of these models,\nthe I stands for\nissues, which allows us to represent\nsynthesised artefacts which are not yet complete or which have\nsome outstanding issues to address. The list of outstanding\nissues is crucial in the communication of partial results\nbetween agents, which is clearly needed in multi-agent systems\nwhich work together to synthesise solutions.\nIn the second part, we describe our work on producing\ncollaborative multi-agent systems consisting of human and\ncomputer agents engaging in planning and plan execution\nsupport over the World Wide Web. These applications are based\non a generic interface for web-based task achieving agents\ncalled Open Planning Process Panels or O-P3[Levine, Tate &\nDalton, 2000]. These panels are described briefly to introduce\nthe work that follows. Three web-based applications are then' metadata={'source': 'Semantic_Web.pdf', 'page': 612}
"
"page_content='613\n613described: the O-Plan Web demonstration, the Air Campaign\nPlanning Process Panel (ACP3) and a version of O-Plan that can\nrun over the Web using a WAP-enabled mobile telephone. These\napplications are indicative of the kind of systems which we\nsee being deployed in the near future, where the Web site acts\nas an interface to one or more intelligent agents and the\ncommon representation of activity-related information is\ncrucial.\n2. Standards for Representing Activities\nIn the first part of this paper, we describe work towards\nthe creation of a common ontology and representation for\nplans, processes and other information related to activity.\nThere are two major stands of work here. In military\nplanning work, there has already been much work in developing\nshared models for planning and representing plans, such as the\nKRSL plan representation language, the Core Plan\nRepresentation (CPR) and the Shared Planning and ActivityRepresentation (SPAR).\nAt the same time, work in the standards community has\nattempted to standardize the terminology for talking about\nactivities and processes: examples include the Process\nInterchange Format (PIF), NIST Process Specification Language\n(PSL), and work by the Workflow Management Coalition (WfMC).\n[Tate, 1998] gives an overview and history of all these\nefforts and shows their relationship to the Shared Planning' metadata={'source': 'Semantic_Web.pdf', 'page': 613}
"
"page_content='614\n614and Activity Representation (SPAR) developed under the DARPA\nand USAF Research Laboratory planning initiative (ARPI). Fullreferences are provided in that paper and in its on-line copy\n2.\nOur own systems are based on the <I-N-OVA>3activity\nontology; this relates well to the other ontologies of\nactivity described above, such as SPAR, and can be considered\nas an abstract model which can underlie these. The <I-N-OVA>\nmodel is described in the following sections, together with\nthe more general <I-N-CA> model for representing synthesised\nartefacts.\n2.1.<I-N-OVA>and<I-N-CA>\nThis section presents an approach to representing and\nmanipulating plans and other synthesised artefacts in the form\nof a set of constraints. The <I-N-OVA> ( Issues–Nodes–\nOrderings/Variables/Auxiliary ) constraints model is used to\ncharacterise plans and processes. The more general <I-N-CA>\n(Issues–Nodes–Critical/Auxiliary ) constraints model can be\nused for wider applications in design, configuration and other\ntasks which can be characterised as the synthesis and\nmaintenance of an artefact or product.' metadata={'source': 'Semantic_Web.pdf', 'page': 614}
"
"page_content='615\n6152.2.Motivation\nFigure 15.1 Uses of <I-N-OVA> and <I-N-CA>\nAs shown in Figure 15.1, the <I-N-OVA> and <I-N-CA>\nconstraint models are intended to support a number of\ndifferent uses:\n•for automatic manipulation of plans and other synthesised\nartefacts and to act as an ontology to underpin such use;\n•as a common basis for human communication about plans and\nother synthesised artefacts;\n•as a target for principled and reliable acquisition of\nplans, models and product information;\n•to support formal reasoning about plans and other\nsynthesised artefacts.\n•These cover both formal and practical requirements and\nencompass the requirements for both human and computer-based\nplanning and design systems.\nThe <I-N-OVA> model is a means to represent plans and\nactivity as a set of constraints. By having a clear' metadata={'source': 'Semantic_Web.pdf', 'page': 615}
"
"page_content='616\n616description of the different components within a plan, the\nmodel allows for plans to be manipulated and used separatelyfrom the environments in which they are generated. The\nunderlying thesis is that activity can be represented by a set\nof constraints on the behaviours possible in the domain being\nmodelled and that activity communication can take place\nthrough the interchange of such constraint information.\n<I-N-OVA>, when first designed [Tate, 1996b], was intended\nto act as a bridge to improve dialogue between a number of\ncommunities working on formal planning theories, practical\nplanning systems and systems engineering process managementmethodologies. It was intended to support new work then\nemerging on automatic manipulation of plans, human\ncommunication about plans, principled and reliable acquisition\nof plan information, mixed-initiative planning and formal\nreasoning about plans. It has since been used as the basis for\na number of research efforts, practical applications and\nemerging international standards for plan and processrepresentations. For some of the history and relationships\nbetween earlier work in AI on plan representations, work from\nthe process and design communities and the standards bodies,\nand the part that <I-N-OVA> played in this, see [Tate, 1998].\n2.3.RepresentingPlansin<I-N-OVA>\nA plan is represented as a set of constraints which\ntogether limit the behaviour that is desired when the plan is' metadata={'source': 'Semantic_Web.pdf', 'page': 616}
"
"page_content='617\n617executed. The set of constraints are of three principal types\nwith a number of sub-types reflecting practical experience in\na number of planning systems.\nPlan Constraints\nI - Issues(Implied Constraints)\nN - Node Constraints (on Activities)\nOVA- Detailed Constraints\nO -Ordering Constraints\nV- Variable Constraints\nA- AuxiliaryConstraints\n- AuthorityConstraints\n- Condition Constraints- Resource Constraints\n- Spatial Constraints\n- Miscellaneous Constraints\nFigure 15.2 <I-N-OVA> Constraint Model of Activity\nThe node constraints (these are often of the form ""include\nactivity"") in the <I-N-OVA> model set the space within which a\nplan may be further constrained. The I (issues) and OVA\nconstraints restrict the plans within that space which are\nvalid. Ordering (temporal) and variable constraints are\ndistinguished from all other auxiliary constraints since theseact as\ncross-constraints4, usually being involved in\ndescribing the others – such as in a resource constraint which\nwill often refer to plan objects/variables and to time points\nor ranges.\nIn [Tate, 1996b], the <I-N-OVA> model is used to\ncharacterise the plan representation used within O-Plan\n[Currie & Tate, 1991; Tate, Drabble and Dalton, 1994] and isrelated to the plan refinement planning method used in O-Plan.' metadata={'source': 'Semantic_Web.pdf', 'page': 617}
"
"page_content='618\n618We have generalised the <I-N-OVA> approach to design and\nconfiguration tasks with I, N, CA components - where Crepresents the ""critical constraints"" in any particular domain\n- much as certain O and V constraints do in a planning domain.\nWe believe the approach is valid in design and synthesis tasks\nmore generally - we consider planning to be a limited type of\ndesign activity. <I-N-CA> is used as an underlying ontology\nfor the I-X project\n5.\n2.4.Rationale for the Categories of Constraints\nwithin<I-N-OVA>\nPlanning is the taking of planning decisions (I) which\nselect the activities to perform (N) which creates, modifies\nor uses the plan objects or products (V) at the correct time\n(O) within the authority, resources and other constraints\nspecified (A). The Issues (I) constraints are the items on\nwhich selection of Plan Modification Operators is made in\nagenda based planners.\nOthers have recognised the special nature of the inclusion\nof activities into a plan compared to all the otherconstraints that may be described. [Khambhampati & Srivastava,\n1996] differentiate Plan Modification operators into\n""progressive refinements"" which can introduce new actions into\nthe plan, and ""non-progressive refinements"" which just\npartitions the search space with existing sets of actions in' metadata={'source': 'Semantic_Web.pdf', 'page': 618}
"
"page_content='619\n619the plan. They call the former genuine planning refinement\noperators, and think of the latter as providing the schedulingcomponent.\nIf we consider the process of planning as a large\nconstraint satisfaction task, we may try to model this as a\nConstraint Satisfaction Problem (CSP) represented by a set of\nvariables to which we have to give a consistent assignment of\nvalues. In this case we can note that the addition of new\nnodes (""include activity"" constraints in <I-N-OVA>) is the\nonly constraint which can add variables dynamically to the\nCSP. The Issue (I) constraints may be separated into twokinds: those which may (directly or indirectly) add nodes to\nthe plan and those which cannot. The I constraints which can\nlead to the inclusion of new nodes are of a different nature\nin the planning process to those which cannot.\nOrdering (temporal) and variable constraints are\ndistinguished from all other auxiliary constraints since these\nact as cross-constraints, usually being involved in describingthe others – such as in a resource constraint which will often\nrefer to plan objects/variables and to time points or\nintervals.' metadata={'source': 'Semantic_Web.pdf', 'page': 619}
"
"page_content='620\n620\nFigure 15.3 I-X - Two Cycles of Processing - Handle\nIssues, Respect Constraints\n2.5.SortedFirstOrderLogicBase,andXML\n<I-N-OVA> and <I-N-CA> are meant as conceptual models\nwhich can underlie any of a range of languages which can\ndescribe activities, plans, processes and other synthesised\nartefacts. For example, O-Plan is based on <I-N-OVA>, but\nutilises the Task Formalism domain description language which\nhas a simple keyword introduced syntax.\nIt is anticipated that any <I-N-OVA> or the more general\n<I-N-CA> model in whatever language or format it is expressed\ncan be reduced to a conjunctive set of statements in first\norder logic with strong requirements on the type of the terms\ninvolved in each statement – i.e. a sorted first order logic.' metadata={'source': 'Semantic_Web.pdf', 'page': 620}
"
"page_content='621\n621See [Polyak & Tate, 1998] for further details, and for a use\ndescribed in a planning domain modelling support system.\n<I-N-OVA> and <I-N-CA> constraint sets lend themselves\nvery well to being used in eXtendible Markup Language (XML)\nrepresentations of synthesised artefacts, especially when\nthese are still in the process of being designed or\nsynthesised. The processes that are used to do this synthesis\nand the collaborations and capabilities involved can also be\ndescribed in <I-N-OVA> and/or <I-N-CA>.\n3. Web-Based Applications\nIn the second part, we describe our work on producing\ncollaborative multi-agent systems consisting of human and\ncomputer agents engaging in planning and plan execution\nsupport over the World Wide Web. These applications are based\non a generic interface for web-based task achieving agents\ncalled Open Planning Process Panels or O-P3[Levine, Tate &\nDalton, 2000]. These panels are described briefly to introducethe work that follows. Three web-based applications are then\ndescribed: the O-Plan Web demonstration, the Air Campaign\nPlanning Process Panel (ACP\n3), and a version of O-Plan that can\nrun over the Web using a WAP-enabled mobile telephone. These\napplications are indicative of the kind of systems which we\nsee being deployed in the near future, where the Web site acts\nas an interface to one or more intelligent agents and the' metadata={'source': 'Semantic_Web.pdf', 'page': 621}
"
"page_content='622\n622common representation of activity-related information is\ncrucial.\n3.1.OpenPlanningProcessPanels\nReal world planning is a complicated business. Courses of\naction to meet a given situation are constructed\ncollaboratively between teams of people using many differentpieces of software. The people in the teams will have\ndifferent roles, and the software will be used for different\npurposes, such as planning, scheduling, plan evaluation, and\nsimulation. Alternative plans will be developed, compared and\nevaluated, and more than one may be chosen for briefing. In\ngeneral, planning is an example of a multi-user, multi-agent\ncollaboration in which different options for the synthesis of\na solution to given requirements will be explored.\nThe process of planning is itself the execution of a plan,\nwith agents acting in parallel, sharing resources,\ncommunicating results and so on. This planning process can be\nmade explicit and used as a central device for workflow\ncoordination and visualisation.\nWe have used this idea to create Open Planning Process\nPanels (O-P\n3). These panels are used to coordinate the workflow\nbetween multiple agents and visualise the development andevaluation of multiple courses of action (COAs). The generic\nnotion of O-P\n3has been used to implement an O-Plan two-user\nmixed-initiative planning Web demonstration and an Air' metadata={'source': 'Semantic_Web.pdf', 'page': 622}
"
"page_content='623\n623Campaign Planning Process Panel (ACP3). In the former, O-P3\ntechnology is used to enable the development and evaluation of\nmultiple COAs by a commander, a planning staff member and the\nO-Plan automated planning agent. In the latter, O-P3is used to\nbuild a visualisation panel for a complex multi-agent planning\nand evaluation demonstration which uses 11 different software\ncomponents and involves several users.\nO-P3technology could have an impact on several important\nresearch areas:\nAutomated planning: O-P3shows how automated planning aids\nsuch as AI planners can be used within the context of a widerworkflow involving other system agents and human users.\nComputer-supported cooperative work (CSCW): O-P\n3uses\nexplicit models of the collaborative planning workflow to\ncoordinate the overall effort of constructing and evaluating\ndifferent courses of action. This is generalisable to other\nteam-based synthesis tasks using activity models of the task\nin question (e.g. design or configuration).\nMulti-agent mixed-initiative planning: O-P3facilitates\nthe sharing of the actions in the planning process between\ndifferent human and system agents and allows for agents to\ntake the initiative within the roles that they play and the\nauthority that they have [Tate, 1993].\nWorkflow support: O-P3provides support for the workflow\nof human and system agents working together to create courses\nof action. The workflow and the developing artefact (i.e. the' metadata={'source': 'Semantic_Web.pdf', 'page': 623}
"
"page_content='624\n624course of action) can be visualised and guided using O-P3\ntechnology.\nThe kind of planning system that we envisage O-P3being\nused for is one in which the planning is performed by a team\nof people and a collection of computer-based planning agents,\nwho act together to solve a hard, real world planning problem.\nBoth the human and the software agents will act in given roles\nand will be constrained by what they are authorised to do, but\nthey will also have the ability to work under their own\ninitiative and volunteer results when this is appropriate.\nWhen the planning process is underway, the agents willtypically be working in parallel on distinct parts of the plan\nsynthesis. The agents will also be working in parallel to\nexplore different possible courses of action; for example,\nwhile one COA is being evaluated, another two may be in the\nprocess of being synthesised.\nThis section introduces O-P\n3technology. It begins with a\ndescription of the generic O-P3ideas, based on the central\nnotion of an explicit shared model of the activities involved\nin creating a plan – the planning process.\n3.2.GenericO-P3Technology\nThe generic O-P3is based on an explicit model of the\nplanning process, which is encoded using an activity modelling\nlanguage, such as <I-N-OVA>. This represents the planning\nprocess as a partially-ordered network of actions, with some' metadata={'source': 'Semantic_Web.pdf', 'page': 624}
"
"page_content='625\n625actions having expansions down to a finer level of detail\n(i.e. to another partially-ordered network).\nThe purpose of O-P3is to display the status of the steps\nin the planning process to the users, to allow the users to\ncompare the products of the planning process (i.e. the courses\nof action) and to allow the users to control the next steps on\nthe ""workflow fringe"" (i.e. what actions are possible next\ngiven the current status of the planning process). In the\ncontext of creating plans, O-P3is designed to allow the\ndevelopment of multiple courses of action and the evaluation\nof those courses of action using various plan evaluations.\nA generic O-P3panel would have any of a number of ""sub-\npanels"", which can be tailored to support specific users or\nuser roles. These include:\nA course of action comparison matrix showing:\nCOAs vs elements of evaluation, with the plan evaluations\nbeing provided by plug-in plan evaluators or plan evaluation\nagents;\nthe steps in the planning process (from the explicit\nprocess model), the current status of those steps (the state\nmodel), and control for the human agent of what action to\nexecute next;\ntheissuesoutstanding for a COA that is being synthesised\nand which must be addressed before the COA is ready to\nexecute;' metadata={'source': 'Semantic_Web.pdf', 'page': 625}
"
"page_content='626\n626a graphical display showing the status of the planning\nprocess as a PERT chart, which is a useful alternative view ofthe planning process to that given by the tabular matrix\ndisplay;\nother visualisations, such as bar charts, intermediate\nprocess product descriptions, and textual description of\nplans.\nThe generic O-P\n3methodology for building Open Planning\nProcess Panels consists of the following steps:\nConsider the agents (human and system) who are involved in\nthe overall process of planning. Assign roles and authoritiesto these agents.\nConstruct an activity model of the planning process,\nshowing the partial ordering and decomposition of the actions\nand which agents can carry out which actions. This activity\nmodel could be represented using an activity modelling\nlanguage such as <I-N-OVA>.\nBuild a model of the current state of the planning process\nand an activity monitor which will update this state model as\nactions in the planning process take place.\nConstruct appropriate O-P\n3interfaces for each of the\nhuman agents in the planning process, taking into account the\nrole which they play in the interaction. This means that each\ndifferent user role will have an O-P3interface which is\ntailored to the overall nature of their task.' metadata={'source': 'Semantic_Web.pdf', 'page': 626}
"
"page_content='627\n627The O-P3agent interfaces then allow the human agents to\nplay their part in the overall planning process, alongside thesystem agents, which will be AI planners, schedulers, plan\nevaluators and so on. This is illustrated in Figure 15.4.\nFigure 15.4 Using O-P3Interfaces\n4. Application 1 – O-Plan on the Web\nThe O-Plan project [Tate, Drabble & Dalton, 1996; Tate,\nDalton and Levine, 1998] was concerned with providing support\nfor mixed-initiative planning. The web-based demonstration\ndescribed here6shows interaction between two human agents and\none software planning agent (the O-Plan plan server). Theoverall concept for our demonstrations of O-Plan acting in a\nmixed-initiative multi-agent environment is to have humans and\nsystems working together to populate the COA matrix component\nof the O-P\n3interface.' metadata={'source': 'Semantic_Web.pdf', 'page': 627}
"
"page_content='628\n628\nFigure 15.5 Communication between TA and Planner\nFigure 15.6 Roles of the Task Assigner and the Planner\nAs shown in Figure 15.5, we envisage two human agents\nacting in the user roles of Task Assigner and Planner User,\nworking together to explore possible solutions to a problem\nand making use of automated planning aids to do this. Figure15.6 shows how the two human agents work together to populate\nthe matrix. The Task Assigner sets the requirements for a\nparticular course of action (i.e. what top level tasks must be' metadata={'source': 'Semantic_Web.pdf', 'page': 628}
"
"page_content='629\n629performed), selects appropriate evaluation criteria for the\nresulting plans and decides which courses of action to preparefor briefing. The Planner User works with O-Plan to explore\nand refine the different possible course of action for a given\nset of top level requirements. The two users can work in\nparallel, as is demonstrated in the example scenario (Levine,\nTate and Dalton, 2000).\nThe overall planning task is thus shared between three\nagents who act in distinct user and system roles. The Task\nAssigner (TA) is a commander who is given a crisis to deal\nwith and who needs to explore some options. This person willbe given field reports on the developing crisis and\nenvironmental conditions. The Planner User is a member of\nstaff whose role is to provide the Task Assigner with plans\nwhich meet the specified criteria. In doing this, the Planner\nUser will make use of the O-Plan automated planning agent,\nwhose role is to generate plans for the Planner User to see.\nThe Planner User will typically generate a number of possiblecourse of action using O-Plan and only return the best ones to\nthe Task Assigner.\nFor our current demonstration, we are using a general\npurpose logistics and crisis operations domain which is an\nextension of our earlier Non-Combative Evacuation Operations\n(NEO) and logistics-related domains [Reece et al., 1993]. This\ndomain, together with the O-Plan Task Formalism (TF)' metadata={'source': 'Semantic_Web.pdf', 'page': 629}
"
"page_content='630\n630implementation, is described in detail by [Tate, Dalton &\nLevine 1998].\nThe two human users are provided with individual O-P3\npanels which are implemented using a CGI-initiated HTTP serverin Common Lisp and which therefore run in any World Wide Web\nbrowser – the Common Lisp process returns standard HTML pages.\nThis way of working has many advantages:\nthe two users can be using different types of machine\n(Unix, PC, Mac) and running different types of Web browser\n(Netscape, Internet Explorer, Hotjava, etc.);\nthe only requirement for running O-Plan is a World Wide\nWeb connection and a Web browser (i.e. no additional software\ninstallation is needed);\nthe two users can be geographically separate – in this\ncase, voice communication via the telephone or\nteleconferencing is all that is required in addition to the\nlinked O-P\n3interfaces.\nThe planning process for the Task Assigner and the Planner\nUser is made explicit through the hypertext options displayed\nin the process parts of the O-P3panels. These are either not\npresent (not ready to run yet), active (on the workflow\nfringe) or inactive (completed). Further parts of the planning\nprocess are driven by issueswhich O-Plan or the plan\nevaluation agents can raise about a plan under construction\nand which can be handled by either or both of the human\nagents. Because the planning process is made explicit to the' metadata={'source': 'Semantic_Web.pdf', 'page': 630}
"
"page_content=""631\n631two users through these two mechanisms, other visualisations\nof the planning process itself are not required. However, theproducts of the planning process (the courses of action) are\ncomplex artefacts for which multiple views are needed. In the\ncurrent version, the courses of action can be viewed as a PERT\nnetwork, as a textual narrative, or as a plan level expansion\ntree (all at various levels of detail).\nThe user roles are arranged such that the Task Assigner\nhas authority over the Planner User who in turn has authority\nover O-Plan. This means that the Task Assigner defines the\nlimits of the Planner User's activity (e.g. only plan to level2) and the Planner User then acts within those bounds to\ndefine what O-Plan can do (e.g. only plan to level 2 and allow\nuser choice of schemas). Other aspects of what the two users\nare authorised to do are made explicit by the facilities\nincluded in their respective panels.\n4.1.TheCOAComparisonMatrix\nThe two panels for the Task Assigner and Planner User are\nshown in Figure 15.7 and Figure 15.8. Each user has control\nover the plan evaluation elements which are shown, to enable\nthe critical elements of evaluation to be chosen. In the\nexample scenario given later, the Task Assigner is onlyinterested in the minimum duration and the effectiveness, so\nonly these are selected. On the other hand, the Planner User"" metadata={'source': 'Semantic_Web.pdf', 'page': 631}
"
"page_content=""632\n632wants a variety of data to pick the best COA, so all\nevaluations are shown.\nFigure 15.7 O-Plan Task Assigner's Panel"" metadata={'source': 'Semantic_Web.pdf', 'page': 632}
"
"page_content=""633\n633\nFigure 15.8 O-Plan Planner User's Panel\nThe role of the Task Assigner is to set up the top level\nrequirements for a course of action. Once this is done, the\nCOA is passed across to the Planner User, whose matrix is\ninitially blank. The Planner User then explores a range of\npossible COAs for the specified requirements and returns the\nbest ones to the Task Assigner. When the Planner User returns"" metadata={'source': 'Semantic_Web.pdf', 'page': 633}
"
"page_content=""634\n634a COA to the Task Assigner, the column for that COA appears in\nthe Task Assigner's matrix. The Planner User and the TaskAssigner can be working in parallel, as demonstrated in the\nscenario.\n5. Application2–A C P3\nOne of the integrated demonstrations from the US DARPA\nARFL/Rome Planning Initiative (ARPI) [Tate, 1996a] brings\ntogether eleven, separately developed, software systems forplanning and plan evaluation. When the demonstration is run,\nthese systems work together to create and evaluate multiple\ncourses of action in the domain of Air Campaign Planning. The\nsystems communicate with each other by exchanging KQML\nmessages [Finin, Labrou & Mayfield, 1997]. Finding out what\nis happening at any given time could (in theory) be done by\nwatching these KQML messages, but this was obviously less than\nideal as these messages use technological terms which are far\nremoved from the terminology used by the user community.\nOur aim was to use O-P\n3technology to build a\nvisualisation component for this demonstration which would\nallow the target end users to view the current state of the\nplanning process in process terms they are familiar with. This\nhas resulted in ACP3– the Air Campaign Planning Process Panel."" metadata={'source': 'Semantic_Web.pdf', 'page': 634}
"
"page_content='635\n6355.1.ModellingthePlanningProcess\nThe software components of the ARPI demonstration can be\ndescribed as performing activities such as planning,\nscheduling, simulation and plan evaluation. Going into more\ndetail, we can talk about hierarchical task network planning\nand Monte Carlo simulation methods. However, end users aremore likely to conceive of the processes of Air Campaign\nPlanning in more general, domain-related terms, such as\n""develop JFACC guidance"" and ""create support plan"". The gaps\nin terminology and in levels of description can be bridged by\nbuilding models of the planning process which are rooted in\nestablished ACP terminology. We have therefore made use of the\npreviously elicited and verified ACP process models of\n[Drabble, Lydiard & Tate, 1997] as our source of terminology\nand as the basis of our IDEF3 models of the planning processfor the ARPI demonstration. The full models used for building\nACP\n3are described in [Aitken & Tate, 1997].\n5.2.BuildingACP3\nThe ACP3viewer is shown in Figure 15.9. The purpose of\nACP3is to track the overall planning process and display this\nto the viewers of the ARPI demonstration in a meaningful way\nusing appropriate military process terminology. The planning\nprocess is shown in two separate sub-panels. The tabular COA\ncomparison matrix shows COAs being developed (columns) against' metadata={'source': 'Semantic_Web.pdf', 'page': 635}
"
"page_content='636\n636a tree-based view of the planning process. The graph viewer\nsub-panel shows the planning process as a PERT network. Sincethe planning process consists of many nodes with expansions,\nthe graph viewer can only display one individual graph from\nthe planning process for one COA. Other graphs may be reached\nby clicking on nodes with expansions, and the end user can\nchoose which COA to view.\nFigure 15.9 The ACP3Viewer' metadata={'source': 'Semantic_Web.pdf', 'page': 636}
"
"page_content='637\n637The two views are required because the planning process in\nthe ARPI demonstration is a complex artefact. It is possibleto see the whole process for every COA in the COA matrix, but\ninformation about the partial ordering of the actions in a\ngraph is lost when the graph is converted to a tree structure.\nThe graph viewer shows the full partial ordering but space\nconsiderations mean that only a single graph for a single COA\ncan be shown at one time.\nThe ACP\n3process monitor works by watching for certain\nKQML messages which it can relate to the status of certain\nnodes in the ACP process models. As the demonstrationproceeds, the status of actions in the model progress from\nwhite (not yet ready to execute), to orange (ready to\nexecute), then to green (executing) and finally blue\n(complete). The final column in the COA matrix is labelled\n""overall"" and summarises the overall status of the COA\ncreation and evaluation process.\nThe panel is written entirely in Java to form the basis\nfor future Web-based process editors and activity control\npanels.\n6. Application 3 – WOPlan\nThe aim of this application [Nixon, 2000] ,[Nixon, Levine\n& Tate, 2000] was to create a mobile, limited media interface\nonto the O-Plan system. What was envisaged was the case of themobile human agent, equipped with a small, hand-held wireless' metadata={'source': 'Semantic_Web.pdf', 'page': 637}
"
"page_content='638\n638device, attempting to access a planning server in order to\nrequest some kind of course of action dependent on that user\'scurrent situation. Available web-based demonstrations of O-\nPlan [Tate, Dalton & Levine, 1998] ,[Levine, Tate & Dalton,\n2000] propose problem domains involving various military\ndisaster relief and evacuation operations, and it was thought\nthat a mobile telephone or\nPersonal Digital Assistant (PDA)\ncould be a tool for plan delivery to mobile units in such a\nsituation. Alternatively, a lone mobile user could access O-\nPlan to retrieve a plan to assist in a situation in which that\nuser had insufficient experience. Someone who had noexperience of engineering, for example, could retrieve a\nchecklist to perform in the event of their car breaking down.\nThe utility of such a system would depend not only on the\ndesign of the system itself, but also on the identification of\na suitable problem domain, in particular a domain in which the\nusers of the planner are likely to be on the move and in need\nof a course of action to solve an immediate task, andotherwise with no access to more conventional interfaces such\nas PCs. The name\nWOPlan(for ""Wireless O-Plan"") was given to\nthe system.\nThe design of a mobile interface onto O-Plan is made more\ndifficult by the limited screen sizes of mobile devices,\nespecially in the case of the mobile telephone. Development of\ninterfaces onto O-Plan to date has allowed for the luxury of a\nfull-sized terminal screen [Tate, Dalton & Levine, 1998] ,' metadata={'source': 'Semantic_Web.pdf', 'page': 638}
"
"page_content='639\n639[Levine, Tate & Dalton, 2000]. Some issues of human-computer\ninteraction which may not be critical when using a full-sizedcolour terminal interface become problematic in the case of\nthe limited media interface. Generally users of mobile devices\nexpect their interaction with the device to be brief, whereas\na user sitting down at a workstation is prepared for a more\nprolonged session. Browsing with a mobile device, especially\nwith a mobile telephone, is (with current devices) slow and\ncumbersome; data entry is difficult and should be kept to a\nminimum. A mobile telephone system needs only be slightly\npoorly designed to be rendered unusable; this is especiallytrue if the system is attempting to serve long lists of data\n(such as delivering a plan description), as long pages\nincrease download times and make navigation even slower and\nmore frustrating.\nWOPlan was developed as a web application which\ncommunicates with an instance of the core O-Plan engine and\ndelivers\nWireless Mark-up Language (WML) to a connected\nclient. The client may be any device with has a browser which\nconforms to the Wireless Application Protocol (WAP), such as a\nWAP-enabled mobile telephone7. The WOPlan web application is a\nJava Servlet. In development and testing the Nokia WAP Toolkit\nWML browser emulator8was used in place of a physical WAP\ndevice, and the servlet was hosted within the Tomcat Jakarta\nwebserver9. The client initiates a session by connecting to\nWOPlan, which connects to the O-Plan server and initialises' metadata={'source': 'Semantic_Web.pdf', 'page': 639}
"
"page_content='640\n640the service, and provides the user (on the WAP device) with a\nlist of available problem domains. The user is prompted tochoose a planning\ndomain(defined as aTask Formalism file),\nthen choose a taskwithin that domain, and then to view,\nexecute or evaluate the resulting plan, or to get a different\nplan that fulfils the same specified task.\nFigure 15.10 Architecture of WOPlan\nThe architecture of the WOPlan system is shown in Figure\n15.10. TheWAP Clientis the component with which the WOPlan\nuser interacts. The user activates WOPlan by initiating an\ninternet session on the WAP Client and navigating to the\ninternet address of the second component, the WOPlan servlet.\nThe WAP client could be any device with a WAP-enabled browser\nand internet connectivity, although WOPlan has only beentested in use with WAP emulator browsers running on a\nworkstation. Features to notice are the very limited screen\nsize (only four lines of text), and the user interface\nobjects. Directly below the screen are two arrow buttons (used\nfor scrolling up and down a WML page), in between which is a\nsingle Select button (used for selecting whatever item is' metadata={'source': 'Semantic_Web.pdf', 'page': 640}
"
"page_content='641\n641currently highlighted in the WML page). Below and left of the\nscreen is the Options button, which when available andselected should display a context-sensitive list of options.\nBelow and right of the screen is the Back button, which when\navailable and selected should navigate the user back to the\nprevious screen.\nThe\nWOPlan Servlet sits between the WAP Client and the\ncore O-Plan system. It accepts WAP requests from the client\n(or from multiple clients simultaneously) and communicates\nwith O-Plan, initially connecting to O-Plan as required and\nsending and receiving messages through the the standard O-PlanTask Assignment interface\n10. The development work for the\nWOPlan system has focused on the WOPlan servlet; it is in this\ncomponent that the logic specific to this implementation\nresides. The servlet dynamically creates WML pages, depending\non the responses it is receiving from O-Plan, which are then\nsent to the WAP Client for browsing. These WML pages may\nthemselves contain logic such as navigational directives oractions to perform after a certain length of time has passed.\nAlthough these directives are executed by the WAP Client,\ntheir source is the servlet.\nThe\nO-Plan Server sits in the bottom tier of the\narchitecture, responding to requests from the WOPlan servlet.\nIn user trials [Nixon, 2000], it was found that WOPlan\nprovides reasonably stable, scalable and usable access to the\nO-Plan system through a mobile telephone. Although it does not' metadata={'source': 'Semantic_Web.pdf', 'page': 641}
"
"page_content='642\n642provide all of the functionality which O-Plan, and in\nparticular the standard Task Assignment interface, has tooffer, it provides a useful subset of this functionality, and\nhas addressed the core issues of plan review and execution\nthrough the narrative and execution facilities (shown in\nFigure 15.11 and Figure 15.12).\nFigure 15.11 Example of WOPlan Narrative Display\nFigure 15.12 Example of WOPlan Execution Display' metadata={'source': 'Semantic_Web.pdf', 'page': 642}
"
"page_content='643\n643The investigation into the possible use of properties\nspecific to mobile devices was a secondary aim of the project.Two such properties which have been discussed are voice\ntechnology and mobile positioning technology. No provision for\nvoice or location integration exists in currently available\nWAP devices, although they will certainly become available in\nthe near future. One possibility for the former would involve\nthe use of\nVoiceXML, an XML variant intended to ""make Internet\ncontent and information accessible via voice and phone"".\nVoiceXML has the backing of industry giants IBM, AT\\&T and\nMotorola. The Motorola Mobile ADKis a development environment\nfor integrating VoiceXML and WML services11. The provision of\nLocation Services (LCS) as a standard for mobile devices is\nstill currently at the design stage. It is likely that some\nkind of service based on Global Positioning System (GPS)\ntechnology will be available to GSM ( Global System for Mobile\nCommunications – the current European standard) telephones in\nthe near future.\nThe execution facility provided with this version of\nWOPlan is little more than a prototype, but it offers\ninteresting possibilities for further development and\nresearch. Firstly it could certainly be improved, augmented\nand made more usable within the context of the WOPlan system.\nPerhaps more importantly, however, its simple, ordered, one-\ndimensional format, with action items emphasised according to\nwhat may done with those items, could provide a basic template' metadata={'source': 'Semantic_Web.pdf', 'page': 643}
"
"page_content='644\n644for any system with a mobile limited media interface which is\nattempting to deliver courses of action (COAs) to human agentson the move.\nConclusions\nIn this paper, we have argued that the World Wide Web\nshould be seen as a place for ""doing things"" as well as\n""finding things"". In order to do this, we need shared models\nand ontologies to represent plans, processes, activities,tasks and issues. We have described work towards this aim,\nconcentrating on the <I-N-OVA> constraint model of activity\nand the <I-N-CA> constraint model of synthesised artefacts.\nThese are designed to relate strengths from a number of\ndifferent communities: the AI planning community with both its\ntheoretical and practical system building interests; the\nissue-based design community, those interested in formal\nontologies for processes and products; the standards\ncommunity; those concerned with new opportunities in taskachieving agents on the world wide web; etc. We have\ndescribed three web-based applications which use such models\nand have been implemented to ""do things"" on the Web: the O-\nPlan Web demonstration, the Air Campaign Planning Process\nPanel (ACP\n3), and O-Plan use via a WAP phone – WOPlan. In the\nfuture, we envisage many more such applications, with the\npossibility that the individual planning applications can' metadata={'source': 'Semantic_Web.pdf', 'page': 644}
"
"page_content='645\n645communicate with each other using the <I-N-OVA> issue-based\nconstraint-based models of activity described in this paper.\nAcknowledgements\nThe O-Plan and I-X projects are sponsored by the Defense\nAdvanced Research Projects Agency (DARPA) and Air Force\nResearch Laboratory Command and Control Directorate under\ngrant number F30602-99-1-0024 and the UK Defence Evaluation\nResearch Agency (DERA). The US Government, DERA and theUniversity of Edinburgh are authorised to reproduce and\ndistribute reprints for their purposes notwithstanding any\ncopyright annotation hereon. The views and conclusions\ncontained herein are those of the authors and should not be\ninterpreted as necessarily representing official policies or\nendorsements, either express or implied, of DARPA, the Air\nForce Research Laboratory, the US Government, DERA, or the\nUniversity of Edinburgh.\nReferences\n[Aitken & Tate, 1997].Aitken, S. and Tate, A. (1997). Process Modelling of the TIE 97-1 Demonstration:\nModelling Complex Techniques Using ACP Terminology. ISAT Technical Report ISAT-AIAI/TR/6,Version1, December 1997.\n[Currie & Tate, 1991] Currie, K.W. and Tate, A. (1991). O-Plan: the Open Planning Architecture. Artificial\nIntelligence Vol. 51, No. 1, Autumn 1991, North-Holland.\n[Drabble, Lydiard & Tate, 1997] Drabble, B., Lydiard, T. and Tate, A. (1997). Process Steps, Process Product\nand SystemCapabilities. ISAT Technical Report ISAT-AIAI/TR/4, Version2, April 1997.' metadata={'source': 'Semantic_Web.pdf', 'page': 645}
"
"page_content='646\n646[Finin, Labrou & Mayfield, 1997] Finin, T., Labrou, Y. and Mayfield, J. (1997). KQML as an Agent\nCommunication Language. InBradshaw, J. (ed.) Software Agents, 291–316. MIT Press, Cambridge, MA.\n[Khambhampati & Srivastava, 1996] Khambhampati, S. and Srivastava, B. (1996). Unifying Classical Planning\nApproaches. Arizona State UniversityASUCSE TR96-006,July1996.\n[Levine, Tate & Dalton, 2000] Levine, J., Tate A. and Dalton, J. (2000). O-P3: Supporting the Planning Process\nusing Open Planning Process Panels. IEEE Intelligent Systems Vol. 15, No. 5, September/October 2000,\n56–62.\n[Nixon, 2000] Nixon, A. (2000). Limited Media Interface for AI Planning System. M.Sc. project dissertation,\nDivisionofInformatics, UniversityofEdinburgh, September 2000.\n[Nixon, Levine & Tate, 2000] Nixon, A., Levine, J. and Tate, A. (2000). Limited Media Interface for AI\nPlanning System. Proceedings of the 19th Workshop of the UK Planning and Scheduling Special InterestGroup (PLANSIG 2000),OpenUniversity, MiltonKeynes, UK.\n[Polyak & Tate, 1998] Polyak, S. and Tate, A. (1998). A Common Process Ontology for Process-Centred\nOrganisations. Knowledge Based Systems, to appear. Earlier version published as University ofEdinburghDepartmentof ArtificialIntelligence Researchpaper 930,1998.\n[Reece et al., 1993] Reece, G.A., Tate, A., Brown, D. and Hoffman, M. (1993). The PRECiS Environment.\nPaper presented at the ARPA-RL Planning Initiative Workshop at AAAI-93, Washington D.C., July1993.\n[Tate, 1993] Tate, A. (1993). AuthorityManagement – Coordination between Planning, Scheduling and Control.\nWorkshop on Knowledge-based Production Planning, Scheduling and Control at the International Joint\nConference on ArtificialIntelligence (IJCAI-93), Chambery, France, 1993.\n[Tate, 1994] Tate, A. (1994). Mixed Initiative Planning in O-Plan2. Proceedings of the ARPA/Rome Laboratory\nPlanningInitiative Workshop, Tucson, Arizona, USA. MorganKaufmann, Palo Alto, CA.\n[Tate, Drabble and Dalton, 1994] Tate, A., Drabble, B. and Dalton, J. (1994). Reasoning with Constraints within\nO-Plan2. Proceedings of the ARPA/Rome Laboratory Planning Initiative Workshop, Tucson, Arizona,USA. MorganKaufmann, Palo Alto, CA.\n[Tate, 1996a] Tate, A. (ed.) (1996a). Advanced Planning Technology - Technological Achievements of the\nARPA/Rome LaboratoryPlanningInitiative (ARPI). AAAI Press, Menlo Park, CA.' metadata={'source': 'Semantic_Web.pdf', 'page': 646}
"
"page_content='647\n647[Tate, 1996b] Tate, A. (1996b). Representing Plans as a Set of Constraints – the <I-N-OVA> Model.\nProceedings of the Third International Conference on Artificial Intelligence Planning Systems (AIPS-96),221–228.AAAI Press, Menlo Park, CA.\n[Tate, Drabble and Dalton, 1996] Tate, A., Drabble, B. and Dalton, J. (1996). O-Plan: a Knowledge-Based\nPlanner and its Applicationto Logistics. InTate, A. (1996a), 259–266.\n[Tate, 1998] Tate, A. (1998). Roots of SPAR - Shared Planning and Activity Representation. Knowledge\nEngineering Review Vol. 13, No. 1, March 1998. Cambridge University Press, Cambridge, UK. See also\nhttp://www.aiai.ed.ac.uk/project/spar/\n[Tate, Dalton & Levine, 1998] Tate, A., Dalton, J. and Levine, J. (1998). Generation of Multiple Qualitatively\nDifferent Plan Options. Proceedings of Fourth International Conference on AI Planning Systems (AIPS-\n98),Pittsburgh, USA, 27–34. AAAI Press, Menlo Park, CA.\nFootnotes\n1Artificial Intelligence Applications Institute, Division of Informatics, The University of Edinburgh, 80 South\nBridge, Edinburgh EH1 1HN, UK, {a.tate, j.dalton, j.levine}@ed.ac.uk,\nhttp://www.aiai.ed.ac.uk/project/ix/\n2http://www.aiai.ed.ac.uk/project/spar/\n3<I-N-OVA> is pronounced as in ""Innovate"".\n4Temporal (or spatio-temporal) and object constraints are cross-constraints specific to the planning task. The\ncross-constraintsinsome other domain maybe some other constrainttype.\n5I-X isthe successor project to O-Plan– see http://www.aiai.ed.ac.uk/project/ix/\n6Youcantrythis demonstrationout yourselfat http://www.aiai.ed.ac.uk/project/oplan/\n7Seehttp://www.wapforum.org/\n8Seehttp://www.forum.nokia.com/wapforum/\n9Seehttp://jakarta.apache.org/tomcat/\n10This is the standard API provided for external programs to communicate withO-Plan.\n11Seehttp://www.motorola.com/spin/mix/faqs.html' metadata={'source': 'Semantic_Web.pdf', 'page': 647}
"
"page_content='List ofFigures\nFigure 1.1 The layer language model for the WWW.............42\nFigure 1.2 The Protégé editor...............................44\nFigure 1.3 Text-To-Onto.....................................46\nFigure 1.4 Chimaera .........................................48\nFigure 1.5 A hyperbolic browsing interface ..................52\nFigure 1.6 Automatically generated semantic structure maps..56Figure 2.1 An example ontology..............................74\nFigure 2.2 An example instance..............................78\nFigure 2.3 Interoperability is based on shared ontologies...84\nFigure 2.4 The SHOE architecture............................95\nFigure 4.1 An partial ontology in OIL......................157Figure 4.2 An example for a schema definition..............162\nFigure 4.3 An example for a derived type definitions via\nextension...............................................168\nFigure 4.4 The relationship between schemas and ontologies in\na nutshell..............................................172\nFigure 4.5 The subclass-hierarchy of RDF Schema............182\nFigure 4.6 Step 1: materializing the hierarchy.............186\nFigure 4.7 Examples of the result of step 2 and 3..........189\nFigure 4.8 Example of XML document conforming the generated\nschema..................................................191\nFigure 4.9 An possible view on the data from Figure 4.8....193\nFigure 4.10 The is-a hierarchy of RDFS primitives (in bold)\nwith the OIL extenstions................................203' metadata={'source': 'Semantic_Web.pdf', 'page': 648}
"
"page_content='649\n649Figure 5.1 The IBROW approach. Based on user requirements\nabout a task to be solved, IBROW broker needs to find,integrate and adapt a set of suitable knowledge components\n(i.e., knowledge bases and problem-solving methods) on the\nWeb to solve a user-specified task. UPML is a central\ninteroperability element of the IBROW approach..........216\nFigure 5.2 The brokering process in IBROW, in which the UPML\nmarkup language plays a central role....................218\nFigure 5.3 The UPML architecture...........................222\nFigure 5.4 Class hierarchy of UPML. Each concept or relation\nin the UPML ontology is derived from the root ontologyentities represented by the boxes.......................223\nFigure 5.5 The\nLibraryconcept.............................224\nFigure 5.6 Knowledge Components: Ontology, Domain Model, Task,\nand PSM.................................................226\nFigure 5.7 Problem Decomposer and Reasoning Resource.......227\nFigure 5.8 Adapter.........................................228\nFigure 5.9 Bridge and Refiner..............................229Figure 5.10 Part of the XML Schema defining the XML\nrepresentation of the\nKnowledge Component concept.......232\nFigure 5.11 Part of the DTD for UPML defining the Library\nconcept.................................................232\nFigure 5.12 A fragment of the RDF Schema for UPML..........234\nFigure 5.13 A snapshot of the Protégé-based UPML editor: The\nontology of UPML modelled in Protégé as a hierarchy of\nclasses, extended with OCML-specific classes (left panel)' metadata={'source': 'Semantic_Web.pdf', 'page': 649}
"
"page_content='650\n650and the definition of the Library concept, which holds a\npointer to every component in the architecture (rightpanel)..................................................237\nFigure 5.14 A snapshot of the Protégé-based UPML editor: the\n‘heuristic optimal solution classifier’ instance of the\nProblem-Decomposer class, with its inference structure\ndiagram on the right....................................240\nFigure 6.1 Berners-Lee’s Architecture......................253\nFigure 6.2 An Ontology Spectrum............................256\nFigure 7.1 An example RDF data graph, capturing three\nstatements..............................................289\nFigure 7.2 An example RDF Schema, defining vocabulary and a\nclass hierarchy.........................................292\nFigure 7.3 Sesame’s architecture...........................301\nFigure 7.4 RALs can be stacked to add functionality........307\nFigure 7.5 Impression of the object-relational schema\ncurrently used with PostgreSQL..........................311\nFigure 7.6 A query is parsed and then optimized into an query\nobject model............................................313\nFigure 7.7 Sesame is positioned as a central tool in the On-\nTo-Knowledge project....................................318\nFigure 8.1 Notional Space of Problems......................334\nFigure 8.2 Problem Approaches..............................336\nFigure 8.3 Query Web Form..................................341\nFigure 8.4 Prototype Architecture..........................346\nFigure 8.5 Sample Output...................................365' metadata={'source': 'Semantic_Web.pdf', 'page': 650}
"
"page_content='651\n651Figure 9.1 A Knowledge-Based System for Plan Generation and\nEvaluation..............................................375\nFigure 9.2 An Integration Framework for a Plan Critiquer...379\nFigure 9.3 Integrating a Plan Critiquer in a Multi-Agent\nSystem..................................................380\nFigure 9.4 Critiquing Courses of Action....................382\nFigure 9.5 How Knowledge Bases are Built Today.............390\nFigure 9.6 A Resilient Hyper Knowledge Base (RHKB).........394\nFigure 9.7 Overview of the TRELLIS Architecture............403\nFigure 9.8 A Snapshot of the Current TRELLIS Interface.....405\nFigure 10.1 Example domain hierarchy.......................420Figure 10.2 Knowledge Builder..............................446\nFigure 10.3 Ontology hierarchy.............................448\nFigure 10.4 Iscape Builder.................................449\nFigure 10.5 Iscape Results using the Web interface.........451\nFigure 10.6 Iscape Processing Monitor......................452\nFigure 11.1 The Meaning Triangle...........................464\nFigure 11.2 Communication between human and/or software\nagents..................................................465\nFigure 11.3 Ontology Development...........................474\nFigure 11.4 OntoEdit.......................................481\nFigure 11.5 AIFB Intranet - System architecture............483\nFigure 11.6 Searching form based on definition of concept\nPerson..................................................487\nFigure 11.7 Templates generated from concept definitions...489\nFigure 11.8 Example for computing UC and OM................494' metadata={'source': 'Semantic_Web.pdf', 'page': 651}
"
"page_content='652\n652Figure 13.1 Letizia ""spirals out"" from the user’s current\npage, filtering pages through the user’s interest profile.\n........................................................548\nFigure 13.2 The traditional Information Retrieval paradigm.550\nFigure 13.3 The traditional theorem-proving paradigm.......552\nFigure 13.4 Glue syntax table..............................565\nFigure 14.1 Overview of an annotation-based transcoding....578\nFigure 14.2 Framework of external annotation...............579\nFigure 14.3 Intermediary between client and server.........583\nFigure 14.4 Authoring-time transcoding.....................585\nFigure 14.5 Examples of annotation descriptions............588Figure 14.6 Annotation-based transcoding by a page splitting\nplug-in.................................................591\nFigure 14.7 Layout of a real-life news page................593\nFigure 14.8 Annotation for fragmentation of an actual news\npage....................................................594\nFigure 14.9 Annotations for splitting the news page........596\nFigure 14.10 Comparison of display on a small-screen device597Figure 14.11 Annotated nodes in the news page..............600\nFigure 14.12 Number of changed nodes in the news page......602\nFigure 15.1 Uses of <I-N-OVA> and <I-N-CA>.................615\nFigure 15.2 <I-N-OVA> Constraint Model of Activity.........617\nFigure 15.3 I-X - Two Cycles of Processing - Handle Issues,\nRespect Constraints.....................................620\nFigure 15.4 Using O-P\n3Interfaces..........................627\nFigure 15.5 Communication between TA and Planner...........628' metadata={'source': 'Semantic_Web.pdf', 'page': 652}
"
"page_content=""653\n653Figure 15.6 Roles of the Task Assigner and the Planner.....628\nFigure 15.7 O-Plan Task Assigner's Panel...................632Figure 15.8 O-Plan Planner User's Panel....................633\nFigure 15.9 The ACP\n3Viewer................................636\nFigure 15.10 Architecture of WOPlan........................640\nFigure 15.11 Example of WOPlan Narrative Display...........642\nFigure 15.12 Example of WOPlan Execution Display...........642\nView publication stats"" metadata={'source': 'Semantic_Web.pdf', 'page': 653}
"
"page_content='1 \n  \n \n \n \n \n \n \n \n \n \n \nNATIONAL OPEN UNIVERSITY OF NIGERIA  \n \n \n \n \n \n \n \n \nSCHOOL OF SCIENCE AND TECHNOLOGY \n \n \n \n \n \n \n \n \nCOURSE CODE: CIT 484 \n \n \n \n \n \n \n \nCOURSE TITLE: WEBSITE DESIGN & PROGRAMMING  \n \n' metadata={'source': 'wbpdf.pdf', 'page': 0}
"
"page_content='2 \n  \n \n \n \n \n \nCSC 484 \n  \nWEBSITE DESIGN &PROGRAMMING \n \nCourse Developer/Writer   Dr J.N. Ndunagu    \n   \n      National Open University of Nigeria \n \n \n        \n \n \nCourse Editor    Dr B. C. Mbam   \nCourse Coordinator    Dr J.N. Ndunagu \n   \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nNATIONAL OPEN UNIVERSITY OF NIGERIA  COURSE \nGUIDE ' metadata={'source': 'wbpdf.pdf', 'page': 1}
"
"page_content='3 \n  \n \n \nCOURSE GUIDE CIT 484  - WEBSITE DESIGN & PROGRAMMIN G  \n \n \nNational Open University of Nigeria \n Headquarters  \n14/16 Ahmadu Bello Way  \nVictoria Island Lagos \n \n Abuja Annex 245 Samuel Adesujo Ademulegun Street \n Central Business District  \nOpposite Arewa Suites  \nAbuja  \n \ne-mail: @nou.edu.ng  \nURL: .nou.edu.ng  \n \n \nNational Open University of Nigeria 2010 \n \n \n First Printed -------- - \n \n \nISBN: \n \n All Rights Reserved  \n \nPrinted by …………….. \n \n \n For National Open University of Nigeria \n \nTABLE OF CONTENTS  \n \n Introduction……………………………………………….. v \nWhat you will learn in this Course……………………....... v  \n Course Aim………………………………………………...vi \n Course Objectives…………………………………………. vi \nWorking through this Course………………………………vii \n Course Materials…………………………………………...viii \n Study Units…………………………………………………viii \n Recommended Texts……………………………………….ix \n Assignment File……………………………………………xii ' metadata={'source': 'wbpdf.pdf', 'page': 2}
"
"page_content='4 \n  Presentation Schedule……………………………………...xii \nAssessment…………………………………………………xii  \nTutor Marked Assignments (TMAs)……………………….xii \n Final Examination and Grading……………………………xii \nCourse Marking Scheme……………………………………xiii \n Course Overview………………………………………….. xiv \nHow to get the most from this course…………………….  xiv \nTutors and Tutorials……………………………………….. xv \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nIntroduction \nWelcome to CIT 484: Website design and Programming which is a three credit \nunit course offered in the fourth year to students of the undergraduate degree \nprogramme in Communication Technology. There are fi fteen study Units in this \ncourse. There are no perquisites for studying this course. It has been developed \nwith appropriate local and foreign examples suitabl e for audience. \nThis course guide is for distance learners enrolled  in the B.Sc. Communication \nTechnology programme of the National Open Universit y of Nigeria. This guide ' metadata={'source': 'wbpdf.pdf', 'page': 3}
"
"page_content='5 \n is one of the several resource tools available to y ou to help you successfully \ncomplete this course and ultimately your programme.   \nIn this guide you will find very useful information  about this course: aims, \nobjectives, what the course is about, what course m aterials you will be using; \navailable services to support your learning; inform ation on assignments and \nexamination. It also offers you guidelines on how t o plan your time for study; \nthe amount of time you are likely to spend on each study unit; your tutor –\nmarked assignments. \nI strongly recommend that you go through this cours e guide and complete the \nfeedback form at the end before you begin your stud y of the course. The \nfeedback form must be submitted to your tutorial fa cilitator along with your first \nassignment.  \nI wish you all the best in your learning experience  and successful completion of \nthis course. \n \nWhat you will learn in this Course  \n \nThe overall aim of this course, CIT 484, is to teac h you the fundamentals of \nHTML and the Web. It starts with the basics and the n moves on to the more \nadvanced concepts. The Internet and the World Wide Web are also treated.  You \nwill also learn about creating lists, getting feedb ack with forms, creating tables \nand frames. Finally, you will be introduced to Java Script, dealing with Java \nScript variables and data types, Statement and Oper ators and Control structures, \nobject based programming message box in JavaScript.    \n  \n \n \n \n \n \nCourse Aim  \n \nThis course aims at designing web pages using HTML and Java Script. You are \nnot expected to have experience in the languages be fore using this course \nmaterial. It is hoped that the knowledge would help  you become proficient in \nHTML, fully versed in the language’s syntax, semant ics and elements of style. \n \n \nCourse Objectives ' metadata={'source': 'wbpdf.pdf', 'page': 4}
"
"page_content='6 \n In order to achieve this aim, the course has a set of objectives. Each unit has \nspecific objectives which are included at the begin ning of the unit. You are \nexpected to read these objectives before you study the unit. You may wish to \nrefer to them during your study to check on your pr ogress. You should always \nlook at the unit objectives after completion of eac h unit. By doing so, you would \nhave followed the instructions in the unit. \nBelow are the comprehensive objectives of the cours e as a whole. By meeting \nthese objectives, you should have achieved the aim of the course. Therefore, \nafter going through this course you should be able to: \n/square4 Define the Internet \n/square4 Differentiate between the Internet and the World Wi ld Web \n/square4 Describe the History of the Internet \n/square4 List World Wide Web browser software available in t his course \nmaterial \n/square4 Explain the meaning of WWW \n/square4 Describe how WWW works \n/square4 Explain parts of URLs \n/square4 Define HTML \n/square4 Describe the History of HTML \n/square4 Explain how HTML works \n/square4 Describe how to open a Notepad \n/square4 Describe markup tag in HTML \n/square4 Write a simple HTML Document using text editor \n/square4 Describe the head and body section of HTML \n/square4 Create a headline for your document  using head sec tion \n/square4 Describe the paragraph marker. \n \n/square4 Describe the physical markup tags  \n/square4 Describe  the logical markup tags  \n/square4 State the difference between formatting tags and pr eformatted text  \n/square4 Define hypertext link  \n/square4 List types and uses of hypertext link  \n/square4 State the steps of creating hyperlinks  \n/square4 Define unordered lists, ordered list, definition li st and list within list  \n/square4 State the steps in creating unordered lists, ordere d list, definition list \nand list within list  \n/square4 Distinguish between Ordered list and list within li st  \n/square4 Explain HTML form \n/square4 List types of input field in HTML form \n/square4 Create a simple  HTML form \n/square4 Explain JavaScript language \n/square4 Describe the history of JavaScript ' metadata={'source': 'wbpdf.pdf', 'page': 5}
"
"page_content='7 \n /square4 Distinguish the difference between Java and JavaScr ipt \n/square4 List the features of JavaScript \n/square4 Explain JavaScript Variables \n/square4 List JavaScript Data types \n/square4 Describe Global Scope Variables \n/square4 Explain two types of statement in JavaScript \n/square4 List types of Operators in JavaScript \n/square4 List types of Control Structures \n \nWorking through this Course \nTo complete this course, you are required to read e ach study unit, read the \ntextbooks and read other materials which may be pro vided by the National \nOpen University of Nigeria. \nEach unit contains tutor marked assignments and at certain points in the course \nyou would be required to submit assignment for asse ssment purposes. At the \nend of the course there is a final examination. The  course should take you about \na total of 15 weeks to complete. Below is the list of all the components of the \ncourse, what you have to do and how you should allo cate your time to each unit \nin order to complete the course on time and success fully. \nThis course entails that you spend a lot of time to  read and practice. For easy \nunderstanding of this course, I will advise that yo u avail yourself the \nopportunity of attending the tutorials sessions whe re you would have the \nopportunity to compare your knowledge with that of other people, and also have \nyour questions answered. \n \n \n \n \n \n The Course Material \nThe main components of this course are: \n1.  The Course Guide \n2.  Study Units \n3.  Further Reading/References \n4.  Assignments ' metadata={'source': 'wbpdf.pdf', 'page': 6}
"
"page_content='8 \n 5.  Presentation Schedule \n \nStudy Units \nThere are 15 study units and 4 modules in this cour se. They are: \n \n/head2right MODULE ONE - THE INTERNET AND THE WORLD WIDE WEB \n/square4 UNIT ONE  - The Internet \n/square4 UNIT TWO - Understanding the WWW \n/square4 UNIT THREE - HTML and the WEB \n \n/head2right MODULE TWO – The Basics of HTML  \n/square4 UNIT ONE  - Getting Started with HTML \n/square4 UNIT TWO  - Understanding the Basics of HTML \n/square4 UNIT THREE  - Formatting Text \n/square4 UNIT FOUR – Using Hypertext Links \n \n/head2right MODULE THREE- Lists, Tables and Frames in HTML \n/square4 UNIT ONE – Creating Lists in HTML \n/square4 UNIT TWO – Getting Feedback with Forms \n/square4 UNIT THREE – Using Tables \n/square4 UNIT FOUR– Using Frames \n \n/head2right MODULE FOUR - JavaScript \n/square4 UNIT ONE - Introduction to Java Script \n/square4 UNIT TWO - Java Script variables and data types \n/square4 UNIT THREE - Statement and operators  \n/square4 UNIT FOUR - Control structures object based program ming message \nbox in JavaScript  \n \n \n \nRecommended Texts  \n \nThese texts will be of enormous benefit to you in l earning this course:  \n \n• `Arpajian, S., and R. Mullen. 1996. How to use HTML 3.2.  Emeryville, \nZiff-Davis Press. 219 pp.  \n• Abbate, Janet. Inventing the Internet . Cambridge: MIT Press, 1999. \n• Andrew H. Watt, Jinjer L. Simon, Jonathan Watt: Teach Yourself \nJavaScript in 21 Days , Pearson Education, ISBN 0672322978  ' metadata={'source': 'wbpdf.pdf', 'page': 7}
"
"page_content='9 \n • Andy Harris, Andrew Harris: JavaScript Programming , Premier Press, \nISBN 0761534105  \n• Barnet, Belinda (2004). Lost In The Archive: Vision, Artefact And Loss In \nThe Evolution Of Hypertext . University of New South Wales, PhD thesis.  \n• Bemer, Bob , ""A History of Source Concepts for the Internet/Web""  \n• Bolter, Jay David (2001). Writing Space: Computers, Hypertext, and the \nRemediation of Print . New Jersey: Lawrence Erlbaum Associates. ISBN  0-\n8058-2919-9 . \n• Buckland, Michael (2006). Emanuel Goldberg and His Knowledge \nMachine . Libraries Unlimited. ISBN  0-31331-332-6 . \n• Byers, T. J. (April 1987). ""Built by association"". PC World  5: 244–251.  \n• Campbell-Kelly, Martin; Aspray, William. Computer: A History of the \nInformation Machine . New York: BasicBooks, 1996. \n• Castro, E. 1998. HTML 4 for the world wide web. Berkeley, Peachpit \nPress. 336 pp.  \n• Cicconi, Sergio (1999). ""Hypertextuality"" . Mediapolis. Ed. Sam Inkinen. \nBerlino & New York: De Gruyter. : 21–43 . \nhttp://www.cisenet.com/cisenet/writing/essays/hyper textuality.htm . \n• Clark, David D. , ""The Design Philosophy of the DARPA Internet \nProtocols"" , Computer Communications Review 18:4, August 1988,  \npp. 106–114 \n• Conklin, J. (1987). ""Hypertext: An Introduction and  Survey"". Computer  20  \n(9): 17–41. doi :10.1109/MC.1987.1663693 . \n• Crane, Gregory (1988). ""Extending the boundaries of  instruction and \nresearch"". T.H.E. Journal (Technological Horizons in Education )  \n(Macintosh Special Issue): 51–54.  \n. \n• Danny Goodman, Brendan Eich: JavaScript Bible , Wiley, John & \nSons, ISBN 0764533428  \n• Danny Goodman, Scott Markel: JavaScript and DHTML \nCookbook , O\'Reilly & Associates, ISBN 0596004672  \n• David Flanagan, Paula Ferguson: JavaScript: The Definitive Guide , \nO\'Reilly & Associates, ISBN 0596000480  ' metadata={'source': 'wbpdf.pdf', 'page': 8}
"
"page_content='10 \n • Engelbart, Douglas C. (1962). Augmenting Human Intellect: A Conceptual \nFramework, AFOSR-3233 Summary Report, SRI Project N o. 3579 . \nhttp://www.dougengelbart.org/pubs/augment-3906.html . \n \n• Ensslin, Astrid (2007). Canonizing Hypertext: Explorations and \nConstructions . London: Continuum. ISBN  0-8264-95583 . \n• Gary B. Shelly, Thomas J. Cashman, William J. Dorin , Jeffrey Quasney: \nJavaScript: Complete Concepts and Techniques , Course Technology, \nISBN 0789562332  \n• Graham, I. S. 1997. HTML sourcebook, third edition . New York, John \nWiley & Sons. 620 pp.  \n• Graham, Ian S. The HTML Sourcebook: The Complete Guide to HTML . \nNew York: John Wiley and Sons , 1995. \n• Heim, Michael (1987). Electric Language: A Philosophical Study of Word \nProcessing . New Haven: Yale University Press. ISBN  0-300-07746-7 . \nScott Arpajian Krol, Ed . Hitchhiker\'s Guide to the Internet , 1987.  \n• Landow, George (2006). Hypertext 3.0 Critical Theory and New Media in \nan Era of Globalization: Critical Theory and New Me dia in a Global Era \n(Parallax, Re-Visions of Culture and Society) . Baltimore: The Johns \nHopkins University Press. ISBN  0-8018-8257-5 . \n• Nelson, Theodor H. (1973). ""A Conceptual framework for man-machine \neverything"". AFIPS Conference Proceedings VOL. 42 . pp. M22–M23.  \n• Nelson, Theodor H. (1992). Literary Machines 93.1 . Sausalito CA: Mindful \nPress. ISBN  0-89347-062-7 . \n• Nelson, Theodor H. (September 1965). ""Complex information \nprocessing: a file structure for the complex, the c hanging and the \nindeterminate"" . ACM/CSC-ER Proceedings of the 1965 20th national \nconference . http://portal.acm.org/citation.cfm?id=806036 . \n• Nelson, Theodor H. (September 1970). ""No More Teachers’ Dirty Looks"" . \nComputer Decisions . http://www.newmediareader.com/excerpts.html . \n• Nick Heinle, Richard Koman: Designing with JavaScript , O\'Reilly & \nAssociates, ISBN 1565923006  \n• Nigel McFarlane: Rapid Application Development with Mozilla , Prentice \nHall Professional Technical References, ISBN 013142 3436  \n• Scientific American Special Issue on Communications , Computers, and \nNetworks , September, 1991 ' metadata={'source': 'wbpdf.pdf', 'page': 9}
"
"page_content='11 \n • Scott Duffy: How to do Everything with JavaScript , Osborne, ISBN \n0072228873  \n• Sham Bhangal, Tomasz Jankowski: Foundation Web Design: Essential \nHTML, JavaScript, CSS, PhotoShop, Fireworks, and Fl ash , APress L. P., \nISBN 1590591526  \n• Thomas A. Powell, Fritz Schneider: JavaScript: The Complete Reference , \nMcGraw-Hill Companies, ISBN 0072191279  \n• Van Dam, Andries (July 1988). ""Hypertext: \'87 keynote address"" . \nCommunications of the ACM  31 : 887–895. doi :10.1145/48511.48519 . \nhttp://www.cs.brown.edu/memex/HT_87_Keynote_Address .html . \n• Williams, R. 1994. The non-designer’s design book. Design and \ntypographic principles for the visual novice. Berkeley, Peachpit Press. \n144 pp.  \n• Williams, R., and J. Tollett. 1998. The non-designer’s web book. An \neasy guide to creating, designing , and posting you r own web site. \nBerkeley, Peachpit Press. 288 pp.  \n• Yankelovich, Nicole; Landow, George P., and Cody, D avid (1987). \n""Creating hypermedia materials for English literatu re students"". SIGCUE \nOutlook  20  (3). \n  \nAssignment File  \n \nThe assignment file will be given to you in due cou rse. In this file, you will find all the \ndetails of the work you must submit to your tutor f or marking. The marks you obtain \nfor these assignments will count towards the final mark for the course. Altogether, \nthere are 15 tutor marked assignments for this cour se.  \n \nPresentation Schedule  \n \nThe presentation schedule included in this course g uide provides you with important \ndates for completion of each tutor marked assignmen t. You should therefore endeavor \nto meet the deadlines.  \n \nAssessment \n \n There are two aspects to the assessment of this cou rse. First, there are tutor marked \nassignments; and second, the written examination. T herefore, you are expected to take \nnote of the facts, information and problem solving gathered during the course. The \ntutor marked assignments must be submitted to your tutor for formal assessment, in \naccordance to the deadline given. The work submitte d will count for 40% of your total ' metadata={'source': 'wbpdf.pdf', 'page': 10}
"
"page_content='12 \n course mark. At the end of the course, you will nee d to sit for a final written \nexamination. This examination will account for 60% of your total score.  \n \nTutor Marked Assignments (TMAs)  \nThere are 15 TMAs in this course. You need to submi t all the TMAs. The best 4 will \ntherefore be counted. When you have completed each assignment, send them to your \ntutor as soon as possible and make certain that it gets to your tutor on or before the \nstipulated deadline. If for any reason you cannot c omplete your assignment on time, \ncontact your tutor before the assignment is due to discuss the possibility of extension. \nExtension will not be granted after the deadline, u nless on extraordinary cases. \n \n \nFinal Examination and Grading \n \n The final examination on CIT 484 will last for a pe riod of 3 hours and have a value of \n60% of the total course grade. The examination will  consist of questions which reflect \nthe tutor marked assignments that you have previous ly encountered. Furthermore, all \nareas of the course will be examined. It would be b etter to use the time between \nfinishing the last unit and sitting for the examina tion, to revise the entire course. You \nmight find it useful to review your TMAs and commen t on them before the \nexamination. The final examination covers informati on from all parts of the course. \n \n \nCourse marking Scheme \n \n The following table includes the course marking sch eme  \n \nTable 1 Course Marking Scheme \nAssessment Marks \nAssignments 1-15  \n 15 assignments, 40% for the best 4 \nTotal = 10% X 4 = 40%  \n \nFinal Examination 60% of overall course marks  \n \nTotal 100% of Course Marks  \n \nCourse Overview  \n \nThis table indicates the units, the number of weeks  required to complete them and the \nassignments.  \n \nTable 2: Course Organizer \n \nUnit Title of the work Weeks \nActivity Assessment \n(End of Unit) \n Course Guide Week 1 ' metadata={'source': 'wbpdf.pdf', 'page': 11}
"
"page_content='13 \n Module 1 THE INTERNET AND THE WORLD WIDE WEB  \nUnit 1 The Internet  Week 1 Assessment 1 \nUnit 2 Understanding the WWW  Week 2  \nAssessment 2  \nUnit 3 HTML and the WEB \n Week3  \nAssessment 3  \nModule 2  THE BASICS OF HTML  \nUnit 1 Getting Started with HTML  Week 4  \nAssessment 4  \nUnit 2 Understanding the Basics of \nHTML  Week 5 Assessment 5  \nUnit 3 Formatting Text  Week 6 Assessment 6  \nUnit 4 – Using Hypertext Links Week 7 Assessment 7 \nModule 3  Lists, Tables and Frames in HTML \n \nUnit 1 Creating Lists in HTML  Week 8 Assessment 8  \nUnit 2 Getting Feedback with Forms  Week 9 Assessment 9  \nUnit 3 Using Tables  Week 10 Assessment 10  \nUnit 4 Using Frames Week 11 Assessment 11 \nModule  4 JAVASCRIPT  \n \nUnit 1 Introduction to Java Script  Week 12 Assessment 12  \nUnit 2 Java Script variables and data \ntypes  Week 13 Assessment 13  \nUnit 3 Statement and operators  Week 14 Assessment 14  \nUnit 4 Control structures object based \nprogramming message box in \nJavaScript Week 15 Assessment 15 \n \n \n \nHow to get the best from this course \n \nIn distance learning, the study units replace the u niversity lecturer. This is one \nof the great advantages of distance learning; you c an read and work through \nspecially designed study materials at your own pace , and at a time and place \nthat suit you best. Think of it as reading the lect ure instead of listening to a \nlecturer. In the same way that a lecturer might set  you some reading to do, the \nstudy units tell you when to read your set books or  other material. Just as a \nlecturer might give you an in-class exercise, your study units provide exercises \nfor you to do at appropriate points.  ' metadata={'source': 'wbpdf.pdf', 'page': 12}
"
"page_content='14 \n  \nEach of the study units follows a common format. Th e first item is an \nintroduction to the subject matter of the unit and how a particular unit is \nintegrated with the other units and the course as a  whole. Next is a set of \nlearning objectives. These objectives enable you kn ow what you should be able \nto do by the time you have completed the unit. You should use these objectives \nto guide your study. When you have finished the uni ts you must go back and \ncheck whether you have achieved the objectives. If you make a habit of doing \nthis you will significantly improve your chances of  passing the course. \n \nRemember that your tutor’s job is to assist you. Wh en you need help, don’t \nhesitate to call and ask your tutor to provide it. \n \n/square4 Read this Course Guide thoroughly. \n/square4 Organize a study schedule. Refer to the ‘Course Ove rview’ for more \ndetails. \nNote the time you are expected to spend on each uni t and how the assignments \nrelate to the units. Whatever method you chose to u se, you should decide on it \nand write in your own dates for working on each uni t. \n \n/square4 Once you have created your own study schedule, do e verything you can \nto stick to it. The major reason that students fail  is that they lag behind in \ntheir course work. \n/square4 Turn to Unit 1 and read the introduction and the objectives for th e unit. \n/square4 Assemble the study materials. Information about wha t you need for a \nunit is given in the ‘Overview’ at the beginning of  each unit. You will \nalmost always need both the study unit you are work ing on and one of \nyour set of books on your desk at the same time. \n/square4 Work through the unit. The content of the unit itse lf has been arranged to \nprovide a sequence for you to follow. As you work t hrough the unit you will \nbe instructed to read sections from your set books or other articles. Use the \nunit to guide your reading. \n/square4 Review the objectives for each study unit to confir m that you have \nachieved them. If you feel unsure about any of the objectives, review the \nstudy material or consult your tutor. \n/square4 When you are confident that you have achieved a uni t’s objectives, you \ncan then start on the next unit. Proceed unit by un it through the course \nand try to pace your study so that you keep yoursel f on schedule. \n/square4 When you have submitted an assignment to your tutor  for marking, do \nnot wait for its return before starting on the next  unit. Keep to your \nschedule. When the assignment is returned, pay part icular attention to \nyour tutor’s comments on the tutor-marked assignmen t form. Consult \nyour tutor as soon as possible if you have any ques tions or problems. ' metadata={'source': 'wbpdf.pdf', 'page': 13}
"
"page_content='15 \n /square4 After completing the last unit, review the course a nd prepare yourself for \nthe final examination. Check that you have achieved  the unit objectives \n(listed at the beginning of each unit) and the cour se objectives (listed in \nthis Course Guide ). \n \nTutors and Tutorials \nThere are 15 hours of tutorials provided in support  of this course. You \nwill be notified of the dates, times and location o f these tutorials, together \nwith the name and phone number of your tutor, as so on as you are \nallocated a tutorial group. \n \n/square4 Your tutor will mark and comment on your assignment s, keep a close \nwatch on your progress and on any difficulties you might encounter and \nprovide assistance to you during the course. You mu st mail or submit \nyour tutor-marked assignments to your tutor well be fore the due date (at \nleast two working days are required). They will be marked by your tutor \nand returned to you as soon as possible. \n \n/square4 Do not hesitate to contact your tutor by telephone,  or e-mail if you need \nhelp. The following might be circumstances in which  you would find help \nnecessary. \nContact your tutor if: \n \n/square4 You do not understand any part of the study units o r the assigned \nreadings \n/square4 You have a question or problem with an assignment, with your tutor’s \ncomments on an assignment or with the grading of an  assignment. \n \nYou should try your best to attend the tutorials. T his is the only chance to have \nface to face contact with your tutor and to ask que stions which are answered \ninstantly. You can raise any problem encountered in  the course of your study. \nTo gain the maximum benefit from course tutorials, prepare a question list \nbefore attending them. You will learn a lot from pa rticipating in discussions \nactively.  GOODLUCK! \n \n \nMODULE ONE – THE INTERNET AND THE WORLD WIDE WEB \nUNIT ONE - The Internet \n1.0   Introduction \n2.0   Objectives  \n3.0   Main Content \n3.1  – The Internet \n3.2  – History of the Internet ' metadata={'source': 'wbpdf.pdf', 'page': 14}
"
"page_content='16 \n 3.3   -  Modern Uses \n3.4   -  Information \n3.5   -  Communication  \n3.6   - Data Transfer \n3.7 – Access \n   3.8 - Sociology of the Internet  \n4.0   Conclusion          \n5.0   Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n \nU NIT TWO – Understanding the WWW \n1.0      Introduction \n2.0   Objectives \n3.0   Main Content \n3.1– How the WWW works \n3.2– How do URLs work \n3.3-How to Use a Web Browser \n3.4  How to Use a Hypertext link \n \n4.0   Conclusion          \n5.0    Summary          \n6.0   Tutor Marked Assignment        \n7.0   Further Reading and Other Resources  \n \n \n \n \n \n \n \nUNIT THREE – HTML AND THE WEB \n1.0  Introduction \n2.0  Objectives \n3.0  Main Content \n3.1. What is HTML? \n3.2. History of HTML \n3.3. How HTML works with the Web \n 3.3.1 How HTML works on the Web \n 3.3.2. What are the tags up to? \n 3.3.3 Is there anything HTML cannot do? ' metadata={'source': 'wbpdf.pdf', 'page': 15}
"
"page_content='17 \n 3.4. Things you can do with HTML \n4.0 . Conclusion          \n5.0    Summary          \n6.0   Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \nMODULE TWO –The Basics of HTML  \nUNIT ONE - Getting Started with HTML \n1.0    Introduction \n2.0    Objectives  \n3.0    Main Content \n3.1  – How to Use Notepad \n3.2  – How to Use Markup Tags \n3.3   -  How to Write a Simple HTML Document \n3.4   -  How to Use Special HTML Editing Software     \n      \n4.0   Conclusion \n5.0        Summary          \n6.0       Tutor Marked Assignment        \n7.0        Further Reading and Other Resources \n \nUNIT TWO - Understanding the Basics of HTML \n1.0    Introduction \n2.0    Objectives  \n3.0    Main Content \n3.1  – How to Use the Head Section \n3.2  – How to Use the Body Section \n3.3   -  How to Use Headings \n3.4   -  How to Use the Paragraph Tag   \n3.5   -  How to Use Special Characters     \n    \n4.0   Conclusion \n5.0       Summary       \n6.0       Tutor Marked Assignment        \n7.0        Further Reading and Other Resources \n \nUNIT THREE - Formatting Text \n1.0    Introduction \n2.0    Objectives  \n3.0    Main Content \n3.1  – How to Format Characters with Physical Tags ' metadata={'source': 'wbpdf.pdf', 'page': 16}
"
"page_content='18 \n 3.2  – How to Format Characters with Logical Markup Tags  \n3.3   -  How to Format Paragraphs \n3.4   -  How to Use Text Breaks   \n3.5   -  How to Use Preformatted Text     \n    \n4.0   Conclusion \n5.0       Summary       \n6.0      Tutor Marked Assignment        \n7.0       Further Reading and Other Resources \n \nUNIT FOUR – Using Hypertext Links \n1.0     Introduction \n2.0     Objectives  \n3.0     Main Content \n3.1  How to Create a Hyperlink   \n3.2  How to Use the ID Attribute   \n3.3  How to Use Relative Path Names   \n \n4.0   Conclusion \n5.0       Summary       \n6.0      Tutor Marked Assignment        \n7.0       Further Reading and Other Resources \n \nMODULE THREE –Lists, Tables and Frames in HTML \nUNIT ONE – Creating Lists in HTML \n1.0  Introduction \n2.0 Objectives  \n3.0  Main Content \n3.1 How to Create Unordered Lists   \n3.2 How to Create Ordered Lists   \n3.3. How to Create Definition Lists   \n3.4  How to Create Lists within Lists   \n    \n4. 0  Conclusion \n5.0   Summary       \n6. 0  Tutor Marked Assignment        \n7.0      Further Reading and Other Resources \n \nUNIT TWO – Getting Feedback with Forms ' metadata={'source': 'wbpdf.pdf', 'page': 17}
"
"page_content='19 \n 1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1  HTML form \n3.2 How to Create a Simple Form   \n3.3  How to Use Input Fields in Forms  \n4. 0  Conclusion \n5.0   Summary       \n6. 0  Tutor Marked Assignment        \n7.0      Further Reading and Other Resources \n \nUNIT THREE – Using Tables \n1.0   Introduction \n2.0   Objectives  \n3.0     Main Content \n3.1. How to create a simple Table \n3. 2 How to format Tables \n4.0  Conclusion \n5.0     Summary       \n6.0   Tutor Marked Assignment        \n7.0    Further Reading and Other Resources \n \nMODULE FOUR – JAVASCRIPT \nUNIT ONE  - Introduction to Java Script \n1.0   Introduction \n2.0  Objectives \n3.0  Main Content  \n3.1   What is JavaScript? \n3.2  The basic concepts of JavaScript and client-side sc ripting \n3.3.  History of JavaScript \n \n4.0  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        ' metadata={'source': 'wbpdf.pdf', 'page': 18}
"
"page_content='20 \n 7.0  Further Reading and Other Resources \n \nUNIT TWO:   Java Script variables and data types \n1.0   Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1  JavaScript Variables \n3.2  Java Script Data type \n4.0  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \nUNIT THREE:   Statement and Operators \n1.0   Introduction \n2.0  Objectives  \n3.0  Main Content \n 3.1 JavaScript Statement \n 3.2 JavaScript Operators \n 3.3 Control structures  \n4.0  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n \n \n MODULE ONE – WEBSITE DESIGN \nUNIT ONE - THE INTERNET \n \n1.0   INTRODUCTION \n2.0 OBJECTIVES  \n3.0 MAIN CONTENT \n3.1– The Internet \n3.2– History of the Internet \n3.3  -  Modern Uses ' metadata={'source': 'wbpdf.pdf', 'page': 19}
"
"page_content='21 \n 3.4  -  Information \n3.5   Communication \n3.6 - Data Transfer \n3.7 – Access \n3.8 - Sociology of the Internet \n4.0 CONCLUSION          \n5.0 SUMMARY          \n6.0  TUTOR MARKED ASSIGNMENT        \n7.0 FURTHER READING AND OTHER RESOURCES \n \n \n \n1.0   INTRODUCTION  \n \nWeb design is the process of planning and creating a website. Text, images, digital media and \ninteractive elements are shaped by the web designer  to produce the page seen on the web \nbrowser. It is the creation of digital environments that fac ilitate and encourage human \nactivity; reflect or adapt to individual voices and  content; and change gracefully over time \nwhile always retaining their identity.  \nThe terms Internet  and World Wide Web  are often used in everyday speech without much \ndistinction. However, the Internet and the World Wi de Web are not one and the same. The \nInternet is a global data communications system. It  is a hardware and software infrastructure \nservices that provide connectivity between computer s. In contrast, the Web is one of \ncommunication via the Internet. It is a collection of interconnected documents and other \nresources, linked by hyperlinks and URLs. \n \n2.0   OBJECTIVES \nBy the end of this unit, you should be able to: \n/square4 Define the Internet \n/square4 Differentiate between the Internet and the World Wi ld Web \n/square4 Describe the History of the Internet \n/square4 List World Wide Web browser software available in t his course material \n \n3.0   MAIN CONTENT \n \n 3.1 – The Internet \nThe Internet  is a global system of interconnected computer netw orks that use the standard \nInternet Protocol Suite (TCP/IP) to serve billions of users worldwide. It is a network of \nnetworks  that consists of millions of private, public, acad emic, business, and government \nnetworks, of local to global scope, that are linked  by a broad array of electronic, wireless and \noptical networking technologies. The Internet carri es a vast range of information resources \nand services, such as the inter-linked hypertext do cuments of the World Wide Web (WWW) \nand the infrastructure to support electronic mail. ' metadata={'source': 'wbpdf.pdf', 'page': 20}
"
"page_content=""22 \n Most traditional communications media including tel ephone, music, film, and television are \nreshaped or redefined by the Internet, giving birth  to new services such as Voice over Internet \nProtocol (VoIP) and IPTV. Newspaper, book and other  print publishing are adapting to Web \nsite technology, or are reshaped into blogging and web feeds. The Internet has enabled or \naccelerated new forms of human interactions through  instant messaging, Internet forums, and \nsocial networking. Online shopping has boomed both for major retail outlets and small \nartisans and traders. Business-to-business and fina ncial services on the Internet affect supply \nchains across entire industries. \nThe origins of the Internet reach back to research of the 1960s, commissioned by the United \nStates government in collaboration with private com mercial interests to build robust, fault-\ntolerant, and distributed computer networks. The fu nding of a new U.S. backbone by the \nNational Science Foundation in the 1980s, as well a s private funding for other commercial \nbackbones, led to worldwide participation in the de velopment of new networking \ntechnologies, and the merger of many networks. The commercialization of what was by the \n1990s an international network resulted in its popu larization and incorporation into virtually \nevery aspect of modern human life. As of 2009, an e stimated quarter of Earth's population \nused the services of the Internet. \nThe Internet has no centralized governance in eithe r technological implementation or policies \nfor access and usage; each constituent network sets  its own standards. Only the overreaching \ndefinitions of the two principal name spaces in the  Internet, the Internet Protocol address \nspace and the Domain Name System, are directed by a  maintainer organization, the Internet \nCorporation for Assigned Names and Numbers (ICANN).  The technical underpinning and \nstandardization of the core protocols (IPv4 and IPv 6) is an activity of the Internet \nEngineering Task Force (IETF), a non-profit organiz ation of loosely affiliated international \nparticipants that anyone may associate with by cont ributing technical expertise. \n3.2– History of the Internet  \nThe USSR's launch of Sputnik spurred the United Sta tes to create the Advanced Research \nProjects Agency (ARPA or DARPA) in February 1958 to  regain a technological lead.   ARPA \ncreated the Information Processing Technology Offic e (IPTO) to further the research of the \nSemi Automatic Ground Environment (SAGE) program, w hich had networked country-wide \nradar systems together for the first time. The IPTO 's purpose was to find ways to address the \nUS military's concern about survivability of their communications networks, and as a first \nstep interconnect their computers at the Pentagon, Cheyenne Mountain, and Strategic Air \nCommand headquarters (SAC). J. C. R. Licklider, a p romoter of universal networking, was \nselected to head the IPTO. Licklider moved from the  Psycho-Acoustic Laboratory at Harvard \nUniversity to MIT in 1950, after becoming intereste d in information technology. At MIT, he \nserved on a committee that established Lincoln Labo ratory and worked on the SAGE project. \nIn 1957 he became a Vice President at BBN, where he  bought the first production PDP-1 \ncomputer and conducted the first public demonstrati on of time-sharing. \nAt the IPTO, Licklider's successor Ivan Sutherland in 1965 got Lawrence Roberts to start a \nproject to make a network, and Roberts based the te chnology on the work of Paul Baran,  who \nhad written an exhaustive study for the United Stat es Air Force that recommended packet \nswitching (opposed to circuit switching) to achieve  better network robustness and disaster \nsurvivability. Roberts had worked at the MIT Lincol n Laboratory originally established to \nwork on the design of the SAGE system. UCLA profess or Leonard Kleinrock had provided "" metadata={'source': 'wbpdf.pdf', 'page': 21}
"
"page_content='23 \n the theoretical foundations for packet networks in 1962, and later, in the 1970s, for \nhierarchical routing, concepts which have been the underpinning of the development towards \ntoday\'s Internet. \nSutherland\'s successor Robert Taylor convinced Robe rts to build on his early packet \nswitching successes and come and be the IPTO Chief Scientist. Once there, Roberts prepared \na report called Resource Sharing Computer Networks  which was approved by Taylor in June \n1968 and laid the foundation for the launch of the working ARPANET the following year. \nAfter much work, the first two nodes of what would become the ARPANET were \ninterconnected between Kleinrock\'s Network Measurem ent Center at the UCLA\'s School of \nEngineering and Applied Science and Douglas Engelba rt\'s NLS system at SRI International \n(SRI) in Menlo Park, California, on 29 October 1969 . The third site on the ARPANET was \nthe Culler-Fried Interactive Mathematics center at the University of California at Santa \nBarbara, and the fourth was the University of Utah Graphics Department. In an early sign of \nfuture growth, there were already fifteen sites con nected to the young ARPANET by the end \nof 1971. \nThe ARPANET was origin of today\'s Internet. In an i ndependent development, Donald \nDavies at the UK National Physical Laboratory devel oped the concept of packet switching in \nthe early 1960s, first giving a talk on the subject  in 1965, after which the teams in the new \nfield from two sides of the Atlantic ocean first be came acquainted. It was actually Davies\' \ncoinage of the wording packet  and packet switching  that was adopted as the standard \nterminology. Davies also built a packet-switched ne twork in the UK, called the Mark I in \n1970.   Bolt Beranek and Newman (BBN), the private contrac tors for ARPANET, set out to \ncreate a separate commercial version after establis hing ""value added carriers"" was legalized \nin the U.S.   The network they established was called Telenet an d began operation in 1975, \ninstalling free public dial-up access in cities thr oughout the U.S. Telenet was the first packet-\nswitching network open to the general public.  \nFollowing the demonstration that packet switching w orked on the ARPANET, the British \nPost Office, Telenet, DATAPAC and TRANSPAC collabor ated to create the first \ninternational packet-switched network service. In t he UK, this was referred to as the \nInternational Packet Switched Service (IPSS), in 19 78. The collection of X.25-based \nnetworks grew from Europe and the US to cover Canad a, Hong Kong and Australia by 1981. \nThe X.25 packet switching standard was developed in  the CCITT (now called ITU-T) around \n1976. \nX.25 was independent of the TCP/IP protocols that a rose from the experimental work of \nDARPA on the ARPANET, Packet Radio Net and Packet S atellite Net during the same time \nperiod. \nThe early ARPANET ran on the Network Control Progra m (NCP), implementing the host-to-\nhost connectivity and switching layers of the proto col stack, designed and first implemented \nin December 1970 by a team called the Network Worki ng Group (NWG) led by Steve \nCrocker. To respond to the network\'s rapid growth a s more and more locations connected, \nVinton Cerf and Robert Kahn developed the first des cription of the now widely used TCP \nprotocols during 1973 and published a paper on the subject in May 1974. Use of the term \n""Internet"" to describe a single global TCP/IP netwo rk originated in December 1974 with the \npublication of RFC 675, the first full specificatio n of TCP that was written by Vinton Cerf, ' metadata={'source': 'wbpdf.pdf', 'page': 22}
"
"page_content='24 \n Yogen Dalal and Carl Sunshine, then at Stanford Uni versity. During the next nine years, \nwork proceeded to refine the protocols and to imple ment them on a wide range of operating \nsystems. The first TCP/IP-based wide-area network w as operational by 1 January 1983 when \nall hosts on the ARPANET were switched over from th e older NCP protocols. In 1985, the \nUnited States\' National Science Foundation (NSF) co mmissioned the construction of the \nNSFNET, a university 56 kilobit/second network back bone using computers called \n""fuzzballs"" by their inventor, David L. Mills. The following year, NSF sponsored the \nconversion to a higher-speed 1.5 megabit/second net work. A key decision to use the DARPA \nTCP/IP protocols was made by Dennis Jennings, then in charge of the Supercomputer \nprogram at NSF. \nThe opening of the NSFNET to other networks began i n 1988.   The US Federal Networking \nCouncil approved the interconnection of the NSFNET to the commercial MCI Mail system in \nthat year and the link was made in the summer of 19 89. Other commercial electronic mail \nservices were soon connected, including OnTyme, Tel email and Compuserve. In that same \nyear, three commercial Internet service providers ( ISPs) began operations: UUNET, PSINet, \nand CERFNET. Important, separate networks that offe red gateways into, then later merged \nwith, the Internet include Usenet and BITNET. Vario us other commercial and educational \nnetworks, such as Telenet (by that time renamed to Sprintnet), Tymnet, Compuserve and \nJANET were interconnected with the growing Internet  in the 1980s as the TCP/IP protocol \nbecame increasingly popular. The adaptability of TC P/IP to existing communication \nnetworks allowed for rapid growth. The open availab ility of the specifications and reference \ncode permitted commercial vendors to build interope rable network components, such as \nrouters, making standardized network gear available  from many companies. This aided in the \nrapid growth of the Internet and the proliferation of local-area networking. It seeded the \nwidespread implementation and rigorous standardizat ion of TCP/IP on UNIX and virtually \nevery other common operating system. \n \nFigure 1: This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the \nworld\'s first Web server. \nAlthough the basic applications and guidelines that  make the Internet possible had existed for \nalmost two decades, the network did not gain a publ ic face until the 1990s. On 6 August \n1991, CERN, a pan-European organization for particl e research, publicized the new World \n' metadata={'source': 'wbpdf.pdf', 'page': 23}
"
"page_content=""25 \n Wide Web project. The Web was invented by British s cientist Tim Berners-Lee in 1989. An \nearly popular web browser was ViolaWWW, patterned a fter HyperCard and built using the X \nWindow System. It was eventually replaced in popula rity by the Mosaic web browser. In \n1993, the National Center for Supercomputing Applic ations at the University of Illinois \nreleased version 1.0 of Mosaic, and by late 1994 th ere was growing public interest in the \npreviously academic, technical Internet. By 1996 us age of the word Internet  had become \ncommonplace, and consequently, so had its use as a synecdoche in reference to the World \nWide Web. \nMeanwhile, over the course of the decade, the Inter net successfully accommodated the \nmajority of previously existing public computer net works (although some networks, such as \nFidoNet, have remained separate). During the late 1 990s, it was estimated that traffic on the \npublic Internet grew by 100 percent per year, while  the mean annual growth in the number of \nInternet users was thought to be between 20% and 50 %.   This growth is often attributed to the \nlack of central administration, which allows organi c growth of the network, as well as the \nnon-proprietary open nature of the Internet protoco ls, which encourages vendor \ninteroperability and prevents any one company from exerting too much control over the \nnetwork.   The estimated population of Internet users is 1.97  billion as of 30 June 2010.  \nFrom 2009 onward, the Internet is expected to grow significantly in Brazil, Russia, India, \nChina, and Indonesia (BRICI countries). These count ries have large populations and \nmoderate to high economic growth, but still low Int ernet penetration rates. In 2009, the \nBRICI countries represented about 45 percent of the  world's population and had \napproximately 610 million Internet users, but by 20 15, Internet users in BRICI countries will \ndouble to 1.2 billion, and will triple in Indonesia .  \n \n3.3    Modern uses \nThe Internet is allowing greater flexibility in wor king hours and location, especially with the \nspread of unmetered high-speed connections and web applications. \nThe Internet can now be accessed almost anywhere by  numerous means, especially through \nmobile Internet devices. Mobile phones, datacards, handheld game consoles and cellular \nrouters allow users to connect to the Internet from  anywhere there is a wireless network \nsupporting that device's technology. Within the lim itations imposed by small screens and \nother limited facilities of such pocket-sized devic es, services of the Internet, including email \nand the web, may be available. Service providers ma y restrict the services offered and \nwireless data transmission charges may be significa ntly higher than other access methods. \nEducational material at all levels from pre-school to post-doctoral is available from websites. \nExamples range from CBeebies, through school and hi gh-school revision guides, virtual \nuniversities, to access to top-end scholarly litera ture through the likes of Google Scholar. In \ndistance education, help with homework and other as signments, self-guided learning, whiling \naway spare time, or just looking up more detail on an interesting fact, it has never been easier \nfor people to access educational information at any  level from anywhere. The Internet in \ngeneral and the World Wide Web in particular are im portant enablers of both formal and \ninformal education. "" metadata={'source': 'wbpdf.pdf', 'page': 24}
"
"page_content='26 \n The low cost and nearly instantaneous sharing of id eas, knowledge, and skills has made \ncollaborative work dramatically easier, with the he lp of collaborative software. Not only can \na group cheaply communicate and share ideas, but th e wide reach of the Internet allows such \ngroups to easily form in the first place. An exampl e of this is the free software movement, \nwhich has produced, among other programs, Linux, Mo zilla Firefox, and OpenOffice.org. \nInternet ""chat"", whether in the form of IRC chat ro oms or channels, or via instant messaging \nsystems, allow colleagues to stay in touch in a ver y convenient way when working at their \ncomputers during the day. Messages can be exchanged  even more quickly and conveniently \nthan via email. Extensions to these systems may all ow files to be exchanged, ""whiteboard"" \ndrawings to be shared or voice and video contact be tween team members. \nVersion control systems allow collaborating teams t o work on shared sets of documents \nwithout either accidentally overwriting each other\' s work or having members wait until they \nget ""sent"" documents to be able to make their contr ibutions. Business and project teams can \nshare calendars as well as documents and other info rmation. Such collaboration occurs in a \nwide variety of areas including scientific research , software development, conference \nplanning, political activism and creative writing. Social and political collaboration is also \nbecoming more widespread as both Internet access an d computer literacy grow. From the \nflash mob \'events\' of the early 2000s to the use of  social networking in the 2009 Iranian \nelection protests, the Internet allows people to wo rk together more effectively and in many \nmore ways than was possible without it. \nThe Internet allows computer users to remotely acce ss other computers and information \nstores easily, wherever they may be across the worl d. They may do this with or without the \nuse of security, authentication and encryption tech nologies, depending on the requirements. \nThis is encouraging new ways of working from home, collaboration and information sharing \nin many industries. An accountant sitting at home c an audit the books of a company based in \nanother country, on a server situated in a third co untry that is remotely maintained by IT \nspecialists in a fourth. These accounts could have been created by home-working \nbookkeepers, in other remote locations, based on in formation emailed to them from offices \nall over the world. Some of these things were possi ble before the widespread use of the \nInternet, but the cost of private leased lines woul d have made many of them infeasible in \npractice. An office worker away from their desk, pe rhaps on the other side of the world on a \nbusiness trip or a holiday, can open a remote deskt op session into his normal office PC using \na secure Virtual Private Network (VPN) connection v ia the Internet. This gives the worker \ncomplete access to all of his or her normal files a nd data, including email and other \napplications, while away from the office. This conc ept has been referred to among system \nadministrators as the Virtual Private Nightmare, be cause it extends the secure perimeter of a \ncorporate network into its employees\' homes. \n3.4    Information \nMany people use the terms Internet  and World Wide Web , or just the Web , interchangeably, \nbut the two terms are not synonymous. The World Wid e Web is a global set of documents, \nimages and other resources, logically interrelated by hyperlinks and referenced with Uniform \nResource Identifiers (URIs). URIs allow providers t o symbolically identify services and \nclients to locate and address web servers, file ser vers, and other databases that store \ndocuments and provide resources and access them usi ng the Hypertext Transfer Protocol \n(HTTP), the primary carrier protocol of the Web. HT TP is only one of the hundreds of ' metadata={'source': 'wbpdf.pdf', 'page': 25}
"
"page_content=""27 \n communication protocols used on the Internet. Web s ervices may also use HTTP to allow \nsoftware systems to communicate in order to share a nd exchange business logic and data. \nWorld Wide Web browser software, such as Microsoft' s Internet Explorer, Mozilla Firefox, \nOpera, Apple's Safari, and Google Chrome, let users  navigate from one web page to another \nvia hyperlinks embedded in the documents. These doc uments may also contain any \ncombination of computer data, including graphics, s ounds, text, video, multimedia and \ninteractive content including games, office applica tions and scientific demonstrations. \nThrough keyword-driven Internet research using sear ch engines like Yahoo! and Google, \nusers worldwide have easy, instant access to a vast  and diverse amount of online information. \nCompared to printed encyclopedias and traditional l ibraries, the World Wide Web has \nenabled the decentralization of information. \nThe Web has also enabled individuals and organizati ons to publish ideas and information to a \npotentially large audience online at greatly reduce d expense and time delay. Publishing a web \npage, a blog, or building a website involves little  initial cost and many cost-free services are \navailable. Publishing and maintaining large, profes sional web sites with attractive, diverse \nand up-to-date information is still a difficult and  expensive proposition, however. Many \nindividuals and some companies and groups use web logs  or blogs, which are largely used as \neasily updatable online diaries. Some commercial or ganizations encourage staff to \ncommunicate advice in their areas of specialization  in the hope that visitors will be impressed \nby the expert knowledge and free information, and b e attracted to the corporation as a result. \nOne example of this practice is Microsoft, whose pr oduct developers publish their personal \nblogs in order to pique the public's interest in th eir work. Collections of personal web pages \npublished by large service providers remain popular , and have become increasingly \nsophisticated. Whereas operations such as Angelfire  and GeoCities have existed since the \nearly days of the Web, newer offerings from, for ex ample, Facebook and MySpace currently \nhave large followings. These operations often brand  themselves as social network services \nrather than simply as web page hosts. \nAdvertising on popular web pages can be lucrative, and e-commerce or the sale of products \nand services directly via the Web continues to grow . \nWhen the Web began in the 1990s, a typical web page  was stored in completed form on a \nweb server, formatted with HTML, ready to be sent t o a user's browser in response to a \nrequest. Over time, the process of creating and ser ving web pages has become more \nautomated and more dynamic. Websites are often crea ted using content management or wiki \nsoftware with, initially, very little content. Cont ributors to these systems, who may be paid \nstaff, members of a club or other organization or m embers of the public, fill underlying \ndatabases with content using editing pages designed  for that purpose, while casual visitors \nview and read this content in its final HTML form. There may or may not be editorial, \napproval and security systems built into the proces s of taking newly entered content and \nmaking it available to the target visitors. \n3.5   Communication \nElectronic mail, or email, is an important communic ations service available on the Internet. \nThe concept of sending electronic text messages bet ween parties in a way analogous to \nmailing letters or memos predates the creation of t he Internet. Pictures, documents and other \nfiles are sent as email attachments. Emails can be cc-ed to multiple email addresses. "" metadata={'source': 'wbpdf.pdf', 'page': 26}
"
"page_content='28 \n Internet telephony is another common communications  service made possible by the creation \nof the Internet. VoIP stands for Voice-over-Interne t Protocol, referring to the protocol that \nunderlies all Internet communication. The idea bega n in the early 1990s with walkie-talkie-\nlike voice applications for personal computers. In recent years many VoIP systems have \nbecome as easy to use and as convenient as a normal  telephone. The benefit is that, as the \nInternet carries the voice traffic, VoIP can be fre e or cost much less than a traditional \ntelephone call, especially over long distances and especially for those with always-on Internet \nconnections such as cable or ADSL. VoIP is maturing  into a competitive alternative to \ntraditional telephone service. Interoperability bet ween different providers has improved and \nthe ability to call or receive a call from a tradit ional telephone is available. Simple, \ninexpensive VoIP network adapters are available tha t eliminate the need for a personal \ncomputer. \nVoice quality can still vary from call to call but is often equal to and can even exceed that of \ntraditional calls. Remaining problems for VoIP incl ude emergency telephone number dialing \nand reliability. Currently, a few VoIP providers pr ovide an emergency service, but it is not \nuniversally available. Traditional phones are line- powered and operate during a power \nfailure; VoIP does not do so without a backup power  source for the phone equipment and the \nInternet access devices. VoIP has also become incre asingly popular for gaming applications, \nas a form of communication between players. Popular  VoIP clients for gaming include \nVentrilo and Teamspeak. Wii, PlayStation 3, and Xbo x 360 also offer VoIP chat features. \n3.6   Data transfer \nFile sharing is an example of transferring large am ounts of data across the Internet. A \ncomputer file can be emailed to customers, colleagu es and friends as an attachment. It can be \nuploaded to a website or FTP server for easy downlo ad by others. It can be put into a ""shared \nlocation"" or onto a file server for instant use by colleagues. The load of bulk downloads to \nmany users can be eased by the use of ""mirror"" serv ers or peer-to-peer networks. In any of \nthese cases, access to the file may be controlled b y user authentication, the transit of the file \nover the Internet may be obscured by encryption, an d money may change hands for access to \nthe file. The price can be paid by the remote charg ing of funds from, for example, a credit \ncard whose details are also passed—usually fully en crypted—across the Internet. The origin \nand authenticity of the file received may be checke d by digital signatures or by MD5 or other \nmessage digests. These simple features of the Inter net, over a worldwide basis, are changing \nthe production, sale, and distribution of anything that can be reduced to a computer file for \ntransmission. This includes all manner of print pub lications, software products, news, music, \nfilm, video, photography, graphics and the other ar ts. This in turn has caused seismic shifts in \neach of the existing industries that previously con trolled the production and distribution of \nthese products. \nStreaming media is the real-time delivery of digita l media for the immediate consumption or \nenjoyment by end users. Many radio and television b roadcasters provide Internet feeds of \ntheir live audio and video productions. They may al so allow time-shift viewing or listening \nsuch as Preview, Classic Clips and Listen Again fea tures. These providers have been joined \nby a range of pure Internet ""broadcasters"" who neve r had on-air licenses. This means that an \nInternet-connected device, such as a computer or so mething more specific, can be used to \naccess on-line media in much the same way as was pr eviously possible only with a television \nor radio receiver. The range of available types of content is much wider, from specialized \ntechnical webcasts to on-demand popular multimedia services. Podcasting is a variation on ' metadata={'source': 'wbpdf.pdf', 'page': 27}
"
"page_content='29 \n this theme, where—usually audio—material is downloa ded and played back on a computer or \nshifted to a portable media player to be listened t o on the move. These techniques using \nsimple equipment allow anybody, with little censors hip or licensing control, to broadcast \naudio-visual material worldwide. \nDigital media streaming increases the demand for ne twork bandwidth. For example, standard \nimage quality needs 1 Mbps link speed for SD 480p, HD 720p quality requires 2.5 Mbps, and \nthe top-of-the-line HDX quality needs 4.5 Mbps for 1080p.  \nWebcams are a low-cost extension of this phenomenon . While some webcams can give full-\nframe-rate video, the picture is usually either sma ll or updates slowly. Internet users can \nwatch animals around an African waterhole, ships in  the Panama Canal, traffic at a local \nroundabout or monitor their own premises, live and in real time. Video chat rooms and video \nconferencing are also popular with many uses being found for personal webcams, with and \nwithout two-way sound. YouTube was founded on 15 Fe bruary 2005 and is now the leading \nwebsite for free streaming video with a vast number  of users. It uses a flash-based web player \nto stream and show video files. Registered users ma y upload an unlimited amount of video \nand build their own personal profile. YouTube claim s that its users watch hundreds of \nmillions, and upload hundreds of thousands of video s daily.  \n3.7   Access \nThe prevalent language for communication on the Int ernet has been English. This may be a \nresult of the origin of the Internet, as well as th e language\'s role as a lingua franca. Early \ncomputer systems were limited to the characters in the American Standard Code for \nInformation Interchange (ASCII), a subset of the La tin alphabet. \nAfter English (27%), the most requested languages o n the World Wide Web are Chinese \n(23%), Spanish (8%), Japanese (5%), Portuguese and German (4% each), Arabic, French and \nRussian (3% each), and Korean (2%).   By region, 42% of the world\'s Internet users are b ased \nin Asia, 24% in Europe, 14% in North America, 10% i n Latin America and the Caribbean \ntaken together, 6% in Africa, 3% in the Middle East  and 1% in Australia/Oceania.  The \nInternet\'s technologies have developed enough in re cent years, especially in the use of \nUnicode, that good facilities are available for dev elopment and communication in the world\'s \nwidely used languages. However, some glitches such as mojibake  (incorrect display of some \nlanguages\' characters) still remain. \nCommon methods of Internet access in homes include dial-up, landline broadband (over \ncoaxial cable, fiber optic or copper wires), Wi-Fi,  satellite and 3G/4G technology cell phones. \nPublic places to use the Internet include libraries  and Internet cafes, where computers with \nInternet connections are available. There are also Internet access points in many public places \nsuch as airport halls and coffee shops, in some cas es just for brief use while standing. Various \nterms are used, such as ""public Internet kiosk"", ""p ublic access terminal"", and ""Web \npayphone"". Many hotels now also have public termina ls, though these are usually fee-based. \nThese terminals are widely accessed for various usa ge like ticket booking, bank deposit, \nonline payment etc. Wi-Fi provides wireless access to computer networks, and therefore can \ndo so to the Internet itself. Hotspots providing su ch access include Wi-Fi cafes, where would-\nbe users need to bring their own wireless-enabled d evices such as a laptop or PDA. These \nservices may be free to all, free to customers only , or fee-based. A hotspot need not be \nlimited to a confined location. A whole campus or p ark, or even an entire city can be enabled. ' metadata={'source': 'wbpdf.pdf', 'page': 28}
"
"page_content='30 \n Grassroots efforts have led to wireless community n etworks. Commercial Wi-Fi services \ncovering large city areas are in place in London, V ienna, Toronto, San Francisco, \nPhiladelphia, Chicago and Pittsburgh. The Internet can then be accessed from such places as \na park bench.   Apart from Wi-Fi, there have been experiments with  proprietary mobile \nwireless networks like Ricochet, various high-speed  data services over cellular phone \nnetworks, and fixed wireless services. High-end mob ile phones such as smartphones \ngenerally come with Internet access through the pho ne network. Web browsers such as Opera \nare available on these advanced handsets, which can  also run a wide variety of other Internet \nsoftware. More mobile phones have Internet access t han PCs, though this is not as widely \nused.   An Internet access provider and protocol matrix di fferentiates the methods used to get \nonline. \nIn contrast, an Internet blackout  or outage  can be caused by accidental local signaling \ninterruptions. Disruptions of submarine communicati ons cables may cause blackouts or \nslowdowns to large areas depending on them, such as  in the 2008 submarine cable disruption. \nInternet blackouts of almost entire countries can b e achieved by governments as Internet \ncensorship, such as with the Internet in Egypt, whe re approximately 93% of networks were \nshut down in 2011 in an attempt to stop mobilisatio n for anti-government protests.  \nIn an American study in 2005, the percentage of men  using the Internet was very slightly \nahead of the percentage of women, although this dif ference reversed in those under 30. Men \nlogged on more often, spend more time online, and a re more likely to be broadband users, \nwhereas women tended to make more use of opportunit ies to communicate (such as email). \nMen were more likely to use the Internet to pay bil ls, participate in auctions, and for \nrecreation such as downloading music and videos. Me n and women were equally likely to use \nthe Internet for shopping and banking.   More recent studies indicate that in 2008, women \nsignificantly outnumbered men on most social networ king sites, such as Facebook and \nMyspace, although the ratios varied with age.   In addition, women watched more streaming \ncontent, whereas men downloaded more.   In terms of blogs, men were more likely to blog in  \nthe first place; among those who blog, men were mor e likely to have a professional blog, \nwhereas women were more likely to have a personal b log.  \n \n 3.8  Sociology of the Internet \nThe Internet has enabled entirely new forms of soci al interaction, activities, and organizing, \nthanks to its basic features such as widespread usa bility and access. Social networking \nwebsites such as Facebook, Twitter and MySpace have  created new ways to socialize and \ninteract. Users of these sites are able to add a wi de variety of information to pages, to pursue \ncommon interests, and to connect with others. It is  also possible to find existing \nacquaintances, to allow communication among existin g groups of people. Sites like LinkedIn \nfoster commercial and business connections. YouTube  and Flickr specialize in users\' videos \nand photographs. \nIn the first decade of the 21st century the first g eneration is raised with widespread \navailability of Internet connectivity, bringing con sequences and concerns in areas such as \npersonal privacy and identity, and distribution of copyrighted materials. These ""digital \nnatives"" face a variety of challenges that were not  present for prior generations. ' metadata={'source': 'wbpdf.pdf', 'page': 29}
"
"page_content=""31 \n The Internet has achieved new relevance as a politi cal tool, leading to Internet censorship by \nsome states. The presidential campaign of Howard De an in 2004 in the United States was \nnotable for its success in soliciting donation via the Internet. Many political groups use the \nInternet to achieve a new method of organizing in o rder to carry out their mission, having \ngiven rise to Internet activism. Some governments, such as those of Iran, North Korea, \nMyanmar, the People's Republic of China, and Saudi Arabia, restrict what people in their \ncountries can access on the Internet, especially po litical and religious content. This is \naccomplished through software that filters domains and content so that they may not be easily \naccessed or obtained without elaborate circumventio n.  \nIn Norway, Denmark, Finland  and Sweden, major Internet service providers have v oluntarily, \npossibly to avoid such an arrangement being turned into law, agreed to restrict access to sites \nlisted by authorities. While this list of forbidden  URLs is only supposed to contain addresses \nof known child pornography sites, the content of th e list is secret. Many countries, including \nthe United States, have enacted laws against the po ssession or distribution of certain material, \nsuch as child pornography, via the Internet, but do  not mandate filtering software. There are \nmany free and commercially available software progr ams, called content-control software, \nwith which a user can choose to block offensive web sites on individual computers or \nnetworks, in order to limit a child's access to por nographic materials or depiction of violence. \nThe Internet has been a major outlet for leisure ac tivity since its inception, with entertaining \nsocial experiments such as MUDs and MOOs being cond ucted on university servers, and \nhumor-related Usenet groups receiving much traffic.  Today, many Internet forums have \nsections devoted to games and funny videos; short c artoons in the form of Flash movies are \nalso popular. Over 6 million people use blogs or me ssage boards as a means of \ncommunication and for the sharing of ideas. The por nography and gambling industries have \ntaken advantage of the World Wide Web, and often pr ovide a significant source of \nadvertising revenue for other websites. Although ma ny governments have attempted to \nrestrict both industries' use of the Internet, this  has generally failed to stop their widespread \npopularity.  \nOne main area of leisure activity on the Internet i s multiplayer gaming. This form of \nrecreation creates communities, where people of all  ages and origins enjoy the fast-paced \nworld of multiplayer games. These range from MMORPG  to first-person shooters, from role-\nplaying video games to online gambling. This has re volutionized the way many people \ninteract  while spending their free time on the Internet. Whi le online gaming has been around \nsince the 1970s, modern modes of online gaming bega n with subscription services such as \nGameSpy and MPlayer. Non-subscribers were limited t o certain types of game play or certain \ngames. Many people use the Internet to access and d ownload music, movies and other works \nfor their enjoyment and relaxation. Free and fee-ba sed services exist for all of these activities, \nusing centralized servers and distributed peer-to-p eer technologies. Some of these sources \nexercise more care with respect to the original art ists' copyrights than others. \nMany people use the World Wide Web to access news, weather and sports reports, to plan \nand book vacations and to find out more about their  interests. People use chat, messaging and \nemail to make and stay in touch with friends worldw ide, sometimes in the same way as some \npreviously had pen pals. The Internet has seen a gr owing number of Web desktops, where \nusers can access their files and settings via the I nternet. "" metadata={'source': 'wbpdf.pdf', 'page': 30}
"
"page_content='32 \n Cyber slacking can become a drain on corporate reso urces; the average UK employee spent \n57 minutes a day surfing the Web while at work, acc ording to a 2003 study by Peninsula \nBusiness Services. Internet addiction disorder is e xcessive computer use that interferes with \ndaily life. Some psychologists believe that Interne t use has other effects on individuals for \ninstance interfering with the deep thinking that le ads to true creativity.  \nInternet usage has been correlated to users\' loneli ness. Lonely people tend to use the Internet \nas an outlet for their feelings and to share their stories with others, such as in the ""I am lonely \nwill anyone speak to me"" thread. \n4.0   CONCLUSION: \nInternet  is a short form of the technical term internetwork , the result of interconnecting \ncomputer networks with special gateways or routers.  The Internet is also often referred to \nas the Net.   \n        \n5.0   SUMMARY: \nIn this unit, you have learnt: \n• Definition of the Internet \n• History of the Internet \n• Similar and distinguishing elements of the Internet  and WWW \n• Different Search Engines \n• Sociology of  the Internet \n          \n6.0  Tutor Marked Assignment  \n \n/square4 Define the Internet \n/square4 Differentiate between the Internet and the WWW \n/square4 List other things WWW can be used to do \n7.0 Further Reading and Other Resources \n• Abbate, Janet. Inventing the Internet . Cambridge: MIT Press, 1999. \n• Bemer, Bob, ""A History of Source Concepts for the I nternet/Web"" \n• Campbell-Kelly, Martin; Aspray, William. Computer: A History of the Information \nMachine. New York: BasicBooks, 1996. \n• Clark, David D., ""The Design Philosophy of the DARP A Internet Protocols"", \nComputer Communications Review 18:4, August 1988, p p. 106–114 \n• Graham, Ian S. The HTML Sourcebook: The Complete Guide to HTML . New York: \nJohn Wiley and Sons, 1995. \n• Krol, Ed. Hitchhiker\'s Guide to the Internet , 1987. \n• Krol, Ed. Whole Internet User\'s Guide and Catalog.  O\'Reilly & Associates, 1992. \n• Scientific American Special Issue on Communications , Computers, and Networks , \nSeptember, 1991 \n \n \nU NIT TWO – Understanding the WWW \n1.0   INTRODUCTION \n2.0 OBJECTIVES ' metadata={'source': 'wbpdf.pdf', 'page': 31}
"
"page_content='33 \n 4.0  MAIN CONTENT \n4.1  – How the WWW works \n4.2  – How do URLs work \n4.3  -How to Use a Web Browser \n4.4  How to Use a Hypertext link \n5.0   CONCLUSION          \n6.0   SUMMARY          \n7.0  TUTOR MARKED ASSIGNMENT        \n8.0  FURTHER READING AND OTHER RESOURCES \n \n1.0   INTRODUCTION \nOne of the best things about the World Wide Web is that it is just as easy to create Web pages \nas it is to browse them. The key to publishing on t he Web is having a firm understanding of \nHypertext Markup Language (HTML). Despite the intim idating name, HTML is extremely \nsimple to learn and use. By the time you finish thi s course material, you will be well on your \nway to becoming an HTML wizard. \nBefore diving head-first into the language of HTML itself, it will help you to understand a \nlittle bit about how the World Wide Web works. Afte r all, HTML is designed to guide users \nthrough the vast and tangled resources of the Web. As a student of this course , you will need \nto understand some of the basics behind the archite cture of the World Wide Web. Knowing \nhow the Web works, as well as when it doesn\'t and w hy, can help you make important \ndecisions about how to construct your own Web pages .  \nIt would be impossible to describe in detail the in ner workings of the Web in a single Unit. \nWith that in mind, this Unit provides you with a ""r efresher course"" on the basics. Armed with \nthis basic knowledge, you\'ll be able to move on to writing your own Web pages in a very \nshort time.  \n \n2.0   OBJECTIVES \n \nAt the end of this unit, you should be able to: \n/square4 Explain the meaning of WWW \n/square4 Describe how WWW works \n/square4 Explain parts of URLs \n \n3.0   MAIN CONTENT \n \n3.1  How the WWW works \n \nThe World Wide Web is a system of hypertext documen ts that are linked to each other. \nInternet is the means to access this set of interli nked documents. These hypertext \ndocuments can contain text, images or even audio an d video data. The World Wide Web, \nserving as an enormous information base, has also f acilitated the spread of this \ninformation across the globe. It has led to the eme rgence of the Internet age. It will not be \nan exaggeration to say that the Internet owes its p opularity to the World Wide Web.  \n ' metadata={'source': 'wbpdf.pdf', 'page': 32}
"
"page_content=""34 \n Before understanding how World Wide Web works, let us delve into the history behind \nthe creation of this smart information base, popula rly known as 'www'. It was the genius \nof Sir Tim Berners-Lee, an English computer scienti st and MIT professor, who created \nthe World Wide Web. While he was working at CERN in  Switzerland, he built \nENQUIRE, a closed database of information containin g bidirectional links that could be \nedited from the server. ENQUIRE was, in many ways, similar to the modern-day World \nWide Web. In 1989, Berners-Lee wrote a proposal des cribing an information \nmanagement system. True, the concept of hypertext o riginated from projects such as the \nHypertext Editing System at Brown University and si milar projects by Ted Nelson and \nAndries van Dam, both working in the field of compu ters and Internet technology. But \nBerners-Lee accomplished the feat of combining the concepts of hypertext and Internet. \nHe also developed a system of globally unique ident ifiers for web resources, which later \ncame to be known as Uniform Resource Identifiers. O n April 30, 1993, it was decided the \nthe World Wide Web would be free to everyone. After  leaving CERN, Tim Berners-Lee \nfounded the World Wide Web Consortium at the MIT La boratory for Computer Science. \n \nAsking how the Internet works is not the same as as king how the world wide web works. \nWell, Internet and the World Wide Web are not one a nd the same, although they are often \nused as synonyms. While the Internet is an infrastr ucture providing interconnectivity \nbetween network computers, the web is one of the se rvices of the Internet. It is a \ncollection of documents that can be shared across I nternet-enabled computers. \n \nThe network of web servers serves as the backbone o f the World Wide Web. The \nHypertext Transfer Protocol (HTTP) is used to gain access to the web. A web browser \nmakes a request for a particular web page to the we b server, which in turn responds with \nthe requested web page and its contents. It then di splays the web page as rendered by \nHTML or other web languages used by the page. Each resource on the web is identified \nby a globally unique identifier (URI). Each web pag e has a unique address, with the help \nof which a browser accesses it. With the help of th e domain name system, a hierarchical \nnaming system for computers and resources participa ting in the Internet, the URL is \nresolved into an IP address. \n \nPresence of hyperlinks, the worldwide availability of content and universal readership is \nsome of the striking features of the World Wide Web . The interlinked hypertext \ndocuments form a web of information. Hyperlinks pre sent on web pages allow the web \nusers to choose their paths of traversal across inf ormation on the web. They provide an \nefficient cross-referencing system and create a non -linear form of text. Moreover, they \ncreate a different reading experience. The informat ion on the web is available 24/7 across \nthe globe. It is updated in real time and made acce ssible to web users around the world. \nExcept for certain websites requiring user login, a ll the other websites are open to \neveryone. This all-time availability of information  has made the Internet, a platform for \nknowledge-sharing. Thanks to the use of a common HT ML format for rendering web \ncontent and a common access method using the HTTP p rotocol, the web has achieved \nuniversal readership. \n \nThe World Wide Web, a compilation of millions of hy pertext documents, has brought \ntogether information from all over the world, 'just  a click away'.  \n \n3.2  – How do URLs work \n "" metadata={'source': 'wbpdf.pdf', 'page': 33}
"
"page_content=""35 \n Almost every item of information on the WWW can be accessed directly. That is because \nevery document, file and image has a specific addre ss. These addresses are called Uniform \nResource Locators  (URLs).  A URL is a formatted text string used by Web browsers, email \nclients and other software to identify a network resource  on the Internet. Network resources \nare files that can be plain Web pages, other text d ocuments, graphics, or programs.  \nURLs are used by Web browser to locate and access i nformation on the WWW.  A URL is \nalso known as a Web address. Think of URLs as a pos tal addresses for the Internet.  \n \n \nFigure  1:  Showing parts of Uniform Resource Locator.  \nThe first part of the URL parts is known as the protocol . This is almost always http:// , which \nis short for Hypertext Transfer Protocol. Some URLs  start with a different protocol, such as \nftp://  or news:// . If you're accessing a document on your local mach ine instead of on the Web, \nthe URL will begin with file:// .  \nThe second part of the URL is known as the domain  name . If you've used e-mail on the \nInternet, you're probably already familiar with dom ains. The domain represents the name of \nthe server that you're connecting to. A domain name , to put it simple, is your address on the \nWorld Wide Web. This is where you put up your websi te and it is what internet users will \ntype in their address bar in order to locate your s ite while online. Your domain name should \nbe short, simple, and easy to remember. But, one mu st keep in mind that domain names are \nonly available for one individual or business. This  is to maintain uniqueness and to avoid \nconfusion among the millions of websites and intern et users. \nA most common example of a domain name is www yahoo .com. The first part, the www \nidentifies the server name of the domain. Yahoo, th e second element, is the name of the \ncompany, individual or organization; and the suffix  .com is the domain name extension, \nwhich identifies the purpose of the website. \nThe most important part of the entire domain name i s the second element, which states the \nunique name of an individual, an organization, or a  company. This is what sets it apart from \nall the other addresses present on the web, as some  people would try to change a part of the \ndomain name in order to direct traffic to their sit e instead. \nAnother example of a domain name is www nasa.gov. T his is the NASA website, and since it \nis a government office, it uses the extension dot g ov. Users need to bear in mind that the \ndomain name extensions are there for a purpose. It indicates the purpose why the website \nexists. \nThe third part of the URL is called the directory  path . This is the specific area on the server \nwhere the item resides. Directory paths on Web serv ers work a lot like they do on your \ndesktop computer. To locate a particular file on a server, you need to indicate its directory \npath first.  \n"" metadata={'source': 'wbpdf.pdf', 'page': 34}
"
"page_content=""36 \n The fourth part of the URL is called the document  file  name . This indicates the specific file \nbeing accessed. This is usually an HTML file, but i t can also be an image, sound, or another \nfile.  \nSometimes the URL contains a fifth part, known as t he anchor  name . This is a pointer to a \nspecific part of an HTML document. It's always prec eded by the pound sign (#). Anchors are \nespecially useful for large documents.  \n \nAbsolute vs. Relative URLs \nFull URLs featuring all substrings are called absolute  URLs. In some cases such as within \nWeb pages, URLs can contain only the one location e lement. These are called relative  URLs. \nRelative URLs are used for efficiency by Web server s and a few other programs when they \nalready know the correct URL protocol and host. \n \n3.3 - How to Use a Web Browser  \nMany people can successfully navigate the World Wid e Web without any problem at all and \nmay even consider themselves experts of the Web. On  the other hand, there are thousands of \nother people who do not even know the first thing a bout operating a web browser. If you \nwould like to know how to operate a web browser (th e tool you use to navigate the internet), \nsuch asNetscape, Microsoft's Internet Explorer or M ozilla's Firefox without taking an \nexpensive computer-learning class then here are the  basics of using a web browser of your \nchoice. "" metadata={'source': 'wbpdf.pdf', 'page': 35}
"
"page_content='37 \n  \nFigure 2:  A Web Browser. \nInstructions \n \n1.  Get acquainted with the web browser you are using. All web browsers are \nrelatively similar, but the two most popular web br owsers are Microsoft \nInternet Explorer and Mozilla Firefox. Open the web  browser by double-\nclicking on the icon on your desktop or right-click ing the icon and choosing \n""Open."" \n \n2.  Once the browser is open, notice the Address Bar, w hich is the URL (website \naddress) where you are located. To easily identify the Address Bar, it will be \nlocated at the top of the browser itself and the UR L in the Address Bar will \nusually begin with ""http://www."" \n \n3.  Next, notice the tools that are surrounding the Add ress Bar. For example, there \nwill usually be a ""Page Back"" and ""Page Forward"" bu tton, usually indicated by \na forward and backward arrow. There may even be a p icture or icon that will \nstand for ""Home Page,"" which is the first web page that is viewed when the \nweb browser is opened. \n \n4.  Above the web browser\'s icons that you\'ve just look ed at, you\'ll notice a series \nof help menus, such as ""File,"" ""Edit,"" ""View,"" ""His tory,"" ""Bookmarks"" or \n""Favorites,"", as well as ""Tools,"" and ""Help."" All o f these menus are placed \nthere because they may be able to help you at one t ime or the other. For \n' metadata={'source': 'wbpdf.pdf', 'page': 36}
"
"page_content='38 \n example, clicking once on ""Bookmarks"" or ""Favorites "" will show you a list of \nall the websites that you have placed in your ""favo rite"" list. \n \n5.  Two important things to know how to do are to get t o a specific website \ndestination of your choice and make that website on e of your ""favorites"" or \n""bookmarks.""We will start with navigating to a spec ific website of your \nchoice. If you have a specific URL of a website in mind then feel free to use \nthat. For this example, we\'ll use the Google Search  Engine home page. In the \nAddress Bar which is located at the top of the web browser, type in the full \nURL of the website you would like to go to. In this  example, we\'ll type in \n""http://www.google.com."" After you\'ve typed in the full URL, either press \n""Enter"" on the keyboard or click on the arrow icon or ""go"" button located at \nthe very right end of the Address Bar. After you ha ve done that the website \nshould appear on your web browser\'s screen. \n \n6.  We will now put this website, the website of your c hoice or in this example \nwe\'re using www.google.com, in your ""Favorites"" or ""Bookmarks"" list. Click \non the ""Bookmark"" or ""Favorites"" menu at the top of  the web browser and \nchoose the option that says either, ""Bookmark this page,"" or ""Add to \nFavorites."" Your website is now in the ""Favorites"" or ""Bookmarks"" list and all \nyou will need to do to get back to that website is to click on the ""Bookmarks"" \nor ""Favorites"" menu again and click on the website that you have favorited or \nbookmarked. \n \n7.  You have just learned how to do two very important tasks in two of the most \npopular web browsers that are used for navigating t he internet. For any other \nhelp that is needed, the web browser\'s own ""Help"" s ection can be read by \nclicking on the ""Help"" menu at the top of the web b rowser and choosing the \nbrowser help section. In Mozilla Firefox, this sect ion is called ""Help \nContents,"" while in Microsoft\'s Internet Explorer i t is called ""Contents and \nIndex."" \n \nExperiment with your Web browser to get an understa nding of how navigation works on the \nWorld Wide Web. It is a good idea to use a few diff erent browsers and note the differences. \nKnowing how users browse the Web is an important pa rt of understanding how you should \nconstruct your own HTML pages. \n \n3.4     How to Use a Hypertext link \nUsing a hypertext link to move from one place to an other is one of the most common \nactivities on the World Wide Web. In fact, hypertex t links are the very essence of the \nWeb.  \n \nThe following steps explain how to use links and de scribe a little of what happens behind \nthe scenes. \n ' metadata={'source': 'wbpdf.pdf', 'page': 37}
"
"page_content=""39 \n 1.  find a link on the page, look for text that's displ ayed in a different color. By default, \nhypertext links you haven't used are blue and under lined. Links you've already visited \nare purple. These colors can be changed, however.  \n2.  Using your mouse, place the pointer over the hypert ext link and click. There will be a \nbrief delay after you press on the hypertext link.  \n3.  During this delay, your browser client is contactin g the Web server referenced in the \nhypertext link's URL. It is attempting to retrieve the referenced document. \n \nFigure 3: An example of HTML document .  \n4.  Once the contact has been established, your browser  begins displaying the new \ndocument.  \n5.  Not all links appear as text. Many links appear in images, such as buttons or icons. \nSometimes a colored border will appear around the i mage, or it will be designed to \nlook like a button. In many browsers, the cursor wi ll change to a hand when it passes \nover a hypertext link. These visual clues help the reader understand that it is a link. \nHowever, sometimes there are no visual clues. Under standing the need to provide \nvisual clues is an important part of being an HTML author.  \n \n4.0   CONCLUSION: \nHypertext is one the most common activities on the WWW. It is the very essence of the \nWeb. \n         \n5.0   SUMMARY: \nIn this unit, you have learnt: \n• The working method of  WWW  \n• The work of the URLs in the system \n• How hypertext links are used. \n \n6.0   Tutor Marked Assignment  \n/square4 What is the difference between Absolute and Relativ e URLs?  \n/square4 Explain the term WWW \n/square4 What is the work of Hypertext Transfer Protocol (HT TP)? \n"" metadata={'source': 'wbpdf.pdf', 'page': 38}
"
"page_content='40 \n /square4 Give three examples of domain names? \n7.0 Further Reading and Other Resources \n• Abbate, Janet. Inventing the Internet . Cambridge: MIT Press, 1999. \n• Bemer, Bob, ""A History of Source Concepts for the I nternet/Web"" \n• Campbell-Kelly, Martin; Aspray, William. Computer: A History of the Information \nMachine. New York: BasicBooks, 1996. \n• Clark, David D., ""The Design Philosophy of the DARP A Internet Protocols"", \nComputer Communications Review 18:4, August 1988, p p. 106–114 \n• Graham, Ian S. The HTML Sourcebook: The Complete Guide to HTML . New York: \nJohn Wiley and Sons, 1995. \n• Krol, Ed. Hitchhiker\'s Guide to the Internet , 1987. \n• Krol, Ed. Whole Internet User\'s Guide and Catalog.  O\'Reilly & Associates, 1992. \n• Scientific American Special Issue on Communications , Computers, and Networks , \nSeptember, 1991 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n ' metadata={'source': 'wbpdf.pdf', 'page': 39}
"
"page_content='41 \n UNIT THREE – HTML AND THE WEB \n1.0  Introduction \n2.0  Objectives \n3.0 Main Content \n3.1. What is HTML \n3.2.  History of HTML \n3.3.  How HTML works with the Web \n3.3.1 How HTML works on the Web \n3.3.2. What are the tags up to? \n3.3.3 Is there anything HTML cannot do? \n3.4. Things you can do with HTML \n4.0.  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0   Further Reading and Other Resources \n \n1.0  INTRODUCTION \nWeb designers utilize markup language, most notably  HTML for structure and CSS for \npresentation to develop pages that can be read by w eb browsers. This unit will deal on only \nHTML structures. HTML is not the only way to present information on the Web, but it is the \nglue that holds everything together. In addition to  begin a markup language for displaying \ntext, images, and multimedia, HTML provides instruc tions to Web browsers in order to \ncontrol how documents are viewed and how they relat e to each other. For all its simplicity, \nHTML is a very powerful language.  \nIn this unit, we will take a look at how HTML inter acts with the Web and  students are \nexpected to explore some of the ways that it is beg in used today on popular web sites. \n \n2.0 OBJECTIVES \nAt the end of this unit, you should be able to: \n/square4 Define HTML \n/square4 Describe the History of HTML \n/square4 Explain how HTML works \n \n3.0 MAIN CONTENT \n3.1. What is HTML? ' metadata={'source': 'wbpdf.pdf', 'page': 40}
"
"page_content='42 \n HTML is a computer language devised to allow websit e creation. These websites can then be \nviewed by anyone else connected to the Internet. It  is relatively easy to learn, with the basics \nbeing accessible to most people in one sitting; and  quite powerful in what it allows you to \ncreate. It is constantly undergoing revision and ev olution to meet the demands and \nrequirements of the growing Internet audience under  the direction of the World Wide Web \nConsortium, W3C, the organisation charged with desi gning and maintaining the language. \nThe full meaning of HTML is HyperText Markup Language . \n• HyperText  is the method by which you move around on the web — by clicking on \nspecial text called hyperlinks  which bring you to the next page. The fact that it  is \nhyper  just means it is not linear — i.e. you can go to a ny place on the Internet \nwhenever you want by clicking on links — there is n o set order to do things in.  \n• Markup  is what HTML tags  do to the text inside them. They mark it as a cert ain type \nof text ( italicised  text, for example).  \n• HTML is a Language , as it has code-words and syntax like any other la nguage. \n3.1.1 How does HTML works? \nHTML consists of a series of short codes  typed into a text-file by the site author — these are \nthe tags. The text is then saved as a html file , and viewed through a browser, like Internet \nExplorer  or firefox. This browser reads the file and transl ates the text into a visible form,  \nrendering the page as the author had intended. Writ ing your own HTML entails using tags \ncorrectly to create your vision. You can use anythi ng from a rudimentary text-editor to a \npowerful graphical editor to create HTML pages. \n3.1.2 What are the tags up to? \nThe tags are what separate normal text from HTML co de. You might know them as the \nwords between the <angle-brackets>. They allow all the cool stuff like images and tables and \nstuff, just by telling your browser what to render on the page. Different tags will perform \ndifferent functions. The tags themselves don’t appe ar when you view your page through a \nbrowser, but their effects do. The simplest tags do  nothing more than apply formatting to \nsome text, like this: \n<b> These words will be bold </b> , and these will not.  \nIn the example above, the <b> tags were wrapped aro und some text, and their effect will be \nthat the contained text will be bolded when viewed through an ordinary web browser. \n3.1.3 Is there anything HTML cannot do? \nOf course, but since making websites became more po pular and needs increased many other \nsupporting languages have been created to allow new  stuff to happen, plus HTML is \nmodified every few years to make way for improvemen ts. \nCascading Stylesheets are used to control how your pages are presented, and make pages \nmore accessible. Basic special effects and interact ion is provided by JavaScript, which adds a ' metadata={'source': 'wbpdf.pdf', 'page': 41}
"
"page_content='43 \n lot of power to basic HTML. Most of this advanced s tuff is for later down the road, but when \nusing all of these technologies together, you have a lot of power at your disposal. \n \n3.2. History of HTML \nA markup language combines text as well as coded in structions on how to format that text \nand the term ""markup"" originates from the tradition al practice of \'marking up\' the margins of \na paper manuscript with printer\'s instructions. Now adays, however, if you mention the term \n\'markup\' to any knowledgeable web author, the first  thing they are likely to think of is \n\'HTML\'.  \nIn the Beginning \n \nHTML —which is short for Hyper Text Markup Language— is the official language of the \nWorld Wide Web and was first conceived in 1990. HTM L is a product of SGML (Standard \nGeneralized Markup Language) which is a complex, te chnical specification describing \nmarkup languages, especially those used in electron ic document exchange, document \nmanagement, and document publishing. HTML was origi nally created to allow those who \nwere not specialized in SGML to publish and exchang e scientific and other technical \ndocuments. HTML especially facilitated this exchang e by incorporating the ability to link \ndocuments electronically using hyper links. Thus the name Hyper text Markup Language. \n \nHowever, it was quickly realized by those outside o f the discipline of scientific \ndocumentation that HTML was relatively easy to lear n, was self contained and lent itself to a \nnumber of other applications. With the evolution of  the World Wide Web, HTML began to \nproliferate and quickly spilled over into the mains tream. \n \nBrowser Wars \nSoon, companies began creating browsers —the softwa re required to view an HTML \ndocument, i.e., a web page— and as they gained popu larity it gave rise to competition and \nother web browsers. It may surprise some that back in late 1995, Netscape —which now \nplays a distant second to the King Kong of browsers , Internet Explorer— was the dominant \nbrowser on the market. In fact, Netscape was the fi rst browser to support Javascript, animated \ngifts and HTML frames. \n \nThus began the so-called \'browser wars\' and, along with seeing who could implement more \n\'bells and whistles\' than the other guy, browser ma kers also began inventing proprietary \nHTML elements that only worked with their browsers.  Some examples of these are the \n<marquee> ... </marquee> tags (scrolling text) which originally o nly worked with Internet \nExplorer and the <blink> ... </blink> tags (blinking text) which still only work s with Gecko-\nbased browsers such as Mozilla or Netscape. \n \nA side effect of all this competition was that HTML  became fragmented and web authors \nsoon found that their web pages looked fine in one browser but not in another. Hence it \nbecame increasingly difficult and time consuming to  create a web page that would display \nuniformly across a number of different browsers. (T his phenomenon remains to some extent \nto this very day.) ' metadata={'source': 'wbpdf.pdf', 'page': 42}
"
"page_content=""44 \n  \nMeanwhile, an organization known as the World Wide Web Consortium (W3C for short) was \nworking steadily along in the background to standar dize HTML. Several recommendations \nwere published by the W3C during the late 1990s whi ch represented the official versions of \nHTML and provided an ongoing comprehensive referenc e for web authors. Thus the birth of \nHTML 2.0 in September 1995, HTML 3.2 in January 199 7 and HTML 4.01 in December \n1999. \n \nBy now, Internet Explorer (IE) had eclipsed Netscap e Navigator as the browser to use while \nsurfing the net due to its superior capabilities bu t also largely due to the fact that the IE came \nbundled with the Windows operating system. Essentia lly when people bought computers \nusing the Windows OS, it had the 'internet installe d on it'. This tended to suit people just fine \nsince the typical newcomer to computers was someone  who was tentatively striking forth to \ntake on this intimidating new-fangled technology th at was crammed to the rafters with \nindecipherable acronyms, software help files that m ade no sense and buggy programs. Hence, \nthe more 'instant' solutions this new technology of fered, the better it was. \n \n3.3. How HTML works with the Web \n HTML allows the individual elements on the Web to be brought together and presented as a \ncollection. Text, images, multimedia, and other fil es can all be packaged together using \nHTML. This section of unit three explains the basic  principles behind the interaction between \nHTML and the WWW.  \nYou can always view the HTML source code for a part icular page through your browser. \nOnce you've mastered the basics of HTML, this is a great way to learn how other authors put \ntogether their HTML documents. To view the source c ode of the current document in \nNetscape, choose Document Source from the View menu .  \n \n"" metadata={'source': 'wbpdf.pdf', 'page': 43}
"
"page_content='45 \n Figure 1:  Document Source from the View menu  \n1.  The author of the Web page assembles all of the mat erials necessary, including text, \ncharts, images, and sounds.  \n2.  All of the material for the Web page is linked toge ther using HTML. HTML codes \ncontrol the appearance, layout, and flow of the pag e. The amazing thing about HTML \nis that it is all done with simple text codes that anyone can understand. \n3.  When someone connects to a Web server from his or h er computer, the HTML file is \ntransferred from server to client. Because an HTML file is simple text, this usually \nhappens very quickly.  \n4.  The Web browsing software (the client) interprets t he layout and markup commands \nspecified in the HTML file and then display the tex t exactly as the HTML author \nintended. \n5.  Any images and charts on the page are retrieved as well. The HTML file tells the Web \nbrowser what images to download and how to display them on the page.  \n \n3.3.1. How HTML works on the Web \na)  Your Computer \nThe browser on your computer sends a request for an  HTML document from a remote server \nusing addresses called URLs (Uniform Resource Locat ors). When the data is located and \nreturned, your browser displays the web page (text and graphics) according to the HTML tags \nin the document. \nb)  Connection to the Internet \nA dial up modem in your computer or a direct high s peed data transmission line connects \nyour computer to an internet service provider. \nc)  Internet Service Provider \nYour internet service provider is probably an inter net web server and is connected to all the \nother computers on the web. Your web server sends y our request for an HTML document and \nsends back the file to you. \nd)  Internet \nThe internet is a collection of web servers around the world. Each server has a URL and will \nforward your request on until it reaches the server  you are looking for. When the data is \nreturned to you, it may travel a totally different route over different computers. \ne)  Remote server \nThe remote web server with the URL you are looking for has all the HTML files including \ntext, graphics, sound, and video. It may also have gateway scripts that are programs running \non the server to process data. ' metadata={'source': 'wbpdf.pdf', 'page': 44}
"
"page_content='46 \n  \n \n  \n3.4. Things you can do with HTML \nThere are many ways you can use HTML to publish con tent on the World Wide Web. This \nunit will teach you the techniques you need to know  to create timely, informative, and \ncompelling HTML documents. \n3.4.1 Six Cool Things You Can Do with HTML \n \n1.  You can create a personal home page and leave your mark on the World Wide Web.  \n \nFigure 2 :  An example of a personal home page \n2.  You can create a page for your company to advertise  and promote products and \nservices.  \n' metadata={'source': 'wbpdf.pdf', 'page': 45}
"
"page_content='47 \n  \nFigure 3 :  An example of a home page for your company \n3.  You can build a catalog on the World Wide Web, comp lete with product descriptions \nand photographs. You can even incorporate fill-in o rder forms so that your customers \ncan order products from you on line.  \n \nFigure 4:  An example catalog on the World Wide Web \n' metadata={'source': 'wbpdf.pdf', 'page': 46}
"
"page_content='48 \n 4.  You can create a searchable phone directory for you r company or organization.  \n \nFigure 5:  An example of searchable phone directory for a com pany \n \n5.  You can create a newsletter on the Web, with pictur es and sounds. Using some of the \nadvanced HTML tricks explained in this book, you ca n format the newsletter to give \nit a slick, professional appearance.  \n' metadata={'source': 'wbpdf.pdf', 'page': 47}
"
"page_content='49 \n  \nFigure 6:  An example of how to create newsletter on the Web \n4.0   CONCLUSION: \nHTML is a computer language devised to allow websit e creation. Its tags are embedded \nin angle brackets. HTML is made up of different tag s that perform different functions .\n        \n5.0  SUMMARY: \nIn this unit, you have learnt  : \n• The meaning of HTML \n• How HTML worked with the Web \n• How HTML worked on the Web \n• Things that can be done with HTML \n          \n6.0  TUTOR MARKED ASSIGNMENT \n/square4 List five Things You Can Do with HTML \n/square4 Define HTML \n/square4 Describe the History of HTML \n7.0 FURTHER READING AND OTHER RESOURCES \n• Abbate, Janet. Inventing the Internet . Cambridge: MIT Press, 1999. \n• Bemer, Bob, ""A History of Source Concepts for the I nternet/Web"" \n• Campbell-Kelly, Martin; Aspray, William. Computer: A History of the Information \nMachine. New York: BasicBooks, 1996. \n• Clark, David D., ""The Design Philosophy of the DARP A Internet Protocols"", \nComputer Communications Review 18:4, August 1988, p p. 106–114 \n' metadata={'source': 'wbpdf.pdf', 'page': 48}
"
"page_content=""50 \n • Graham, Ian S. The HTML Sourcebook: The Complete Guide to HTML . New York: \nJohn Wiley and Sons, 1995. \n• Krol, Ed. Hitchhiker's Guide to the Internet , 1987. \n• Krol, Ed. Whole Internet User's Guide and Catalog.  O'Reilly & Associates, 1992. \n• Scientific American Special Issue on Communications , Computers, and Networks , \nSeptember, 1991 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "" metadata={'source': 'wbpdf.pdf', 'page': 49}
"
"page_content='51 \n  \nMODULE TWO –THE BASICS OF HTML  \nUNIT ONE - GETTING STARTED WITH HTML \n \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1– How to Use Notepad \n3.2– How to Use Markup Tags \n3.3  -  How to Write a Simple HTML Document \n3.4   -  How to Use Special HTML Editing Software      \n     \n4.0  Conclusion \n5.0   Summary          \n6.0 Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n1.0  INTRODUCTION \n \n This Unit will introduce you to the basics of HTML .We will take a quick look at \nNotepad, which is one of the tools you really need to write HTML documents. We \nwill also go over the fundamentals of a basic HTML document. You will even \nlearn how to write your first Web page!  \nIt might be tempting to skip ahead and check out th e ""cool stuff"" in the later \nModules of this Course Material. But if you spend s ome time going over the \nbasics, it will serve you well in the long run.  \nEnough chatter. Let\'s get going.  \n \n2.0   OBJECTIVES  \nAt the end of this unit, you should be able to: \n• Describe how to open a Notepad \n• Describe markup tag in HTML \n• Write a simple HTML Document using Notepad editor \n \n \n3.0   MAIN CONTENT \n3.1  – How to Use Notepad \nHTML is not really anything more than plain text. F or that reason, you don\'t need \nany special editors or compilers to create HTML fil es. In fact, you can create all of \nyour HTML files with the simplest of text editors. There are many specialized ' metadata={'source': 'wbpdf.pdf', 'page': 50}
"
"page_content='52 \n HTML editors and converters available, and you may decide to choose one of \nthem based on your particular needs. But for all th e HTML examples in this unit, \nwe will use Windows Notepad to illustrate just how simple creating HTML can \nbe.  \n \nFigure 1:  A Symbol of Notepad \n1.  To open Notepad, click on the Start button in the l ower-left corner of your screen. \nThen choose Programs, followed by Accessories. Clic k on the Notepad icon. \n \nFigure 2:  Processes of Clicking on the Notepad Icon \nNotepad begins with a blank document. You can begin  typing to create a new \ndocument. To open an existing text file from disk, pull down the File menu and \nchoose Open.  \n' metadata={'source': 'wbpdf.pdf', 'page': 51}
"
"page_content=""53 \n  \nFigure 3:  Notepad Environment \n2.  Choose the file name from the Open File dialog box.  Notepad's Open File dialog \nwindow normally only shows files with the extension  .txt. You'll want to change the \nFiles of Type selection to All Files if you're open ing or saving an HTML file, which \nuses the extension .htm or .html.  \n3.  Once you've opened an existing file or begun typing  a new one, you can easily edit \nyour text. Notepad has all the basic editing functi ons of a word processor. For \nexample, you can select blocks of text for cut and paste operations.  \n \n4.  HTML files usually contain very long lines that wil l run off the edge of the page. \nNotepad has a feature called Word Wrap that will fo rmat these lines to fit entirely \nwithin the window, making them much easier to read.  To activate this feature, pull \ndown the Edit menu and select Word Wrap.  \n \nFigure 3:  Notepad Environment – Word Wrap \n"" metadata={'source': 'wbpdf.pdf', 'page': 52}
"
"page_content="" 5.  To save your HTML file, first pull down the File me nu. If this is a new file that you \nstarted from scratch, choose Save As and then type a file name. Remember to use \n.htm or .html as the file exten \nout which extension you should use.) If this is an existing file that you opened from \nNotepad, you can just choose Save from the File men u. \n \n3.2– How to Use Mark up Tags \nThe use of markup tags is wha \nextensively in HTML, and they provide ways to contr ol text formatting, create links to other \ndocuments, and even incorporate images and sounds. In short, markup tags are the key to \nmaking HTML pages wo rk.  Markup tags are not case \nelement tag (which you'll learn about in the next u nit) can be typed as \neven <BoDy> .  \nFigure 4 :  An example of  body element tag \n1.  Open a new file in Notepad and type in the words \nexample, we'll make this text appear in boldface ty pe \n2.  HTML markup tags are easy to create. They consist o f a left angle bracket, the name \nof the tag, and a right angle bracket. The left and  right angle brackets are also known \nto some as less- than and greater \n<B>  where you'd like the boldface type to begin. \n3.  Locate the place where you'd like the boldface to s top. At this point, you need to \ncreate an ending tag for the boldface type. An endi ng tag looks just like a starting tag, \nexcept it is preceded by a forw \ntag, type </B> .  \n54 To save your HTML file, first pull down the File me nu. If this is a new file that you \nstarted from scratch, choose Save As and then type a file name. Remember to use \n.htm or .html as the file exten sion. (Check with your Web server administrator to find \nout which extension you should use.) If this is an existing file that you opened from \nNotepad, you can just choose Save from the File men u.  \nHow to Use Mark up Tags  \nThe use of markup tags is wha t separates HTML from plain text. Markup tags are u sed \nextensively in HTML, and they provide ways to contr ol text formatting, create links to other \ndocuments, and even incorporate images and sounds. In short, markup tags are the key to \nrk.  Markup tags are not case  sensitive. For example, the body \nelement tag (which you'll learn about in the next u nit) can be typed as <BODY> \n \nAn example of  body element tag  \nOpen a new file in Notepad and type in the words “the bold new frontier \nexample, we'll make this text appear in boldface ty pe  from the following sentence: \n \nHTML markup tags are easy to create. They consist o f a left angle bracket, the name \nof the tag, and a right angle bracket. The left and  right angle brackets are also known \nthan and greater -than symbols. To start a boldface markup tag, type \nwhere you'd like the boldface type to begin.  \n \nLocate the place where you'd like the boldface to s top. At this point, you need to \ncreate an ending tag for the boldface type. An endi ng tag looks just like a starting tag, \nexcept it is preceded by a forw ard slash character (/). To mark the end of the bol dface \nTo save your HTML file, first pull down the File me nu. If this is a new file that you \nstarted from scratch, choose Save As and then type a file name. Remember to use \nsion. (Check with your Web server administrator to find \nout which extension you should use.) If this is an existing file that you opened from \nt separates HTML from plain text. Markup tags are u sed \nextensively in HTML, and they provide ways to contr ol text formatting, create links to other \ndocuments, and even incorporate images and sounds. In short, markup tags are the key to \nsensitive. For example, the body \n<BODY> , <body> , or \nbold new frontier ”. In this \nfrom the following sentence: .  \nHTML markup tags are easy to create. They consist o f a left angle bracket, the name \nof the tag, and a right angle bracket. The left and  right angle brackets are also known \nthan symbols. To start a boldface markup tag, type \nLocate the place where you'd like the boldface to s top. At this point, you need to \ncreate an ending tag for the boldface type. An endi ng tag looks just like a starting tag, \nard slash character (/). To mark the end of the bol dface "" metadata={'source': 'wbpdf.pdf', 'page': 53}
"
"page_content=' 4.  When viewed with a Web browser, the text between th e \nappear in boldface.  \nFigure 5: An example \n5.  Almost every markup tag in HTML requires both a sta rting tag and an ending tag. \nOne notable exception is the paragraph marker, <P>,  which does not require an \nending </P> tag.  \n3.3 How to Write a Simple HTML Document \nNow that you have learned how to create markup tags , the next step is to learn how to put \nthem together to create a simple HTML Document. The  basic HTML document contains two \nparts: the head  and the body . The head section contains important information a bo \ndocument itself, such as the title. The actual text , images, and markup tags are placed in the \nbody section. You will learn the specifics of both sections in the next unit. \nFigure 6:  A Simple  HTML Document \n55  \nWhen viewed with a Web browser, the text between th e <B>  and </B> \nAn example  of Bold Tag \nAlmost every markup tag in HTML requires both a sta rting tag and an ending tag. \nOne notable exception is the paragraph marker, <P>,  which does not require an \nHow to Write a Simple HTML Document  \nNow that you have learned how to create markup tags , the next step is to learn how to put \nthem together to create a simple HTML Document. The  basic HTML document contains two \n. The head section contains important information a bo \ndocument itself, such as the title. The actual text , images, and markup tags are placed in the \nbody section. You will learn the specifics of both sections in the next unit. \nHTML Document  \n</B>  tags will \n \nAlmost every markup tag in HTML requires both a sta rting tag and an ending tag. \nOne notable exception is the paragraph marker, <P>,  which does not require an \nNow that you have learned how to create markup tags , the next step is to learn how to put \nthem together to create a simple HTML Document. The  basic HTML document contains two \n. The head section contains important information a bo ut the \ndocument itself, such as the title. The actual text , images, and markup tags are placed in the \nbody section. You will learn the specifics of both sections in the next unit.  \n \n' metadata={'source': 'wbpdf.pdf', 'page': 54}
"
"page_content=' 1.  The first markup tag in every HTML document is the <HTML> tag. This lets Web \nbrowsers know that everything in the file is HTML t ext. Open a new blank document \nin Notepad. Type <HTML> \ntyping </HTML> . From now on, everything you type in this document  should go \nbetween these two tags. \nFigure 7:  HTML T ag. \n2.  The head section comes next. Type \nfollowed by </HEAD> \n \n3.  One of the key head elements is the title of your H TML document. To start the title \ntag, start a new line between the <HEAD> and </HEAD > tags and type \nNow enter a title for your document, such as \ntitle by typing </TITLE> \n4.  The next section of your HTML document is the body.  This section contains most of \nthe elements of your document. To create the body s ection, type \nnext line. On the next line after that, type \nMost of your text and HTML codes will be placed bet ween these two tags. \n56 The first markup tag in every HTML document is the <HTML> tag. This lets Web \nbrowsers know that everything in the file is HTML t ext. Open a new blank document \n<HTML>  on one line, and then on the next line, close the t ag by \n. From now on, everything you type in this document  should go \nbetween these two tags.  \n \nag.  \nThe head section comes next. Type <HEAD>  on the line after the first HTML tag, \n</HEAD>  on the next line to create the section.  \nOne of the key head elements is the title of your H TML document. To start the title \ntag, start a new line between the <HEAD> and </HEAD > tags and type \nNow enter a title for your document, such as My First Web Page . Finally, end the \n</TITLE>  on the same line.  \n \nThe next section of your HTML document is the body.  This section contains most of \nthe elements of your document. To create the body s ection, type <BODY> \nnext line. On the next line after that, type </BODY>  to mark the end of the section. \nMost of your text and HTML codes will be placed bet ween these two tags. \nThe first markup tag in every HTML document is the <HTML> tag. This lets Web \nbrowsers know that everything in the file is HTML t ext. Open a new blank document \non one line, and then on the next line, close the t ag by \n. From now on, everything you type in this document  should go \non the line after the first HTML tag, \nOne of the key head elements is the title of your H TML document. To start the title \ntag, start a new line between the <HEAD> and </HEAD > tags and type <TITLE> . \n. Finally, end the \nThe next section of your HTML document is the body.  This section contains most of \n<BODY>  on the \nend of the section. \nMost of your text and HTML codes will be placed bet ween these two tags.  ' metadata={'source': 'wbpdf.pdf', 'page': 55}
"
"page_content="" 5.  Right now, your HTML document is properly formatted , but it does not have any \ncontent. Fortunately, that is simple enough to chan ge. On a new line between the \nbe ginning and ending body tags, begin typing some tex t, such as \nHTML document .  \n6.  Save your HTML file in Notepad with a descriptive f ile name, such as \n7.  Using your Web browser, open your new HTML document . Because your file is on \nyour local desktop machine and not on the Web, you w ill need to use the Open File \noption in your Web browser. With Netscape, choose O pen File from the File menu, \ngo to the folder where you saved your document, and  select it. \n8.  There it is- your first HTML doc \nyou should give yourself a pat on the back. You are  now an HTML author. \n3.4 How to Use Special HTML Editing Software \nThroughout this Course Material, you will learn to write HTML documents with the simplest \nof tools: a text editor. Creating HTML documents wi th a text editor is the best way to learn \nthe language.  \nHowever, before you continue, you should know that there a \nHTML editing programs available. Some have graphica l interfaces, others feature online \nhelp. All of them make creating HTML documents much  easier. Once you have mastered the \nHTML basics, you may want to try out one of these p rogr \nwhat you should look for in an HTML editor. \n• Many of the best HTML editors avail \na type of software marketing that allows you to try  the soft \nit. If you decide that you like the software and want t o keep it, you pay the author \ndirectly, according to the documentation supplied w ith the program. If you don't like \nthe program, simply delete it and forget it. Sharew are is a great way to find a program \nthat's right for your tastes. \n• Even if your favorite HTML editor does not support the latest HTML tags and \nfeatures, you can always add them later using Notep ad. Because HTML files are plain \ntext, you can work on your HTML documents with just  about any editor you like. \n \n57  \nRight now, your HTML document is properly formatted , but it does not have any \ncontent. Fortunately, that is simple enough to chan ge. On a new line between the \nginning and ending body tags, begin typing some tex t, such as This is my first \n \nSave your HTML file in Notepad with a descriptive f ile name, such as \nUsing your Web browser, open your new HTML document . Because your file is on \nour local desktop machine and not on the Web, you w ill need to use the Open File \noption in your Web browser. With Netscape, choose O pen File from the File menu, \ngo to the folder where you saved your document, and  select it.  \nyour first HTML doc ument. It may not look like much at this point, but  \nyou should give yourself a pat on the back. You are  now an HTML author. \n3.4 How to Use Special HTML Editing Software  \nThroughout this Course Material, you will learn to write HTML documents with the simplest \nof tools: a text editor. Creating HTML documents wi th a text editor is the best way to learn \nHowever, before you continue, you should know that there a re a number of specialized \nHTML editing programs available. Some have graphica l interfaces, others feature online \nhelp. All of them make creating HTML documents much  easier. Once you have mastered the \nHTML basics, you may want to try out one of these p rogr ams. In this unit, we will show you \nwhat you should look for in an HTML editor.  \nMany of the best HTML editors avail -able on the Internet are shareware. Shareware is \na type of software marketing that allows you to try  the soft -ware before you purchase \nIf you decide that you like the software and want t o keep it, you pay the author \ndirectly, according to the documentation supplied w ith the program. If you don't like \nthe program, simply delete it and forget it. Sharew are is a great way to find a program \nhat's right for your tastes.  \nEven if your favorite HTML editor does not support the latest HTML tags and \nfeatures, you can always add them later using Notep ad. Because HTML files are plain \ntext, you can work on your HTML documents with just  about any editor you like. Right now, your HTML document is properly formatted , but it does not have any \ncontent. Fortunately, that is simple enough to chan ge. On a new line between the \nThis is my first \nSave your HTML file in Notepad with a descriptive f ile name, such as first.htm .  \nUsing your Web browser, open your new HTML document . Because your file is on \nour local desktop machine and not on the Web, you w ill need to use the Open File \noption in your Web browser. With Netscape, choose O pen File from the File menu, \nument. It may not look like much at this point, but  \nyou should give yourself a pat on the back. You are  now an HTML author.  \nThroughout this Course Material, you will learn to write HTML documents with the simplest \nof tools: a text editor. Creating HTML documents wi th a text editor is the best way to learn \nre a number of specialized \nHTML editing programs available. Some have graphica l interfaces, others feature online \nhelp. All of them make creating HTML documents much  easier. Once you have mastered the \nams. In this unit, we will show you \nable on the Internet are shareware. Shareware is \nware before you purchase \nIf you decide that you like the software and want t o keep it, you pay the author \ndirectly, according to the documentation supplied w ith the program. If you don't like \nthe program, simply delete it and forget it. Sharew are is a great way to find a program \nEven if your favorite HTML editor does not support the latest HTML tags and \nfeatures, you can always add them later using Notep ad. Because HTML files are plain \ntext, you can work on your HTML documents with just  about any editor you like.  "" metadata={'source': 'wbpdf.pdf', 'page': 56}
"
"page_content='58 \n 1.  Make sure the HTML editing software has support for  all the HTML features. If it \ndoes not, you would not be able to use all the cool  HTML tricks you will learn in this \nCourse Material.  \n \n \nFigure 8: Some Features of HTML \n2.  Look for toolbars and other features that make crea ting HTML easier. To create a \nmarkup tag, you can click on a button instead of ty ping it in.  \n3.  Many WYSIWYG (What You See Is What You Get) HTML ed itors are now \navailable. These allow you to see what your HTML do cument will look like as you\'re \nputting it together. This feature will save you the  trouble of having to load your page \nwith a Web browser every time you want to see how t hings are progressing.  \n4.  Another feature to look for is HTML syntax checking . Editors with this capability can \ncheck your document for HTML errors. Some will even  fix the errors for you \nautomatically.  \n5.  Many of the best HTML editors are available right o n the World Wide Web as \nshareware. That means you can download them and try  them out before buying them. \nThere are plenty of places on the Web to find HTML editors. One of the best places to \nstart looking is the HTML Editors section in the Ya hoo directory.  \n          \n4.0   CONCLUSION: \nThe markup tags are the key to making HTML pages wo rk. They are not case \nsensitive. Almost every markup tag in HTML requires  both a starting tag and an \nending tag. \n \n5.0       SUMMARY: \nIn this unit, you have learnt: \n• How to use Notepad \n• How to use Markup tags \n• How to write  a simple HTML documents \n \n6.0      TUTOR MARKED ASSIGNMENT \n• Mention 5 uses of Markup tags \n• List 5 markup tags you know \n \n7.0       FURTHER READING AND OTHER RESOURCES \n• Abbate, Janet. Inventing the Internet . Cambridge: MIT Press, 1999. \n• Bemer, Bob, ""A History of Source Concepts for the I nternet/Web"" \n• Campbell-Kelly, Martin; Aspray, William. Computer: A History of the \nInformation Machine.  New York: BasicBooks, 1996. \n• Clark, David D., ""The Design Philosophy of the DARP A Internet \nProtocols"", Computer Communications Review 18:4, Au gust 1988, \npp. 106–114 \n' metadata={'source': 'wbpdf.pdf', 'page': 57}
"
"page_content=""59 \n • Graham, Ian S. The HTML Sourcebook: The Complete Guide to HTML . \nNew York: John Wiley and Sons, 1995. \n• Krol, Ed. Hitchhiker's Guide to the Internet , 1987. \n• Krol, Ed. Whole Internet User's Guide and Catalog.  O'Reilly & \nAssociates, 1992. \n• Scientific American Special Issue on Communications , Computers, and \nNetworks , September, 1991 \n \nUNIT TWO   UNDERSTANDING THE BASICS OF HTML \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1– How to Use the Head Section \n3.2- How to Use the Body Section \n3.3 -  How to Use Headings \n3.4  - How to Use the Paragraph Tag   \n3.5  -  How to Use Special Characters      \n   \n4.0   Conclusion \n5.0  Summary       \n6.0  Tutor Marked Assignment        \n7.0  Further Reading And Other Resources \n \n1.0    INTRODUCTION \nNow that you have learned how to use markup tags an d have even written your \nfirst HTML document, you are ready to dig a little deeper and learn the basics of \nthe HTML language.  \nIn this Unit, you will cover the different sections  of an HTML document, such as \nthe head and body, and learn what type of informati on goes in each. You will also \ndiscover how to include basic paragraphs in your do cument, as well as insert \nheadlines and special characters.  \n \n2.0   OBJECTIVES  \nAt the end of this unit, you should be able to:  \n• Describe the head and body section of HTML \n• Create a headline for your document  using head sec tion \n• Describe the paragraph marker. \n \n3.0   MAIN CONTENT \n3.1. How to Use the Head Section \n "" metadata={'source': 'wbpdf.pdf', 'page': 58}
"
"page_content="" The least thing you must include in the HEAD sectio n of all your webpages in order to write \nvalid HMTL documents is the \nbrowser´s title bar when you view the page. The scr eenshot below shows yo \nwebpage: \n \n \nFigure 1: An example of HTML \n \nThe title tag is used extensively by Web search eng ines; search engines use the text inside a \ntitle tag as a way to determine the actual contents  of your page. So make sure your title is \ndescriptive.  \n• Don't type any extra text in between the <HEAD> and  </H \nthe only line you'll insert between those two tags is your document title. \nFigure 2:  A Note pad Environment \n1.  Open a new document in Notepad and type \ninsert an opening tag into your HTML document by ty ping \n2.  The only element required in the head section is th e Title of your document. Your title \nshould be short enough to fit in the title bar of a  typical browser window, but \ndescriptive enough to explain what your HTML docume nt contains. \n3.  Insert a title tag with in the head section by typing \ntitle of your document. In this example, we'll name  this document \nThan We Thought . Go ahead and type in that title, then close the t ag by typing \n</TITLE>  on the same line. \n60 The least thing you must include in the HEAD sectio n of all your webpages in order to write \nvalid HMTL documents is the TITLE  element. The title of a webpage appears in your \nbrowser´s title bar when you view the page. The scr eenshot below shows yo \nAn example of HTML  Head Section \nThe title tag is used extensively by Web search eng ines; search engines use the text inside a \ntitle tag as a way to determine the actual contents  of your page. So make sure your title is \nDon't type any extra text in between the <HEAD> and  </H EAD> tags. In most cases, \nthe only line you'll insert between those two tags is your document title. \n \nA Note pad Environment  \nOpen a new document in Notepad and type <HTML> . To begin the head section, \ninsert an opening tag into your HTML document by ty ping <HEAD> \nThe only element required in the head section is th e Title of your document. Your title \nshould be short enough to fit in the title bar of a  typical browser window, but \ndescriptive enough to explain what your HTML docume nt contains. \nin the head section by typing <TITLE> , followed by the actual \ntitle of your document. In this example, we'll name  this document HTML: Easier \n. Go ahead and type in that title, then close the t ag by typing \non the same line.  \n \nThe least thing you must include in the HEAD sectio n of all your webpages in order to write \nelement. The title of a webpage appears in your \nbrowser´s title bar when you view the page. The scr eenshot below shows yo u the title of this \n \nThe title tag is used extensively by Web search eng ines; search engines use the text inside a \ntitle tag as a way to determine the actual contents  of your page. So make sure your title is \nEAD> tags. In most cases, \nthe only line you'll insert between those two tags is your document title.  \n. To begin the head section, \n<HEAD> .  \nThe only element required in the head section is th e Title of your document. Your title \nshould be short enough to fit in the title bar of a  typical browser window, but \ndescriptive enough to explain what your HTML docume nt contains.  \n, followed by the actual \nHTML: Easier \n. Go ahead and type in that title, then close the t ag by typing \n"" metadata={'source': 'wbpdf.pdf', 'page': 59}
"
"page_content=' 4.  Close the head section by typing \n \n3.2– How to Use the Body Section \nThe body section of your HTML document contains mos t of the text, graphics, hypertext \nlinks, and other information that will appear on th e page. \nwhich describe the content and appearance of your d ocument, are placed in the body section. \nThese tags will be explained in detail in the next two units. \n• Sometimes it is easier to type both the <BODY> and </BODY> tags on \nright away, and then fill in the rest of your HTML document between them. \nFigure 3:  An example of HTML Body Section \n1.  Insert the opening body tag by typing \nMake sure that the new body tag follows the end of the head section of your \ndocument.   \n2.  Following the <BODY> tag, begin entering the actual  text of your HTML document. \nFor this example, we will just insert a simple sent e \nthan I thought.   \n61 Close the head section by typing </HEAD>  on the line below the title line. \n \nHow to Use the Body Section  \nThe body section of your HTML document contains mos t of the text, graphics, hypertext \nlinks, and other information that will appear on th e page.  All of your HTML formatting tags, \nwhich describe the content and appearance of your d ocument, are placed in the body section. \nThese tags will be explained in detail in the next two units.  \nSometimes it is easier to type both the <BODY> and </BODY> tags on \nright away, and then fill in the rest of your HTML document between them. \n \nAn example of HTML Body Section  \nInsert the opening body tag by typing <BODY>  on a new line in your document. \nMake sure that the new body tag follows the end of the head section of your \n \nFollowing the <BODY> tag, begin entering the actual  text of your HTML document. \nFor this example, we will just insert a simple sent e nce. Type HTML is much easier \n \non the line below the title line.  \nThe body section of your HTML document contains mos t of the text, graphics, hypertext \nAll of your HTML formatting tags, \nwhich describe the content and appearance of your d ocument, are placed in the body section. \nSometimes it is easier to type both the <BODY> and </BODY> tags on  separate lines \nright away, and then fill in the rest of your HTML document between them.  \non a new line in your document. \nMake sure that the new body tag follows the end of the head section of your \nFollowing the <BODY> tag, begin entering the actual  text of your HTML document. \nHTML is much easier ' metadata={'source': 'wbpdf.pdf', 'page': 60}
"
"page_content="" 3.  Close the body section of your document by typing \nsure that this closing tag appears before the </HTM L> tag at the very bottom of your \ndocument.  \n4.  Here is what your HTML document \nNotice the placement of the document title and the body text. \nFigure 4:  A example of Head and Body Section \n5.  At this point, you should save your file in Notepad. Make sure you sav e it with an \nextension of .htm or.html (it doesn't matter which \ntypes). Keep this file open, because you will be ad ding to it in the next unit. \n3.3 How to Use Headings \nHeadin gs are used in HTML documents to indicate different  sections. There are six different \nHeading sizes, which range from very large to very small (smaller than the default body text). \nYou should use headings judiciously, keeping them s hort and concise. The mo \nfor a heading is as the first line of a home page. In essence, it becomes a headline for your \ndocument.  \n• Headings are an excellent way to break up large amo unts of text into smaller, \ndigestible sections. But be careful not to overuse heading \ndocument appear confusing. \n• Think of heading tags as headlines. Generally, you' ll only have one big headline for \nyour document and a few smaller subheads to break t he document into smaller \nsections.  \n62 Close the body section of your document by typing </BODY>  on a new line. Make \nsure that this closing tag appears before the </HTM L> tag at the very bottom of your \n \nHere is what your HTML document  looks like so far when viewed with Netscape. \nNotice the placement of the document title and the body text.  \n \nA example of Head and Body Section  \nshould save your file in Notepad. Make sure you sav e it with an \nextension of .htm or.html (it doesn't matter which -all browsers will handle both \ntypes). Keep this file open, because you will be ad ding to it in the next unit. \ngs are used in HTML documents to indicate different  sections. There are six different \nHeading sizes, which range from very large to very small (smaller than the default body text). \nYou should use headings judiciously, keeping them s hort and concise. The mo \nfor a heading is as the first line of a home page. In essence, it becomes a headline for your \nHeadings are an excellent way to break up large amo unts of text into smaller, \ndigestible sections. But be careful not to overuse heading tags, or they'll make your \ndocument appear confusing.  \nThink of heading tags as headlines. Generally, you' ll only have one big headline for \nyour document and a few smaller subheads to break t he document into smaller \non a new line. Make \nsure that this closing tag appears before the </HTM L> tag at the very bottom of your \nlooks like so far when viewed with Netscape. \n \nshould save your file in Notepad. Make sure you sav e it with an \nall browsers will handle both \ntypes). Keep this file open, because you will be ad ding to it in the next unit.  \ngs are used in HTML documents to indicate different  sections. There are six different \nHeading sizes, which range from very large to very small (smaller than the default body text). \nYou should use headings judiciously, keeping them s hort and concise. The mo st common use \nfor a heading is as the first line of a home page. In essence, it becomes a headline for your \nHeadings are an excellent way to break up large amo unts of text into smaller, \ntags, or they'll make your \nThink of heading tags as headlines. Generally, you' ll only have one big headline for \nyour document and a few smaller subheads to break t he document into smaller "" metadata={'source': 'wbpdf.pdf', 'page': 61}
"
"page_content=' • It is a good idea to repeat t \nyour page. This lets your readers know the title of  the document without having to \nlook at the title bar of their browsers. \n• Headings can be compared in many ways to outlines. When structuring your \ndocuments with headings, use the same type of headi ng for elements of equal \nimportance.  \nFigure 5:  Levels of Heading Tags \n1.  To insert a heading into your document, place an \nsection. A heading tag follows the format of <H \nindicating the size from largest to smallest. To en ter a level 1 heading, which is the \nlargest, type <H1> .  \n \n2.  Any text you enter immediatel \ntype by a Web browser. \n3.  Close the heading tag by typing \n63 It is a good idea to repeat t he document title as a Level 1 Heading at the very top of \nyour page. This lets your readers know the title of  the document without having to \nlook at the title bar of their browsers.  \nHeadings can be compared in many ways to outlines. When structuring your \ndocuments with headings, use the same type of headi ng for elements of equal \nLevels of Heading Tags  \nTo insert a heading into your document, place an opening tag anywhere in the body \nsection. A heading tag follows the format of <H x>, where x is a number from 1 to 6, \nindicating the size from largest to smallest. To en ter a level 1 heading, which is the \nAny text you enter immediatel y after the <H1> tag will be displayed in large bol d \ntype by a Web browser.  \n \nClose the heading tag by typing </H1> .  \n \nhe document title as a Level 1 Heading at the very top of \nyour page. This lets your readers know the title of  the document without having to \nHeadings can be compared in many ways to outlines. When structuring your \ndocuments with headings, use the same type of headi ng for elements of equal \n \nopening tag anywhere in the body \nis a number from 1 to 6, \nindicating the size from largest to smallest. To en ter a level 1 heading, which is the \ny after the <H1> tag will be displayed in large bol d \n' metadata={'source': 'wbpdf.pdf', 'page': 62}
"
"page_content=' 4.  You can experiment with different sized headings by  changing the number of the \nheading tag to any value between 1 and 6. The resul t wil \n3.4 How to Use the Paragraph Tag \nOne of the most commonly used tags in HTML is the p aragraph marker, which is used to \nbreak apart blocks of text into separate paragraphs . Any formatting that you perform in \nNotepad,  such as placing carriage returns, extra spaces, or tab s tops, will be ignored by Web \nbrowsers. The only way to indicate separate paragra phs is by using the paragraph marker. \nUnfortunately, despite its simplicity, the paragrap h marker is also one of the most \nmi sunderstood tags in HTML. \n• Remember that in HTML, paragraph tags are considere d to be containers of text. That \nmeans each paragraph should have a starting <P> tag  and an ending </P> tag. Early \nversions of HTML used the <P> tag as a paragraph se parator. \n• Paragraphs can contain more than plain text. You ca n place images, hyperlinks, and \nmany other HTML elements inside paragraphs as well.  You will learn more about \nthese elements in later \n1.  The most important thing to remember about the para graph tag \nbeginning of a paragraph, not the end. The original  HTML standard used the \nparagraph marker differently, which has led to some  confusion. \n2.  To insert a new paragraph, type \ndocument. This wil l tell the browser to insert a line space and start  a new paragraph. \n3.  Enter the text of the paragraph after this tag. Rem ember that any carriage returns or \nline breaks you enter into Notepad will be ignored by a Web browser. The browser \nwill continue to treat the text as part of the current paragraph unt il it sees another <P> \ntag.  \n64 You can experiment with different sized headings by  changing the number of the \nheading tag to any value between 1 and 6. The resul t wil l look something like this. \n3.4 How to Use the Paragraph Tag  \nOne of the most commonly used tags in HTML is the p aragraph marker, which is used to \nbreak apart blocks of text into separate paragraphs . Any formatting that you perform in \nas placing carriage returns, extra spaces, or tab s tops, will be ignored by Web \nbrowsers. The only way to indicate separate paragra phs is by using the paragraph marker. \nUnfortunately, despite its simplicity, the paragrap h marker is also one of the most \nsunderstood tags in HTML.  \nRemember that in HTML, paragraph tags are considere d to be containers of text. That \nmeans each paragraph should have a starting <P> tag  and an ending </P> tag. Early \nversions of HTML used the <P> tag as a paragraph se parator.  \nParagraphs can contain more than plain text. You ca n place images, hyperlinks, and \nmany other HTML elements inside paragraphs as well.  You will learn more about \nthese elements in later modules.  \nThe most important thing to remember about the para graph tag is that it marks the \nbeginning of a paragraph, not the end. The original  HTML standard used the \nparagraph marker differently, which has led to some  confusion.  \nTo insert a new paragraph, type <P>  anywhere in the body section of your HTML \nl tell the browser to insert a line space and start  a new paragraph. \n \nEnter the text of the paragraph after this tag. Rem ember that any carriage returns or \nline breaks you enter into Notepad will be ignored by a Web browser. The browser \ntreat the text as part of the current paragraph unt il it sees another <P> You can experiment with different sized headings by  changing the number of the \nl look something like this.  \nOne of the most commonly used tags in HTML is the p aragraph marker, which is used to \nbreak apart blocks of text into separate paragraphs . Any formatting that you perform in \nas placing carriage returns, extra spaces, or tab s tops, will be ignored by Web \nbrowsers. The only way to indicate separate paragra phs is by using the paragraph marker. \nUnfortunately, despite its simplicity, the paragrap h marker is also one of the most \nRemember that in HTML, paragraph tags are considere d to be containers of text. That \nmeans each paragraph should have a starting <P> tag  and an ending </P> tag. Early \nParagraphs can contain more than plain text. You ca n place images, hyperlinks, and \nmany other HTML elements inside paragraphs as well.  You will learn more about \nis that it marks the \nbeginning of a paragraph, not the end. The original  HTML standard used the \nanywhere in the body section of your HTML \nl tell the browser to insert a line space and start  a new paragraph.  \nEnter the text of the paragraph after this tag. Rem ember that any carriage returns or \nline breaks you enter into Notepad will be ignored by a Web browser. The browser \ntreat the text as part of the current paragraph unt il it sees another <P> ' metadata={'source': 'wbpdf.pdf', 'page': 63}
"
"page_content="" Figure 6:  An Example of \n4.  You can indicate the end of a paragraph by typing < /P> \nThe end of the current paragraph is implied wheneve r a new paragraph marker is \nfound by a browser.  \n \n5.  Continue entering new paragraphs of text, using the  <P> tag to indicate the beginning \nof each.  \n3.5    How to Use Specia l Characters \nBy now, you may have noticed a potential problem wi th HTML. All of the markup tags are \nindicated by left and right angle brackets (greater\ncharacters are reserved by HTML for use with tags. What happens when \none of these characters in your text? \nThat's a good question, and the problem isn't limit ed to just those two symbols. A number of \ncharacters can't be typed directly into the body te xt HTML, including many foreign language \nsymbols. For tunately, HTML provides a solution through the use of \n65 An Example of Paragraph Tag. \nYou can indicate the end of a paragraph by typing < /P> . However, this tag is optional. \nThe end of the current paragraph is implied wheneve r a new paragraph marker is \nContinue entering new paragraphs of text, using the  <P> tag to indicate the beginning \n \nl Characters  \nBy now, you may have noticed a potential problem wi th HTML. All of the markup tags are \nindicated by left and right angle brackets (greater -than and less- than symbols). These \ncharacters are reserved by HTML for use with tags. What happens when you want to include \none of these characters in your text?  \nThat's a good question, and the problem isn't limit ed to just those two symbols. A number of \ncharacters can't be typed directly into the body te xt HTML, including many foreign language \ntunately, HTML provides a solution through the use of character \n \n. However, this tag is optional. \nThe end of the current paragraph is implied wheneve r a new paragraph marker is \nContinue entering new paragraphs of text, using the  <P> tag to indicate the beginning \nBy now, you may have noticed a potential problem wi th HTML. All of the markup tags are \nthan symbols). These \nyou want to include \nThat's a good question, and the problem isn't limit ed to just those two symbols. A number of \ncharacters can't be typed directly into the body te xt HTML, including many foreign language \ncharacter  entities . By \n"" metadata={'source': 'wbpdf.pdf', 'page': 64}
"
"page_content=' using special codes, HTML can display all of the ch aracters in the ISO \ncharacter set. HTML 3.2 also includes support for m any mathematical symbols. \n1.  Locate your cursor at the position in the document where the ch aracter entity for the \nspecial character is to be placed. \n2.  A character entity begins with an ampersand (&), fo llowed by the code, and ends with \na semicolon. To place a double quote in your docume nt, for \n3.  Other common character entities for characters that  are reserved for HTML tags are \n&lt;  for the less- than symbol; \nampersand. Note that these named character entities  are case \n4.  You can also use named character entities for many foreign language symbols. For \nexample, to create the umlaut used in the German ph rase, \nin &uuml;ber alles .  \n  \n5.  In addition to named character entities, you can us e numbered character entities. \nHTML uses a subset of the ISO 8859/1 8 \nincluding the copyright symbol, trademark symbol, a nd mathematical symbols, ar \navailable when referenced by their numbered charact er entity. \n6.  To insert a numerical character entity into HTML, t ype an ampersand, followed by a \npound sign, the number of the character and a semic olon. For example, to enter the \nregistered trademark symb \nfind a partial list of numerical character entities  in the Appendix. \n \n4.0   CONCLUSION: \nThe two major sections of an HTML document are the head and body sections. \nThe two sections are \n \n5.0       SUMMARY: \nIn this unit, you have learnt: \n66 using special codes, HTML can display all of the ch aracters in the ISO -Latin \ncharacter set. HTML 3.2 also includes support for m any mathematical symbols. \ncursor at the position in the document where the ch aracter entity for the \nspecial character is to be placed.  \n \nA character entity begins with an ampersand (&), fo llowed by the code, and ends with \na semicolon. To place a double quote in your docume nt, for  example, type \n \nOther common character entities for characters that  are reserved for HTML tags are \nthan symbol; &gt;  for the greater- than symbol; and \nampersand. Note that these named character entities  are case -sensitive. \nYou can also use named character entities for many foreign language symbols. For \nexample, to create the umlaut used in the German ph rase, über alles \n \nIn addition to named character entities, you can us e numbered character entities. \nHTML uses a subset of the ISO 8859/1 8 -bit character set, and several characters, \nincluding the copyright symbol, trademark symbol, a nd mathematical symbols, ar \navailable when referenced by their numbered charact er entity.  \nTo insert a numerical character entity into HTML, t ype an ampersand, followed by a \npound sign, the number of the character and a semic olon. For example, to enter the \nregistered trademark symb ol into your document, you would type &#174; \nfind a partial list of numerical character entities  in the Appendix.  \nCONCLUSION:  \nThe two major sections of an HTML document are the head and body sections. \nThe two sections are always within the HTML tags. \nIn this unit, you have learnt:  \nLatin -1 (ISO 8859) \ncharacter set. HTML 3.2 also includes support for m any mathematical symbols.  \ncursor at the position in the document where the ch aracter entity for the \nA character entity begins with an ampersand (&), fo llowed by the code, and ends with \nexample, type &quot; .  \nOther common character entities for characters that  are reserved for HTML tags are \nthan symbol; and &amp;  for the \nsensitive.  \nYou can also use named character entities for many foreign language symbols. For \nüber alles , you would type \nIn addition to named character entities, you can us e numbered character entities. \nbit character set, and several characters, \nincluding the copyright symbol, trademark symbol, a nd mathematical symbols, ar e \nTo insert a numerical character entity into HTML, t ype an ampersand, followed by a \npound sign, the number of the character and a semic olon. For example, to enter the \n&#174; . You can \nThe two major sections of an HTML document are the head and body sections. ' metadata={'source': 'wbpdf.pdf', 'page': 65}
"
"page_content='67 \n • How to use the head and the body sections \n• How to use headings and  \n• How to insert paragraphs tags. \n• How to use special characters \n \n6.0      TUTOR MARKED ASSIGNMENT \n• Given  5 line document,  insert 3 new paragraphs on  the document \n• What are the uses of the head section  of  HTML doc ument \n• What are the steps of inserting paragraph tags in a  document. \n \n7.0   FURTHER READING AND OTHER RESOURCES \n \n1.  `Arpajian, S., and R. Mullen. 1996. How to use HTML 3.2.  Emeryville, Ziff-Davis \nPress. 219 pp.  \n2.  Castro, E. 1998. HTML 4 for the world wide web. Berkeley, Peachpit Press. 336 pp.  \n3.  Graham, I. S. 1997. HTML sourcebook, third edition . New York, John Wiley & \nSons. 620 pp.  \n4.  Williams, R. 1994. The non-designer’s design book. Design and typograp hic \nprinciples for the visual novice. Berkeley, Peachpit Press. 144 pp.  \n5.  Williams, R., and J. Tollett. 1998. The non-designer’s web book. An easy guide to \ncreating, designing , and posting your own web site . Berkeley, Peachpit Press. 288 \npp.  \n \n \nUNIT THREE - FORMATTING TEXT \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1– How to Format Characters with Physical Tags \n3.2– How to Format Characters with Logical Markup T ags \n3.3  - How to Format Paragraphs \n3.4- How to Use Text Breaks  \n3.5  How to Use Preformatted Text       \n  \n4.0  Conclusion \n5.0  Summary       \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n ' metadata={'source': 'wbpdf.pdf', 'page': 66}
"
"page_content='68 \n  \n1.0   INTRODUCTION \nHTML was originally designed as a markup language, not as a formatting and layout \nspecification. The key difference is that HTML allo ws the author to specify how certain \nelements are to be used, not necessarily how they a re supposed to look. The actual details of \npresentation are left up to the client -the Web browser.  \nThat is how HTML was originally designed, but that is not necessarily how things turned out. \nIncreasingly, HTML designers are demanding greater control over the look and feel of their \ndocuments. HTML  provides that control, and yet sti ll allows HTML authors to take the first \napproach and allow formatting to be handled entirel y by the browser.  \nAs the author of your own document, you will decide  how you want your page to look. In this \nunit, you will learn how to handle basic formatting  for text and paragraphs. You will also \nlearn a few valuable techniques for breaking large amounts of text into readable chunks.  \n \n2.0   OBJECTIVES  \nAt the end of this unit, you should be able to: \n• Describe the physical markup tags  \n• Describe  the logical markup tags  \n• State the difference between formatting tags and pr eformatted text  \n \n3.0   MAIN CONTENT \n3.1   How to Format Characters with Physical Tags \nHTML provides two general ways to apply formatting to text. The first group of formatting \ntags is collectively known as physical markup tags.  This type of tag gets its name because it \nindicates a specific change in appearance. Bold and  italic tags, for example, are known as \nphysical markup tags because they directly specify how the text should appear on screen. In \nthis section of the unit, we will look at how you c an use physical tags in HTML.  ' metadata={'source': 'wbpdf.pdf', 'page': 67}
"
"page_content=' Figure 1:   An  Example of Some formatting Tags \n1.  In general, all character formatting tags work the same. Each has a starting tag and \nan ending tag. All of the text that falls between t he two tags inherits the specified \nformat. In addition, you can nest formatting tags i nside one another to combine \neffects.  \n2.  To create italic text, insert an \ntext between these two tags will be displayed in it alics when viewed by a browser. \n3.  To create bold text, insert \ntags will appear in boldface type. \n4.  To create text that is displayed in a monospaced fo nt (such as Courier), use the \nand </TT>  tags. Text falling between these two tags will be d isplayed in a fixed \nfont, similar to the output from a teletyp \n5.  To create strike- through text, which is text with a single horizonta l line running \nthrough it, use the <STRIKE> \n69 Example of Some formatting Tags  \nIn general, all character formatting tags work the same. Each has a starting tag and \nan ending tag. All of the text that falls between t he two tags inherits the specified \nformat. In addition, you can nest formatting tags i nside one another to combine \nTo create italic text, insert an <I>  tag in the document, followed by a \ntext between these two tags will be displayed in it alics when viewed by a browser. \n \nTo create bold text, insert <B>  and </B>  tags. Any text falling between these t \ntags will appear in boldface type.  \n \nTo create text that is displayed in a monospaced fo nt (such as Courier), use the \ntags. Text falling between these two tags will be d isplayed in a fixed \nfont, similar to the output from a teletyp e machine or typewriter.  \n \nthrough text, which is text with a single horizonta l line running \n<STRIKE>  and </STRIKE>  tags.  \n \nIn general, all character formatting tags work the same. Each has a starting tag and \nan ending tag. All of the text that falls between t he two tags inherits the specified \nformat. In addition, you can nest formatting tags i nside one another to combine \ntag in the document, followed by a </I>  tag. Any \ntext between these two tags will be displayed in it alics when viewed by a browser.  \ntags. Any text falling between these t wo \nTo create text that is displayed in a monospaced fo nt (such as Courier), use the <TT>  \ntags. Text falling between these two tags will be d isplayed in a fixed -width \n \nthrough text, which is text with a single horizonta l line running \n' metadata={'source': 'wbpdf.pdf', 'page': 68}
"
"page_content=' 6.  Underlined text can be displayed using the \nthese tags o nly when absolutely necessary, as underlined text i s not widely \nsupported by Web browsers. \n7.  You can change the font size of normal text. Using the \nincrease the size of the indicated text relative to  the default size. \n</SMALL>  will make the text smaller. \n8.  You can also format text as either superscript or s ubscript, which is text that appears \nslightly above or below the current line, respectiv ely. Superscript and subscript \nnumbers are often used in mathematical equat \nthe <SUP>  and </SUP> \nline). <SUB>  and </SUB> \n \n3.2 – How to Format Characters with Logical \nOn the previous page, you learned how to specify th e appearance of text using physical \nmarkup tags. However, there is a second method for formatting text \nlogical markup tags, sometimes known as \nLo gical tags take the approach that what is really im portant is the \ndisplayed, rather than exactly \ndecisions -such as whether to display text in boldface, italic s, or larg \n(and ultimately the reader).  \n70  \nUnderlined text can be displayed using the <U>  and </U>  tag pair. You should use \nnly when absolutely necessary, as underlined text i s not widely \nsupported by Web browsers.  \n \nYou can change the font size of normal text. Using the <BIG>  and </BIG> \nincrease the size of the indicated text relative to  the default size. <SMALL> \nwill make the text smaller.  \n \nYou can also format text as either superscript or s ubscript, which is text that appears \nslightly above or below the current line, respectiv ely. Superscript and subscript \nnumbers are often used in mathematical equat ions or to indicate footnotes. Using \n</SUP>  tags will mark text as superscript (slightly above the current \n</SUB>  will mark text as subscript (slightly below the cur rent line) \n \nHow to Format Characters with Logical Markup Tags \nOn the previous page, you learned how to specify th e appearance of text using physical \nmarkup tags. However, there is a second method for formatting text -through the use of \nsometimes known as information style elements.   \ngical tags take the approach that what is really im portant is the type  of information being \ndisplayed, rather than exactly how  it is displayed. Logical tags leave the actual appearance  \nsuch as whether to display text in boldface, italic s, or larg er sizes tag pair. You should use \nnly when absolutely necessary, as underlined text i s not widely \n</BIG>  tags will \n<SMALL>  and \nYou can also format text as either superscript or s ubscript, which is text that appears \nslightly above or below the current line, respectiv ely. Superscript and subscript \nions or to indicate footnotes. Using \ntags will mark text as superscript (slightly above the current \nwill mark text as subscript (slightly below the cur rent line)  \nOn the previous page, you learned how to specify th e appearance of text using physical \nthrough the use of \nof information being \ndisplayed. Logical tags leave the actual appearance  \ner sizes -up to the browser ' metadata={'source': 'wbpdf.pdf', 'page': 69}
"
"page_content="" Figure 2: An Example of Emphasis Tag. \n1.  When you want to add importance to a section of tex t, you can use the logical style \ntag called emphasis . Using the \nindicated text in italics. However, remember that w ith logical tags, the actual \nappearance of th e text is determined by the end user's Web browser,  not your HTML \ndocument.  \n \n2.  If a particular section of text is very important, you can mark it with \nby using the <STRONG> \nstrongly emp hasized text in boldface. \n3.  The <CODE>  and </CODE> \nexample of programming \nmonospaced font, such as Courier. The <CODE> tags a re used extensively \ninteractive computer manuals. \n71 An Example of Emphasis Tag.  \nWhen you want to add importance to a section of tex t, you can use the logical style \n. Using the <EM>  and </EM>  tags will usually display the \nindicated text in italics. However, remember that w ith logical tags, the actual \ne text is determined by the end user's Web browser,  not your HTML \n \nIf a particular section of text is very important, you can mark it with \n<STRONG>  and </STRONG>  tag pair. Most browsers tend to display \nhasized text in boldface.  \n \n</CODE>  tags indicate that the text is to be presented as a n \nprogramming  code . In most browsers, this text will be displayed in a \nmonospaced font, such as Courier. The <CODE> tags a re used extensively \ninteractive computer manuals.  \n \nWhen you want to add importance to a section of tex t, you can use the logical style \ntags will usually display the \nindicated text in italics. However, remember that w ith logical tags, the actual \ne text is determined by the end user's Web browser,  not your HTML \nIf a particular section of text is very important, you can mark it with strong  emphasis  \ntag pair. Most browsers tend to display \ntags indicate that the text is to be presented as a n \n. In most browsers, this text will be displayed in a \nmonospaced font, such as Courier. The <CODE> tags a re used extensively in \n"" metadata={'source': 'wbpdf.pdf', 'page': 70}
"
"page_content="" 4.  The <SAMP>  and </SAMP> \nindicate sample text that isn't specifically progra mming code. Most Web browsers \nwill handle both sets of tags in the same way. \n5.  The <KBD>  and </KBD> \nreader. By default, most browsers will display this  text in a similar fashion to the \n<CODE> and <SAMP> tags. \n6.  The <CITE>  and </CITE> \nquotation in the body of the document. Citations ar e typically displayed in italics. \n \n \n7.  The <DFN>  and </DFN> \nThis is a word or phrase that is being defined in t he context of the paragraph in \nwhich it appears.  \n3.3 -  How to Format Paragraphs \nNow that you have learned all the ways to format in dividual characters, words, and phrases, \nyou are ready to examine the options you have for presenting entire sections of text. As with \nnormal documents, the basic section of text in HTML  is the paragraph. HTML provides many \nnew ways to present, format, and align paragraphs. \n1.  The basic paragraph tag is always used \na paragraph, type \nbegin a new paragraph. The <P> tag always creates a  simple, left \nparagraph. Although the closing <P> tag is optional , you may want \nit to help you remember where a paragraph ends. \n72  \n</SAMP>  tags are very similar to the <CODE> tags, and are u sed to \nindicate sample text that isn't specifically progra mming code. Most Web browsers \nwill handle both sets of tags in the same way.  \n</KBD>  tags indicate text that is supposed to be typed in by the \nreader. By default, most browsers will display this  text in a similar fashion to the \n<CODE> and <SAMP> tags.  \n \n</CITE>  tags are used to insert a citation to give credit f o \nquotation in the body of the document. Citations ar e typically displayed in italics. \n</DFN>  tags are used to highlight the defining  instance \nThis is a word or phrase that is being defined in t he context of the paragraph in \n \nHow to Format Paragraphs  \nNow that you have learned all the ways to format in dividual characters, words, and phrases, \nexamine the options you have for presenting entire sections of text. As with \nnormal documents, the basic section of text in HTML  is the paragraph. HTML provides many \nnew ways to present, format, and align paragraphs.  \nThe basic paragraph tag is always used  to start a new paragraph. To indicate \na paragraph, type <P> . This tells the Web browser to insert a line space  and \nbegin a new paragraph. The <P> tag always creates a  simple, left \nparagraph. Although the closing <P> tag is optional , you may want \nit to help you remember where a paragraph ends.  \ntags are very similar to the <CODE> tags, and are u sed to \nindicate sample text that isn't specifically progra mming code. Most Web browsers \ntags indicate text that is supposed to be typed in by the \nreader. By default, most browsers will display this  text in a similar fashion to the \ntags are used to insert a citation to give credit f o r a short \nquotation in the body of the document. Citations ar e typically displayed in italics.  \ninstance  of a term. \nThis is a word or phrase that is being defined in t he context of the paragraph in \nNow that you have learned all the ways to format in dividual characters, words, and phrases, \nexamine the options you have for presenting entire sections of text. As with \nnormal documents, the basic section of text in HTML  is the paragraph. HTML provides many \nto start a new paragraph. To indicate \n. This tells the Web browser to insert a line space  and \nbegin a new paragraph. The <P> tag always creates a  simple, left -justified \nparagraph. Although the closing <P> tag is optional , you may want  to include "" metadata={'source': 'wbpdf.pdf', 'page': 71}
"
"page_content='  \n2.  You can change the justification of the paragraph w ith the \nTo change the alignment of a paragraph, put the ALI GN statement in the \nparagraph tag, followed by the type of justificatio n you want. To create a \nright- justified paragraph, type \n3.  To create a centered paragraph, type \nparagraph that is justified on both sides, type \nalso create a left \nsince this is the default, just typing \n1.  By default, t he Web browser will wrap lines of text to keep the entire paragraph in \nview. You have the option of turning off word wrapp ing by including the \ncommand in the paragraph tag. To turn off word wrap ping in a paragraph, type \nNOWRAP> . This will allow y \nwhich is explained in the next section. \n  \n2.  Normally, paragraphs will wrap around an object in the margin, such as a figure or \ntable. To force the paragraph to begin below the ob ject, you can use the \nattribute. Typing <P CLEAR=LEFT> \nclear. CLEAR=RIGHT  forces the paragraph down to a point where the righ t margin is \nclear. CLEAR=ALL  forces the paragraph to wait until both margins are  clear. \n73 You can change the justification of the paragraph w ith the ALIGN \nTo change the alignment of a paragraph, put the ALI GN statement in the \nparagraph tag, followed by the type of justificatio n you want. To create a \njustified paragraph, type <P ALIGN=RIGHT> .  \n \nTo create a centered paragraph, type <P ALIGN=CENTER> . To create a \nparagraph that is justified on both sides, type <P ALIGN=JUSTIFY> \nalso create a left -justified paragraph by typing <P ALIGN=LEFT> \nsince this is the default, just typing <P>  will have the same effect. \n \nhe Web browser will wrap lines of text to keep the entire paragraph in \nview. You have the option of turning off word wrapp ing by including the \ncommand in the paragraph tag. To turn off word wrap ping in a paragraph, type \n. This will allow y ou to explicitly place line breaks using the <BR> t ag, \nwhich is explained in the next section.  \nNormally, paragraphs will wrap around an object in the margin, such as a figure or \ntable. To force the paragraph to begin below the ob ject, you can use the \n<P CLEAR=LEFT>  moves the paragraph down until the left margin is \nforces the paragraph down to a point where the righ t margin is \nforces the paragraph to wait until both margins are  clear. ALIGN  attribute. \nTo change the alignment of a paragraph, put the ALI GN statement in the \nparagraph tag, followed by the type of justificatio n you want. To create a \n. To create a \n<P ALIGN=JUSTIFY> . You can \n<P ALIGN=LEFT> . However, \nwill have the same effect.  \nhe Web browser will wrap lines of text to keep the entire paragraph in \nview. You have the option of turning off word wrapp ing by including the NOWRAP  \ncommand in the paragraph tag. To turn off word wrap ping in a paragraph, type <P \nou to explicitly place line breaks using the <BR> t ag, \nNormally, paragraphs will wrap around an object in the margin, such as a figure or \ntable. To force the paragraph to begin below the ob ject, you can use the CLEAR  \nmoves the paragraph down until the left margin is \nforces the paragraph down to a point where the righ t margin is \nforces the paragraph to wait until both margins are  clear.  ' metadata={'source': 'wbpdf.pdf', 'page': 72}
"
"page_content="" Figure 3:  An Example of Special Formatting \n3.  To combine formatting commands in the same paragrap h, type all the attributes \ntogether in the same <P> \nwith no word wrapping, type \n3.4  - How to Use Text Breaks \nNot all text fits neatly into paragraphs. Sometimes  you want the reader's Web browser to end \na line of text at a s pecific point. If you're using HTML to display poet ry, lyrics, instructional \nmaterials, or any other type of information where s pecific formatting is necessary, you will \nwant to have control over the flow of text in the d ocument. \n74 An Example of Special Formatting  \nTo combine formatting commands in the same paragrap h, type all the attributes \ntogether in the same <P>  tag. For example, to create a center- aligned paragraph \nwith no word wrapping, type <P ALIGN=CENTER NOWRAP> .  \n \nHow to Use Text Breaks  \nNot all text fits neatly into paragraphs. Sometimes  you want the reader's Web browser to end \npecific point. If you're using HTML to display poet ry, lyrics, instructional \nmaterials, or any other type of information where s pecific formatting is necessary, you will \nwant to have control over the flow of text in the d ocument.  \n \nTo combine formatting commands in the same paragrap h, type all the attributes \naligned paragraph \nNot all text fits neatly into paragraphs. Sometimes  you want the reader's Web browser to end \npecific point. If you're using HTML to display poet ry, lyrics, instructional \nmaterials, or any other type of information where s pecific formatting is necessary, you will \n"" metadata={'source': 'wbpdf.pdf', 'page': 73}
"
"page_content="" Figure 4:  An Example of Line Break \n1.  To insert a line break at a specific point, type \nto immediately end the current line and begin placi ng text on the next line. A line \nbreak does not start a new paragraph. \n2.  You can use multiple line breaks to create a short,  informal list of items. By creating a \nnew paragraph before and after the list, you can se parate it from the rest of your \ntext.  \n3.  Sometimes you'll want to visually break apart secti ons of text using a vis \nHTML supports this through the use of \nanywhere in the document by typing \nwindow will be placed at that point in the text. Ho rizontal rules, like paragraphs, \nsupp ort the clear attribute to allow you to begin the l ine when the margins are clear. \n \n4.  To place an entire section of text apart from the r est, use the \n</BLOCKQUOTE>  tag pair. This tag, used in place of a paragraph ta g, will offset an \n75 An Example of Line Break  \nTo insert a line break at a specific point, type <BR> . This instructs the Web browser \nto immediately end the current line and begin placi ng text on the next line. A line \nbreak does not start a new paragraph.  \n \nYou can use multiple line breaks to create a short,  informal list of items. By creating a \nnew paragraph before and after the list, you can se parate it from the rest of your \n \nSometimes you'll want to visually break apart secti ons of text using a vis \nHTML supports this through the use of horizontal  rules . These can be added \nanywhere in the document by typing <HR> . A thin line stretching across the entire \nwindow will be placed at that point in the text. Ho rizontal rules, like paragraphs, \nort the clear attribute to allow you to begin the l ine when the margins are clear. \nTo place an entire section of text apart from the r est, use the <BLOCKQUOTE> \ntag pair. This tag, used in place of a paragraph ta g, will offset an \n \n. This instructs the Web browser \nto immediately end the current line and begin placi ng text on the next line. A line \nYou can use multiple line breaks to create a short,  informal list of items. By creating a \nnew paragraph before and after the list, you can se parate it from the rest of your \nSometimes you'll want to visually break apart secti ons of text using a vis ible line. \n. These can be added \n. A thin line stretching across the entire \nwindow will be placed at that point in the text. Ho rizontal rules, like paragraphs, \nort the clear attribute to allow you to begin the l ine when the margins are clear.  \n<BLOCKQUOTE>  and \ntag pair. This tag, used in place of a paragraph ta g, will offset an \n"" metadata={'source': 'wbpdf.pdf', 'page': 74}
"
"page_content="" entire paragraph from the main body of text, usually by in denting it and adding extra \nspaces to the top and bottom. It is commonly used t o highlight long quotations and \npassages.  \n3.5   How to Use Preformatted Text \nPreformatted text allows you break away from the no rmal rules of HTML and quickly specify \nexactly how a section of text will appear in the re ader's Web browser. When you are using \npreformatted text, you don't need to use the HTML m arkup tags \nas you have typed it, complete with spaces, line br eaks, and empty lines. Preformatted text is \nalways displayed in a monospaced, fixed \n1.  To begin a section of preformatted text, type \n \nNow type the section of text exactly \nlimit the length of your lines to 65 characters or less, so that you can accommodate \nthe screen width of most browsers. (Remember that b rowsers will not word wrap \npreformatted text.) \nFigure 4 :  An Example of preformatted text \n2.  When you're finished entering your preformatted tex t, type \nof the section.  \n76 paragraph from the main body of text, usually by in denting it and adding extra \nspaces to the top and bottom. It is commonly used t o highlight long quotations and \n \nHow to Use Preformatted Text   \nPreformatted text allows you break away from the no rmal rules of HTML and quickly specify \nexactly how a section of text will appear in the re ader's Web browser. When you are using \npreformatted text, you don't need to use the HTML m arkup tags -the text will \nas you have typed it, complete with spaces, line br eaks, and empty lines. Preformatted text is \nalways displayed in a monospaced, fixed -width font.  \nTo begin a section of preformatted text, type <PRE> .  \nNow type the section of text exactly how you want it to appear. It's a good idea to \nlimit the length of your lines to 65 characters or less, so that you can accommodate \nthe screen width of most browsers. (Remember that b rowsers will not word wrap \n \nAn Example of preformatted text  \nWhen you're finished entering your preformatted tex t, type </PRE> \nparagraph from the main body of text, usually by in denting it and adding extra \nspaces to the top and bottom. It is commonly used t o highlight long quotations and \nPreformatted text allows you break away from the no rmal rules of HTML and quickly specify \nexactly how a section of text will appear in the re ader's Web browser. When you are using \nthe text will appear exactly \nas you have typed it, complete with spaces, line br eaks, and empty lines. Preformatted text is \nhow you want it to appear. It's a good idea to \nlimit the length of your lines to 65 characters or less, so that you can accommodate \nthe screen width of most browsers. (Remember that b rowsers will not word wrap \n</PRE>  to mark the end "" metadata={'source': 'wbpdf.pdf', 'page': 75}
"
"page_content='  \n3.  You can apply character formatting styles, such as bold \ntext. Headings and paragraphs will not work in pref ormatted text blocks, however. \n    \n4.0   CONCLUSION: \nThe physical and logical markup tags are the two ge neral ways of formatting text. \nThey are with different markup tags. \n \n5.0       SUMMARY: \nIn this unit, you have learnt the following: \n• Physical Markup tags \n• Logical Markup tags \n• Paragraph formatting \n \n6.0      TUTOR MARKED ASSIGNMENT \n• List the physical Markup tags you know? \n• Distinguish between physical and logical markup tag s \n  \n7.0       FURTHER READING AND OTHER RESOURCES \n \n• `Arpajian, S., and R. Mullen. 1996. \nDavis Press. 219 pp. \n• Castro, E. 1998. \n336 pp.  \n• Graham, I. S. 1997. \n& Sons. 620 pp. \n• Williams, R. 1994. \nprinciples for the visual novice. \n• Williams, R., and J. Tollett. 1998. \nguide to creating, designing , and posting your own  web site. \nPeachpit Press. 288 pp. \n \nUNIT FOUR – USING HYPERTEXT LINKS \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1 How to Create a Hyperlink \n3.2  How to Use the ID Att \n3.4  How to Use Relative Path Names \n \n4.0  Conclusion \n77 You can apply character formatting styles, such as bold and italic, in preformatted \ntext. Headings and paragraphs will not work in pref ormatted text blocks, however. \nCONCLUSION:  \nThe physical and logical markup tags are the two ge neral ways of formatting text. \nThey are with different markup tags.  \nIn this unit, you have learnt the following:  \nPhysical Markup tags  \nLogical Markup tags  \nParagraph formatting  \nTUTOR MARKED ASSIGNMENT  \nList the physical Markup tags you know?  \nDistinguish between physical and logical markup tag s  \n   \nURTHER READING AND OTHER RESOURCES  \n`Arpajian, S., and R. Mullen. 1996. How to use HTML 3.2. \nDavis Press. 219 pp.  \nCastro, E. 1998. HTML 4 for the world wide web. Berkeley, Peachpit Press. \nGraham, I. S. 1997. HTML sourcebook, third edition . New York, John Wiley \n& Sons. 620 pp.  \nWilliams, R. 1994. The non- designer’s design book. Design and typographic \nprinciples for the visual novice. Berkeley, Peachpit Press. 144 pp. \nWilliams, R., and J. Tollett. 1998. The non- designer’s web book. An easy \nguide to creating, designing , and posting your own  web site. \nPeachpit Press. 288 pp.  \nUSING HYPERTEXT LINKS  \nHow to Create a Hyperlink  \nHow to Use the ID Att ribute  \nHow to Use Relative Path Names   and italic, in preformatted \ntext. Headings and paragraphs will not work in pref ormatted text blocks, however.  \nThe physical and logical markup tags are the two ge neral ways of formatting text. \n   \nHow to use HTML 3.2.  Emeryville, Ziff-\nBerkeley, Peachpit Press. \n. New York, John Wiley \ndesigner’s design book. Design and typographic \nBerkeley, Peachpit Press. 144 pp.  \ndesigner’s web book. An easy \nguide to creating, designing , and posting your own  web site. Berkeley, ' metadata={'source': 'wbpdf.pdf', 'page': 76}
"
"page_content='78 \n 5.0  Summary       \n6.0  Tutor Marked Assignment        \n7.0  Further Reading And Other Resources \n \n1.0    INTRODUCTION \nThe single greatest feature of the World Wide Web i s its diverse collection of \ndocuments, which number in the millions. All of the se documents are brought \ntogether through the use of hypertext links. Users navigate the Web by clicking on the \nlinks that HTML authors provide. Hypertext links ar e a crucial part of HTML-which, \nafter all, is short for Hypertext  Markup  Language .  \n \nIn this unit, we will look at the simple process be hind how hyperlinks work in HTML \ndocuments. You will also learn how to link to a spe cific point in a large document by \nusing the ID attribute. Finally, we will take a loo k at the difference between using \nabsolute and relative path names in your hyperlink references. \n Linking is one of the easiest and most important p arts of using HTML. So warm up \nyour Web browser and Notepad and get ready to explo re. \n \n2.0  OBJECTIVES \nAt the end of this unit, you should be able to: \n• Define hypertext link  \n• List types and uses of hypertext link  \n• State the steps of creating hyperlinks  \n• Create hyperlinks  \n \n3.0  MAIN CONT \n3.1  What is hypertext link \nHypertext is text displayed on a computer or other electronic device with \nreferences (hyperlinks) to other text that the read er can immediately access, \nusually by a mouse click or key press sequence. Apa rt from running text, \nhypertext may contain tables, images and other pres entational devices. Hypertext \nis the underlying concept defining the structure of  the World Wide Web. It is an \neasy-to-use and flexible format to share informatio n over the Internet . \n \nTypes and uses of hypertext \nHypertext documents can either be static (prepared and stored in advance) or dynamic \n(continually changing in response to user input). S tatic hypertext can be used to cross-\nreference collections of data in documents, softwar e applications, or books on CDs. A well-\nconstructed system can also incorporate other user- interface conventions, such as menus and \ncommand lines. Hypertext can develop very complex a nd dynamic systems of linking and \ncross-referencing. The most famous implementation o f hypertext is the World Wide Web , \nfirst deployed in 1992. ' metadata={'source': 'wbpdf.pdf', 'page': 77}
"
"page_content='79 \n  \n3.2  How to Create a Hyperlink   \nHyperlinks connect two different documents. You can  link to one of your own documents or \nto any other document on the World Wide Web. You ca n even link to a different section in \nthe same document. It is very easy to create links with HTML, and you only need to follow a \nfew simple steps.  \n  \nFigure 1 :  An Example of Hyperlink Document \n1.  Use your Web browser to locate the document you wan t to link. You can link to any \nother document on the World Wide Web. \n2.  Make a note of the Uniform Resource Locator (URL) o f the document you want to \nlink to. The URL is prominently displayed by your W eb browser, usually near the top. \nMake sure to note the complete URL. \n3.  To make a link to another document, you need to use  a special type of HTML tag \nknown as an anchor  tag , also commonly known as a link  tag . Locate the place in your \nHTML document where you want to insert the hypertex t link. Type <A HREF="" , \nfollowed by the URL of the document you want to lin k to. Then close the tag by \ntyping ""> . \n' metadata={'source': 'wbpdf.pdf', 'page': 78}
"
"page_content="" Figure 2:  An Example of Link Tag \n4.  Type some descriptive text (also known as the \nreaders know something about where this link will t ake them. \n5.  Finish the anchor tag by typing \n6.  Once you've created your link \nusing your Web browser. Note that by default, most Web browsers display hypertext \nlinks as underlined text in a different colour than  normal text. This lets your readers \nknow that clicking on the text w \n3. 3   How to Use the ID Attribute \nWhen you create a simple link to a Web page using t he technique you learned \nthe reader is always taken to the top of the new pa ge. What if you want to link to a particular \nsection of a document and take the reader immediate ly to that point? \nAssigning an ID to an element in your HTML document  allows hyperlinks to point direct \nthat element instead of to the very top of the page . The HTML 3.0 ID attribute did not make \nit into the HTML 3.2 standard, but it is rendered b y some browsers. You can use the ID \nattribute for most HTML elements, such as paragraph s, headings, and lis \n1.  Locate the element you'd like to name with an ID. T his can be almost any element in \nyour document, but it is usually a paragraph or hea ding. \n80 Example of Link Tag  \nType some descriptive text (also known as the link text ) after the anchor tag to let \nreaders know something about where this link will t ake them.  \n \nFinish the anchor tag by typing </A>  on the same line.  \n \nOnce you've created your link , check to make sure it works by clicking on it whi le \nusing your Web browser. Note that by default, most Web browsers display hypertext \nlinks as underlined text in a different colour than  normal text. This lets your readers \nknow that clicking on the text w ill take them to another document. \nHow to Use the ID Attribute  \nWhen you create a simple link to a Web page using t he technique you learned \nthe reader is always taken to the top of the new pa ge. What if you want to link to a particular \nsection of a document and take the reader immediate ly to that point?  \nAssigning an ID to an element in your HTML document  allows hyperlinks to point direct \nthat element instead of to the very top of the page . The HTML 3.0 ID attribute did not make \nit into the HTML 3.2 standard, but it is rendered b y some browsers. You can use the ID \nattribute for most HTML elements, such as paragraph s, headings, and lis ts. \nLocate the element you'd like to name with an ID. T his can be almost any element in \nyour document, but it is usually a paragraph or hea ding.  \n \n) after the anchor tag to let \n, check to make sure it works by clicking on it whi le \nusing your Web browser. Note that by default, most Web browsers display hypertext \nlinks as underlined text in a different colour than  normal text. This lets your readers \n \nWhen you create a simple link to a Web page using t he technique you learned in section 3.1, \nthe reader is always taken to the top of the new pa ge. What if you want to link to a particular \nAssigning an ID to an element in your HTML document  allows hyperlinks to point direct ly to \nthat element instead of to the very top of the page . The HTML 3.0 ID attribute did not make \nit into the HTML 3.2 standard, but it is rendered b y some browsers. You can use the ID \nts.  \nLocate the element you'd like to name with an ID. T his can be almost any element in \n"" metadata={'source': 'wbpdf.pdf', 'page': 79}
"
"page_content='81 \n  \nFigure 3:  An Example of ID Document  \n2.  Inside the element\'s opening tag, just after the le tter P, insert a space and type ID= .  \n3.  Your element ID needs a name. The hyperlinks will u se this name to take readers \ndirectly to this section of your document. In this example, we\'ll simply name the \nelement ""MyParagraph"".  \n4.  Type the name of your ID, inside quotation marks.  \n \nFigure 4:  Another Example of ID Document \n5.  To create a hyperlink directly to this element, add  a pound sign and the ID name \ninside your hyperlink tag. For example, to link dir ectly to ""MyParagraph"", a typical \nhyperlink might look like the one above.  \n3.3  How to Use Relative Path Names \nIn the beginning of this unit, you learned how to c reate a hyperlink by pointing to the full \nURL of another document. However, if you are linkin g to different documents on the same \nWeb server (usually your own), you do not always ne ed to use the full URL. You can use \nrelative  path names .  \nWeb browsers, even when running on PC or Macintosh machines, always follow UNIX style \npath names. This means that directories (folders) a re separated by forward slash marks (/), \nand higher-level directories are indicated by two p eriods (..).  \n/head2right The simplest relative path name is no path name at all. If you are linking to \nanother document that is in the same directory, all  you have to do is type in the \nfile name of the new document in place of the full URL. For example, to link \n' metadata={'source': 'wbpdf.pdf', 'page': 80}
"
"page_content=' to a document named newfile.html, type \n<AHREF=""newfile.html""> \n/head2right To link to documents or files in a subdirectory, al l you need to specify is the \npath and file name relative to the current document . For example, to link to a \ndocument called budget.html in a subdirectory named  budget96, you would \ntype  \n<A HREF=""budget96/b \n/head2right You can also navigate up the directory tree of your  server by using two \nperiods (..) to move up one level. For example, to link from the budget.html \nfile in the previous example back to the main docum ent, you would type \n<A HREF=""../main.ht \n/head2right If the new document was two levels above the curren t one, you would separate \neach level with a slash, and type \n<A HREF=""../../main.html""> \n• The single greatest advantage to using relative pat h names is portability. If you \ndo your HTML developme \nfinished work to a Web server, you can save yoursel f the trouble of having to \nreset all of your hyperlinks to reflect the new loc ation. Likewise, relative path \nnames will save you the headache of changing your h y \nyour existing HTML files to an entirely new Web ser ver \n4.0  CONCLUSION: \nHypertext systems are particularly useful for organ izing and browsing through large \ndatabases that consist of disparate types of inform ation. It is the underlying \ndefining the structure of the \n \n5.0  SUMMARY \nIn this unit, you have learnt the following: \n• Definition of hypertext link? \n• Types and Uses of hypertext \n• Stated the steps in the creation of hyperlink \n•  \n82 to a document named newfile.html, type  \n<AHREF=""newfile.html""> .  \n \nTo link to documents or files in a subdirectory, al l you need to specify is the \npath and file name relative to the current document . For example, to link to a \ndocument called budget.html in a subdirectory named  budget96, you would \n<A HREF=""budget96/b udget.html""> .  \n \nYou can also navigate up the directory tree of your  server by using two \nperiods (..) to move up one level. For example, to link from the budget.html \nfile in the previous example back to the main docum ent, you would type \n<A HREF=""../main.ht ml""> .  \n \nIf the new document was two levels above the curren t one, you would separate \neach level with a slash, and type  \n<A HREF=""../../main.html""> .  \n \nThe single greatest advantage to using relative pat h names is portability. If you \ndo your HTML developme nt on a local machine, and then upload your \nfinished work to a Web server, you can save yoursel f the trouble of having to \nreset all of your hyperlinks to reflect the new loc ation. Likewise, relative path \nnames will save you the headache of changing your h y perlinks if you move \nyour existing HTML files to an entirely new Web ser ver  \nHypertext systems are particularly useful for organ izing and browsing through large \ndatabases that consist of disparate types of inform ation. It is the underlying \ndefining the structure of the World Wide Web. \nIn this unit, you have learnt the following:  \nDefinition of hypertext link?  \nTypes and Uses of hypertext  \nthe steps in the creation of hyperlink  To link to documents or files in a subdirectory, al l you need to specify is the \npath and file name relative to the current document . For example, to link to a \ndocument called budget.html in a subdirectory named  budget96, you would \nYou can also navigate up the directory tree of your  server by using two \nperiods (..) to move up one level. For example, to link from the budget.html \nfile in the previous example back to the main docum ent, you would type  \nIf the new document was two levels above the curren t one, you would separate \nThe single greatest advantage to using relative pat h names is portability. If you \nnt on a local machine, and then upload your \nfinished work to a Web server, you can save yoursel f the trouble of having to \nreset all of your hyperlinks to reflect the new loc ation. Likewise, relative path \nperlinks if you move \nHypertext systems are particularly useful for organ izing and browsing through large \ndatabases that consist of disparate types of inform ation. It is the underlying concept ' metadata={'source': 'wbpdf.pdf', 'page': 81}
"
"page_content='83 \n 6.0   TUTOR MARKED ASSIGNMENT \n• Define hypertext link \n• Distinguish between hyperlink and hypertext  \n• List the steps of creating a hyperlink      \n  \n7.0  FURTHER READING AND OTHER RESOURCES \n• Barnet, Belinda (2004). Lost In The Archive: Vision, Artefact And Loss In T he Evolution Of \nHypertext . University of New South Wales, PhD thesis. \n• Bolter, Jay David (2001). Writing Space: Computers, Hypertext, and the Remedi ation of Print . \nNew Jersey: Lawrence Erlbaum Associates. ISBN 0-805 8-2919-9. \n• Buckland, Michael (2006). Emanuel Goldberg and His Knowledge Machine . Libraries Unlimited. \nISBN 0-31331-332-6. \n• Byers, T. J. (April 1987). ""Built by association"". PC World  5: 244–251. \n• Cicconi, Sergio (1999). ""Hypertextuality"". Mediapolis. Ed. Sam Inkinen. Berlino & New York: De  \nGruyter. : 21–43. http://www.cisenet.com/cisenet/writing/ess ays/hypertextuality.htm. \n• Conklin, J. (1987). ""Hypertext: An Introduction and  Survey"". Computer  20  (9): 17–41. \ndoi:10.1109/MC.1987.1663693. \n• Crane, Gregory (1988). ""Extending the boundaries of  instruction and research"". T.H.E. Journal \n(Technological Horizons in Education)  (Macintosh Special Issue): 51–54. \n• Ensslin, Astrid (2007). Canonizing Hypertext: Explorations and Construction s . London: \nContinuum. ISBN 0-8264-95583. \n• Landow, George (2006). Hypertext 3.0 Critical Theory and New Media in an E ra of Globalization: \nCritical Theory and New Media in a Global Era (Para llax, Re-Visions of Culture and Society) . \nBaltimore: The Johns Hopkins University Press. ISBN  0-8018-8257-5. \n• van Dam, Andries (July 1988). ""Hypertext: \'87 keyno te address"". Communications of the ACM  31 : \n887–895. doi:10.1145/48511.48519. \nhttp://www.cs.brown.edu/memex/HT_87_Keynote_Address .html. \n• Yankelovich, Nicole; Landow, George P., and Cody, D avid (1987). ""Creating hypermedia materials \nfor English literature students"". SIGCUE Outlook  20  (3): All. \n \n \n \n \n \n \n \n \n ' metadata={'source': 'wbpdf.pdf', 'page': 82}
"
"page_content='84 \n  \nMODULE THREE –LISTS, TABLES AND FRAMES IN HTML \nUNIT ONE – Creating Lists in HTML \n1. 0. Introduction \n2.0.  Objectives  \n3.0  Main Content \n3.1 How to Create Unordered Lists  \n3.2 How to Create Ordered Lists  \n3.3. How to Create Definition Lists  \n3.4. How to Create Lists within Lists   \n    \n4.0  Conclusion \n5.0  Summary       \n6.0  Tutor Marked Assignment        \n7.0  Further Reading And Other Resources \n \n1.0    INTRODUCTION \n \nEveryone makes lists. Whether you use them for groc eries, to-do items, or holiday \ngifts and cards, lists are an important part of one ’s life. Lists are also important on \nthe World Wide Web. The environment of the Web call s for information to be \npresented in a concise and timely manner. Lists are  ideal vehicles for delivering \nall kinds of information on line. In HTML, you have  many choices for how to \ncreate and present lists. In this unit, we will loo k at ways to create unordered  lists , \nordered  (numbered) lists , and a special type of list known as a definition  list . You \nwill also learn how to combine multiple levels of l ists. \n \n2.0    OBJECTIVES  \nIn this unit, you should be able to: \n• Define unordered lists, ordered list, definition li st and list within list  \n• State the steps in creating unordered lists, ordere d list, definition list and \nlist within list  \n• Distinguish between Ordered list and list within li st  \n \n3.0    MAIN CONTENT \n3.1   How to Create Unordered Lists  \nThe simplest list in HTML is the unordered or bulle ted list. This is ideal for listing items that \nhave no particular hierarchy or order of importance . Unordered lists are very common on the \nWeb and are used to convey items of note in a quick  and concise manner. Web browsers ' metadata={'source': 'wbpdf.pdf', 'page': 83}
"
"page_content=' usually place bullets o r other markers in front of each item in an unorder ed list. \n \nFigure 1:  An Example List in HTML. \n1.  Locate the part of your HTML document where you wan t to insert a list. \n2.  Begin the unordered list by typing \nWeb browser to treat this section of text as an uno rdered list. Unordered lists will \nusually be indented from the main document and list  items will be formatted with \nbullets. The size and type of bullets used are dete rmined by the Web browse \n \n3.  Create a heading for your list. This is an optional  brief description of what your list \ncontains. To create a list header, type \ncontents. Then type </LH> \nheading for a grocery list, you would type \n4.  To create the first item in your list, type \n<LI>  is an open tag, which means that you do not need to  type </LI> at the end of \neach item.  \n5.  Continue typing <LI>  followed by text for each item in your list. Press Enter after \neach item.  \n85 r other markers in front of each item in an unorder ed list. \nAn Example List in HTML.  \nLocate the part of your HTML document where you wan t to insert a list. \nBegin the unordered list by typing <UL> , and then press Enter. The \nWeb browser to treat this section of text as an uno rdered list. Unordered lists will \nusually be indented from the main document and list  items will be formatted with \nbullets. The size and type of bullets used are dete rmined by the Web browse \nCreate a heading for your list. This is an optional  brief description of what your list \ncontains. To create a list header, type <LH> , followed by a brief summary of the list \n</LH>  to close the list heading tag. For example, to cre \nheading for a grocery list, you would type <LH>My Grocery List</LH> \n \nTo create the first item in your list, type <LI> . Then type the text of the item itself. \nis an open tag, which means that you do not need to  type </LI> at the end of \n \nfollowed by text for each item in your list. Press Enter after \nr other markers in front of each item in an unorder ed list.  \n \nLocate the part of your HTML document where you wan t to insert a list.  \n, and then press Enter. The <UL>  tag tells the \nWeb browser to treat this section of text as an uno rdered list. Unordered lists will \nusually be indented from the main document and list  items will be formatted with \nbullets. The size and type of bullets used are dete rmined by the Web browse r.  \nCreate a heading for your list. This is an optional  brief description of what your list \n, followed by a brief summary of the list \nto close the list heading tag. For example, to cre ate a list \n<LH>My Grocery List</LH> .  \n. Then type the text of the item itself.  \nis an open tag, which means that you do not need to  type </LI> at the end of \nfollowed by text for each item in your list. Press Enter after \n' metadata={'source': 'wbpdf.pdf', 'page': 84}
"
"page_content=' 6.  Finish the unordered list by typing \n \n \n3.2    How to Create Ordered Lists \nSometimes you need to list items in a specific orde r. Examples of this type of list include \nstep-by-step instructions and ""Top 10"" lists. HTML provides  a way to do this through ordered \nlists. Web browsers will place a number in front of  each item, increasi \nfor each entry down the list.  \nFigure 2:  An Example of Ordered List in HTML \n1.  To create an ordered list, locate the place in your  document where you\'d like t \nbegin the list and type \n \n2.  To create an optional heading for the ordered list,  type \nheading. Then close the heading tag by typing \n3.  To enter the first item of your list, type \nto include a closing </LI> tag. \n86 Finish the unordered list by typing </UL> .  \nHow to Create Ordered Lists   \nSometimes you need to list items in a specific orde r. Examples of this type of list include \nstep instructions and ""Top 10"" lists. HTML provides  a way to do this through ordered \nlists. Web browsers will place a number in front of  each item, increasi ng the number by one \nAn Example of Ordered List in HTML  \nTo create an ordered list, locate the place in your  document where you\'d like t \nbegin the list and type <OL> .  \nTo create an optional heading for the ordered list,  type <LH>  followed by the \nheading. Then close the heading tag by typing </LH> .  \n \nTo enter the first item of your list, type <LI>  followed by the item. There is no need \nto include a closing </LI> tag.  \nSometimes you need to list items in a specific orde r. Examples of this type of list include \nstep instructions and ""Top 10"" lists. HTML provides  a way to do this through ordered \nng the number by one \n \nTo create an ordered list, locate the place in your  document where you\'d like t o \nfollowed by the \nfollowed by the item. There is no need \n' metadata={'source': 'wbpdf.pdf', 'page': 85}
"
"page_content="" 4.  Type </OL>  to close the ordered list. \n  \n3.3   How to Create Definition \nDefinition lists are different from other lists in HTML, because each item in a definition list \ncontains two parts: a term and a definition. Defini tion lists are typically used for glossaries \nand dictionaries. With a little creativity, however , the \nways, such as product catalogs and even poetry. Def inition lists are extremely flexible. The \ninformation contained in a <DD> tag is not limited to simple text. You can include images, \ntables, and full character formatt \nFigure 3 :  A n Example of definition List in HTML \n1.  To create a definition list in your HTML document, type \nyou'd like the list to begin. \n \n2.  As mentioned earlier, definition lists are slightly  different from ordered and \nunordered lists. Each item in a definition list is made up of two separate parts: the \nterm  and the definition \ndefinition indented on the next line. \n87  \nto close the ordered list.  \nHow to Create Definition  Lists  \nDefinition lists are different from other lists in HTML, because each item in a definition list \ncontains two parts: a term and a definition. Defini tion lists are typically used for glossaries \nand dictionaries. With a little creativity, however , the y can be put to use in many different \nways, such as product catalogs and even poetry. Def inition lists are extremely flexible. The \ninformation contained in a <DD> tag is not limited to simple text. You can include images, \ntables, and full character formatt ing in your definitions.  \nA n Example of definition List in HTML  \nTo create a definition list in your HTML document, type <DL>  at the point where \nyou'd like the list to begin.  \nAs mentioned earlier, definition lists are slightly  different from ordered and \nunordered lists. Each item in a definition list is made up of two separate parts: the \ndefinition . Typically, br owsers will display the term on one line and the \ndefinition indented on the next line.  \nDefinition lists are different from other lists in HTML, because each item in a definition list \ncontains two parts: a term and a definition. Defini tion lists are typically used for glossaries \ny can be put to use in many different \nways, such as product catalogs and even poetry. Def inition lists are extremely flexible. The \ninformation contained in a <DD> tag is not limited to simple text. You can include images, \n \nat the point where \nAs mentioned earlier, definition lists are slightly  different from ordered and \nunordered lists. Each item in a definition list is made up of two separate parts: the \nowsers will display the term on one line and the \n"" metadata={'source': 'wbpdf.pdf', 'page': 86}
"
"page_content="" 3.  To create a definition term, type \ndefined. For example, to begin a definition of the word \n<DT>Apple .  \n \n4.  To create the definition, type \nexample, to create a definition for the term in the  previous step, you would type \n<DD>a firm, edible, rounded fruit \n5.  As with ordered and unordered lists, there are no c losing tags for list items. \nTherefore, it is not necessary to type </DT> or </D D> at the end of your terms and \ndefinitions.  \n6.  Type </DL>  to close your definition list. \n \n3.4  How to Create Lists within Lists \nIn the beginning of this unit, we learned that list s are extremely flexible and powerful tools in \nHTML. Sometimes you will want to create lists withi n lists, especially when you need to \ncreate a hierarchy of items, such as in outlines or  detailed instructi \nlists is easy in HTML. It helps to keep your lists and list items indented in Notepad. Even \nthough Web browsers will ignore the extra spaces, k eeping everything organized this way \nwill help you keep a handle on your HTML code. Yo \nyou like. However, it is good practice to limit you r nesting to three levels or less in order to \nmake sure that the lists stay within the visible ar ea of the reader's Web browser. \nBegin the first list by typing <OL> \nordered list, but in reality, it can be any type of  list you want. \n \n1.  Enter your list items one by one, beginning each it em with <LI>. \n88 To create a definition term, type <DT>  followed by text describing the element being \ndefined. For example, to begin a definition of the word apple , you would type \nTo create the definition, type <DD> , followed by the text of the definition. For \nexample, to create a definition for the term in the  previous step, you would type \n<DD>a firm, edible, rounded fruit .  \n \nAs with ordered and unordered lists, there are no c losing tags for list items. \nTherefore, it is not necessary to type </DT> or </D D> at the end of your terms and \nto close your definition list.  \nHow to Create Lists within Lists   \nIn the beginning of this unit, we learned that list s are extremely flexible and powerful tools in \nHTML. Sometimes you will want to create lists withi n lists, especially when you need to \ncreate a hierarchy of items, such as in outlines or  detailed instructi ons. Creating lists within \nlists is easy in HTML. It helps to keep your lists and list items indented in Notepad. Even \nthough Web browsers will ignore the extra spaces, k eeping everything organized this way \nwill help you keep a handle on your HTML code. Yo u can nest lists as many levels deep as \nyou like. However, it is good practice to limit you r nesting to three levels or less in order to \nmake sure that the lists stay within the visible ar ea of the reader's Web browser. \n<OL> . In this example, we're assuming that the first li st is an \nordered list, but in reality, it can be any type of  list you want.  \nEnter your list items one by one, beginning each it em with <LI>.  \n \nfollowed by text describing the element being \n, you would type \n, followed by the text of the definition. For \nexample, to create a definition for the term in the  previous step, you would type \nAs with ordered and unordered lists, there are no c losing tags for list items. \nTherefore, it is not necessary to type </DT> or </D D> at the end of your terms and \nIn the beginning of this unit, we learned that list s are extremely flexible and powerful tools in \nHTML. Sometimes you will want to create lists withi n lists, especially when you need to \nons. Creating lists within \nlists is easy in HTML. It helps to keep your lists and list items indented in Notepad. Even \nthough Web browsers will ignore the extra spaces, k eeping everything organized this way \nu can nest lists as many levels deep as \nyou like. However, it is good practice to limit you r nesting to three levels or less in order to \nmake sure that the lists stay within the visible ar ea of the reader's Web browser.  \n. In this example, we're assuming that the first li st is an \n"" metadata={'source': 'wbpdf.pdf', 'page': 87}
"
"page_content=""  \n2.  When you reach a step that requires a nested list, begin \nbrowser will automatically format this new list to fall underneath the current item in \nthe first list. For example, to create a nested lis t under Step 2 in your original list, just \ntype <UL> .  \n3.  Start entering items in your new list. \ntyping </UL> . You must close the new list before continuing to enter items in the \noriginal list.  \nFigure 4:  An Example of Lists \nEnter the remaining items in the original list. The n press Enter and type \nyou're finished.  \n \n  \n \n \n89  \nWhen you reach a step that requires a nested list, begin another list. The Web \nbrowser will automatically format this new list to fall underneath the current item in \nthe first list. For example, to create a nested lis t under Step 2 in your original list, just \n \nStart entering items in your new list. When you're finished, close the new list by \n. You must close the new list before continuing to enter items in the \n \nAn Example of Lists within Lists in HTML \nEnter the remaining items in the original list. The n press Enter and type \nanother list. The Web \nbrowser will automatically format this new list to fall underneath the current item in \nthe first list. For example, to create a nested lis t under Step 2 in your original list, just \nWhen you're finished, close the new list by \n. You must close the new list before continuing to enter items in the \nEnter the remaining items in the original list. The n press Enter and type </OL>  when "" metadata={'source': 'wbpdf.pdf', 'page': 88}
"
"page_content='90 \n 4.0   CONCLUSION:  \nHTML has generally three types of lists namely Unor dered lists, Ordered list and \nDefinition list, these are sometimes called numbere d lists. They are ideal vehicles \nfor delivering all kinds of information online. \n \n5.0       SUMMARY: \n In this unit, you have learnt the following: \n \n• Definitions of  Unordered lists, Ordered list and D efinition list \n• Markup tags for Unordered lists, Ordered list and D efinition list \n• How to create Unordered lists, Ordered list and Def inition list \n• How to create Lists within Lists \n      \n6.0      TUTOR MARKED ASSIGNMENT \n• Define Definition list in HTML \n• State the steps in creating an Ordered list \n• State the steps in creating Lists within Lists \n \n7.0       FURTHER READING AND OTHER RESOURCES \n• Byers, T. J. (April 1987). ""Built by association"". PC World  5: 244–251. \n• Cicconi, Sergio (1999). ""Hypertextuality"". Mediapolis. Ed. Sam Inkinen. Berlino & \nNew York: De Gruyter. : 21–43. \nhttp://www.cisenet.com/cisenet/writing/essays/hyper textuality.htm. \n• Conklin, J. (1987). ""Hypertext: An Introduction and  Survey"". Computer  20  (9): \n17–41. doi:10.1109/MC.1987.1663693. \n• Heim, Michael (1987). Electric Language: A Philosophical Study of Word \nProcessing . New Haven: Yale University Press. ISBN 0-300-0774 6-7. \n• Nelson, Theodor H. (September 1970). ""No More Teach ers’ Dirty Looks"". \nComputer Decisions . http://www.newmediareader.com/excerpts.html. \n• Nelson, Theodor H. (1973). ""A Conceptual framework for man-machine \neverything"". AFIPS Conference Proceedings VOL. 42 . pp. M22–M23. \n• Nelson, Theodor H. (1992). Literary Machines 93.1 . Sausalito CA: Mindful Press. \nISBN 0-89347-062-7. \n• van Dam, Andries (July 1988). ""Hypertext: \'87 keyno te address"". \nCommunications of the ACM  31 : 887–895. doi:10.1145/48511.48519. \nhttp://www.cs.brown.edu/memex/HT_87_Keynote_Address .html. \n• Yankelovich, Nicole; Landow, George P., and Cody, D avid (1987). ""Creating \nhypermedia materials for English literature student s"". SIGCUE Outlook  20  (3) \n \nUNIT TWO – GETTING FEEDBACK WITH FORMS \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1 HTML form ' metadata={'source': 'wbpdf.pdf', 'page': 89}
"
"page_content=""91 \n 3.2 How to Create a Simple Form  \n3.3  How to Use Input Fields in Forms \n4. 0  Conclusion \n5.0   Summary       \n6. 0  Tutor Marked Assignment        \n7.0      Further Reading and Other Resources \n \n1.0   INTRODUCTION \n \nUntil now, HTML has been a one-way street. That is,  we've only covered the tools \nto create and publish information for end users to read. But what about feedback \nand interaction?  The World Wide Web isn't just abo ut publishing. It's designed \nfor communication, which is a street that travels i n more than one direction. The \nbiggest tool for allowing your readers to communica te with you via the Web is the \nHTML  form . Forms are special collections of markup tags that  work with Web \nservers to produce a means of obtaining whatever in formation you need from \nvisitors to your Web site. In this unit, we will di scover how to create a basic form \nin HTML, as well as how to use all the available ty pes of input fields at your \ndisposal. Finally, we will discuss some basic princ iples behind CGI, the Common \nGateway Interface, which is the system behind the s cenes that make forms work.  \n \n \n2.0   OBJECTIVES  \nIn this unit, you should be able to: \n• Explain HTML form \n• List types of input field in HTML form \n• Create a simple  HTML form \n \n3.0  MAIN CONTENT \n \n3.1 HTML form \nA webform on a web page allows a user to enter data  that is sent to a server for processing. \nWebforms resemble paper or database forms because i nternet users fill out the forms using \ncheckboxes, radio buttons, or text fields. For exam ple, webforms can be used to enter \nshipping or credit card data to order a product or can be used to retrieve data (e.g., searching \non a search engine). \nIn addition to functioning as input templates for n ew information, webforms can also be used \nto query and display existing data in a similar man ner to mail merge forms, with the same \nadvantages. The decoupling of message structure and  underlying data allow both to vary \nindependently. The use of webforms for this purpose  avoids the problems associated with \nexplicitly creating separate web pages for each rec ord in a database. "" metadata={'source': 'wbpdf.pdf', 'page': 90}
"
"page_content=""92 \n Webforms are defined in formal programming language s such as Perl, PHP, Java, Javascript \nor .NET (including ASP.NET). The implementations of  these languages often automatically \ninvoke user interface idioms, such as grids and the mes, minimizing programming time, costs \nand risks. \n A form in HTML is by far the most common way to use  a form online. \nThe following elements can make up the user-inputti ng portion of a form: \n• input field \no text – a simple text box that allows input of a single  line of text (an alternative, \npassword , is used for security purposes, in which the chara cters typed in are \ninvisible or replaced by symbols such as *) \no checkbox – a check box \no radio – a radio button \no file – a file select control for uploading a file \no reset – a reset button that, when activated, tells the browser to restore the \nvalues to their initial values. \no submit – a button that tells the browser to take ac tion on the form (typically to \nsend it to a server) \n• textarea – much like the text input field except a textarea allows for multiple rows of \ndata to be shown and entered \n• select – a drop-down list that displays a list of i tems a user can select from \nThese basic elements provide most possible graphica l user interface (GUI) elements, but not \nall. For example, there are no equivalents to a com bo box, balloon help, tree view, or grid \nview. A grid view, however, can be mimicked by usin g a standard HTML table with each cell \ncontaining a text input element. A tree view could also be mimicked through nested tables or, \nmore semantically appropriately, nested lists. Many  of these are available through JavaScript \nlibraries \n3.2  How to Create a Simple Form  \nFill-out forms in HTML are easy, quick, and painles s. In fact, you can create a simple fill-out \nform in just a few simple steps. Long forms usually  work best when placed in their own \nHTML documents. If your form requires a lot of inpu t, create a new HTML document just for \nthe form and then create a hyperlink to it from you r main page. This will eliminate clutter and \nconfusion. You're not limited to just input fields in your form. You can use all the normal \nHTML paragraph and character formatting codes. It i s often a good idea to place brief \nparagraphs in front of groups of input fields to he lp explain what needs to be entered in the \nform.  "" metadata={'source': 'wbpdf.pdf', 'page': 91}
"
"page_content='93 \n   \nFigure 1:   An Example of Simple Application form in HTML \n1.  Type <FORM>  in your HTML document as in figure 2  \n \nFigure 2:  A Form Tag in an HTML Environment \n1.  Each <FORM> tag has two important attributes that n eed to be set: Method and \nAction. The Method  attribute indicates how the information inside the  form will be \ntransferred to the Web server. There are two choice s for Method: GET and POST. \nThe critical difference between the two is that the  POST method tells the server to \nprocess the form line by line, while the GET method  tells the server to process the \n' metadata={'source': 'wbpdf.pdf', 'page': 92}
"
"page_content=' entire form as one long concatenated string of valu es. You\'ll almost always want to \nuse the POST method with your fo \n2.  The Action  attribute tells the server what to do with the data  contained in the form. \nThis attribute usually contains the URL of a specia l program designed to process the \ndata. You will learn a little more about how this w orks at the end of the uni \n3.  Enter your form labels using normal HTML markup cod es. For example, to create a \nlabel to prompt the user to enter their last name a t the top of the form, type \nName: .  \n4.  To insert a data field to allow the user to enter i nformation into the fo \n<INPUT> . This tells the Web browser to place a data field in the document and to \naccept user input. There are several types of input  fields available. One of the \nsimplest types is the single \n5.  To specify a single- line text field, \n6.  Each input field needs to be assigned a name, so th at it can be distinguished from \nother input fields. You can name the input field an ything you like, but the name \nshould be kept short and should not contain any \nexample, to name the above field \n<INPUT> tag.  \n7.  You can specify the maximum length of a text field with the size attribute by typing \nSIZE= , followed by the length in quotes. For e \nlastname field to 20 characters, type \n94 entire form as one long concatenated string of valu es. You\'ll almost always want to \nuse the POST method with your fo rms.  \n \nattribute tells the server what to do with the data  contained in the form. \nThis attribute usually contains the URL of a specia l program designed to process the \ndata. You will learn a little more about how this w orks at the end of the uni \n \nEnter your form labels using normal HTML markup cod es. For example, to create a \nlabel to prompt the user to enter their last name a t the top of the form, type \n \nTo insert a data field to allow the user to enter i nformation into the fo \n. This tells the Web browser to place a data field in the document and to \naccept user input. There are several types of input  fields available. One of the \nsingle -line text field .  \n \nline text field,  enter TYPE=TEXT  inside the <INPUT> tag. \n \nEach input field needs to be assigned a name, so th at it can be distinguished from \nother input fields. You can name the input field an ything you like, but the name \nshould be kept short and should not contain any spaces or special characters. For \nexample, to name the above field lastname , type NAME=""lastname"" \n \nYou can specify the maximum length of a text field with the size attribute by typing \n, followed by the length in quotes. For e xample, to limit the length of the \nlastname field to 20 characters, type SIZE=""20""  inside the <INPUT> tag. entire form as one long concatenated string of valu es. You\'ll almost always want to \nattribute tells the server what to do with the data  contained in the form. \nThis attribute usually contains the URL of a specia l program designed to process the \ndata. You will learn a little more about how this w orks at the end of the uni t.  \nEnter your form labels using normal HTML markup cod es. For example, to create a \nlabel to prompt the user to enter their last name a t the top of the form, type <P>Last \nTo insert a data field to allow the user to enter i nformation into the fo rm, type \n. This tells the Web browser to place a data field in the document and to \naccept user input. There are several types of input  fields available. One of the \ninside the <INPUT> tag.  \nEach input field needs to be assigned a name, so th at it can be distinguished from \nother input fields. You can name the input field an ything you like, but the name \nspaces or special characters. For \nNAME=""lastname""  inside the \nYou can specify the maximum length of a text field with the size attribute by typing \nxample, to limit the length of the \ninside the <INPUT> tag.  ' metadata={'source': 'wbpdf.pdf', 'page': 93}
"
"page_content=' 8.  The last two input items that every form should hav e are the Submit and Reset \nbuttons. The Submit  button \nsends all of the information to the server. To incl ude a Submit button in your form, \ntype <INPUT TYPE=SUBMIT> \nrequired element -without it, the form cannot be processed. \n \nFigure 3 :  The Submit \n9.  The Reset  button allows the user to clear all of the fields in the f orm at once and \nreset them to their initial values so that new info rmation can be \nReset button is not required, it is strongly recomm ended. To include it in your form, \ntype <INPUT TYPE=RESET> \n \nFigure 4 :  The Reset Button \n10.  Type </FORM>  on a new line to close the form. \n \n \n3.3  How to Use Input Fields in Forms \nIn many cases, simple text fields are not enough wh en it comes to specifying the type of \ninformation you want to receive from your forms. Fo rtunately, HTML forms are very \nflexible, and include many different types of data fields. \n95  \nThe last two input items that every form should hav e are the Submit and Reset \nbutton is pressed by the user when the form is c \nsends all of the information to the server. To incl ude a Submit button in your form, \n<INPUT TYPE=SUBMIT>  near the bottom of the form. The Submit button is a  \nwithout it, the form cannot be processed.  \n \nSubmit  button \nallows the user to clear all of the fields in the f orm at once and \nreset them to their initial values so that new info rmation can be  added. Although the \nReset button is not required, it is strongly recomm ended. To include it in your form, \n<INPUT TYPE=RESET> .  \nThe Reset Button  \non a new line to close the form.  \nHow to Use Input Fields in Forms   \nIn many cases, simple text fields are not enough wh en it comes to specifying the type of \ninformation you want to receive from your forms. Fo rtunately, HTML forms are very \nflexible, and include many different types of data fields.  The last two input items that every form should hav e are the Submit and Reset \nis pressed by the user when the form is c ompleted, and \nsends all of the information to the server. To incl ude a Submit button in your form, \nnear the bottom of the form. The Submit button is a  \nallows the user to clear all of the fields in the f orm at once and \nadded. Although the \nReset button is not required, it is strongly recomm ended. To include it in your form, \nIn many cases, simple text fields are not enough wh en it comes to specifying the type of \ninformation you want to receive from your forms. Fo rtunately, HTML forms are very ' metadata={'source': 'wbpdf.pdf', 'page': 94}
"
"page_content=' Figure  5:  An Example of Input Field Types \n1.  You can insert a password \nbut hides the input by displaying asterisks (* \nentered. To insert a password field into your form,  type \nTYPE=PASSWORD> . You can specify the maximum length of the passwor d using the \nSIZE attribute.  \n2.  Checkbox  fields  allow the user to select or \nthe field to be selected by setting the VALUE attri bute to ""checked"". The label for the \ncheckbox is typed in immediately after the <INPUT> tag. For example, you might \ninclude a checkbox field on your form to allow \nlike to receive a newsletter. To insert this field into your form, type \nNAME=""getnews"" TYPE=checkbox VALUE= ""checked"">Check  here to receive our \nnewsletter .  \n3.  Radio  button  fields  allow the user to make a selection from a group of choices. Only \none item in a radio button group can be selected. \n \n4.  To insert a radio group into your form, type \nTYPE=radio VALUE=""value1""> \n96  \nAn Example of Input Field Types  \npassword  field  into your form. This acts like a single \nbut hides the input by displaying asterisks (* *) in place of the actual characters \nentered. To insert a password field into your form,  type <INPUT NAME=""password"" \n. You can specify the maximum length of the passwor d using the \n \nallow the user to select or  deselect an item. You can also initialize \nthe field to be selected by setting the VALUE attri bute to ""checked"". The label for the \ncheckbox is typed in immediately after the <INPUT> tag. For example, you might \ninclude a checkbox field on your form to allow  users to specify whether or not they\'d \nlike to receive a newsletter. To insert this field into your form, type \nNAME=""getnews"" TYPE=checkbox VALUE= ""checked"">Check  here to receive our \n \nallow the user to make a selection from a group of choices. Only \none item in a radio button group can be selected.  \nTo insert a radio group into your form, type <INPUT NAME= ""groupname"" \nTYPE=radio VALUE=""value1""> . Each item in the group is entered with \ninto your form. This acts like a single -line text field, \n*) in place of the actual characters \n<INPUT NAME=""password"" \n. You can specify the maximum length of the passwor d using the \ndeselect an item. You can also initialize \nthe field to be selected by setting the VALUE attri bute to ""checked"". The label for the \ncheckbox is typed in immediately after the <INPUT> tag. For example, you might \nusers to specify whether or not they\'d \nlike to receive a newsletter. To insert this field into your form, type <INPUT \nNAME=""getnews"" TYPE=checkbox VALUE= ""checked"">Check  here to receive our \nallow the user to make a selection from a group of choices. Only \n<INPUT NAME= ""groupname"" \n. Each item in the group is entered with separate ' metadata={'source': 'wbpdf.pdf', 'page': 95}
"
"page_content=' <INPUT> tags and unique VALUE attributes, but all o f the items in the same radio \nbutton group should have the same NAME attribute. \n5.  You can add file attachments to the form by using t he \nattach a file to the form b \ndialog. To insert a file attachment field, type \nTYPE=file> .  \n6.  You can also insert a free \nthan just a single line of text. Instead of using the <INPUT> tag, use the <TEXTAREA> \nand </TEXTAREA> tag pair. \n \n7.  The <TEXTAREA> tag accepts several rows of input, u p to the maximum you specify \nusing the ROWS attribute. You can also specify the number of columns (the line \nwidth) in the TEXTAREA field with the COLS attribute. For example, to create a field \nto allow a user to enter comments, you would type \nROWS=6 COLS=65> . This would leave room for six lines of up to 65 c haracters each. \n8.  Sometimes you\'ll want to include a selection menu on your form. This  allows you to \npresent the user with a large number of choices wit hout using up too much space on \nyour form. The menu can allow either a single or mu ltiple \n \n9.  To insert a selection menu, use the <SELECT> and </ SELECT> tag pair. As with the \n<INPUT> tag, you need to assign a NAME attribute fo r your selection menu. For \nexample, to create a selection menu that allows the  user to choose a color, type \n<SELECT NAME=""co lor""> \nthe attribute MULTIPLE inside the <SELECT> tag. \n97 <INPUT> tags and unique VALUE attributes, but all o f the items in the same radio \nbutton group should have the same NAME attribute.  \n \nYou can add file attachments to the form by using t he file  type . This allows users to \nattach a file to the form b y either typing the file name or selecting it from a browse \ndialog. To insert a file attachment field, type <INPUT NAME=""attachment"" \n \nfree -form field  for text, which allows the user to enter more \nof text. Instead of using the <INPUT> tag, use the <TEXTAREA> \nand </TEXTAREA> tag pair.  \nThe <TEXTAREA> tag accepts several rows of input, u p to the maximum you specify \nusing the ROWS attribute. You can also specify the number of columns (the line \nin the TEXTAREA field with the COLS attribute. For example, to create a field \nto allow a user to enter comments, you would type <TEXTAREA NAME= ""comments"" \n. This would leave room for six lines of up to 65 c haracters each. \n \nwant to include a selection menu on your form. This  allows you to \npresent the user with a large number of choices wit hout using up too much space on \nyour form. The menu can allow either a single or mu ltiple -choice selection. \nTo insert a selection menu, use the <SELECT> and </ SELECT> tag pair. As with the \n<INPUT> tag, you need to assign a NAME attribute fo r your selection menu. For \nexample, to create a selection menu that allows the  user to choose a color, type \nlor""> . If you want to allow multiple selections to be ma de, insert \nthe attribute MULTIPLE inside the <SELECT> tag.  \n <INPUT> tags and unique VALUE attributes, but all o f the items in the same radio \n. This allows users to \ny either typing the file name or selecting it from a browse \n<INPUT NAME=""attachment"" \nfor text, which allows the user to enter more \nof text. Instead of using the <INPUT> tag, use the <TEXTAREA> \nThe <TEXTAREA> tag accepts several rows of input, u p to the maximum you specify \nusing the ROWS attribute. You can also specify the number of columns (the line \nin the TEXTAREA field with the COLS attribute. For example, to create a field \n<TEXTAREA NAME= ""comments"" \n. This would leave room for six lines of up to 65 c haracters each.  \nwant to include a selection menu on your form. This  allows you to \npresent the user with a large number of choices wit hout using up too much space on \nchoice selection.  \nTo insert a selection menu, use the <SELECT> and </ SELECT> tag pair. As with the \n<INPUT> tag, you need to assign a NAME attribute fo r your selection menu. For \nexample, to create a selection menu that allows the  user to choose a color, type \n. If you want to allow multiple selections to be ma de, insert ' metadata={'source': 'wbpdf.pdf', 'page': 96}
"
"page_content="" 10.  Each item in a selection menu is typed in using the  <OPTION> tag (much like the \nunordered list). Enter each menu choice on a separa te line \n \nFigure 6:  An Example of an Option Tag \n11.  When you've finished typing in all of the option it ems, type \n \n3.3   How CGI Makes Your Forms Work \nOf course, everything you learned about forms would  not amount to much if there were not a \nway to process the informati on they contained. There is a way, and it's called \nshort for common  gateway  interface \nCGI is a universal way to execute programs on the W eb. These programs are known as \nscripts , and are designed to process data submitted via fo rms from Web browsers of all types. \nCGI scripts can be written and compiled using a var iety of different programming languages, \nsuch as Perl or Visual Basic. The language used dep ends on the type of server \nscript needs to be run on.  \nIn this unit, we will take a brief overview of how CGI works behind the scenes to handle data \nfrom your forms.  \n1.  The user supplies data by filling out the form, and  then presses the Submit button. \n2.  The browser sends the data fields from the form to a CGI script. The appropriate \nscript is specified with the ACTION attribute in th e <FORM> tag. \n<FORM METHOD = POST ACTION = “ \n98 Each item in a selection menu is typed in using the  <OPTION> tag (much like the \nunordered list). Enter each menu choice on a separa te line .  \n \nAn Example of an Option Tag  \nWhen you've finished typing in all of the option it ems, type </SELECT> \nHow CGI Makes Your Forms Work   \nOf course, everything you learned about forms would  not amount to much if there were not a \non they contained. There is a way, and it's called \ninterface .  \nCGI is a universal way to execute programs on the W eb. These programs are known as \n, and are designed to process data submitted via fo rms from Web browsers of all types. \nCGI scripts can be written and compiled using a var iety of different programming languages, \nsuch as Perl or Visual Basic. The language used dep ends on the type of server \nIn this unit, we will take a brief overview of how CGI works behind the scenes to handle data \nThe user supplies data by filling out the form, and  then presses the Submit button. \nthe data fields from the form to a CGI script. The appropriate \nscript is specified with the ACTION attribute in th e <FORM> tag.  \n<FORM METHOD = POST ACTION = “ --/cgi-bin/process-data” \nEach item in a selection menu is typed in using the  <OPTION> tag (much like the \n</SELECT> .  \nOf course, everything you learned about forms would  not amount to much if there were not a \non they contained. There is a way, and it's called CGI , which is \nCGI is a universal way to execute programs on the W eb. These programs are known as CGI  \n, and are designed to process data submitted via fo rms from Web browsers of all types. \nCGI scripts can be written and compiled using a var iety of different programming languages, \nsuch as Perl or Visual Basic. The language used dep ends on the type of server  that the CGI \nIn this unit, we will take a brief overview of how CGI works behind the scenes to handle data \nThe user supplies data by filling out the form, and  then presses the Submit button.  \nthe data fields from the form to a CGI script. The appropriate "" metadata={'source': 'wbpdf.pdf', 'page': 97}
"
"page_content='99 \n 3.  The CGI script processes the data supplied by the b rowser.  \n4.  At this CGI point, the CGI script may update a data base on the server, instructs the \nserver to perform additional functions, or even exe cute additional CGI scripts.  \n5.  The script finishes and returns information to the server, usually in the form of a new \nHTML document that is created by the script.  \n6.  The server sends the new information along to the W eb browser, which displays it.  \n         \n4.0   CONCLUSION: \nForms are a vital tool for the webmaster to receive  information from the web \nsurfer, such as: their name, email address, credit card, etc .Every web form must \nhave Submit and Reset buttons in addition to other input fields.  \n \n5.0       SUMMARY \n In this unit, you have learnt the following: \n• Definition of Web form \n• Types of Input fields in Web form \n• How to create a simple web form \n      \n6.0      TUTOR MARKED ASSIGNMENT \n• Describe a web form \n• List the last input field of a web form \n• Create a simple web form \n        \n7.0       FURTHER READING AND OTHER RESOURCES \n• Crane, Gregory (1988). ""Extending the boundaries of  instruction and research"". \nT.H.E. Journal (Technological Horizons in Education )  (Macintosh Special Issue): \n51–54. \n• Engelbart, Douglas C. (1962). Augmenting Human Intellect: A Conceptual \nFramework, AFOSR-3233 Summary Report, SRI Project N o. 3579 . \nhttp://www.dougengelbart.org/pubs/augment-3906.html . \n• Ensslin, Astrid (2007). Canonizing Hypertext: Explorations and Construction s . \nLondon: Continuum. ISBN 0-8264-95583. \n• Heim, Michael (1987). Electric Language: A Philosophical Study of Word \nProcessing . New Haven: Yale University Press. ISBN 0-300-0774 6-7 \n \n \n \n \n \n \n \n \n \n ' metadata={'source': 'wbpdf.pdf', 'page': 98}
"
"page_content=""100 \n UNIT THREE – USING TABLES \n1.0  Introduction \n2.0  Objective \n3.0      Main Content  \n3.1. How to create a simple Table \n3. 2 How to Format Table \n4.0  Conclusion \n5.0    Summary       \n6.0   Tutor Marked Assignment  \n7.0   Further Reading and Other Resources \n \n1.0.INTRODUCTION: \nOne of the most significant additions to HTML is su pport for tables. Tables give HTML \nauthors much greater control over the display and l ayout of their pages. Typically, you would \nuse tables to display any type of data that looks b est in rows and columns. A good rule of \nthumb is if it looks good as a spreadsheet, then it  belongs in a table. \nTables are not just for numerical data. They can be  used to creatively solve a number of \nchallenges with presenting information in HTML. Tab les can be used to enhance a number of \nexisting HTML elements, such as lists and forms. Yo u can even use tables to gain precision \ncontrol over the layout of your HTML document. \nOf course, there's always a catch. Tables are notor iously difficult and tedious to create in \nHTML. And because the specification for HTML is sti ll not final, some of the formatting \ndetails for tables are subject to change. \n2.0 OBJECTIVES \nIn this unit, you should be able to: \n• Create a simple Table \n• Create a Table with Border \n• Format Tables \n3.0 MAIN CONTENT \n3.1. How to Create a Simple Table "" metadata={'source': 'wbpdf.pdf', 'page': 99}
"
"page_content=""101 \n Creating a simple table in HTML is fairly straightf orward. All you need to do is supply the \ndata. The client-side Web browser takes care of all  the dirty work by determining how to \ndisplay it.  \nThe key thing to remember about tables in HTML is t hat they are organized in rows, which \ngo horizontally from left to right. Once you begin to think of the data you want to place in \nyour table in terms of rows, you will be all set to  perform some HTML wizardry. \nIn this unit, you will get started by stepping thro ugh the process of creating your first table in \nHTML. \n \nFigure 1:  An Example of a Table in HTML \n1.  Type <TABLE BORDER>  in your HTML document to create a table with a thi n \nborder around all of the table cells. \n \nFigure 2:  A Table Border Tag  \n2.  You can type in a caption for your table, which mos t browsers will display at the top. \nIt's sometimes easier to think of the caption as th e title of your table. Type \n"" metadata={'source': 'wbpdf.pdf', 'page': 100}
"
"page_content="" <CAPTION> , followed by the actual text of your table caption . Then type \n/CAPTION>  to close the tag. \n3.  Tables are built row by row using the <TR> \ntable row, type <TR> .\n4.  Now it's time to enter in the data for the individu al cells of the table. Because this is \nthe first row of the table, it's likely that you'll  want this row to contain headings for \neach of the columns of data. Table headings are created using t he <TH> and </TH> \ntag pair. To create a heading for a column of last names, you would type \nName</TH> . \n5.  You can type all of your column headings one after another, each contained in its own \n<TH> and </TH> tag pair. \n6.  After you've completed your first row, type </TR> t o finish it. Since you'll be adding \nanother row immediately after it, you can type <TR>  on the next line to start the new \nrow. \n7.  Now you can start adding the actual table data cell  by c \ntag pair. To enter the data in the first cell of th e second row, type \nthe actual data and the closing \n8.  Type in your remaining data, using the <TD> and </T D> tags to separate each cell \nand the <TR> a nd </TR> tags to separate each row. When you're fin ished, type \n</TABLE> to signal the end of the table. \n \n102 , followed by the actual text of your table caption . Then type \nto close the tag.  \n \nTables are built row by row using the <TR>  and </TR> tag pair. To start your first \n. \n \nNow it's time to enter in the data for the individu al cells of the table. Because this is \nthe first row of the table, it's likely that you'll  want this row to contain headings for \ncolumns of data. Table headings are created using t he <TH> and </TH> \ntag pair. To create a heading for a column of last names, you would type \n \nYou can type all of your column headings one after another, each contained in its own \nand </TH> tag pair.  \nAfter you've completed your first row, type </TR> t o finish it. Since you'll be adding \nanother row immediately after it, you can type <TR>  on the next line to start the new \n \nNow you can start adding the actual table data cell  by c ell using the <TD> and </TD> \ntag pair. To enter the data in the first cell of th e second row, type  <TD> \nthe actual data and the closing </TD>  tag. \n \nType in your remaining data, using the <TD> and </T D> tags to separate each cell \nnd </TR> tags to separate each row. When you're fin ished, type \nto signal the end of the table.  , followed by the actual text of your table caption . Then type < \nand </TR> tag pair. To start your first \nNow it's time to enter in the data for the individu al cells of the table. Because this is \nthe first row of the table, it's likely that you'll  want this row to contain headings for \ncolumns of data. Table headings are created using t he <TH> and </TH> \ntag pair. To create a heading for a column of last names, you would type <TH>Last \nYou can type all of your column headings one after another, each contained in its own \nAfter you've completed your first row, type </TR> t o finish it. Since you'll be adding \nanother row immediately after it, you can type <TR>  on the next line to start the new \nell using the <TD> and </TD> \n<TD>  followed by \nType in your remaining data, using the <TD> and </T D> tags to separate each cell \nnd </TR> tags to separate each row. When you're fin ished, type "" metadata={'source': 'wbpdf.pdf', 'page': 101}
"
"page_content=""  \n3.2. How to Format Tables \nBecause HTML is a markup language and not a layout language, the actual display of HTML \ntables is left up to the Web browser. The height and width of the individual cel ls are \ncalculated by the browser based on their contents. In general, browsers do a good job of \ndisplaying table contents all by themselves. Someti mes, however, you'll want to exercise a \nlittle more contro l over how your tables are displayed. HTML 3's tabl e formatting codes let \nyou do just that. \n1.  To create a table with no border at all, simply typ e \nyour table a 3- D beveled look by adjusting the size of the outside  border. This feat \nis only supported by Netscape browsers. To adjust t he size of the outside table border, \nuse the BORDER attribute. For example, to create a table with a border that is 8 \npixels wide, type <TABLE BORDER=8> \nFigure 3: Table Border Cell \n2.  Netscape also adds extensions to give you even grea ter control over the borders and \nspacing of the cells inside your table. To change t he size of the internal borders, add \nthe CELLSPACING attribute to your <TABLE> tag. For example, to create a table \nwith a wide internal border, type \n103 Because HTML is a markup language and not a layout language, the actual display of HTML \nbrowser. The height and width of the individual cel ls are \ncalculated by the browser based on their contents. In general, browsers do a good job of \ndisplaying table contents all by themselves. Someti mes, however, you'll want to exercise a \nl over how your tables are displayed. HTML 3's tabl e formatting codes let \nTo create a table with no border at all, simply typ e <TABLE> . You can also give \nD beveled look by adjusting the size of the outside  border. This feat \nis only supported by Netscape browsers. To adjust t he size of the outside table border, \nuse the BORDER attribute. For example, to create a table with a border that is 8 \n<TABLE BORDER=8> . \n \nTable Border Cell  Spacing = 5j  \nNetscape also adds extensions to give you even grea ter control over the borders and \nspacing of the cells inside your table. To change t he size of the internal borders, add \nthe CELLSPACING attribute to your <TABLE> tag. For example, to create a table \nwide internal border, type <TABLE BORDER CELLSPACING=5> \nBecause HTML is a markup language and not a layout language, the actual display of HTML \nbrowser. The height and width of the individual cel ls are \ncalculated by the browser based on their contents. In general, browsers do a good job of \ndisplaying table contents all by themselves. Someti mes, however, you'll want to exercise a \nl over how your tables are displayed. HTML 3's tabl e formatting codes let \n. You can also give \nD beveled look by adjusting the size of the outside  border. This feat ure \nis only supported by Netscape browsers. To adjust t he size of the outside table border, \nuse the BORDER attribute. For example, to create a table with a border that is 8 \nNetscape also adds extensions to give you even grea ter control over the borders and \nspacing of the cells inside your table. To change t he size of the internal borders, add \nthe CELLSPACING attribute to your <TABLE> tag. For example, to create a table \n<TABLE BORDER CELLSPACING=5> . "" metadata={'source': 'wbpdf.pdf', 'page': 102}
"
"page_content=' Figure 4: Table Border Cell \n \n3.  You can also ""pad"" the individual cells of your tabl e to add space on all \nkeeps the border from running up against the actual  cell contents. It\'s very useful if \nyou plan on including images inside your table. To add space, use the \nCELLPADDING attribute inside your <TABLE> tag. To a dd 3 pixels of space on \neach side of every cell, type < \n4.  You can format text in each individual cell using a ll of the standard character \nmarkup codes, such as <B>, <I>, and <STRONG>. You c an also include line breaks \ninside cells using the <BR> tag. Each cell can be \nothers. \n5.  To control the alignment of text inside cells, use the ALIGN and VALIGN attributes \nwith the standard commands, such as LEFT, RIGHT, an d CENTER. You can set the \ncell alignment for an entire row by placing these a ttribu \neven align the contents of each cell individually i f you\'re so inclined. For example, to \ncenter text within an individual cell both vertical ly and horizontally, type \nALIGN=CENTER VALIGN=CENTER> \nany settings for the row. \n6.  Sometimes you\'ll want an individual cell to span ac ross multiple columns or rows. \nThis is easy to do using the ROWSPAN and COLSPAN at tributes inside the cell\'s \n<TD> tag. To force a cell to span vertically down a cros \nROWSPAN=3> . To force a cell to span horizontally from left to  right across several \ncolumns, use the COLSPAN attribute inside the <TD> tag. For example, to span a \ncell across two columns, type \n7.  You can gain even more pr \nusing the WIDTH attribute. The WIDTH attribute can be applied to both the entire \ntable as well as individual cells. You can specify an exact width for the table or set the \nwidth to be a percentage of \n104  \nTable Border Cell  Spacing = 3  \nou can also ""pad"" the individual cells of your tabl e to add space on all \nkeeps the border from running up against the actual  cell contents. It\'s very useful if \nyou plan on including images inside your table. To add space, use the \nCELLPADDING attribute inside your <TABLE> tag. To a dd 3 pixels of space on \nevery cell, type < TABLE CELLPADDING=3> . \nYou can format text in each individual cell using a ll of the standard character \nmarkup codes, such as <B>, <I>, and <STRONG>. You c an also include line breaks \ninside cells using the <BR> tag. Each cell can be formatted independently of the \nTo control the alignment of text inside cells, use the ALIGN and VALIGN attributes \nwith the standard commands, such as LEFT, RIGHT, an d CENTER. You can set the \ncell alignment for an entire row by placing these a ttribu tes in the <TR> tag. You can \neven align the contents of each cell individually i f you\'re so inclined. For example, to \ncenter text within an individual cell both vertical ly and horizontally, type \nALIGN=CENTER VALIGN=CENTER> . Individual cell alignments w \nany settings for the row.  \n \nSometimes you\'ll want an individual cell to span ac ross multiple columns or rows. \nThis is easy to do using the ROWSPAN and COLSPAN at tributes inside the cell\'s \n<TD> tag. To force a cell to span vertically down a cros s three rows, type \n. To force a cell to span horizontally from left to  right across several \ncolumns, use the COLSPAN attribute inside the <TD> tag. For example, to span a \ncell across two columns, type <TD COLSPAN=2> . \nYou can gain even more pr ecise control over the size and appearance of your table \nusing the WIDTH attribute. The WIDTH attribute can be applied to both the entire \ntable as well as individual cells. You can specify an exact width for the table or set the \nwidth to be a percentage of  the visible screen. \nou can also ""pad"" the individual cells of your tabl e to add space on all sides. This \nkeeps the border from running up against the actual  cell contents. It\'s very useful if \nyou plan on including images inside your table. To add space, use the \nCELLPADDING attribute inside your <TABLE> tag. To a dd 3 pixels of space on \nYou can format text in each individual cell using a ll of the standard character -level \nmarkup codes, such as <B>, <I>, and <STRONG>. You c an also include line breaks \nformatted independently of the \nTo control the alignment of text inside cells, use the ALIGN and VALIGN attributes \nwith the standard commands, such as LEFT, RIGHT, an d CENTER. You can set the \ntes in the <TR> tag. You can \neven align the contents of each cell individually i f you\'re so inclined. For example, to \ncenter text within an individual cell both vertical ly and horizontally, type <TD \n. Individual cell alignments w ill override \nSometimes you\'ll want an individual cell to span ac ross multiple columns or rows. \nThis is easy to do using the ROWSPAN and COLSPAN at tributes inside the cell\'s \ns three rows, type <TD \n. To force a cell to span horizontally from left to  right across several \ncolumns, use the COLSPAN attribute inside the <TD> tag. For example, to span a \necise control over the size and appearance of your table \nusing the WIDTH attribute. The WIDTH attribute can be applied to both the entire \ntable as well as individual cells. You can specify an exact width for the table or set the ' metadata={'source': 'wbpdf.pdf', 'page': 103}
"
"page_content=' Figure 5:  The WIDTH attribute \n8.  To specify an exact width for your table in pixels,  set the WIDTH attribute to an \nabsolute number. For example, to force a table to b e exactly 400 pixels wide, type \n<TABLE WIDTH=400> \n9.  You can also set the table width to be relative to the space between t \nmargins of the current window. This means the table  will resize along with the Web \nbrowser. To set the table width equal to two \nWIDTH=66%> . \n10.  You can apply width settings to columns by placing the WIDTH att \n<TH> or <TD> tag. The width can be indicated using absolute or relative numbers. \nWhen you use a percentage value in individual cells , the width is relative to the table, \nnot the full screen. For example, to set a column w idth to one \nthe table, type <TD WIDTH=50%> \nFigure  6:  TD WIDTH=50% \n11.  You can also control how the internal cell borders are displayed using the RULES \nattribute. The possi ble values for RULES are ALL, the default, which di splays all of \nthe internal borders; NONE, which disables internal  borders; COLS, which places \nborders only between columns; and ROWS, which place s borders only between rows. \n105 The WIDTH attribute  \nTo specify an exact width for your table in pixels,  set the WIDTH attribute to an \nabsolute number. For example, to force a table to b e exactly 400 pixels wide, type \n<TABLE WIDTH=400> . \n \nYou can also set the table width to be relative to the space between t \nmargins of the current window. This means the table  will resize along with the Web \nbrowser. To set the table width equal to two -thirds of the screen, type \nYou can apply width settings to columns by placing the WIDTH att \n<TH> or <TD> tag. The width can be indicated using absolute or relative numbers. \nWhen you use a percentage value in individual cells , the width is relative to the table, \nnot the full screen. For example, to set a column w idth to one -half th \n<TD WIDTH=50%> . \nTD WIDTH=50%  \nYou can also control how the internal cell borders are displayed using the RULES \nble values for RULES are ALL, the default, which di splays all of \nthe internal borders; NONE, which disables internal  borders; COLS, which places \nborders only between columns; and ROWS, which place s borders only between rows. \n \nTo specify an exact width for your table in pixels,  set the WIDTH attribute to an \nabsolute number. For example, to force a table to b e exactly 400 pixels wide, type \nYou can also set the table width to be relative to the space between t he left and right \nmargins of the current window. This means the table  will resize along with the Web \nthirds of the screen, type <TABLE \nYou can apply width settings to columns by placing the WIDTH att ribute inside a \n<TH> or <TD> tag. The width can be indicated using absolute or relative numbers. \nWhen you use a percentage value in individual cells , the width is relative to the table, \nhalf th e total width of \n \nYou can also control how the internal cell borders are displayed using the RULES \nble values for RULES are ALL, the default, which di splays all of \nthe internal borders; NONE, which disables internal  borders; COLS, which places \nborders only between columns; and ROWS, which place s borders only between rows. \n' metadata={'source': 'wbpdf.pdf', 'page': 104}
"
"page_content=' For example, to place internal \n<TABLE ROWS=COLS> \nnew to HTML3 and is not widely supported. \n4.0 CONCLUSION: \nThe HTML table allows you to arrange data \nform fields, other tables, etc. \nA simple HTML table consists of the table element a nd one or more \nelements. \nThe TR element defines a table row, the th \ndefines a table cell. The < TABLE \n5.0   SUMMARY: \nIn this unit, you have learnt: \n•  How to Create a Simple Table \n• Markup  Tags for Tables \n• How to Format Tables \n6.0 TUTO R MARKED ASSIGNMENT \n• Create a simple Table using HTML tags \n• List markup tags for formatting of tables \n    \n7.0   FURTHER READING AND OTHER RESOURCES \n• HTML –Definitive Guide \n• How To Use HTML 3 \n \n \n \n \n \n \n \n \n \n \n106 For example, to place internal cell borders between columns only, you would type \n<TABLE ROWS=COLS> . As with the FRAME attribute, the RULES attribute is \nnew to HTML3 and is not widely supported.  \n \nThe HTML table allows you to arrange data -- text, preformatted text, images, links, forms, \nform fields, other tables, etc. -- into rows and columns of cells \nA simple HTML table consists of the table element a nd one or more TR, TH \nelement defines a table row, the th  element defines a table header, and the td element \nTABLE > tag is supported in all major browsers. \nHow to Create a Simple Table  \nMarkup  Tags for Tables  \nHow to Format Tables  \nR MARKED ASSIGNMENT  \nCreate a simple Table using HTML tags  \nList markup tags for formatting of tables  \n    \nFURTHER READING AND OTHER RESOURCES  \nDefinitive Guide - Chuck Musciano &Bill Kennedy \nHow To Use HTML 3 – Scott Arpajian cell borders between columns only, you would type \n. As with the FRAME attribute, the RULES attribute is \nimages, links, forms, \nTR, TH , and TD \nelement defines a table header, and the td element \n> tag is supported in all major browsers.  ' metadata={'source': 'wbpdf.pdf', 'page': 105}
"
"page_content=""107 \n  \n \nUNIT FOUR  USING FRAMES \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n 3.1 How to Create Frame Documents \n 3.2 How to Use Targets in Frames \n 3.3 How to Create Nested Frames \n4.0  Conclusion \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n1.0  INTRODUCTION \nOne of the most significant developments that HTML has contributed is the introduction of \nframes. Using frames gives you the power to divide the reader's browser window into \nmultiple panes. You can display different HTML docu ments in each. More importantly, you \ncan control the display of one frame from another. \nThis allows you to create banners, menus, and butto n bars that don't scroll off the page. For \nexample, you could create a frame for your company logo at the top of the page and a frame \nfor a button bar for navigation at the bottom. A th ird frame in the middle of the page would \ndisplay the actual contents of the HTML documents. The top and bottom frames would never \ndisappear from view. \nThere are a lot of possibilities with frames, and i n this unit, you'll learn the basics of using \nframes with Netscape browsers. Understanding how to  use frames requires some new ways of \nthinking about HTML documents. If things start to g et a little confusing, be patient and take \ntime to reread each section. With a little practice , you'll be working wonders with HTML and \nframes. \n2.0  OBJECTIVES \nIn this unit, you should be able to: \n• Describe the steps involved in creating a frame doc ument  \n• Describe how to Use Targets in creating Frames \n• Explain Nested Frames \n "" metadata={'source': 'wbpdf.pdf', 'page': 106}
"
"page_content=' 3.0  MAIN CONTENT \n3.1  How to Create Frame Documents \nThe first thing to understand about frames is that they use an entirely new kind of HTML \ndocument, called a frame document. Frame documents \nthe frames. Frame documents don\'t contain any other  HTML content. \nOnce you\'ve built your frame document, you can fill  the frames with regular HTML \ndocuments. But before we get too far ahead of ourse lves, let\'s concentra \nsimple set of frames. \nIn this section, we\'ll create an empty frame docume nt. Actually, the frame document is not \nempty. It will only appear  empty when viewed with the browser, because we won\' t be putting \nany regular HTML documents ins \nframe layout works. \n \n1.  Open a new document in Notepad, and type in \n<HEAD>.  Press Enter again. \n2.  Type <TITLE>My First Frame Document</TITLE>, \nline, type </HEAD> and press Enter one more time. \n3.  So far, this looks just like a normal HTML document . Here\'s where things get \ndifferent, though. Instead of typing <BODY>, type \n<FRAMESET> tag instructs Netscape th \n \n4.  Place the cursor inside the <FRAMESET> tag and type\nthree horizontal frames of equal relative height. T he asterisk character instructs the \nbrowser to give the frame all the remaining space i n \nthree asterisks, Netscape will give each frame one \n5.  On the next line, type <FRAME NAME=frame1 SRC=""blank.html"">. \nthe name frame1  to the first frame in your document. The SRC attrib ute \nbrowser to display the HTML document named blank.ht ml in this frame. Normally, \n108 How to Create Frame Documents  \nThe first thing to understand about frames is that they use an entirely new kind of HTML \ndocument, called a frame document. Frame documents control the layout and appearance of \nthe frames. Frame documents don\'t contain any other  HTML content.  \nOnce you\'ve built your frame document, you can fill  the frames with regular HTML \ndocuments. But before we get too far ahead of ourse lves, let\'s concentra te on creating a very \nIn this section, we\'ll create an empty frame docume nt. Actually, the frame document is not \nempty when viewed with the browser, because we won\' t be putting \nany regular HTML documents ins ide. This section will give you a chance to underst and how \nOpen a new document in Notepad, and type in <HTML>. Press Enter, then type in \nPress Enter again.  \n<TITLE>My First Frame Document</TITLE>, then press Enter. On the next \nand press Enter one more time.  \n \nSo far, this looks just like a normal HTML document . Here\'s where things get \ndifferent, though. Instead of typing <BODY>, type <FRAMESET>. \n<FRAMESET> tag instructs Netscape th at this is a frame layout document. \nPlace the cursor inside the <FRAMESET> tag and type ROWS=""*,*,*"". \nthree horizontal frames of equal relative height. T he asterisk character instructs the \nbrowser to give the frame all the remaining space i n the window. Because there are \nthree asterisks, Netscape will give each frame one -third of the available space. \n \n<FRAME NAME=frame1 SRC=""blank.html"">. \nto the first frame in your document. The SRC attrib ute \nbrowser to display the HTML document named blank.ht ml in this frame. Normally, \nThe first thing to understand about frames is that they use an entirely new kind of HTML \ncontrol the layout and appearance of \nOnce you\'ve built your frame document, you can fill  the frames with regular HTML \nte on creating a very \nIn this section, we\'ll create an empty frame docume nt. Actually, the frame document is not \nempty when viewed with the browser, because we won\' t be putting \nide. This section will give you a chance to underst and how \nPress Enter, then type in \npress Enter. On the next \nSo far, this looks just like a normal HTML document . Here\'s where things get \n<FRAMESET>.  The \nat this is a frame layout document.  \nROWS=""*,*,*"".  This creates \nthree horizontal frames of equal relative height. T he asterisk character instructs the \nthe window. Because there are \nthird of the available space.  \n<FRAME NAME=frame1 SRC=""blank.html"">. This assigns \nto the first frame in your document. The SRC attrib ute  tells the \nbrowser to display the HTML document named blank.ht ml in this frame. Normally, ' metadata={'source': 'wbpdf.pdf', 'page': 107}
"
"page_content=' you would place a real HTML document in the SRC att ribute. For this example, we\'ll \njust use blank.html, a made \nyou\'re finished. \n6.  Type <FRAME NAME=frame2 SRC=""blank.html""> \nnext line, type <FRAME NAME=frame3 SRC=""blank.html""> \nagain. Now we\'ve created three empty named frames. \n7.  Type <FRAMESET> \n8.  Save your document in Notepad as myframe.html. \n9.  You have now created a very simple frame document t hat contains three empty \nframes. If this document were viewed in Netscape, i t would look exactly like the \ndocument shown in the monitor in the cen \nright now, but in the next section, you\'ll learn ho w to make your frames come alive. \n \n3.2  How to Use Targets in Frames \nNow that you\'ve created a frame document, you\'re re ady to start filling those frames with \nHTML content. In this unit you\'ll learn how to place HTML documents in frames.  More \nimportantly, you\'ll learn how to update frames with  new documents, including how t \nthe contents of one frame from another. \n109 you would place a real HTML document in the SRC att ribute. For this example, we\'ll \njust use blank.html, a made -up file name that doesn\'t really exist. Press Enter  whe \n \n<FRAME NAME=frame2 SRC=""blank.html""> and then press Enter. On the \n<FRAME NAME=frame3 SRC=""blank.html""> and press Enter \nagain. Now we\'ve created three empty named frames.  \n \n<FRAMESET> and press Enter. Then type < /HTML>.  \n \nSave your document in Notepad as myframe.html.  \nYou have now created a very simple frame document t hat contains three empty \nframes. If this document were viewed in Netscape, i t would look exactly like the \ndocument shown in the monitor in the cen ter of the page. It may not look like much \nright now, but in the next section, you\'ll learn ho w to make your frames come alive. \nHow to Use Targets in Frames  \nNow that you\'ve created a frame document, you\'re re ady to start filling those frames with \nyou\'ll learn how to place HTML documents in frames.  More \nimportantly, you\'ll learn how to update frames with  new documents, including how t \nthe contents of one frame from another.  you would place a real HTML document in the SRC att ribute. For this example, we\'ll \nup file name that doesn\'t really exist. Press Enter  whe n \nand then press Enter. On the \nand press Enter \nYou have now created a very simple frame document t hat contains three empty \nframes. If this document were viewed in Netscape, i t would look exactly like the \nter of the page. It may not look like much \nright now, but in the next section, you\'ll learn ho w to make your frames come alive.  \nNow that you\'ve created a frame document, you\'re re ady to start filling those frames with \nyou\'ll learn how to place HTML documents in frames.  More \nimportantly, you\'ll learn how to update frames with  new documents, including how t o update ' metadata={'source': 'wbpdf.pdf', 'page': 108}
"
"page_content=' Figure 1:  Frames in HTML Documents \n1.  Frames are updated using targets. \ncontain a frame name. Targets specify which frame t he hyperlink should update. \n2.  Before we go any further, we\'ll need to create a fe w HTML documents that contain \nhyperlinks using targets. Launch Notepad and open a  ne \n<HTML>  and press Enter. \n3.  Type <HEAD > and press Enter. Then type \npress Enter. Finally, type \n4.  Type <BODY>  and press Enter. Then type \nEnter. \n5.  Type <P>  to start your first paragraph. Then type \n6.  Here\'s where we\'ll start placing hyperlinks with ta rget attributes. These three \nhyperlinks will allow the user to display different  documents in the top frame. Type \n<A HREF=""a. html"" TARGET=""frame1"">A</A>. \n110 Frames in HTML Documents  \nFrames are updated using targets. Targets  are simply hyperlink tag extensions that \ncontain a frame name. Targets specify which frame t he hyperlink should update. \nBefore we go any further, we\'ll need to create a fe w HTML documents that contain \nhyperlinks using targets. Launch Notepad and open a  ne w document. Then type \nand press Enter.  \n> and press Enter. Then type <TITLE>Document A</TITLE \npress Enter. Finally, type </HEAD> and press Enter again. \n \nand press Enter. Then type <H1>Document A</H1> \n \nto start your first paragraph. Then type Top Frame:  and press Enter. \n \nHere\'s where we\'ll start placing hyperlinks with ta rget attributes. These three \nhyperlinks will allow the user to display different  documents in the top frame. Type \nhtml"" TARGET=""frame1"">A</A>.  This link will load a.html (the \n \nare simply hyperlink tag extensions that \ncontain a frame name. Targets specify which frame t he hyperlink should update.  \nBefore we go any further, we\'ll need to create a fe w HTML documents that contain \nw document. Then type \n<TITLE>Document A</TITLE > and \n<H1>Document A</H1>  and press \nand press Enter.  \nHere\'s where we\'ll start placing hyperlinks with ta rget attributes. These three \nhyperlinks will allow the user to display different  documents in the top frame. Type \nThis link will load a.html (the \n' metadata={'source': 'wbpdf.pdf', 'page': 109}
"
"page_content=' document you\'re creating right now) into the frame named \ndocument you created in the last section, frame1 wa s the top frame. \n7.  Press Enter, then type \nwill load a document named b.html into the top fram e. Press Enter again and then \ntype <A HREF=""c.html"" TARGET=""frame1"">C</A>. \nguessed by now, this hyperlink will load c.html int o the top frame. Press Enter \n8.  Type <BR>  to force a line break and press enter. Then type \nEnter again. \n \n9.  Type in all three hyperlinks again, only this time,  change the target to \nwill instruct the browser to load the documents int o the middl \n10.  When you\'re finished, type \ntype Bottom Frame:  and press Enter again. Type in the hyperlinks again , with the \ntarget set to frame3 . When you\'re finished, press Enter and type \nparagraph. Then press Enter again. \n11.  Type </BODY>  and then press Enter. Then type \n111 document you\'re creating right now) into the frame named frame1 . In the frame \ndocument you created in the last section, frame1 wa s the top frame. \n \nPress Enter, then type <A HREF=""b.html"" TARGET=""frame1"">B</A>. \nwill load a document named b.html into the top fram e. Press Enter again and then \n<A HREF=""c.html"" TARGET=""frame1"">C</A>. As you\'ve probably \nguessed by now, this hyperlink will load c.html int o the top frame. Press Enter \n \nto force a line break and press enter. Then type Middle Frame: \n \nType in all three hyperlinks again, only this time,  change the target to \nwill instruct the browser to load the documents int o the middl e frame. \n \nWhen you\'re finished, type <BR>  to force another line break and press Enter. Then \nand press Enter again. Type in the hyperlinks again , with the \n. When you\'re finished, press Enter and type </P> \nparagraph. Then press Enter again.  \n \nand then press Enter. Then type </HTML>.  \n. In the frame \ndocument you created in the last section, frame1 wa s the top frame.  \nTARGET=""frame1"">B</A>. This link \nwill load a document named b.html into the top fram e. Press Enter again and then \nAs you\'ve probably \nguessed by now, this hyperlink will load c.html int o the top frame. Press Enter  again. \nMiddle Frame:  and press \nType in all three hyperlinks again, only this time,  change the target to frame2 . This \ne frame.  \nto force another line break and press Enter. Then \nand press Enter again. Type in the hyperlinks again , with the \n</P>  to close the ' metadata={'source': 'wbpdf.pdf', 'page': 110}
"
"page_content='  \n12.  Save this document as a.html. Make sure that you sa ve it in the same folder as \nmyframe.html, which you created in the last section . \n13.  Repeat this proces s two more times, and save the files as b.html and c.html. To save a \nlot of typing, you can simply change the <TITLE> an d <H1> tags at the top of the \ndocument and save the existing file under a new nam e. Just choose Save As from the \nFile menu and type in t \nFigure 2 :  Save As in \nOpen myframe.html in Notepad. Place the cursor insi de the SRC attribute of the first \n<FRAME> tag, and change the URL from \nthe next two <FRAME> tags to b.html and c.html, res pectively. \n112 Save this document as a.html. Make sure that you sa ve it in the same folder as \nmyframe.html, which you created in the last section .  \ns two more times, and save the files as b.html and c.html. To save a \nlot of typing, you can simply change the <TITLE> an d <H1> tags at the top of the \ndocument and save the existing file under a new nam e. Just choose Save As from the \nFile menu and type in t he new file name. \n \nSave As in Frame Tag  \nOpen myframe.html in Notepad. Place the cursor insi de the SRC attribute of the first \n<FRAME> tag, and change the URL from blank.html to a.html. Change the URLs for \nthe next two <FRAME> tags to b.html and c.html, res pectively.  \n \nSave this document as a.html. Make sure that you sa ve it in the same folder as \ns two more times, and save the files as b.html and c.html. To save a \nlot of typing, you can simply change the <TITLE> an d <H1> tags at the top of the \ndocument and save the existing file under a new nam e. Just choose Save As from the \nOpen myframe.html in Notepad. Place the cursor insi de the SRC attribute of the first \nblank.html to a.html. Change the URLs for ' metadata={'source': 'wbpdf.pdf', 'page': 111}
"
"page_content=' Figure 3:  Save in Frame Tag \n14.  Choose Save from the File menu to save the \n15.  Launch Netscape and open myframe.html. Three frames  will appear. Each of your \nthree HTML documents, A, B, and C, will appear in a  different frame. \n16.  Now try clicking on the different hyperlinks and se e what happens. You can load A \nB, and C into any of the three frames. You can even  fill all three frames with the same \ndocument. \n3.3  How to Create Nested Frames \nYou have already learned how to create frame docume nts, fill them with HTML content, and \ntarget them with hyperlinks. However, there is still one cool frame trick that w e haven\'t \ncovered yet- nesting frames. It is possible to nest <FRAMESET> t ag pairs to create frames \nwithin frames. In this section, you\'ll learn how it \'s done. \n1.  Open a new document in Notepad, and type in \nFigure 4:  An Example of \n2.  Type <FRAMESET ROWS=""*,*""> \npress Enter. \n113 Save in Frame Tag  \nChoose Save from the File menu to save the  changes to myframe.html. \n \nLaunch Netscape and open myframe.html. Three frames  will appear. Each of your \nthree HTML documents, A, B, and C, will appear in a  different frame. \nNow try clicking on the different hyperlinks and se e what happens. You can load A \nB, and C into any of the three frames. You can even  fill all three frames with the same \nHow to Create Nested Frames  \nYou have already learned how to create frame docume nts, fill them with HTML content, and \nHowever, there is still one cool frame trick that w e haven\'t \nnesting frames. It is possible to nest <FRAMESET> t ag pairs to create frames \nwithin frames. In this section, you\'ll learn how it \'s done.  \nOpen a new document in Notepad, and type in the lines as shown. \n \nAn Example of Nested Frames  \n<FRAMESET ROWS=""*,*"">  to divide the screen into two frames. Then \nchanges to myframe.html.  \nLaunch Netscape and open myframe.html. Three frames  will appear. Each of your \nthree HTML documents, A, B, and C, will appear in a  different frame.  \nNow try clicking on the different hyperlinks and se e what happens. You can load A , \nB, and C into any of the three frames. You can even  fill all three frames with the same \nYou have already learned how to create frame docume nts, fill them with HTML content, and \nHowever, there is still one cool frame trick that w e haven\'t \nnesting frames. It is possible to nest <FRAMESET> t ag pairs to create frames \n \nto divide the screen into two frames. Then ' metadata={'source': 'wbpdf.pdf', 'page': 112}
"
"page_content=' Figure 5: Nested Frames in HTML \n3.  Type <FRAME SRC=""a.html"" NAME=frame1>. \na.html in the top frame. Now press Enter again. \n4.  Instead of inserting another <FRAME> tag, we\'ll nes t another <FRAMESET> \npair, using COLS instead of ROWS. This will have th e effect of splitting the bottom \nframe into two separate frames. Type \n5.  Now, we\'ll create the frame declarations for the tw o nested frames. Type \nSRC=""b.htm l"" NAME=frame2>. \nSRC=""c.html"" NAME=frame3>. \n6.  Close the nested <FRAMESET> tag by typing \nThen close the first <FRAMESET> tag by typing \nEn ter. When you\'re finished, type \n114  \nin HTML  \n<FRAME SRC=""a.html"" NAME=frame1>. This will place the document \na.html in the top frame. Now press Enter again.  \n \nInstead of inserting another <FRAME> tag, we\'ll nes t another <FRAMESET> \npair, using COLS instead of ROWS. This will have th e effect of splitting the bottom \nframe into two separate frames. Type <FRAMESET COLS=""*,*""> \n \nNow, we\'ll create the frame declarations for the tw o nested frames. Type \nl"" NAME=frame2>. Then press Enter and type <FRAME \nSRC=""c.html"" NAME=frame3>. Then press Enter again. \n \nClose the nested <FRAMESET> tag by typing </FRAMESET>, and then press Enter. \nThen close the first <FRAMESET> tag by typing <FRAMESET>  \nter. When you\'re finished, type </HTML> . \n \nThis will place the document \nInstead of inserting another <FRAME> tag, we\'ll nes t another <FRAMESET>  tag \npair, using COLS instead of ROWS. This will have th e effect of splitting the bottom \n<FRAMESET COLS=""*,*""> and press Enter. \nNow, we\'ll create the frame declarations for the tw o nested frames. Type <FRAME \n<FRAME \nand then press Enter. \n again and pressing ' metadata={'source': 'wbpdf.pdf', 'page': 113}
"
"page_content="" 7.  Close the nested <FRAMESET> tag by typing \nThen close the first <FRAMESET> tag by typing \nEnter. When you're finished, type \n8.  If you open newf rame.html in Netscape, you'll notice that it looks a lot like the first \nframe document you created, but with one major diff erence: The bottom two frames \nare now aligned side by side instead of one on top of the other. \n \n4.0  CONCLUSION: \nFrames allow you to create banners, menus, and button bars that don't scroll off the page. For \nexample, you could create a frame for your company logo at the top of the page and a frame for a \nbutton bar for navigation at the bottom \n \n \n5.0  SUMMARY  \nIn this unit, you have learnt the following: \n• How to create frame document \n• How to create nested frame \n \n6.0  TUTOR MARKED ASSIGNMENT \n• Describe  frame in HTML \n• List the steps involved \n   \n7.0  FURTHER READING AND OTHER RESOURCES \n• HTML –Definit ive Guide \n• How To Use HTML 3 \n \n \n \n \n \n115  \nClose the nested <FRAMESET> tag by typing </FRAMESET>, and then press Enter. \nThen close the first <FRAMESET> tag by typing <FRAMESET>  \nEnter. When you're finished, type </HTML> . \n \nrame.html in Netscape, you'll notice that it looks a lot like the first \nframe document you created, but with one major diff erence: The bottom two frames \nare now aligned side by side instead of one on top of the other.  \nyou to create banners, menus, and button bars that don't scroll off the page. For \nexample, you could create a frame for your company logo at the top of the page and a frame for a \nbutton bar for navigation at the bottom . \nhave learnt the following:  \nHow to create frame document  \nHow to create nested frame  \nTUTOR MARKED ASSIGNMENT   \nDescribe  frame in HTML  \nList the steps involved  in creating nested frames   \n      \nFURTHER READING AND OTHER RESOURCES  \nive Guide - Chuck Musciano &Bill Kennedy \nHow To Use HTML 3 – Scott Arpajian and then press Enter. \n again and pressing \nrame.html in Netscape, you'll notice that it looks a lot like the first \nframe document you created, but with one major diff erence: The bottom two frames \nyou to create banners, menus, and button bars that don't scroll off the page. For \nexample, you could create a frame for your company logo at the top of the page and a frame for a \n  \n "" metadata={'source': 'wbpdf.pdf', 'page': 114}
"
"page_content='116 \n  \n \n \nMODULE FOUR - JAVASCRIPT \nUNIT ONE - Introduction to Java Script \nUNIT TWO - Java Script variables and data types \nUNIT THREE - Statement and operators  \nUNIT FOUR - Control structures object based program ming message box in JavaScript  \n  \nUNIT ONE    INTRODUCTION TO JAVA SCRIPT \n1.0  Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1  What is JavaScript? \n3.2 The basic concepts of JavaScript and client-sid e scripting \n3.3  History of JavaScript \n \n4.0  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n1.0  INTRODUCTION \nIn this unit, we will discover what makes JavaScrip t an Object-based scripting language and \ntake a look at the language’s origin ,history and w ill introduce you to the basic concepts of \nJavaScript and client-side scripting in general. Ja vaScript is the scripting language used on \nmillions of Web pages. Its main purpose is to add i nteractivity to the browser and Web pages. \nIt also complements very popular server-side progra mming languages and platforms, like \nASP.NET (actually, JavaScript is used in many ASP.N ET controls). As it is very easy to \nlearn, you\'ll soon start writing your first scripts . It doesn’t matter if you\'re already an expert \nor just a beginner in the world of web development – JavaScript will add that ""extra \nsomething"" to your Web pages. You will be quizzed a t the end of the unit, so pay attention! \n \n2.0  OBJECTIVES: \nAt the end of this unit, you should be able to  \n• Explain JavaScript language \n• Describe the history of JavaScript \n• Distinguish the difference between Java and JavaScr ipt \n• List the features of JavaScript ' metadata={'source': 'wbpdf.pdf', 'page': 115}
"
"page_content=""117 \n  \n \n \n \n3.0  MAIN CONTENT \n3.1  What is JavaScript? \n \nJavaScript is the client side scripting language, d eveloped by netscape, used along with \nHTML to build a efficient web site / webpage. JavaS cript is used in most websites to enrich \nthe interface and enhance the user experience. \n \nIn the beginning stages, web pages were developed o nly using html, which are nothing but \nstatic pages. User interaction and dynamic changes are not possible with html. With the \nadvent of scripting languages the problem was solve d. There are two types of script \nlanguages - server side and client side. \n \nWhen a page is requested, the request is sent to th e server and data is fetched and viewed in \nthe browser. \n• If the dynamic changes in the webpage are caused in  the client side (the browsers like \nmozilla / IE). It is called client side scripting l anguage (E.g. - JavaScript).  \n• If the dynamic changes in the web page are caused i n the server side (the server \nchecks the request and based on the data it makes c hanges in the page before sending \nthe data to the browser). It  is called server side  scripting language (E.g. - PHP). \n \nJava script codes are embedded in HTML files. Whene ver a browser requests for a webpage, \nthe HTML file along with script is transferred to t he browser.  \n \nJavaScript is used to create dynamic changes, valid ate forms, detect visitor details, create/use \ncookies, etc.. JavaScript works in all major browse rs, such as Internet Explorer, Mozilla, \nFirefox, Netscape, Opera, Safari and more. \n \n \n3.2.  The basic concepts of JavaScript and client-side sc ripting  \nJavaScript is a client side, interpreted, object or iented, high level scripting language, while \nJava is a client side, compiled, object oriented, h igh level language. Now after that mouthful, \nhere's what it means. \nClient side  \nPrograms are passed to the computer that the browse r is on, and that computer runs \nthem. The alternative is server side, where the pro gram is run on the server and only \nthe results are passed to the computer that the bro wser is on. Examples of this would \nbe PHP, Perl, ASP, JSP etc. Currently the most popu lar client-side scripting language \nis JavaScript \n \nInterpreted  "" metadata={'source': 'wbpdf.pdf', 'page': 116}
"
"page_content=""118 \n The program is passed as source code with all the p rogramming language visible. It is \nthen converted into machine code as it is being use d. Compiled languages are \nconverted into machine code first then passed aroun d, so you never get to see the \noriginal programming language. Java is actually dua l half compiled, meaning it is half \ncompiled (to 'byte code') before it is passed, then  executed in a virtual machine which \nconverts it to fully compiled code just before use,  in order to execute it on the \ncomputer's processor. Interpreted languages are gen erally less fussy about syntax and \nif you have made mistakes in a part they never use,  the mistake usually will not cause \nyou any problems.  \n \nScripting  \n \nThis is a little harder to define. Scripting langua ges are often used for performing \nrepetitive tasks. Although they may be complete pro gramming languages, they do not \nusually go into the depths of complex programs, suc h as thread and memory \nmanagement. They may use another program to do the work and simply tell it what to \ndo. They often do not create their own user interfa ces, and instead will rely on the \nother programs to create an interface for them. Thi s is quite accurate for JavaScript. \nWe do not have to tell the browser exactly what to put on the screen for every pixel \n(though there is a relatively new API known as canv as that makes this possible if \nneeded), we just tell it that we want it to change the document, and it does it. The \nbrowser will also take care of the memory managemen t and thread management, \nleaving JavaScript free to get on with the things i t wants to do.  \n \n \nHigh level  \nWritten in words that are as close to English as po ssible. The contrast would be with \nassembly code, where each command can be directly t ranslated into machine code.  \n \nWhat is Object Oriented Programming? \n \nAn Object Oriented Programming is a set of tools an d methods that enable software \nEngineers to build reliable, user friendly, maintai nable, well documented, reusable software \nsystems that fulfils the requirements of its users.  It is claimed that object-orientation provides \nsoftware developers with new mind tools to use in s olving a wide variety of problems. \nObject-orientation provides a new view of computati on. A software system is seen as a \ncommunity of objects that cooperate with each other  by passing messages in solving a \nproblem. \n \nNot all programming languages can be ‘‘object orien ted’’. Yet claims have been made to the \neffect that APL, Ada, Clu, C++, LOOPS, and Smalltal k are object oriented programming \nlanguages \n \nAn object-oriented programming language provides su pport for the following object oriented \nconcepts: \n \n• Objects and Classes \n• Inheritance "" metadata={'source': 'wbpdf.pdf', 'page': 117}
"
"page_content='119 \n • Polymorphism and Dynamic binding \n \n \n \n \nWhat Is an Object?  \nAn object is a software bundle of related state and  behavior. Software objects are often \nused to model the real-world objects that you find in everyday life. This lesson explains \nhow state and behavior are represented within an ob ject, introduces the concept of data \nencapsulation, and explains the benefits of designi ng your software in this manner.  \nWhat Is a Class? \n \nA class is a blueprint or prototype from which obje cts are created. This section defines a \nclass that models the state and behavior of a real- world object. It intentionally focuses on \nthe basics, showing how a simple class can cleanly model state and behavior.  \nWhat Is an Inheritance? \n \nInheritance provides a powerful and natural mechani sm for organizing and structuring your \nsoftware. This section explains how classes inherit  state and behavior from their super \nclasses, and explains how to derive one class from another using the simple syntax provided \nby the Java programming language. \n \n \nWhat is polymorphism? \n \nIn object-oriented programming, polymorphism (from the Greek meaning ""having multiple \nforms"") is the characteristic of being able to assi gn a different meaning or usage to something \nin different contexts - specifically, to allow an e ntity such as a variable, a function, or an \nobject to have more than one form. There are severa l different kinds of polymorphism. \n \nWhat is Dynamic Binding  \n \n   The property of object-oriented programming lang uages where the code executed to \nperform a given operation is determined   at run time from the class of the operand(s).  Ther e \nmay be several different classes of objects which c an receive a given message.  An \nexpression may denote an object which may have more  than one possible class and that class \ncan only be determined at run time.  New classes ma y be created that can receive a particular \nmessage, without changing (or recompiling) the code  which sends the message.  A class may \nbe created that can receive any set of existing mes sages.  \n \nJava and JavaScript \nNever confuse JavaScript with Java. Java is an appl ication development language developed \nby SUN Microsystems and has no links with J avaScri pt.  JavaScript was created long before ' metadata={'source': 'wbpdf.pdf', 'page': 118}
"
"page_content=""120 \n java was developed. JavaScript is many times denote d as Java Script. \n \n \nTable 1.  JavaScript compared to Java  \nJavaScript  Java  \nInterpreted (not compiled) by client Compiled byte codes down loaded from \nserver, executed on client \nObject-based. No distinction between types \nof objects. Inheritance is through the \nprototype mechanism and \nproperties and methods can be added to any \nobject dynamically. Object-oriented. Objects are divided into \nclasses and instances with all inheritance \nthrough the class hierarchy. Classes and \ninstances cannot have properties or methods \nadded dynamically. \nCode integrated with, and embedded in, \nHTML Applets distinct from HTML \n(accessed from HTML  pages). \nVariable data types not declared (loose \ntyping). Variable data types must be declared (strong \ntyping). \nDynamic binding. Object references checked \nat runtime Static binding. Object references must \nexist at compile-time \n \nCannot automatically write to hard disk. Cannot aut omatically write to hard \ndisk (in Java Applets). \n \n3.3.   History of JavaScript \nIt's useful to start with an idea of the language's  history. JavaScript was created in 1995 by \nBrendan Eich, an engineer at Netscape, and first re leased with Netscape 2 early in 1996. It \nwas originally going to be called LiveScript, but w as renamed in an ill-fated marketing \ndecision to try to capitalize on the popularity of Sun Microsystem's Java language — despite \nthe two having very little in common. This has been  a source of confusion ever since. \nMicrosoft released a mostly-compatible version of t he language called JScript with IE 3 \nseveral months later. Netscape submitted the langua ge to Ecma International, a European \nstandards organization, which resulted in the first  edition of the ECMAScript standard in \n1997. The standard received a significant update as  ECMAScript edition 3 in 1999, and has \nstayed pretty much stable ever since. The fourth ed ition was abandoned, due to political \ndifferences concerning language complexity. Many pa rts of the fourth edition forming a basis \nof the new ECMAScript edition 5, published in Decem ber of 2009. \nThis stability is great news for developers, as it' s given the various implementations plenty of \ntime to catch up. I'm going to focus almost exclusi vely on the edition 3 dialect. For \nfamiliarity, I will stick with the term JavaScript throughout. \nUnlike most programming languages, the JavaScript l anguage has no concept of input or \noutput. It is designed to run as a scripting langua ge in a host environment, and it is up to the \nhost environment to provide mechanisms for communic ating with the outside world. The \nmost common host environment is the browser, but Ja vaScript interpreters can also be found \nin Adobe Acrobat, Photoshop, Yahoo!'s Widget engine , and even server side environments. "" metadata={'source': 'wbpdf.pdf', 'page': 119}
"
"page_content=""121 \n 4.0  CONCLUSION: \nJavaScript is NOT the same as Java. Java was develo ped at Sun Micro Systems. The two \nlanguages are related, but yet are very different a nd have different purposes. Java is a full-\nfeatured Object-Oriented Programming language that creates separate applets (mini-\napplications) that do not interrelate with HTML lik e JavaScript does. JavaScript is much \nsimpler to program than Java. JavaScript was design ed for a more specific purpose exposing \nuseful properties of the Web client and server to a  script programmer. \n \n5.0  SUMMARY: \nIn this unit, you have learnt: \n• The difference between Java and JavaScript \n• The History of JavaScript \n• Explanation of JavaScript \n \n6.0  TUTOR MARKED ASSIGNMENT \n• Distinguish between Java and JavaScript \n• What is client-side scripting? \n• Describe the history of JavaScripting \n \n \n7.0  FURTHER READING AND OTHER RESOURCES \n• Nigel McFarlane: Rapid Application Development with Mozilla , Prentice Hall \nProfessional Technical References, ISBN 0131423436  \n• Danny Goodman, Scott Markel: JavaScript and DHTML Cookbook , O'Reilly \n& Associates, ISBN 0596004672  \n• Danny Goodman, Brendan Eich: JavaScript Bible , Wiley, John & Sons, ISBN \n0764533428  \n• Andrew H. Watt, Jinjer L. Simon, Jonathan Watt: Teach Yourself JavaScript \nin 21 Days , Pearson Education, ISBN 0672322978  \n• Andy Harris, Andrew Harris: JavaScript Programming , Premier Press, ISBN \n0761534105  \n• Gary B. Shelly, Thomas J. Cashman, William J. Dorin , Jeffrey Quasney: \nJavaScript: Complete Concepts and Techniques , Course Technology, ISBN \n0789562332  \n• Nick Heinle, Richard Koman: Designing with JavaScript , O'Reilly & \nAssociates, ISBN 1565923006  \n \n "" metadata={'source': 'wbpdf.pdf', 'page': 120}
"
"page_content='122 \n UNIT TWO:   JAVA SCRIPT VARIABLES AND DATA TYPES \n1.0  Introduction \n2.0  Objectives \n3.0  Main Content  \n            3.1 JavaScript Variables \n3.2  Java Script Data type \n \n4.0  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n1.0  INTRODUCTION \nJavaScript is an object language; it has data types  and variables. Its syntax comes from the \nJava and C languages, so many structures from those  languages apply to JavaScript as well. \nOne of the key differences is that JavaScript does not have classes; instead, the class \nfunctionality is accomplished by object prototypes.  The other main difference is that \nfunctions are objects, giving functions the capacit y to hold executable code and be passed \naround like any other object. \nThis unit covers the JavaScript Variables and primi tive data types of string, boolean, and \nnumber, as well as the built-in functions for modif ying values of these types. In addition, \nwe’ll look at two special data types in JavaScript,  null and undefined, toward the end of the \nunit.  \n \n2.0  OBJECTIVES \nAt the end of this unit, you should be able to: \n• Explain JavaScript Variables \n• List JavaScript Data types \n• Describe Global Scope Variables \n \n3.0  MAIN CONTENT \n \n3.1  JavaScript Variables \n \nEvery piece of data is known as a value. When a val ue is referred in a statement, it is \ncalled a literal value. For the same reason people are identified by names as opposed to \n""human"" or ""person"", literal values can be named in  order to make repeated reference to \nthem practical, efficient and readable. These names  are called variables.  \nDeclaring and Initializing the Variables  ' metadata={'source': 'wbpdf.pdf', 'page': 121}
"
"page_content='123 \n var num;   // declare variable, has null value \nnum = 20;   // assign a value, null value is replac ed \n//OR \nvar num=20;   // declare AND assign value (initiali ze) \nvar a,b,c,d; //multiple variables may be declared s imultaneously \nvar a = 5, b = 6, c = 7,d=8; //multiple variables m ay be initialized simultaneously \nVariable Names  \nVariable names cannot contain spaces, begin with a number but can see the underscore (_) \n. JavaScript Variable name can not use any reserved  keywords. Two words can either be \nseparated by an underscore (my_variable) or (myVari able).  \nVariable Scope  \nThere are two types of Variable scope:-  \n1. Globle scope Variable,  \n2 .  Local scope Variable.  \n \n1.Globle scope Variable:-  A variable declared or initialized outside a funct ion body has a \nglobal scope, making it accessible to all other sta tements within the same document. \n2. Local scope Variable:-  A variable declared or initialized within a functi on body has a \nlocal scope, making it accessible only to statement s within the same function body. \n[NOTE:-  If a variable is initialized inside a function bod y but the var  keyword is left off, \nthe variable has a global scope and is only accessi ble after the function containing it is \ninvoked. It is better to always use the var  keyword ] \n \n3.2  Java Script Data type \nData Type:- A data type is defined by the value assigned to it . A variable could be a \nnumber on one line, then assigned a string value an d later be assigned an object reference. \nJavaScript would change its data type dynamically . It also represent the data\'s nature. Data \nis directly treated on those data types and calcula te up on the works.  \n \nThere are two types of the data types, namely:- \n• .Primitive data types \n• Compositive data types \n \nPrimitive data types:-  Primitive data types are the simplest building blo cks of a program. \nThe types are the following:- \n• Numeric:- JavaScript supports both integers and floating poin t numbers .Integers are \nwhole numbers and it does not support the decimal n umbers such as : 145 . Floating \npoint numbers are fractional numbers or decimal num bers. Such as : 12.50   \n• String:- String is a collection of characters enclosed in e ither single quotes or double \nquotes .If the string starts with a single quotes i t must end with single quotes .If the \nstring starts with a double quotes, it must end wit h double quotes . Such as: \'Welcome \nto JavaScript\'  or ""Welcome to JavaScript"".  \n• Boolean:- Boolean literals are logical values that have only one of two values, true or \nfalse. It is used in conditional statements. Our st atements  \nare checked true or false then we use the Boolean v ariables.  ' metadata={'source': 'wbpdf.pdf', 'page': 122}
"
"page_content='124 \n • Null:-The null value represents no value that means strin gs are empty .   \n• Undefined:- A variables to be declared but given no  any initial value then it runtime \nerror display   \n         \nExample: This example is represent the sum of two f loating numbers and print the \nmessages in single quotes and double quotes. \n<html> \n<head> \n<script language=""javascript""> \nfunction showAlert() \n{ \nvar a=200.40;  \nvar b=10.50;  \nvar sum=0;  \nsum=a+b; \ndocument.write("" sum= ""+sum); \ndocument.write(""\\t\\tHello\\nworld!\\n""); \ndocument.write(\'\\nWelcome to JavaScript\'); \n} \n</script> \n</head> \n<body> \n \n<script language=""javascript""> \n \nshowAlert(); \n \n</script> \n \n</body> \n</html>  \n  \n  \n \n4.0  CONCLUSION: \nJavaScript uses two special values to define variab le states. The value null  indicates a \nvariable which does not have value. Any operation o r expression with a variable \ncontaining the null value will result in null. The <undefined> value is assigned by \nJavaScript to any variable which has not been initi alized. The <undefined> value is \nactually a string which can be manipulated as a str ing literal. \n \n5.0  SUMMARY \nIn this unit, you have learnt the following: \n• Primitive data types \n• Types of Variables ' metadata={'source': 'wbpdf.pdf', 'page': 123}
"
"page_content=""125 \n • Definition of a Variable \n \n6.0  TUTOR MARKED ASSIGNMENT \n• Distinguish between Globe Scope and Local Scope Var iable \n• Define Variable \n \n7.0  FURTHER READING AND OTHER RESOURCES \n• Danny Goodman, Brendan Eich: JavaScript Bible , Wiley, John & Sons, ISBN \n0764533428  \n• Andrew H. Watt, Jinjer L. Simon, Jonathan Watt: Teach Yourself JavaScript in 21 \nDays , Pearson Education, ISBN 0672322978  \n• Thomas A. Powell, Fritz Schneider: JavaScript: The Complete Reference , \nMcGraw-Hill Companies, ISBN 0072191279  \n• Scott Duffy: How to do Everything with JavaScript , Osborne, ISBN 0072228873  \n• Andy Harris, Andrew Harris: JavaScript Programming , Premier Press, ISBN \n0761534105  \n• Gary B. Shelly, Thomas J. Cashman, William J. Dorin , Jeffrey Quasney: \nJavaScript: Complete Concepts and Techniques , Course Technology, ISBN \n0789562332  \n• Nick Heinle, Richard Koman: Designing with JavaScript , O'Reilly & Associates, \nISBN 1565923006  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n "" metadata={'source': 'wbpdf.pdf', 'page': 124}
"
"page_content='126 \n  \nUNIT THREE    STATEMENT AND OPERATORS \n1.0   Introduction \n2.0  Objectives  \n3.0  Main Content \n3.1 JavaScript Statement \n3.2 JavaScript Operators \n3.3 Control structures  \n4.0  Conclusion          \n5.0  Summary          \n6.0  Tutor Marked Assignment        \n7.0  Further Reading and Other Resources \n \n1.0  INTRODUCTION \nIn this unit, you will learn the JavaScript Stateme nt, Operators and Control \nStructures.  \n2.0  OBJECTIVES \nAt the end of this unit, you should be able to: \n• Explain two types of statement in JavaScript \n• List types of Operators in JavaScript \n• List types of Control Structures \n \n3.0  MAIN CONTENT \n3.1 JavaScript Statement \n \nThe JavaScript language supported Two type Conditio n. \n/square4  .if statement \n/square4 Function  \nif Statement   \nif statements execute a set of commands if a specif ied condition is true. If the \ncondition is false, another set of statements can b e executed through the use of the \nelse keyword.  \nThe main idea behind if statement is embodied by th e sentence: ""If the weather\'s \ngood tomorrow, we\'ll go out and have a picnic and L isa will do cartwheels -- else, \nwe\'ll stay in and Catherine will watch TV."" \nAs you can see, the idea is quite intuitive and, su rprisingly enough, so is the syntax:  \nif  (condition ) { ' metadata={'source': 'wbpdf.pdf', 'page': 125}
"
"page_content='127 \n  statements1  \n} \n-or-  \nif  (condition ) { \n statements1  \n} \nelse  { \n statements2  \n} \n(An if  statement does not require an else  statement following it, but an else  \nstatement must be preceded by an if  statement.)  \ncondition  can be any JavaScript expression that evaluates to  true or false. \nParentheses are required around the condition. If condition  evaluates to true, the \nstatements in statements1  are executed.  \nstatements1  and statements2  can be any JavaScript statements, including furthe r \nnested if  statements. Multiple statements must be enclosed i n braces.  \nHere\'s an example: \nif  (weather == \'good\') { \n go_out(we); \n have_a_picnic(we); \n do_cartwheels(Lisa); \n} \nelse  { \n stay_in(we); \n watch_TV(Catherine); \n} \nThe if statement is used  to make decisions in Java Script. Boolean operators are also used \nin along with the if statement. The if statement is  the most used features of JavaScript. It \nis basically the same in JavaScript as it is in oth er programming languages. \nExample   \n<HTML> \n<HEAD> \n</HEAD> \n<SCRIPT language=""JavaScript""> \n<!--  \nvar num = 10, \nif(num == 10) \n{ \ndocument.write(""<B>Statement!</B><BR>"") \n} \n//--></SCRIPT> \nmy program successfully completed \n ' metadata={'source': 'wbpdf.pdf', 'page': 126}
"
"page_content='128 \n </BODY> \n</HTML> \nFunction  \nThe function keyword identifies as a function. The parameters in the parenthesis ( ) \nprovide a means of passing values to the function. There can be as many parameters \nseparated by commas as you need. This is perfectly ok to have a function with no \nparameters. These parameters are variables which ar e used by the JavaScript statements \ninside the curly braces { }. The variable keyword i s not needed to declare the parameters \nin a function as variables because they are automat ically declared and initialized when \nthe function is called. The function can return a v alue by using the return keyword. \nExample \n   \n<HTML> \n<HEAD> \n</HEAD> \n<script language=""JavaScript""> \n \nfunction prod(a,b) \n{ \nvar x=a*b \nreturn x; \n} \n \nvar mul=prod(2,5); \ndocument.write(""multipication:""+mul); \n</script> \n</BODY> \n</HTML> \nConditional JavaScript if-else Statement \nThe JavaScript Conditional Statement used to differ ent actions and used to based on \ndifferent conditions,you want to execute some code if a condition is true and another \ncode the condition is not true, use the if....else statement. \n \nExample  \n<HTML> \n<HEAD> \n</HEAD> \n<script type=""text/javascript""> \nvar a = new Date(); \nvar time = a.getHours(); \nif (time < 20)  \n{ \ndocument.write(""Good morning!""); \n} \nelse \n{ \ndocument.write(""Good day!""); ' metadata={'source': 'wbpdf.pdf', 'page': 127}
"
"page_content='129 \n } \n</script> \n</BODY> \n</HTML> \n  \n \n3.2 JavaScript Operators  \nOperators determine what is done to variables and f unctions. JavaScript has many operators \nnamely: Arithmetic, Assignment,Bitwise,Comparison, logical, Conditionnal, Operator \nPrecedence and String Operators. \nOperators  ""operate"" on values. We deal with operators every day, you have probably just \nnever heard them called that. For example, in a sta tement such as 1+1=2, the + sign is the \noperator. JavaScript offers many operators beyond t he basic ones used in arithmetic. \nSyntax  \nThough specific rules of syntax vary with some oper ators, the typical syntax is \nvariable = value operator value \nwhere variable is the name of a variable used to st ore a value, value is a number, string, \nvalue, expression, or property of an object, and op erator is one of the operators described \nhere. \nDescription  \nThe sections that follow group JavaScript into clas ses based on the type of operation \nperformed. \nArithmetic Operators \nArithmetic operators  act on numbers. Table 1 lists the arithmetic opera tors offered in \nJavaScript and provides examples of each. \nTable 1: JavaScript\'s Arithmetic Operators.  \nOperator  Used For  Example  Equals  \n+ Addition 1+2 3 \n- Subtraction 12-10 2 \n* Multiplication 2*3 6 \n/ Division 10/3 3.3333333333 \n% Modulus 10%3 1 \n++ Increment x=5  \nx++ x=6 \n-- Decrement x=5  \nx-- x=4 ' metadata={'source': 'wbpdf.pdf', 'page': 128}
"
"page_content=""130 \n - Unary negation -20 negative 20 \nThe modulus of a number is the remainder after the first division. For example, 10/3 results in \n3, remainder 1. The modulo (%) operator returns tha t remainder, 1. \nThe increment operator, ++, is just a shortcut way of saying variable + 1. For example, the \ntwo statements that follow mean exactly the same th ing. The latter one is just shorter and \nquicker to type: x = x + 1  as x++ \nThe same holds true for the decrement (--) operator . \nWith the negation operator, if the minus sign is us ed in front of a value without being part of \na larger expression, then JavaScript assumes it ind icates a negative number, just as in day-to-\nday arithmetic. For example,  x= 5;  y= -x results in x being equal to 5 and y being equal to -\n5. \nAssignment Operators \nAssignment operators  are used to assign a value to a variable by using the simple equal \nsymbol (=) operator with the syntax \nvariablename = value \nFor example: \nx=15; y=20; z=x+y; \nAfter all three lines have been executed, the varia ble x contains the number 15, the variable y \ncontains 20, and the variable z contains 35 (the su m of 15+20). \nSome shorthand operators exist that you can use to do some arithmetic and assign the result \nto a value in one fell swoop. Those operators are s hown in Table 2. \nTable 2: JavaScript's Assignment Operators.  \nOperator  Example  Meaning  \n+= x+=y x=x+y \n-= x-=y x=x-y \n*= x*=y x=x*y \n/= x/=y x=x/y \n% x%=y x=x%y \nBitwise Operators \nBitwise operators  treat their values as binary numbers (1's and 0's)  rather than as numeric \nvalues. You may never need to use these so don't wa ste too much energy trying to memorize \nthem. But just in case you do come across a bitwise  operator, Table 3 shows what each one \ndoes. \n "" metadata={'source': 'wbpdf.pdf', 'page': 129}
"
"page_content=""131 \n Table 3: JavaScript's Bitwise Operators.  \nOperator  Action  Example  \n& bitwise AND 10&3=2 \n| bitwise OR 10|3=11 \n^ bitwise exclusive OR 10^3=9 \n<< left shift 10<<3=80 \n>> Sign-propagating right \nshift 10>>3=1 \n>>> Zero-fill right shift 10>>>3=1 \nSome shortcut operators also exist for bitwise assi gnments, as listed in Table 4. \nTable 4: JavaScript's Bitwise Assignment Operators.  \nOperator  Example  Meaning  \n<<= x<<=y x=x<<y \n>>= x>>=y x=x>>y \n>>>= x>>>=y x=x>>>y \n&= x&=y x=x&y \n^= x^=y x=x^y \n|= x|=y x=x|y \nComparison and Logical Operators \nComparison  and logical operators  compare two values and return either true or false . Table \n5 lists the comparison operators and Table 6 lists the logical operators. \nTable 5  JavaScript's Comparison Operators.  \nOperator  Meaning  Example  \n== is equal to 10==3 is false  \n!= does not equal 10!=3 is true  \n> is greater than 10>3 is true  \n>= is greater than or equal \nto 10>=3 is true  \n< is less than 10<3 is false  \n<= is less than or equal to  10<=3 is false  \nTable 6: JavaScript's Logical Operators.  \nOperator  Meaning  If x=10 and y= 5 then  \n&& AND (x = 10) && (y < 10) is true  \n|| OR (x=10) || (y=10) is true  \n! NOT  x !=y is true  \nConditional Operator \nJavaScript also contains a conditional operator  that assigns a value to a variable based on \nsome conditions. The operators for a conditional ex pression are? and : using this syntax: "" metadata={'source': 'wbpdf.pdf', 'page': 130}
"
"page_content='132 \n myvar = (condition) ? value1 : value2; \nFor example, the conditional expression that follow s is a shorthand way of saying ""If the \nvariable named gender contains F, then put the stri ng \'Ms.\' in the variable named salutation. If \nthe variable named gender does not contain F, then put the string \'Mr.\' into the variable \nnamed salutation"": \nsalutation = (gender==""F"") ? ""Ms."" : ""Mr."" \nOperator Precedence \nJavaScript operators follow the standard order of p recedence or operator precedence . But \nyou can override natural precedence with parenthese s. For example \n5+3*10 \nequals 35 because the multiplication is naturally c arried out first (according to the rules of \nprecedence). That is, the machine first evaluates 1 0*3, which equals 30, and then adds 5 to \nthat to get 35. \nThis expression has a different result: \n(5+3)*10 \nThis expression results in 80 because the parenthes es force the addition to be carried out first \n(5+3 equals 8). That result then is multiplied by 1 0 to result in 80. Table 7 shows the order of \nprecedence of the operators, from highest to lowest , when you do not use parentheses in an \nexpression. Operators at the same level of preceden ce within an expression are carried out in \nleft-to-right order. \nTable 7: JavaScript Operators Order of Precedence.  \nAction  Operator(s)  \ncall, member (),[] \nnegation/increment ! ~- ++ -- \nmultiply/divide * / % \naddition/subtraction + - \nbitwise shift << >> >>> \nComparison < <= > >= \nEquality == != \nbitwiseAND & \nbitwise XOR ^ \nbitwise OR | \nlogical AND && \nlogical OR || \nConditional ?: \nAssignment = += -= *= /= %= <<= >>= \n>>>= &= ^= |= \nComma , ' metadata={'source': 'wbpdf.pdf', 'page': 131}
"
"page_content='133 \n string Operators \nString operators are chunks of text, such as Hello (rather than a number such as 10). Unlike \nnumbers, you cannot add, subtract, multiply, and di vide strings. Example: 2*3 = 6 is fine. But \nwhat is ""Hello"" * ""There""? The question makes no se nse. \nYou can, however, concatenate strings, which is a f ancy name for ""stick them together."" You \nuse the + operator to concatenate strings. Here is an example where we create three variable, \nx, y, and z, all of which contains strings: \nx=""Hello""; \ny=""There""; \nz=x+y; \nThe result is that z now contains HelloThere. \nWhy is there no space between the words? Because to  a computer, strings are just \nmeaningless strings of characters. To a computer, t he string hello in no more meaningful than \nthe string bvhdsz. They are both just strings. If y ou want to add a space between the words, \nyou can pop a space into the expression. A literal space would be a space enclosed in \nquotation marks ("" ""). Hence, this series of comman ds x=""Hello""; y=""There""; \nz=x+"" ""+y; \nresults in z containing Hello There. A shortcut ope rator also exists for string concatenation \n+=. For example \nx=""Hello"" y=""There"" \nx+="" ""+y \nin which case x equals itself with a space and y ta cked on,  x then contains Hello There. \n3.3 Control structures  \n \nIf ... else  \n  if (condition) { \n     statements \n  } \n  else { \n     statements \n  } \nLoops ' metadata={'source': 'wbpdf.pdf', 'page': 132}
"
"page_content='134 \n Loops are an incredibly useful programming tool. Lo ops handle repetitive tasks \nextremely well, especially in the context of consec utive elements. Arrays immediately \nspring too mind here, since array elements are numb ered consecutively. It would be \nquite intuitive (and equally practical), for instan ce, to write a loop that added 1 to each \nelement within an array.  \nThe two most common types of loops are for  and while  loops:  \n• for  Loops \nA for loop constitutes a statement which consists o f three expressions, enclosed in \nparentheses and separated by semicolons, followed b y a block of statements executed \nin the loop.  \nThis definition may, at first, sound confusing. Ind eed, it is hard to understand for \nloops without seeing them in action. \nA for loop resembles the following: \nfor ( initial-expression ; condition ; increment-expression ) { \n statements  \n} \nThe initial-expression  is a statement or variable declaration. It is typi cally used to \ninitialize a counter variable. This expression may optionally declare new variables \nwith the var keyword.  \nThe condition  is evaluated on each pass through the loop. If thi s condition evaluates \nto true, the statements in statements  are performed. When the condition evaluates to \nfalse, the execution of the for loop stops. This conditional test is optional. If omitted, \nthe condition always evaluates to true.  \nThe increment-expression  is generally used to update or increment the count er \nvariable.  \nThe statements  constitute a block of statements that are executed  as long as condition  \nevaluates to true. This can be a single statement o r multiple statements. Although not \nrequired, it is good practice to indent these state ments from the beginning of the for \nstatement to make your code more readable.  \nCheck out the following for statement. It starts by  declaring the variable i and \ninitializing it to zero. It checks whether i is less than nine, performs the two \nsuccessive statements, and increments i by one after each pass through the loop:  \nvar n = 0; \nfor (var i = 0; i < 3; i++) { \n n += i; ' metadata={'source': 'wbpdf.pdf', 'page': 133}
"
"page_content='135 \n  alert(""The value of n is now "" + n); \n} \n \nWhile Loops \n \nThe while loop, although most people would not reco gnize it as such, is for\'s twin. \nThe two can fill in for one another - using either one is only a matter of convenience \nor preference according to context. while creates a  loop that evaluates an expression, \nand if it is true, executes a block of statements. The loop then repeats, as long as the \nspecified condition is true.  \nThe syntax of while differs slightly from that of f or:  \nwhile  (condition ) { \n statements  \n} \ncondition  is evaluated before each pass through the loop. If  this condition evaluates to \ntrue, the statements in the succeeding block are pe rformed. When condition  evaluates \nto false, execution continues with the statement fo llowing statements .  \nstatements  is a block of statements that are executed as long  as the condition  evaluates \nto true. Although not required, it is good practice  to indent these statements from the \nbeginning of the statement.  \nThe following while loop iterates as long as n is less than three.  \nvar n = 0; \nvar x = 0; \nwhile(n < 3) { \n n++; \n x += n; \n alert(""The value of n is "" + n + "". The value of x  is "" + x); \n} \n \n \nSwitch statement  \n  switch (expression) { \n     case label1 : \n        statements; \n        break; \n     case label2 : \n        statements; ' metadata={'source': 'wbpdf.pdf', 'page': 134}
"
"page_content=""136 \n         break; \n     default : \n        statements; \n  } \n \nFunctions  \nA function is a block with a (possibly empty) argum ent list that is normally given a name. A \nfunction may give back a return value.  \n  function function-name(arg1, arg2, arg3) { \n     statements; \n     return expression; \n  } \nExample: Euclid's original algorithm of finding the  greatest common divisor. (This is a \ngeometrical solution which subtracts the shorter se gment from the longer):  \nfunction gcd(segmentA, segmentB) \n  { \n     while(segmentA!=segmentB) \n        if(segmentA>segmentB) \n           segmentA -= segmentB; \n        else \n           segmentB -= segmentA; \n     return(segmentA); \n  } \n \nThe number of arguments given when calling a functi on must not necessarily accord to the \nnumber of arguments in the function definition. Wit hin the function the arguments may as \nwell be accessed through the arguments array.  \nEvery function is an instance of Function, a type o f base object. Functions can be created and \nassigned like any other objects, and passed as argu ments to other functions. Thus JavaScript \nsupports higher-order functions. For example:  \n   Array.prototype.fold = \n   function (value, functor) { \n       var result = value; \n       for (var i = 0; i < this.length; i++) { \n           result = functor(result, this[i]); \n       } \n       return result; "" metadata={'source': 'wbpdf.pdf', 'page': 135}
"
"page_content='137 \n    } \n   var sum = [1,2,3,4,5,6,7,8,9,10].fold(0, functio n (a, b) { return a + b }) \nresults in the value:  \n   55 \nUser interaction  \nMost interaction with the user is done by using HTM L forms which can be accessed through \nthe HTML DOM. However there are as well some very s imple means of communicating with \nthe user:  \n Alert dialog box  \n Confirm dialog box  \n Prompt dialog box  \n Status bar  \n Console  \n  \n4.0  CONCLUSION: \nOperators determine what is done to variables and f unctions. JavaScript has many \noperators namely: Arithmetic, Assignment,Bitwise,Co mparison, logical, \nConditionnal, Operator Precedence and String Operat ors. There is only one String \nOperator: concatenation (+). It’s funny that a lang uage that uses = and == to give the \nprogrammer greater flexibility would also use the +  to add numbers and concatenate \nstrings. \n5.0  SUMMARY \nIn this unit, you have learnt : \n• Definition of  Loop \n• Types of Operators \n• Types of Statement in JavaScript \n \n \n \n6.0  TUTOR MARK ASSIGNMENT \n• Define a Loop? \n• Distinguish between any two types of Loops \n• List types of Operators \n• List types of Control Structure you know. ' metadata={'source': 'wbpdf.pdf', 'page': 136}
"
"page_content=""138 \n  \n \n7.0 REFERENCES/FURTHER READING \n• Andy Harris, Andrew Harris: JavaScript Programming , Premier Press, ISBN \n0761534105  \n• Danny Goodman, Brendan Eich: JavaScript Bible , Wiley, John & Sons, ISBN \n0764533428  \n• Gary B. Shelly, Thomas J. Cashman, William J. Dorin , Jeffrey Quasney: \nJavaScript: Complete Concepts and Techniques , Course Technology, ISBN \n0789562332  \n• Nick Heinle, Richard Koman: Designing with JavaScript , O'Reilly & \nAssociates, ISBN 1565923006  \n• Nigel McFarlane: Rapid Application Development with Mozilla , Prentice Hall \nProfessional Technical References, ISBN 0131423436  \n• Scott Duffy: How to do Everything with JavaScript , Osborne, ISBN \n0072228873  \n• Thomas A. Powell, Fritz Schneider: JavaScript: The Complete Reference , \nMcGraw-Hill Companies, ISBN 0072191279  "" metadata={'source': 'wbpdf.pdf', 'page': 137}
"
"page_content='Office of the Chief Economist\nMay 2018Europe and Central Asia Economic Update\nPublic Disclosure Authorized Public Disclosure Authorized Public Disclosure Authorized Public Disclosure Authorized' metadata={'source': 'blkc.pdf', 'page': 0}
"
"page_content='Cryptocurrencies \nand BlockchainWORLD BANK ECA ECONOMIC UPDATE MAY  2018\nOffice of the Chief Economist' metadata={'source': 'blkc.pdf', 'page': 2}
"
"page_content='© 2018 International Bank for Reconstruction and Development / The World Bank \n1818 H Street NW, Washington, DC 20433 \nTelephone: 202-473-1000; Internet: www.worldbank.org\nSome rights reserved\n1 2 3 4   21 20 19 18\nThis work is a product of the staff of The World Bank with external contributions. The findings, \ninterpretations, and conclusions expressed in this work do not necessarily reflect the views of The World \nBank, its Board of Executive Directors, or the governments they represent. The World Bank does not \nguarantee the accuracy of the data included in this work. The boundaries, colors, denominations, and \nother information shown on any map in this work do not imply any judgment on the part of The World \nBank concerning the legal status of any territory or the endorsement or acceptance of such boundaries.\nNothing herein shall constitute or be considered to be a limitation upon or waiver of the privileges and \nimmunities of The World Bank, all of which are specifically reserved.\nRights and Permissions\nThis work is available under the Creative Commons Attribution 3.0 IGO license (CC BY 3.0 IGO)  \nhttp://creativecommons.org/licenses/by/3.0/igo. Under the Creative Commons Attribution license,  \nyou are free to copy, distribute, transmit, and adapt this work, including for commercial purposes,  \nunder the following conditions:\nAttribution —Please cite the work as follows: World Bank. 2018. “Cryptocurrencies and Blockchain.” \nEurope and Central Asia Economic Update (May), Washington, DC: World Bank. Doi: 10.1596/978-1-\n4648-1299-6. License: Creative Commons Attribution CC BY 3.0 IGO\nTranslation s—If you create a translation of this work, please add the following disclaimer along with the \nattribution: This translation was not created by The World Bank and should not be considered an official \nWorld Bank translation. The World Bank shall not be liable for any content or error in this translation.\nAdaptations —If you create an adaptation of this work, please add the following disclaimer along \nwith the attribution: This is an adaptation of an original work by The World Bank. Views and opinions \nexpressed in the adaptation are the sole responsibility of the author or authors of the adaptation and are \nnot endorsed by The World Bank.\nThird-party content —The World Bank does not necessarily own each component of the content \ncontained within the work. The World Bank therefore does not warrant that the use of any third-party-\nowned individual component or part contained in the work will not infringe on the rights of those third \nparties. The risk of claims resulting from such infringement rests solely with you. If you wish to re-use \na component of the work, it is your responsibility to determine whether permission is needed for that \nre-use and to obtain permission from the copyright owner. Examples of components can include, but \nare not limited to, tables, figures, or images.\nAll queries on rights and licenses should be addressed to World Bank Publications, The World Bank \nGroup, 1818 H Street NW, Washington, DC 20433, USA; e-mail: pubrights@worldbank.org.\nISBN (electronic): 978-1-4648-1299-6\nDOI: 10.1596/978-1-4648-1299-6\nCover design: World Bank ' metadata={'source': 'blkc.pdf', 'page': 3}
"
"page_content='Contents\niiiAcknowledgments  ...............................................................  v\nAbbreviations  ...................................................................  vii\nRegional Classification Used in this Report  ............................................  ix\nExecutive Summary ...............................................................  xi\nPART I: Economic Outlook  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  1\n1 Economic Developments and Prospects  . . . . . . . . . . . . . . . . . . . . . . . .  3\nOverview  ....................................................................  3\nGrowth is strong throughout the region ............................................  4\nGrowth appears to have peaked  .................................................  7\nThe region has shifted toward more exports  ........................................  11\n. . . and adapted to technological change  ..........................................  12\nA combination of factors caused the decline in labor productivity after the crisis  ...........  12\nNotes .......................................................................  19\nReferences ...................................................................  19\n2 Cryptocurrencies and Blockchain: Hype or Transformational  \n Technologies?   . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  21\nOverview  ....................................................................  21\nIntroduction ..................................................................  22\nCreating digital money without central banks  .......................................  24\nCreating digital markets without intermediaries ......................................  32\nBlockchain applications in Europe and Central Asia  ..................................  37\nPolicy challenges ..............................................................  45\nNotes .......................................................................  48\nReferences ...................................................................  49\nPart II: Selected Country Pages  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  51\nAlbania ......................................................................  53\nArmenia .....................................................................  55\nAzerbaijan  ...................................................................  57\nBelarus ......................................................................  59\nBosnia and Herzegovina ........................................................  61\nBulgaria  .....................................................................  63\nCroatia ......................................................................  65\nGeorgia  .....................................................................  67\nKazakhstan ...................................................................  69\nKosovo ......................................................................  71\nKyrgyz Republic ...............................................................  73\nMacedonia ...................................................................  75\nMoldova .....................................................................  77\nMontenegro ..................................................................  79\nPoland  ......................................................................  81' metadata={'source': 'blkc.pdf', 'page': 4}
"
"page_content='iv\u2003●   World Bank ECA Economic Update May 2018\nFigures\n1.1 Industrial production growth has soared since 2016, globally and in Europe  \nand Central Asia .........................................................  5\n1.2 Commodity prices have followed the economic upswing .........................  6\n1.3 Acceleration of growth has resulted in lower unemployment ......................  7\n1.4 Normalization of inflation in Europe and Central Asia continues  ...................  8\n1.5 Housing prices in the European Union have risen since 2013 ......................  9\n1.6 The Purchasing Managers’ Index reached an all-time high in Europe and  \nCentral Asia in 2018 ......................................................  10\n1.7 Government deficits in the region have fallen sharply since 2009  ..................  11\n1.8 Since the crisis, production in Europe and Central Asia has shifted toward exports .....  12\nB1.1.1 Recovery in Central Europe was similar to recovery after Asian financial crisis .........  13\nB1.1.2 Investment rates adjusted immediately to reversal in capital flows ..................  13\n1.9 Even after full recovery, the effects of the global financial crisis remain  ..............  14\n1.10 After the crisis, labor productivity increased at a slower rate  ......................  15\n1.11 The contribution of total factor productivity (TFP) to labor productivity growth  \ndeclined after the crisis  ...................................................  15\n1.12 Labor productivity growth in Germany is on a long-term downward trend . . . . . . . . . . . .  16\n2.1 As the price of bitcoin soared in 2017, so did competition among miners ............  26\n2.2 Three large mining pools provide half of all network blocks .......................  27\n2.3 Most mining revenue comes from the seignorage (block reward) of the network  ......  29\n2.4 Daily price movements of bitcoin continue to be large ...........................  31\nB2.2.1 Farmers in Europe and Central Asia are underinsured  ...........................  34\n2.5 Early use of bitcoin was clustered around gambling and the dark web  ..............  38\n2.6 Adoption of bitcoin is negatively correlated with the quality of institutions ...........  39\n2.7 Europe and Central Asia is the site of many initial coin offerings (ICOs) ..............  41\nB2.3.1 Georgia had the fastest-growing electricity consumption in Europe and  \nCentral Asia in 2010–14 ...................................................  43\nB2.3.2 Unexplained electricity demand in Georgia has risen rapidly since 2009 .............  44Boxes\n1.1 Similarities between recoveries in Central Europe after 2009 and  \nEast Asia in the late 1990s .................................................  13\n1.2 A new normal in Armenia  .................................................  17\n2.1 Equilibrium mechanisms in the bitcoin market  .................................  28\n2.2 Providing access to secure insurance .........................................  34\n2.3 Cryptocurrency mining and the demand for electricity in Georgia ..................  43\n2.4 Will central banks issue digital currencies?  ....................................  47Romania .....................................................................  83\nRussian Federation  ............................................................  85\nSerbia .......................................................................  87\nTajikistan  ....................................................................  89\nTurkey  ......................................................................  91\nTurkmenistan .................................................................  93\nUkraine ......................................................................  95\nUzbekistan ...................................................................  97\nTables\nE.1 Regional classification used in this report  .....................................  ix\n1.1 Growth has reached an all-time high in most countries in Europe and Central Asia .....  4' metadata={'source': 'blkc.pdf', 'page': 5}
"
"page_content='vAcknowledgments\nThis Europe and Central Asia (ECA) Economic Update is a joint product of ECA’s \nOffice of the Chief Economist, the Macro and Fiscal Management Global Practice, \nand the Poverty Global Practice.\nPart I was prepared by a team in the Chief Economist’s Office led by Hans \nTimmer and including Roy Sudharshan Canagarajah, Breda Griffith, Bingjie Hu, \nGeorgi Panterov, Charalampos Papamanthou, William Shaw, and Ekaterina \nUshakova. Chapter I benefitted from forecasts (presented in Part II) prepared by \neconomists in the Macro and Fiscal Management Global Practice. David Michael \nGould, Erik Feyen, Vincent Launay, Christopher David Miller, Stela Mocan, \nAnthony Molle, and Young Chul Kim provided valuable comments on Part I. \nPart II was prepared by teams from the Macro and Fiscal Management Global \nPractice (led by Andrew Burns, Maria De los Angeles Cuqui Gonzalez Miranda, \nLalita M. Moorty, and Gallina Andronova Vincelette) and the Poverty Global \nPractice (led by Luis-Felipe Lopez-Calva), with inputs from the Developments \nProspects Group (led by Ayhan Kose). These teams included the following staff: \nErdem Atas, Joao Pedro Wagner De Azevedo, Sarah Nankya Babirye, Elena \nBondarenko, Cesar Cancho, Marie-Anne Chambonnier, Alexandru Cojocaru, \nMarcel Chistruga, Pablo Facundo Cuevas, Maria Eugenia Davalos, Agim \nDemukaj, Mariam Dolidze, Donato De Rosa, Bakyt Dubashov, Olga Emelyanova, \nJosip Funda, Mismake D. Galatis, Anastasia Golovach, Claudia Gutierrez, Gohar \nGyulumyan, Kiryl Haiduk, Sandra Hlivnjak, Stella Ilieva, Maria Gabriela \nInchauste Comboni, Saida Ismailakhunova, Charl Jooste, Jonathan George \nKarver, Yeon Soo Kim, Aurelien Kruse, Sanja Madzarevic-Sujster, Mikhail \nMatytsin, Kristina Cathrine Mercado, Moritz Meyer, Jose Montes, Evgenij Najdov, \nMetin Nebiler, Minh Cong Nguyen, Trang Van Nguyen, Catalin Pauna, Habib \nNasser Rab, Alisher Rajabov, Nadir Ramazanov, Julio Revilla, Monica Robayo, \nPaul Andres Corral Rodas, Armineh Manookian Salmasi, Apurva Sanghi, Ilyas \nSarsenov, William Hutchins Seitz, Asli Senkal, Lazar Sestovic, Hilda Shijaku, \nBojan Shimbov, Emilia Skrok, Karlis Smits, Sangjin Song, David Andrew Stephan, \nThi Thanh Thanh Bui, Eskender Trushin, Vincent Belinga De Paul Tsoungui, \nChristoph Ungerer, Ekaterina Vostroknutova, Pinar Yasar and Bakhrom Ziyaev.\nEkaterina Ushakova oversaw the layout and production of the report. Barbara \nKarni edited and Michael Alwan typeset it. Paul Anthony Clare, Tamar Kobakhidze, \nArtem Kolesnikov, and Inga Paichadze provided communications and outreach \nsupport, including the dedicated webpage (http://www.worldbank.org/en/\nregion/eca/publication/europe-and-central-asia-economic-update). ' metadata={'source': 'blkc.pdf', 'page': 6}
"
"page_content='viiACP  Attraction Centers Program\nBoA  Bank of Albania\nBiH Bosnia and Herzegovina  \nCAD Current account deficit\nCBA  Central Bank of Armenia\nCBR Central Bank of Russia\nCBU Central Bank of Uzbekistan\nCNB Croatian National Bank\nCPI Consumer price index\nCROSTAT Croatian Bureau of Statistics\nDLT Distributed Ledger Technology\nECA  Europe and Central Asia\nECAPOV ECAPOV (ECA Poverty) database of standardized household surveys\nEEU Euroasian Economic Union\nEFSD Eurasian Fund for Stabilization and Development\nEU-SILC European Union Statistics on Income and Living Conditions\nFDI Foreign direct investment\nFX Foreign exchange\nFYR Fiscal year\nGDP  Gross domestic product\nGoA  Government of Azerbaijan\nHPP  Hydro-power plant\nIBA International Bank of Azerbaijan\nICO Initial coin offerings\nICT Information and communication technology\nIFI International financial institution\nIMF International Monetary Fund\nIPO Initial public offering\nIT Information technology\nLCU Local currency unit\nMSII Minimum Social Inclusion Income\nNBG National Bank of Georgia\nNBKR National Bank of the Kyrgyz Republic\nNBM National Bank of Moldova\nNBP  National Bank of PolandAbbreviations' metadata={'source': 'blkc.pdf', 'page': 8}
"
"page_content='viii\u2003●   World Bank ECA Economic Update May 2018\nNBR National Bank of Romania\nNBU National Bank of Ukraine\nNPL  Non-performing loans\nOPEC Organization of the Petroleum Exporting Countries\nPPA Power Purchasing Agreements\nPPP Purchasing power parity\nSAR Special administrative region\nSDR Special Drawing Rights\nSME Small and medium enterprise\nSOE State-owned enterprises\nSWIFT  Society for Worldwide Interbank Financial Telecommunications \nTFP Total factor productivity\nTSA Targeted Social Assistance\nUFRD Uzbekistan Fund for Reconstruction and Development\nWB World Bank\nWDI World Development Institute \nAlbania ALB\nArgentina ARG\nArmenia ARM\nAustralia AUS\nAustria AUT\nAzerbaijan AZE\nBelarus BLR\nBelgium BEL\nBosnia and Herzegovina BIH\nBrazil BRA\nBulgaria BRG\nCanada CAN\nChile CHL\nChina CHN\nColombia COL\nCroatia HRV\nCzech Republic CZE\nCyprus CYP\nDenmark DNK\nDominican Republic DOM\nEstonia EST\nFinland FIN\nFrance FRA\nGeorgia GEO\nGermany DEU\nGreece GRC\nHong Kong SAR, China HKGHungary HUN\nIndia IND\nIndonesia IDN\nIran, Islamic Rep. IRN\nIreland IRL\nItaly ITA\nJapan JPN\nKenya KEN\nKazakhstan KAZ\nKosovo XKX\nKyrgyz Republic KGZ\nLatvia LVA\nLithuania LTU\nLuxembourg LUX\nFYR Macedonia MKD\nMalaysia MYS\nMalta  MLT\nMexico MEX\nMoldova MDA\nMorocco MAR\nMontenegro MNE\nNew Zealand NZL\nNigeria NGA\nThe Netherlands NLD\nNorway NOR\nPakistan PAK\nPeru PERPhilippines PHL\nPoland POL\nPortugal PRT\nRomania ROM\nRussian Federation RUS\nSaudi Arabia SAU\nSerbia SRB\nSingapore SGP\nSlovak Republic SVK\nSlovenia SVN\nSouth Africa ZAF\nSpain ESP\nSweden SWE\nSwitzerland CHE\nTanzania TZA\nTajikistan TJK\nThailand THA\nTurkey TUR\nTurkmenistan TKM\nUkraine UKR\nUnited Arab Emirates ARE\nUnited Kingdom GBR\nUnited States USA\nUzbekistan UZB\nVenezuela, RB VEN\nVietnam VNMCountry Codes' metadata={'source': 'blkc.pdf', 'page': 9}
"
"page_content='ixThis report covers 47 countries referred to as Europe and Central Asia (ECA) coun-\ntries. These are divided into 10 groups: Western Europe, Southern Europe, Central \nEurope, Northern Europe, Western Balkans, South Caucasus, Central Asia, Russia, \nTurkey, and Other Eastern Europe.Regional Classification  \nUsed in this Report\nTABLE E  .1  Regional classification used in this report\nEurope \nand \nCentral \nAsiaEuropean \nUnion \nand \nWestern \nBalkansEuropean Union\nWestern\nBalkansWestern  \nEuropeSouthern  \nEuropeCentral  \nEuropeNorthern  \nEurope\nAustria\nBelgium\nFrance\nGermany\nIreland\nLuxemburg\nThe Netherlands\nUnited KingdomGreece\nItaly\nPortugal\nSpain\nCyprus\nMaltaBulgaria\nCroatia\nCzech Republic\nHungary\nPoland\nRomania\nSlovak Republic\nSloveniaDenmark\nFinland\nSweden\nEstonia\nLatvia\nLithuaniaAlbania \nBosnia and Herzegovina\nKosovo\nFYR Macedonia\nMontenegro\nSerbia\nEastern \nEurope \nand \nCentral \nAsiaSouth  \nCaucasusCentral  \nAsiaRussian \nFederation TurkeyOther Eastern \nEurope\nArmenia\nAzerbaijan\nGeorgiaKazakhstan\nKyrgyz Republic \nTajikistan\nTurkmenistan\nUzbekistan Belarus\nMoldova \nUkraine' metadata={'source': 'blkc.pdf', 'page': 10}
"
"page_content='xiWith growth in Europe and Central Asia having peaked at 2.7 percent in 2017, policy mak-\ners face new challenges. How can they navigate the expected cyclical downturn? How can \nthey boost underlying potential growth that has slowed, especially since the global finan-\ncial crisis? How should they adjust regulations and reform policies to benefit from the digi-\ntal revolution while mitigating the transition costs? This report summarizes the economic \noutlook for the region and examines the adoption of new blockchain technologies. In doing \nso, it touches on all three challenges. \nThe 2017 rates of growth of GDP (2.7 percent) and private consumption (2.5 percent) \nwere faster than at any time since the global financial crisis of a decade ago. Growth was \nespecially strong in Central Europe and in Turkey, but it was robust in other parts of the \nregion as well. Unemployment rates are now close to their 2007 levels in most countries, \nand average inflation exceeds 2 percent, indicating that little spare capacity is left. \nDeceleration of growth is expected to be modest, but a sharper correction remains pos-\nsible. Cyclical forces can easily reinforce one another, and additional shocks—rising pro-\ntectionism, geopolitical tensions, larger than expected disruptions caused by Brexit—could \nmaterialize. There is little room for further monetary stimulus if the expected slowdown is \nsharper than expected. The region has rebuilt some fiscal buffers, however. The average \nfiscal deficit in 2017 is estimated at just above 1 percent of GDP , down from 6 percent dur -\ning the 2009 crisis and close to levels at the end of the boom that preceded that crisis. Fiscal \nstimulus is thus an option in several countries in case of a sharper than expected slow-\ndown. Under the baseline scenario of only a modest deceleration, however, a further \nbuildup of fiscal buffers seems the best strategy. \nMany countries in the region have proven to be fertile ground for the development of \ncryptocurrencies and blockchain technologies. The emergence of these technologies is part \nof a broader wave of technologies that facilitate peer-to-peer (P2P) commerce, the indi-\nvidualization of products, and the flexibilization of production methods. \nFor a variety of reasons, these trends gained traction after the global financial crisis a \ndecade ago. Blockchain technologies aim to organize P2P transactions and P2P informa-\ntion flows without intermediaries and central banks have opportunities to use blockchain \ntechnologies to improve their services. \nIt is unclear how these technologies will develop in the long run; their ultimate impact \nmay be very different from the current applications. In response, policy makers should \nstrike a balance between curbing the hype surrounding these new technologies and un-\nleashing potentially transformational new opportunities. While encouraging and facilitat-\ning these innovations, they should prepare to craft new regulations to create a level playing \nfield for new and old industries, by adjusting financial oversight, consumer protection, \nand tax administration. They should also address the massive volume of electricity used \nto mine cryptocurrencies. Executive Summary' metadata={'source': 'blkc.pdf', 'page': 12}
"
"page_content='PART\nEconomic OutlookI' metadata={'source': 'blkc.pdf', 'page': 14}
"
"page_content='3\n1\n3Overview\nGrowth is strong in Europe and Central Asia (ECA), stronger than at any time \nsince the global financial crisis of a decade ago. GDP rose 2.7 percent, and annual \nprivate consumption rose 2.5 percent. Growth was especially strong in Central \nEurope and Turkey, but it was robust in other parts of the region as well. \nGrowth has likely peaked, however. Increased capacity utilization, unemploy-\nment rates close to their 2007 levels, and average inflation now exceeding 2 per -\ncent are all signals that growth is likely to decelerate. \nThe peaking of growth raises several questions\n• How well is the region prepared for a sharper than expected cyclical down-\nturn? As fiscal deficits have fallen to an average 1.5 percent of GDP , fiscal \npolicy could be used. But in most countries, monetary tightening would prob-\nably be more appropriate. \n• Why is the underlying structural growth so low? Growth in 2017 was 0.4 per -\ncentage points below the average growth rate between 2000 and 2007. The \ndecelerating growth trend is associated with the shift toward services, the de-\ncline in capital deepening, and a slower pace of measured total factor produc-\ntivity (TFP). \n• Has the economic upswing been used to adjust to the new normal of digital \ntechnologies, more flexible employment contracts, and increased tradability \nof goods and services? An unfinished agenda remains in terms of rethinking \nsocial protection and facilitating private sector development in new, interna-\ntionally competitive sectors. It is important that adjustments toward this new \nreality continue, even if the expected slowdown materializes or deepens. Economic Developments  \nand Prospects' metadata={'source': 'blkc.pdf', 'page': 16}
"
"page_content='4\u2003●   World Bank ECA Economic Update May 2018\nGrowth is strong throughout the region \nGDP growth of 2.7 percent in 2017 translated into a robust 2.5 percent increase in \nper capita GDP , as the population is growing at a mere 0.2 percent a year. This \nrate of growth was the fastest since 2007 and 0.9 percentage points faster than in \n2016 (table 1.1). Growth exceeded 4 percent in 20 of the 47 countries in the region. \nIreland and Malta enjoyed growth of more than 5 percent. Romania and Slovenia \nin Central Europe; Armenia and Georgia in the South Caucasus; and Turkey, Ta-\njikistan, and Uzbekistan in Central Asia also reported strong growth. Azerbaijan, \nBelarus, and the Russian Federation emerged from recession (although their \ngrowth was only moderate). Not a single country in the region experienced a \ncontraction in 2017.\nPrivate sector demand drove this vigorous performance. Government con -\nsumption increased by less than 1 percent on average in the region. Private in-\nvestment rose by more than 4 percent, and growth in investment outpaced GDP \ngrowth for the fourth year in a row. The volume of exports and imports expanded \nby more than 5 percent in 2017, roughly twice as fast as GDP growth.1 \nThe acceleration of growth has been a global phenomenon. Since the summer \nof 2016, growth of global industrial production has more than doubled, ap-\nproaching 5 percent in recent months, very close to the 4.8 percent global growth \nduring the 2003–07 boom. \nTABLE 1.1 Growth has reached an all-time high in most countries in Europe and Central Asia \nAnnual GDP growth (percent)Change in forecast  \nsince October 2017  \n(percentage points)\nRegion/subregion 2015 20162017 \n(estimate)2018 \n(forecast)2019 \n(forecast) 20162017 \n(estimate)2018 \n(forecast)\nEurope and Central Asia 1.9 1.8 2.7 2.3 2.1 0.0 0.5 0.4\nEuropean Union and Western Balkans 2.2 1.9 2.5 2.2 1.9 0.0 0.4 0.4\nEuropean Union 2.2 1.9 2.5 2.2 1.9 0.0 0.4 0.4\nWestern Europe 2.2 1.8 2.3 2.1 1.7 0.0 0.4 0.4\nNorthern Europe 2.6 2.5 2.5 2.3 2.1 0.2 0.2 0.2\nCentral Europe 3.9 3.1 4.6 4.1 3.6 0.2 0.9 0.7\nSouthern Europe 1.6 1.7 2.2 1.9 1.6 0.0 0.3 0.3\nWestern Balkans 2.2 3.0 2.4 3.1 3.4 0.1 −0.3 −0.1\nEastern Europe and Central Asia 0.3 1.1 3.7 3.0 3.0 0.0 1.1 0.4\nSouth Caucasus 1.7 −1.6 2.0 2.6 4.0 0.5 1.7 0.8\nCentral Asia 2.8 2.8 4.4 3.5 3.6 0.0 0.1 0.0\nRussian Federation −2.5 −0.2 1.5 1.7 1.8 0.0 −0.2 0.0\nTurkey 6.1 3.2 7.4 4.7 4.4 0.0 3.5 1.2\nOther Eastern Europe −7.6 0.8 2.5 3.3 3.6 0.1 0.5 0.2\nSource: World Bank.' metadata={'source': 'blkc.pdf', 'page': 17}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u20035\nThe ECA region closely followed that acceleration (figure 1.1). The region as a \nwhole outperformed the United States in 2017, and growth of industrial produc-\ntion in Central Europe and Turkey was on par with growth in China and India. \nThis performance lies in sharp contrast to performance in the aftermath of the \nEuropean banking and debt crisis, when the region’s performance significantly \nlagged that of the world as a whole. \nDuring this global acceleration, commodity prices rebounded. Copper prices, \nwhich are closely linked to the industrial cycle, increased 43 percent between \nOctober 2016 and March 2018, more than any other commodity. Oil prices in-\ncreased 30 percent over the same period (figure 1.2, panel a), providing some \nrelief for energy exporters and recipients of remittances in the eastern part of the \nregion. Consistent with their strong relationship with energy prices, grain prices \nincreased 18 percent between October 2016 and March 2018. Other agricultural \nprices declined, leaving the index of agricultural prices flat. \nThe total nonoil commodity price index increased 10 percent over the last year \nand a half, largely reflecting the weakening of the U.S. dollar over that period, as \nall commodity prices are measured in dollars. The dollar depreciated 11 percent \nagainst the euro and 6 percent against the Chinese renminbi over this period. \nAverage commodity prices expressed in these two currencies were thus relatively \nstable. The dollar also depreciated against other currencies in the region. Between \nOctober 2016 and March 2018, it fell 16 percent against the Czech koruna, 14 \npercent against the Albanian lek and the Polish zloty, 9 percent against the Rus-\nsian ruble and the Hungarian forint, 7 percent against the Romanian leu, and 3 \npercent against the Kazakh tenge. Only a few regional currencies depreciated \nduring this period against the dollar. The Turkish lira depreciated 27 percent, and \nthe Azeri manat depreciated 5 percent. Metal and oil prices increased in all cur -\nrencies, and many other commodity prices declined in euros or other currencies \nin the region. \nDespite their cyclical upturn, oil prices are nowhere near their historical highs. \nIndeed, adjusted for inflation, global oil prices are 57 percent below their peak of /endash.case3/endash.case2/endash.case10123456\n2013M03 2013M09 2014M03 2014M09 2015M03 2015M09 2016M03 2016M09\n2017M03 2017M09 2018M03Percentage growth 3 months average \nover same period a year ago\nWorldE urope and Central AsiaFIGURE 1. 1  Industrial \nproduction growth has \nsoared since 2016, \nglobally and in Europe \nand Central Asia\nSource: World Bank.' metadata={'source': 'blkc.pdf', 'page': 18}
"
"page_content='6\u2003●   World Bank ECA Economic Update May 2018\nJuly 2008 and 43 percent below the average level between early 2011 and late 2014 \n(figure 1.2, panel b).2 There are no signs that oil markets will return to those re-\ncord prices. Consequently, adjustments in countries that directly or indirectly \ndepend on oil exports should continue. \nSeveral of these countries have become more competitive in international \nmarkets and begun diversifying their economies, partly as a result of the depre-\nciation of real exchange rates since the fall in oil prices late 2014. Unexploited \nopportunities remain to shift farther away from nontradable production. Domes -\ntic reforms that correct price distortions, eliminate privileges for state-sponsored \ncompanies, and unleash more competition and innovation remain essential. The \nrecent wave of reforms in Uzbekistan sets a good example.3 They will likely lead \nto further diversification and may trigger reforms in surrounding countries.FIGURE 1.2  Commodity \nprices have followed \nthe economic upswing\n050100150200250300\n2000M01\n2001M07\n2003M01\n2004M07\n2006M01\n2007M07\n2009M01\n2010M07\n2012M01\n2013M07\n2015M01\n2016M07\n2018M01\nOilC opper\nOilC opper050100150200250300\n1960M01\n1965M04\n1970M07\n1975M10\n1981M01\n1986M04\n1991M07\n1996M10\n2002M01\n2007M04\n2012M07\n2017M10a. Commodity prices have risen since late 2016. . . \nb.  . . . but they are nowhere near their historical peaks Commodity price (dollars per unit) Commodity price (dollars per unit)\nSource: World Bank.\nNote: Panel a: Index of nominal prices in U.S. dollars; January 2015 = 100. \nPanel b: Index of real prices (deflated with U.S. Consumer Price Index), January 2015 = 100.' metadata={'source': 'blkc.pdf', 'page': 19}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u20037\nGrowth appears to have peaked\nSignals are mounting that global growth has peaked. With less spare capacity, \nlower unemployment, rising inflation, and tightening monetary policy, the po -\ntential for continued rapid growth has diminished, especially in the ECA region. \nUnemployment is now close to where it was at the height of the boom a de-\ncade ago (figure 1.3, panel a). The labor market has become tight, especially in \nNorthern Europe. The rapid decline in unemployment is remarkable, given the \nhistory of hysteresis in the region’s labor markets. After every major crisis, the \ntypical pattern in Europe was for unemployment rates to settle at higher levels. \nIt is especially encouraging that youth unemployment in the European Union \nhas fallen sharply. It is now back to 2005 levels (figure 1.3, panel b), having fallen \nFIGURE 1.3  Acceleration of \ngrowth has resulted in \nlower unemployment\n024681012\n1990 1992\n1994\n1996 1998\n2000 2002\n2004\n2006\n2008 2010 2012\n2014\n2016Unemployment rate (percent)\n10152025\n46810\n2000\n2002\n2004 2006 2008 2010\n2012\n2014\n2016Unemployment rate (percent)\nUnemployment rate (percent)\nWorkers 25 and older (l eft-hand axis)\nWorkers under 25  (right-hand axis)a. Unemployment in Europe and Central Asia has almost returned to precrisis levels\nb. Youth unemployment in the European Union closely tracks unemployment of older work ers \nSources: World Economic Outlook, April 2018 (panel a); Eurostat (panel b).' metadata={'source': 'blkc.pdf', 'page': 20}
"
"page_content='8\u2003●   World Bank ECA Economic Update May 2018\nfrom 24.0 in 2013 percent to 16.8 percent in 2017 (the overall unemployment rate \nfell from 9.5 percent to 6.7 percent over this period).4 \nAverage inflation in the western part of the region has been almost 2 percent \nsince early 2017 (figure 1.4). That is a critical change from the deflationary threats \nin the aftermath of the European banking crises. Between 2012 and 2016, the \nconsumer price index declined in at last one year in Armenia, Bosnia and Herze-\ngovina, Bulgaria, Croatia, Cyprus, Estonia, Finland, Georgia, Greece, Ireland, It-\naly, Lithuania, Macedonia, Montenegro, Poland, Romania, the Slovak Republic, \nSpain, Sweden, and Switzerland. In several of these countries, the GDP deflator \nstill rose, and the drop in consumer prices reflected terms-of-trade gains. Never -\ntheless, the deflationary threat was a serious concern and the manifestation of \nunderutilized resources. \nNone of these countries experienced deflation in 2017. The average inflation \nrate of 2 percent is close to the target of monetary authorities. As a result, the Euro-\npean Central Bank will likely discontinue quantitative easing in 2018; central banks \noutside the euro area are also expected to tighten their policies. Tightening has \nalready started in Turkey, where inflation has reached double-digit levels. \nAsset prices have risen even faster than consumer prices (figure 1.5). The in-\ncrease in real estate prices is not nearly as extreme as it was during the boom a \ndecade ago, but in Northern Europe double-digit annual increases were not un-\ncommon in 2017. This boom is an additional reason for monetary policy makers \nto raise interest rates.\nIn the eastern part of the region, monetary policies are likely to tighten in com -\ning years, even as inflation has recently fallen (figure 1.4). High inflation in 2015 \nand 2016 was part of a one-time price adjustment after the fall in oil prices and \nthe subsequent unavoidable depreciations of exchange rates. That adjustment \nFIGURE 1.4  Normalization \nof inﬂation in Europe and \nCentral Asia continues  \n/endash.case10123456789\n2013M01 2013M08 2014M03 2014M10 2015M05 2015M12\n2016M07\n2017M02 2017M09 2018M04\nEastern EC AW estern ECAPercentage change over three-month\naverage in previous year\nSource: World Bank.\nNote: Western ECA is the unweighted average of 29 countries: Albania, Austria, Belgium, Bulgaria, Bosnia and Herzegovina, Croatia, the Czech \nRepublic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Luxemburg, Latvia, Macedonia, the Netherlands, Portugal, \nRomania, Serbia, the Slovak Republic, Slovenia, Spain, Sweden, the United Kingdom, and Turkey. Eastern ECA is the unweighted average of nine \ncountries: Armenia, Azerbaijan, Belarus, Georgia, Kazakhstan, the Kyrgyz Republic, Moldova, the Russian Federation, and Tajikistan.' metadata={'source': 'blkc.pdf', 'page': 21}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u20039\nhas been completed. Further inflation should now be controlled by central banks, \nwhich have to build their credibility with floating exchange rates. Now that oil \nprices are recovering, tighter monetary policies make sense, as they can allow \nhigher prices to be absorbed by appreciating currencies. \nTighter monetary policy and rising interest rates will restrain domestic growth \nand reduce capital flows to emerging economies. The capital flows that were \nsearching for yields in emerging economies when interest rates in high-income \ncountries were close to zero will likely decline, moderating growth in countries with \nlarge external funding needs. In such an environment, a cyclical downturn is more \nlikely than further acceleration or even stabilization of growth at current levels. \nThat slowdown may already be happening. The Purchasing Managers’ Index, \nwhich combines various indicators in the manufacturing sector (new orders, \ninventory levels, production, deliveries, employment), has fallen in the re-\ngion since the beginning of 2018 (figure 1.6, panel a). The drop from the peak \nreached in the last six months was particularly large in France, Germany, Italy, \nTurkey, and the United Kingdom, even if the index was still above 50, indicat-\ning growth (figure 1.6, panel b). \nThe coming cyclical downturn is expected to be modest, mainly because, with \nfew exceptions, there are no signs of overheating that require sharp corrections. \nInvestment ratios are still at balanced levels, and no steep declines in those ratios \nare expected. Inflation is at normal levels, and monetary tightening can be very \ngradual. GDP growth for the region is expected to fall from 2.7 percent in 2017 to \n2.3 percent in 2018 and 2.1 percent in 2019. \nThe expected slowdown is very similar for the eastern and western parts of \nthe region. However, there are marked differences between smaller subregions. \nIn the eastern part of the region, almost all the slowdown in growth is forecast to \ncome from Turkey, with a modest strengthening of growth in oil-exporting coun-\ntries. In the western part of the region, the slowdown is expected to be rather \nevenly distributed among members of the European Union, and some accelera-\ntion of growth is expected in the Western Balkans. FIGURE 1.5  Housing prices \nin the European Union have \nrisen since 2013\n/endash.case8/endash.case404812\n2006Q1 2007Q2 2008Q3 2009Q4 2011Q1 2012Q2\n2013Q3 2014Q4 2016Q1 2017Q2Annual percentage growth\nNominal housing prices Housing prices deﬂated with CPI\nSources: Data from Eurostat and the Federal Reserve Bank of St. Louis.' metadata={'source': 'blkc.pdf', 'page': 22}
"
"page_content='10\u2003●   World Bank ECA Economic Update May 2018\nAlthough there are good reasons to expect only a modest deceleration of \ngrowth, a sharper correction is possible. Cyclical forces can easily reinforce one \nanother, and additional shocks—including rising protectionism, geopolitical ten-\nsions, and larger than expected disruptions from Brexit—could slow growth.\nDoes the region have the capacity for countercyclical policies? There is no \nroom for further monetary stimulus; at most, the expected monetary tightening \ncould be delayed slightly. The region has rebuilt some fiscal buffers. The average \nfiscal deficit is estimated to have been just above 1 percent of GDP in 2017, down \nfrom 6 percent of GDP during the 2009 crisis; it is close to levels at the end of the \nboom that preceded that crisis (figure 1.7). Fiscal stimulus is thus an option in \nseveral countries in the event of a sharper than expected slowdown. Under the \nbaseline scenario of only a modest deceleration, further buildup of fiscal buffers \nseems the best strategy. FIGURE 1.6  The Purchasing \nManagers ’ Inde x reached \nan all-time high in Europe \nand Central Asia in 2018\n444648505254565860\n2014M01 2014M07 2015M01 2015M07 2016M01 2016M07 2017M01 2017M07 2018M01Inde x value\nEurope and Central Asia World\n4547495153555759616365\nCzech Republic FranceGermany HungaryItaly\nPoland\nRussian Federation\nSpainTurkey\nUnited KingdomInde x value\nMarch 2016March 2018Max October 2017–March 2018a. Recent weak ening was stronger in Europe and Central Asia than in the rest of the world\nb. W eakening occurred in all of the region ’s major economies \nSource: World Bank.\nNote: A value of more than 50 indicates expansion. ' metadata={'source': 'blkc.pdf', 'page': 23}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u200311\nTwo additional questions are worth investigating. Did countries in the region \nuse the recovery to adjust the structure of their economies, to better equip them \nfor future challenges? Why has potential growth been slower since the crisis than \nit was during the boom that preceded it? The rest of this chapter addresses these \nquestions. \nThe region has shifted toward more exports.\xa0.\xa0.\nThe biggest and most important adjustment during the recovery has been the \nshift of production capacity toward exports. Despite the slowdown in global \ntrade, the share of exports in GDP is now 10 percentage points higher than it was \nduring the 2000s (figure 1.8). This shift is important, because the economic struc-\nture during the 2003–07 boom, when growth in many countries in the region was \ndriven largely by expansion of nontradable sectors, was no longer sustainable. \nDuring that boom, capital inflows, oil revenues, and inflows of remittances re-\nsulted in increased domestic spending and a related loss in international com-\npetitiveness. In the new normal after the crisis, all three forms of foreign inflows \nare more moderate. The change has created the opportunity to become more \ncompetitive in international markets while reducing investments in real estate \nand other nontradable sectors. \nImports have also increased as a share of GDP , albeit by less than exports. The \noverall current account surplus of the region has thus increased, largely because \nthe deficits that Central European countries financed with massive capital in-\nflows during the boom have disappeared. These inflows came with a sharp de-\ncline in investment ratios in those countries. \nThis adjustment is similar to the correction in East Asia after the 1998 financial \ncrisis (box 1.1). During the 1990s, emerging East Asian economies received large \ncapital inflows after they opened up to global markets, just as Central Europe did \nlater, during the 2000s. The reversal of capital flows in 1998 had similar effects on \nEast Asia as the 2008 crisis did on Central Europe.FIGURE 1. 7  Government \ndeﬁcits in the region have  \nfallen sharply since 2009\n/endash.case7/endash.case6/endash.case5/endash.case4/endash.case3/endash.case2/endash.case102000 200120022003200420052006200720082009 2010 2011201220132014201520162017General government balanc e\nin ECA (percent of GDP)\nSource: World Economic Outlook, April 2018.' metadata={'source': 'blkc.pdf', 'page': 24}
"
"page_content='12\u2003●   World Bank ECA Economic Update May 2018\n. . . and adapted to technological change\nApart from this macroeconomic adjustment, countries are adapting to the rapid \nchange in technologies caused by the digital revolution, which has far-reaching \nconsequences for the way production, labor, and commerce are organized. The \nanalysis of how countries are adapting is beyond the scope of this chapter. Chap-\nter 2 examines ECA’s involvement in some of these new technologies. \nIn both regions, large current account deficits during the boom were financed \nwith capital inflows that were reversed during the crisis. Emerging economies in \nEast Asia received large capital inflows during the 1990s, after they opened their \neconomies to global markets. Central European economies received large flows \nof foreign direct investment and other capital before and during their accession \nto the European Union. Their aggregate current account deficit widened to more \nthan 8 percent of GDP in 2007. Heavy borrowing in foreign markets increased the \nvulnerability of both corporate and financial sectors to capital flow reversals \n(Truman 2013). In both cases, the reversal of capital inflows led to a steep and \nimmediate decline in investment rates. In East Asia the loss in income was larger, \nso the immediate fall in investment rates was greater. Investments rates bounced \nback subsequently, but they remained below the preceding boom levels. \nA combination of factors caused the decline in labor \nproductivity after the crisis\nGrowth in ECA returned to precrisis levels in 2017. It has not been strong enough \nto compensate for the production losses that have occurred since the crisis, how-\never (figure 1.9). Moreover, as little spare capacity is left, it is unlikely that these \nlosses can be recouped in the coming years. Thus not only actual growth but also \npotential growth has declined since the crisis. FIGURE 1.8  Since the crisis, \nproduction in Europe and \nCentral Asia has shifted \ntoward e xports\n253035404550\n2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017Percent\nNominal ex port share of GDP Nominal import share of GDP\nSource: World Bank.' metadata={'source': 'blkc.pdf', 'page': 25}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u200313\nSimilarities between recoveries in Central Europe after 2009 \nand East Asia in the late 1990s\nThe recovery of economies in Central Europe from \nthe 2008–09 global financial crisis was comparable \nto the recovery of East Asia following the 1998 \nfinancial crisis. Both recoveries took about eight \nyears. In East Asia, however, the impact of the crisis was much greater. Five years after the crisis began, \nGDP in East Asia was 37 percent below its precri -\nsis level. In Central Europe, the corresponding loss \nwas 20 percent. \nBOX 1.1\nFIGURE B1. 1.1  Re covery in Central Europe was similar to recovery after Asian ﬁnancial crisi s\n/endash.case60/endash.case50/endash.case40/endash.case30/endash.case20/endash.case100t-1 tt+1 t+2 t+3 t+4 t+5 t+6 t+7 t+8Real GDP inde x minus\ncounter factual a. The postcrisis loss in real GDP in \nCentral Europe was smaller than in East Asia…\nEast Asia and P aciﬁc (t = 1998; 1997 = 100)\nCentral Europe (t = 2009; 2008 = 100)/endash.case18/endash.case16/endash.case14/endash.case12/endash.case10/endash.case8/endash.case6/endash.case4/endash.case2024t-10 t-8 t-6 t-4 t-2 tt +2 t+4t +6 t+8b. . . . but recovery from the global \nﬁnancial crisis took as lon g\nEast Asia and P aciﬁc (t = 1998)\nCentral Europe (t = 2009)Real GDP growth minus\nprecrisis average growth rate \nSource: Data from World Development Indicators and Eurostat. \nNote: The postcrisis counterfactual real GDP series were constructed assuming that annual GDP growth remained at the precrisis \naverage growth rates. East Asia and Pacific includes Indonesia, Lao PDR, Malaysia, the Philippines, Thailand, and Vietnam. \nFIGURE B1. 1.2  Investment rates adjusted immediately to reversal in capital ﬂows\n/endash.case10/endash.case8/endash.case6/endash.case4/endash.case20246810\nt-10 t-8t -6 t-4t -2 tt +2 t+4t+6 t+8a. Central European economies ran larger current \naccount deﬁcits during the precrisis boom period . . .b. . . . and e xperienced lower investment\nrates in the years after the crisis\n101520253035\nt-10 t-8 t-6 t-4 t-2 tt +2 t+4t +6 t+8Investment as share\nof GDP (percent)\nCentral Europe East Asia and Pa ciﬁc Central Europe East Asia and PaciﬁcCurrent account balance\nas share of GDP (percent)\nSource: Data from World Development Indicators and Eurostat. \nNote: East Asia and Pacific includes Indonesia, Lao PDR, Malaysia, the Philippines, Thailand, and Vietnam. \n(Continued next page)' metadata={'source': 'blkc.pdf', 'page': 26}
"
"page_content='14\u2003●   World Bank ECA Economic Update May 2018\n(continued)\nIn both regions, large current account defi -\ncits during the boom were financed with capital \ninflows that were reversed during the crisis. Emerg -\ning economies in East Asia received large capital \ninflows during the 1990s, after they opened their \neconomies to global markets. Central European \neconomies received large flows of foreign direct \ninvestment and other capital before and dur -\ning their accession to the European Union. Their \naggregate current account deficit widened to more than 8 percent of GDP in 2007. Heavy borrowing \nin foreign markets increased the vulnerability of \nboth corporate and financial sectors to capital flow \nreversals (Truman 2013). In both cases, the rever -\nsal of capital inflows led to a steep and immediate \ndecline in investment rates. In East Asia the loss in \nincome was larger, so the immediate fall in invest -\nment rates was greater. Investments rates bounced \nback subsequently, but they remained below the \npreceding boom levels.\nBOX 1.1\nFIGURE 1.9  Even after full \nrecovery , the eﬀects of the \nglobal ﬁnancial crisis remain\n/endash.case5/endash.case4/endash.case3/endash.case2/endash.case1012345\n1996199719981999200020012002200320042005200620072008200920102011201220132014201520162017Annual GDP growth (percent)\nReal GDP growth in the European Union a. Annual growth in the European Union is back to the precrisis average. . .\nb. . . . but lasting damage remainsAverage growth in the European Union, 1996–2017\n/endash.case18/endash.case16/endash.case14/endash.case12/endash.case10/endash.case8/endash.case6/endash.case4/endash.case2024\n1996199719981999200020012002200320042005200620072008200920102011201220132014201520162017Cumulative GDP loss after crisis, \nrelative to precrisis trend\nSource: Eurostat.' metadata={'source': 'blkc.pdf', 'page': 27}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u200315\nIn the region’s middle-income countries, slower labor productivity growth \ncaused most of the deceleration in potential growth; only 0.35 percentage points \nof the slowdown in potential growth can be attributed to slowing labor supply \ngrowth (World Bank 2018). The changing pace of capital deepening cannot ex-\nplain this slowdown in labor productivity, most of which is reflected in total factor \nproductivity (TFP), the unexplained factor in production functions (figure 1.10). \nDifferences across countries were considerable, and many idiosyncratic events \noccurred. But after the crisis, every country in the region except Ireland experi-\nenced a decline in the contribution of TFP to labor productivity growth (figure \n1.11). In most countries, TFP actually fell. \nFIGURE 1. 10  A fter the crisis, \nlabor productivity increased \nat a slower rate \n/endash.case6/endash.case5/endash.case4/endash.case3/endash.case2/endash.case101234\n1990199119921993199419951996199719981999200020012002200320042005200620072008200920102011201220132014Annual growth of real GDP per work er \nin all ECA countries (percent)\nCapital deepening contribution\nTFP growth contribution\nLabor productivity growth\nSource: Penn World Table 9.0 dataset.\nFIGURE 1. 11  The contribution \nof total factor productivity \n(TFP) to labor productivity \ngrowth declined after \nthe crisis \nAUTBELFRAIRL\nLUXGBR\nGRCITAPRT ESP\nCYPMLT\nHRVCZEHUNPOL\nROUSVK\nFINSWE ESTLVALTU\nBIH MKDSRB\nARM\nAZEGEO\nKAZ\nKGZTJK\nRUS BLRMDA\nUKR\n/endash.case4/endash.case2024681012\n/endash.case4 /endash.case2 24 68 10 12Contribution by TFP to labor productivity growth \n2009–14 (percentage points)\nContribution by TFP to labor productivity growth 2003–08 (percentage points)\nSource: Penn World Table 9.0 dataset.' metadata={'source': 'blkc.pdf', 'page': 28}
"
"page_content='16\u2003●   World Bank ECA Economic Update May 2018\nLabor productivity growth can be decomposed into three components: \n• changes in labor productivity within each economic sector (the within-sector \ncomponent)\n• changes in labor productivity resulting from the reallocation of labor across \nsectors (the shift component)\n• a cross component that represents the interaction between the change in labor \nproductivity within a given sector and the change in labor input share of that \nsector.5 \nAs the third component is numerically insignificant, analysis of labor produc-\ntivity growth can be based on the within-sector and shift components. This de-\ncomposition reveals three important trends in the drivers of labor productivity in \nGermany and some countries in ECA (figure 1.12). \n• The deceleration in labor productivity growth in Germany started during the \n1980s and continued in subsequent decades. Most of it was caused by weaker \nproductivity growth within sectors. This pattern is also evident in other major \nEuropean countries. \n• The contribution of sectoral shifts to overall labor productivity growth in Ger -\nmany changed markedly over time. Between the 1970s and the start of the \n2000s, the shift of employment toward more productive sectors increased la-\nbor productivity growth by about half a percentage point. The contribution of \nsectoral shifts to labor productivity growth fell to zero after 2000 and turned \nnegative around the time of the 2008 global financial crisis. The long-term \ntrend of labor shifting toward sectors with higher labor productivity, and \nlikely higher capital intensity, came to an end when the digital economy start-\ned in earnest (see below). The contribution to labor productivity growth of the \nshift of labor to more productive sectors was greater in Central European \ncountries than in Germany before the crisis, but as in Germany, it diminished \nFIGURE 1. 12  Labor \nproductivity growth in \nGermany is on a \nlong-term downward trend \n/endash.case4/endash.case3/endash.case2/endash.case10123456\n1971 1975 1979 1983 1987 1991 1995 1999 2003 20072011 2015Labor productivity growth (percent)\nWithin-sector componentS hift component\nSource: Data from KLEMS dataset (available at http://www.euklems.net/). Data for years before 1995 are KLEMS estimates. \nNote: Labor productivity is calculated as real value added per hour worked. ' metadata={'source': 'blkc.pdf', 'page': 29}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u200317\nafter the crisis. This change is in line with the boom and bust in the growth in \nFDI flows to these countries (EBRD 2015; World Bank 2018). During the boom \nperiod, FDI inflows created high-productivity jobs. These flows plummeted \nafter the crisis. The contribution of the sectoral shift to productivity declined \nalso in Armenia after the crisis (box 1.2).\n• Major crises—the second oil crisis of the late 1970s and the global financial \ncrisis—led to a permanent loss in productivity. Even where productivity \ngrowth returned to the original (downward) trend, the damage of the crisis \nwas not recouped. Productivity remains below the levels that would have \nbeen achieved had the crisis not occurred. The lasting impact of deep crises on \nproductivity growth may have been caused by the loss of capital and skills \nthat become obsolete or by a loss in confidence by workers who suffered ex-\ntended bouts of unemployment. \nThe reasons for the long-term decline in within-sector labor productivity \ngrowth, in many ECA countries and globally, have been debated in the economic \nliterature. The change in within-sector labor productivity can be decomposed \ninto changes generated by capital deepening and changes that cannot be ex-\nplained (TFP). The contribution of capital deepening shrank significantly in sev-\neral, but not all, countries during the years around the 2008 crisis. And almost all \ncountries experienced a decline in within-sector TFP growth. \nThe literature has suggested several possible causes for the slowdown in TFP . \nFirst, deep reforms led to a temporary rise in productivity growth in several ECA \nA new normal in Armenia\nArmenia’s economy changed markedly following \nthe global crisis. Per capita GDP growth fell from \n8.4 percent a year in 2003–09 to 3.2 percent a year \nin 2010–16. Labor productivity growth was similar \nin the two periods (6.7 percent a year before the \ncrisis and 6.2 percent after), but migration flows, \nemployment levels, and the composition of labor \nproductivity growth changed dramatically. \nDuring the boom, many people found jobs \nabroad, especially toward the end of the period, \nwhen oil revenues skyrocketed in Russia. As a \nresult, Armenia’s population declined by almost 5 \npercent between 2003 and 2009. At the same time, \nmany jobs were created in construction and other \nnontradable sectors, to satisfy domestic demand \nfueled by remittances. The combination of emi -\ngration and job creation boosted the share of the \npopulation that was employed from 36 percent in \n2003 to 40 percent in 2009. During those six years, \nthe shift toward capital-intensive construction led to an increase in labor productivity of 4 per -\ncentage points a year. Within-sector productivity \ngrowth contributed only 2.7 percentage points to \noverall labor productivity growth, perhaps because \nelevated domestic demand reduced competitive \npressures on the supply side. \nThese patterns reversed in the aftermath of the \ncrisis. Emigration slowed, the population increased \nby 1.7 percent between 2010 and 2016, and the \nconstruction sector and other nontradable sectors \nlaid off workers. As a result, the share of the popu -\nlation that was employed fell to 34 percent. The \nimpact of sectoral shifts on productivity growth \nturned negative, and the within-sector contribu -\ntion to annual labor productivity growth increased \nto 7.4 percentage points. The increase may have \nreflected increased competition, as domestic \ndemand declined and production shifted toward \ngoods and services that are tradable in interna -\ntional markets.\nBOX 1.2' metadata={'source': 'blkc.pdf', 'page': 30}
"
"page_content='18\u2003●   World Bank ECA Economic Update May 2018\ncountries. Productivity growth subsequently fell when major aspects of the re -\nform agenda were completed. In Central Europe, reforms connected to EU acces -\nsion initially boosted the growth of GDP and productivity. Reform momentum, \nand productivity growth, slowed after EU accession, in the mid-2000s (World \nBank 2018). In Central Asia and the South Caucasus, TFP growth accelerated in \nthe 1990s with institutional reforms in the early transition period. It plunged by \nthe beginning of 2000s, perhaps because such benefits diminished as the room for \nfurther reforms narrowed. \nSecond, across the world, technological changes in advanced and emerging \neconomies affected the measurement and growth of productivity. The digital \nrevolution that began in the 1990s led to a massive shift of resources to informa-\ntion and communications technology (ICT) industries. The output of these indus-\ntries is notoriously difficult to measure (for example, how does one value free \nInternet services financed by advertisements?). If the value of these new services \nis understated, then aggregate measurements of productivity may also be under -\nstated, particularly if growth slows in more traditional industries that are losing \nlabor and capital to the ICT sector. Given the magnitude of the slowdown, how-\never, not all of it can be attributed to measurement issues (Syverson 2016). \nThe shift to ICT industries may also be connected to lower productivity. It is \ncostly and time consuming to overcome the special difficulties involved in com-\nmercializing novel technologies (David 1990). Because it may take time to realize \nthe return on the labor and capital moving to these new industries, shifts of labor \nand capital to (initially) low-return industries may depress aggregate productiv-\nity growth. In the United States, for example, the slowdown before the 2008 crisis \noccurred mainly in industries that produce information technology (IT) services \nor use such services intensively (Fernald 2015; Gordon 2016). \nThird, declining flexibility in some advanced countries may be reducing pro-\nductivity growth. Business dynamism has declined in the United States, as re -\nflected in the drop in reallocation rates for jobs (after 1990) and workers (after \n2000) (Davis and Haltiwanger 2014), and the pace of startup creation in the \nUnited States declined over the 2000s (Haltiwanger 2011). Across OECD coun-\ntries, productivity growth in the most advanced firms remained robust over the \n2000s, but the difference in productivity levels between leading and lagging firms \nwidened (Andrews, Criscuolo, and Gal 2015; Haltiwanger 2011). This phenome-\nnon may have deepened the productivity slowdown if barriers to the reallocation \nof labor and capital intensified. \nFourth, long-term trends in the global economy may be contributing to the \nslowdown in productivity growth. Aging and other demographic factors may \naccount for part of the decline (Maestas, Mullen, and Powell 2016). The slow-\ndown in global trade integration following the crisis may also be contributing to \nslower TFP growth (Adler and others 2017). \nNo single factor is responsible for the observed deceleration of productivity \ngrowth: long-term trends, sectoral shifts, reform momentums, and global crises \nall play roles. No silver bullet can reignite productivity growth. Policy makers \nneed a diverse set of instruments to encourage innovation, build up skills and \ninfrastructure, and facilitate competition. ' metadata={'source': 'blkc.pdf', 'page': 31}
"
"page_content='Chapter 1: Economic Developments and Prospects ●\u200319\nNotes\n1.  That used to be the rule globally, but after the global financial crisis a decade ago, that \nratio came down closer to one. As illustrated in earlier ECA Economic Updates, the glob-\nal decline in the income elasticity of trade has not materialized in Europe and Central \nAsia. \n2.  Current real copper prices are also 57 percent below their historical peak, which was \nreached in April 1974.\n3.  A key reform in Uzbekistan was the elimination of the dual exchange rate, which re-\nduced domestic price distortions and opened up new export opportunities. The govern-\nment also reduced import duties and is harmonizing the duty code with Eurasian Eco-\nnomic Union norms.\n4.  The much higher rate for youth unemployment is normal, for a variety of reasons. \nSearch unemployment is much higher for people entering the labor market than for \nworkers who already have jobs. Cyclical changes in unemployment also tend to be more \npronounced for young people. During crisis periods, the lack of job vacancies dispropor -\ntionately hurts people entering the labor market for the first time. During economic re-\ncoveries the opposite happens, as the opening up of new vacancies disproportionately \nbenefits newcomers to the labor market.\n5.  This decomposition is based on sector-level data on real value added and the number of \nhours worked. We follow the methodology of Molnar and Chalaux (2015). \nReferences\nAdler, Gustavo, Romain Duval, Davide Furceri, Sinem Kilic Celik, Ksenia \nKoloskova, and Marcos Poplawski-Ribeiro. 2017. “Gone with the Headwinds: \nGlobal Productivity.” IMF Staff Discussion Note 2017/04, International \nMonetary Fund, Washington, DC.\nAndrews, Dan, Chiara Criscuolo, and Peter N. Gal. 2015. Frontier Firms, Technology \nDiffusion and Public Policy: Micro Evidence from OECD Countries. The Future of \nProductivity: Main Background Papers. OECD Publishing, Paris. http://www.\noecd.org/eco/growth/Frontier-Firms-Technology-Diffusion-and-Public-\nPolicy-Micro-Evidence-from-OECD-Countries.pdf . \nDavid, Paul A. 1990. “The Dynamo and the Computer: An Historical Perspective \non the Modern Productivity Paradox.” American Economic Review 80 (2): 355–61. \nhttp://www.dklevine.com/archive/refs4115.pdf.\nDavis, Steven, and John Haltiwanger. 2014. “Labor Market Fluidity and Economic \nPerformance.” NBER Working Paper 20479, National Bureau of Economic \nResearch, Cambridge, MA. http://www.nber.org/papers/w20479.\nEBRD (European Bank of Reconstruction and Development). 2015. Transition \nReport 2015–16: Rebalancing Finance. London: European Bank for Reconstruction \nand Development.\nFernald, John G. 2014. “Productivity and Potential Output before, during, and \nafter the Great Recession,” NBER Macroeconomics Annual 29: 1–51. https://doi.\norg/10.1086/680580.\nGordon, Robert J. 2016. “Perspectives on the Rise and Fall of American Growth.” \nAmerican Economic Review 106 (5): 72–76. DOI: 10.1257/aer.p20161126.' metadata={'source': 'blkc.pdf', 'page': 32}
"
"page_content='20\u2003●   World Bank ECA Economic Update May 2018\nHaltiwanger, John. 2011. “Firm Dynamics and Productivity Growth.” European \nInvestment Bank Papers 16 (1): 116–36. https://ssrn.com/abstract=1984016.\nMaestas, Nicole, Kathleen J. Mullen, and David Powell. 2016, “The Effect of \nPopulation Aging on Economic Growth, the Labor Force and Productivity.” \nNBER Working Paper 22452, National Bureau of Economic Research, \nCambridge, MA. http://www.nber.org/papers/w22452.\nMolnar, M., and T. Chalaux. 2015. “Recent Trends in Productivity in China: Shift-\nShare Analysis of Labour Productivity Growth and the Evolution of the \nProductivity Gap.” OECD Economics Department Working Paper 1221, \nOECD Publishing, Paris. http://dx.doi.org/10.1787/5js1j15rj5zt-en.\nSyverson, Chad. 2016. “Challenges to Mismeasurement Explanations for the U.S. \nProductivity Slowdown.” NBER Working Paper 21974, National Bureau of \nEconomic Research, Cambridge, MA. http://www.nber.org/papers/w21974.\nWorld Bank. 2018. “Global Economic Prospects Broad-Based Upturn, but for \nHow Long?” January. Washington, DC. ' metadata={'source': 'blkc.pdf', 'page': 33}
"
"page_content='21\n2\n2\n21Overview\n• The emergence of cryptocurrencies and blockchain technologies is part of a \nbroader wave of technologies that facilitate peer-to-peer (P2P) commerce, in-\ndividualization of products, and flexibilization of production methods. For a \nvariety of reasons, this wave gained traction after the global financial crisis a \ndecade ago. Large digital platforms, such as Alibaba, Amazon, Uber, and \nAirbnb, are replacing many brick-and-mortar stores, service companies, and \nlong-term employment relationships. \n• Blockchain technologies aim to go one step farther. They organize P2P trans-\nactions and P2P information flows without companies that operate digital \nplatforms. Whether these technologies will completely eliminate middlemen \nor whether new forms of trusted intermediaries will emerge remains to be seen. \n• Cryptocurrencies are the first—and therefore most developed—application of \nblockchain technologies. They create money without central banks and facili-\ntate payments without financial institutions. The success of several cryptocur -\nrencies puts competitive pressure on transaction methods by existing finan-\ncial institutions. However, serious limitations have become apparent. \nDecentralized organization of markets without trusted intermediaries can be \nvery costly, and the volatility of the value of cryptocurrencies is a big obstacle \nto their becoming an alternative to legal tender.Cryptocurrencies and  \nBlockchain: Hype or \nTransformational  \nTechnologies?' metadata={'source': 'blkc.pdf', 'page': 34}
"
"page_content='22\u2003●   World Bank ECA Economic Update May 2018\n• Other potential applications of blockchain technologies, from smart contracts \nto decentralized databases and open source social networks, could well be-\ncome more transformational than cryptocurrencies. Current experiments are \nlikely to result in lasting innovations, even if current applications do not stand \nthe test of time.\n• The emergence of blockchain technologies has triggered a flurry of activities \nin Europe and Central Asia (ECA), where people use cryptocurrencies for \ncross-border transactions and as speculative investments. Start-up companies \nare mining cryptocurrencies and providing blockchain services. Governments \nare experimenting with blockchain technologies to make their services more \nsecure and more transparent. \n• Many factors provide a fertile ground for these activities in ECA. Several gov-\nernments actively support innovation by start-ups. Governments are eager to \ndigitize and streamline their services. Lack of trust in existing financial inter -\nmediation makes cryptocurrencies an interesting alternative in some coun-\ntries. Cryptocurrencies are also used to sidestep oversight of cross-border \ntransfers. Cheap electricity (in Iceland and Georgia, for example) entices the \nmining of cryptocurrencies.\n• Cryptocurrencies and blockchain technologies pose a range of policy chal-\nlenges. They include the need to (a) apply rules of financial oversight, con-\nsumer protection, and tax administration while at the same time encouraging \nand facilitating innovation; (b) deal with the massive volume of electricity \nused to mine cryptocurrencies; and (c) determine whether governments and \ncentral banks can use blockchain technologies to improve their services. Poli-\ncymakers should find a balance between curbing the hype and unleashing \npotentially transformational new opportunities. International coordination is \nneeded to share best practices, avoid regulatory arbitrage, and explore how to \nregulate global decentralized networks.\nIntroduction\nTen years after an ingenious experiment to create a cryptocurrency that allows \nsecure and anonymous digital transactions to take place without the involve -\nment of central banks or commercial banks, cryptocurrencies have become a \nmultibillion-dollar industry. By December 2017, the average price of one bitcoin \n(the first cryptocurrency) had risen from just a few cents in 2009 to $15,000, dou-\nbling its value in a single month. These gains attracted many investors across the \nworld. On December 1, 2017, the U.S. Commodity Futures Trading Commission \napproved trading in bitcoin futures. Although the price of a bitcoin had declined \nto about $8,000 in April 2018, the value of bitcoins in circulation was about $150 \nbillion as of April 10, 2018. \nBig companies, and individuals working together in large pools, are compet-\ning for the right to add new transactions to the existing chain of transactions. \nTheir revenues, in the form of new bitcoins and transaction fees, are close to $20 \nmillion a day. ' metadata={'source': 'blkc.pdf', 'page': 35}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200323\nIn the wake of bitcoin’s success, hundreds of alternative cryptocurrencies \nhave been created. Digital tokens have been issued as general currency; for spe-\ncific purposes (for example, to rent computer capacity or cloud storage); and as \nan alternative to traditional shares in companies. \nCryptocurrencies have evoked strong reactions. Critics call these virtual cur -\nrencies a bubble, a scam, and even evil (Krugman 2013; Popper 2018). Supporters \npredict that cryptocurrencies will ultimately replace money (Rooney 2018).\nThere is less disagreement about the underlying blockchain technology, a pro-\ntocol to achieve decentralized consensus about the validity of a common data-\nbase, stored in multiple locations. Many recognize that the blockchain protocol \ncan lead to tamper-proof, secure information systems without the need for a \nsingle administrator. But even here views differ markedly about how transforma-\ntional this technology is. Believers foresee utopian societies of self-regulating in-\ndividuals, without government or trusted intermediaries. Doubters argue that \nthe number of useful applications has been exaggerated, that lack of regulation \ncan have disastrous effects, and that in most cases trusted intermediaries will \ncontinue to provide useful services. \nIt is unclear how these technologies will develop in the long run. Conceivably, \nthey could be absorbed by existing institutions, with central banks issuing digital \ncash, governments using blockchain to maintain information systems, and com -\nmercial banks putting payment systems on the blockchain.1 Many intermediaries \nmight become obsolete, and many new financial instruments might be created by \ncompanies that do not yet exist. The main legacy of cryptocurrencies may not be \nthe blockchain technology but standardized digital IDs using a combination of \npublic and private keys on open-source software.2 Such a development would \nallow individuals to own more of their data, instead of participating in proprie-\ntary information networks (Johnson 2018).\nWhatever the future brings, cryptocurrencies and blockchain protocols are \npart of a tidal wave of new technologies that is changing the way production and \ncommerce are organized. Digital platforms, the sharing economy, apps, and 3D \nprinters are fragmenting production and facilitating P2P transactions. \nMany of these new applications originated soon after the global financial cri-\nsis of 2008, when the bankruptcies of established companies convinced many \npeople that the economy would never be the same again. Investors were looking \nfor new investment opportunities. Workers who had lost their jobs were willing \nto accept more flexible working relations. Consumers were persuaded to use \nsome of their underutilized assets commercially. \nThe fact that bitcoin was created in 2009, soon after the crisis, was probably no \ncoincidence. Trust in financial institutions had eroded, and the time was ripe to \nexplore fundamentally different approaches. Whatever the future of cryptocur -\nrencies and blockchain technologies may be, the trends toward decentralization \nand P2P transactions are unmistakable. \nCryptocurrency and blockchain activities are widespread in Europe and Cen-\ntral Asia (ECA). Massive mining of cryptocurrencies takes place in Iceland, Swe-\nden, and Georgia. Many Russians own digital wallets, and experiments are ongo-\ning in Serbia and Tajikistan to use blockchain technology to make the sending of ' metadata={'source': 'blkc.pdf', 'page': 36}
"
"page_content='24\u2003●   World Bank ECA Economic Update May 2018\nremittances more efficient (UNDP 2018). Estonia is using blockchain software in \nregistries and plans to extend its use to medicine (https://e-estonia.com/ ). Start-\nups in many countries in ECA are contributing to these technologies, attracting \nfinance for their activities via initial coin offerings (ICOs).3 Household invest-\nments in cryptocurrencies are not insignificant. Switzerland aims to become a \ncryptocurrency and blockchain hub and is leading in adjusting regulations to \nthese new technologies. \nComprehensive, global information on cryptocurrency and blockchain activi-\nties is not available. But anecdotal evidence suggests that ECA is more active than \nmany other parts of the world, likely because of a combination of factors. Gov-\nernments of many countries—from Estonia to Georgia and Slovenia—are experi-\nmenting with blockchain technologies. In many countries in the region, a sup-\nportive business climate encourages start-ups. And, especially in the eastern part \nof the region, the relatively new financial sector provides fertile ground for ex-\nperiments. The lack of legacy technologies in the financial sector—and the lack of \ntrusted intermediaries—makes exploring new financial instruments attractive. \nThe rest of this chapter is organized as follows. Section 2.2 looks at the suc -\ncesses and drawbacks of cryptocurrencies, examining whether there is a future \nfor money not issued by central banks. Section 2.3 looks at the possibility of smart \ncontracts. It assesses whether markets can be organized without intermediaries \nand explores the possibility of secure decentralized databases. Section 2.4 sum-\nmarizes some of the activities in ECA, with an emphasis on the experience in \nGeorgia, which has been particularly active. Section 2.5 addresses the many pol-\nicy challenges these new technologies have triggered. \nCreating digital money without central banks\nSince the emergence of e-commerce, myriad attempts have been made to develop \nelectronic payment systems.4 Many successful and unsuccessful attempts were \nlinked to credit card systems. \nAttempts to create digital cash are especially thought-provoking. Like coins \nand banknotes, digital cash should be anonymous and counterfeit-proof. People \nshould be able to use it without the intermediation of banks, in the same way \ntraditional cash is used outside the banking system. But unlike traditional cash, \nindividuals, rather than a central bank, would create these digital coins. Private \nparties rather than the government would thus accrue the seigniorage. \nThe white paper that started bitcoin in 2008 outlined a way to create and oper -\nate a decentralized electronic cash system (Nakamoto 2008). The payment system \nwould not be under the control of a bank or a central authority. Rather, a large \nnumber of independent participants would operate it. The paper used existing \ncryptographic techniques of public and private keys to create anonymous and \nsecure IDs. It used existing cryptographic time stamps, based on hash functions, \nto make past transactions irreversible. With those elements, electronic cash could \nbecome (pseudo)anonymous and counterfeit-proof.5 But the main contribution \nof the white paper was the method it proposed to keep track of past transactions \nwithout a trusted intermediary. It would be done through an automatic process ' metadata={'source': 'blkc.pdf', 'page': 37}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200325\nthat would achieve consensus among most participants about the cumulative \nhistory of transactions, even if a minority of participants sent erroneous messages \nto the network. \nThe solution to this so-called distributed consensus problem was to let partici-\npants compete for permission to add a new batch of transactions to the decentral-\nized database. Participants use their computer power to solve a difficult puzzle. \nThe solution, which is considered proof of work, is impossible to find analyti-\ncally; it can be reached only through trial and error. The first person who solves \nthe puzzle can add a block of new transactions to the chain of existing transac-\ntions—hence the term blockchain—and broadcast the new block to the network, \nso that all participants can update the blockchain in their own copy.6 \nAlthough the puzzle is difficult to solve, its solution is easy to verify. There-\nfore, the nodes in the bitcoin network can easily determine if a proposed block is \nvalid and should be added to the chain. Even if a node goes offline for a period \nof time, the network is not jeopardized. When the node goes back online, it ac -\ncepts the longest valid chain as the correct one. If most of the computer power is \nowned by honest participants, the expectation is that they will create the longest \nchain, as the probability that they add new blocks is proportional to their com-\nputer power. As a result, the longest chain can be considered the consensus view. \nIf a dishonest participant adds a block that is not accepted by others in the chain, \nthat block will not become part of the longest chain, because the participant will \nnot have enough computer power to add more blocks to the chain quickly \nenough. The difficulty of the puzzle is adjusted every two weeks, in order to cre-\nate about one block per 10 minutes. Limiting the addition of a new block to the \nblockchain to one every 10 minutes (on average) prevents the network from be-\ning overwhelmed and keeps the size of the blockchain manageable. \nCompetition for the right to add a block to the blockchain also solved the \nproblem of the creation of new electronic coins. People who solve the puzzle re-\nceive a combination of newly minted coins and transaction fees.7 With every \nblock, new coins are created. Every four years the number of new coins per block \nis cut in half, until the maximum number of 21 million bitcoins is reached. Most \nof the remaining bitcoins will be added over the next 15 years. The creation of \nnew digital coins is like unearthing gold, which is why the puzzle solvers are \ncalled miners in the world of cryptocurrencies.\nTen years after the publication of the white paper, the concepts underlying \nbitcoin have proven successful. The blockchain technology is working and se-\ncure. Seventeen million bitcoins have been created, with an aggregate value of \n$137 billion in 2018. Numerous alternative cryptocurrencies have emerged, and \nmany companies and research groups are exploring additional blockchain ap-\nplications. Cryptocurrencies have unleashed a wave of financial innovations, \nputting competitive pressure on the financial sector, especially its facilitation of \ncross-border transfers.\nBitcoin’s biggest success has also become its most worrisome weakness. The \nproof-of-work concept that ensured achievement of a decentralized consensus \nhas become excessively costly and wasteful. Attracted by the reward of newly \nminted digital coins, investors have created massive computer power with spe-\ncialized chips to compete for permission to add a block to the blockchain. Over ' metadata={'source': 'blkc.pdf', 'page': 38}
"
"page_content='26\u2003●   World Bank ECA Economic Update May 2018\nthe past few months, the reward for solving the puzzle ranged from $100,000 to \n$250,000, depending on the price of bitcoin, the fees per transaction, and the \nnumber of transactions in a block. As more computer power was added to the \nnetwork, the puzzle automatically became more difficult (figure 2.1). As a result, \nmore and more electricity was needed to solve the puzzle. \nThe system currently consumes an estimated 53 TWh of electricity a year—\nalmost as much as the entire country of Bangladesh consumes (Digiconomist \nn.d.). The cost of electricity used to process a single average transaction (about \n$20) can power about five households in a high-income country for a day. \nThese electricity costs are likely to rise. Because miners’ profits of are still \nlarge, more computer power is being added to the network, increasing the diffi-\nculty of the puzzle. People who use the network to transfer bitcoins do not di-\nrectly experience these costs, because miners are paid mainly through seignior -\nage rather than fees. But the costs in terms of electricity use, and the resulting \nburden on the environment, are real. \nA paradoxical side-effect of the rapid increase in computing power is that \ncomputer power has become more concentrated. A few companies have installed \nhuge computer capacity in large dedicated factories, using specialized chips. \nTheir exploitation of economies of scale leads to concentration of market power. \nParticipants with less computer power started working together in pools (fig-\nure 2.2). With limited computing power, the probability of being the first to solve \nthe puzzle is very small, and the income stream is irregular and thus unpredictable. \nBy pooling forces, participants can generate a small but steady income stream. \nThis concentration of computer power makes the network more vulnerable to \nmalicious attacks. Even without attacks, if the market becomes an oligopoly, min-\ners could manipulate transaction fees, refuse to process certain types of transac-\ntions, or deny service to users. \nFIGURE 2. 1  As the price \nof bitcoin soared in 2017 , \nso did competition \namong miners \n1-Mar-1805E+111E+121.5E+122E+122.5E+123E+123.5E+12\n1-Mar-16\n1-May-161-Jul-161-Sep-16 1-Nov-16 1-Jan-17 1-Mar-17 1-May-171-Jul-171-Sep-17 1-Nov-17 1-Jan-18Mining Diﬃculty Inde x\nSource: blockchain.info.\nNote: The bitcoin difficulty index measures the difficulty of finding a new block on the blockchain. The greater the difficulty, the longer the time it \ntakes on average for a miner to find a valid block. The difficulty in the first block of the bitcoin blockchain was 1. The difficulty is adjusted up or \ndown every 2,016 blocks. If the previous 2,016 blocks take less than two weeks to generate, the difficulty is increased (and vice versa). ' metadata={'source': 'blkc.pdf', 'page': 39}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200327\nFIGURE 2.2  Three large \nmining pools provide \nhalf of all network blocks  \nBTC.com\n24%\nAntP ool\n13%\nViaB TC\n12%SlushP ool\n11%BTC.TOP\n10%Unknown\n9%F2Pool\n7%BTCC P ool\n4%BitFury\n3%BitClub Network\n3%GBMiners\n1% BW.COM\n1%Bitcoin.com\n0%\nKanoPool\n1%58COIN\n1%\nSource: blockchain.info.\nNote: Data are for March 2018. \nThe danger of market concentration is likely to increase. As the number of \nnewly minted bitcoins declines, the income of miners will increasingly depend \non fees. Lower profits will discourage new investors from entering the market, \nand smaller, inefficient miners are likely to exit. The sustainability of a completely \ndecentralized payment system will be tested if miners must forgo the large prof-\nits coming from seigniorage. \nAn advantage of declining profits because of disappearing seigniorage is that \nelectricity use will no longer increase and might even decline. Box 2.1 models the \nlong-term mechanisms determining the degree of difficulty of the puzzle, energy \nuse, user fees, and even the price of bitcoins. The model is simplistic, particularly \nas it ignores adjustment lags and speculative bubbles, which likely play a signifi-\ncant role in reality. But it sheds light on balancing mechanisms in the cryptocur -\nrency market and provides a framework for exploring the consequences of the \ndisappearance of seigniorage. \nAs of spring 2018, the total reward a miner received per transaction was just \nbelow $100 (figure 2.3). Most of it comes through seignorage (the bitcoin block \nreward) rather than fees. The impact on the demand for bitcoin if this reward \nshifts away from seignorage toward fees may not be dramatic. Large interna-\ntional bank transfers can involve similar levels of fees (through the SWIFT inter -\nnational payment system).' metadata={'source': 'blkc.pdf', 'page': 40}
"
"page_content='28\u2003●   World Bank ECA Economic Update May 2018\nEquilibrium mechanisms in the bitcoin market \nOver time, as fewer and fewer bitcoins are created, \nthe income of miners will shift from seigniorage \ntoward fees. This box models the consequences of \nthe shift for electricity use and other characteristics \nof the mining process.\nAssume that miners use the following produc -\ntion function to solve the puzzle that allows them \nto add transactions to the blockchain: \n(2.1.1)  \nwhere TS is the total number of transactions miners \nsupply, A is the level of technology, K  is the capi -\ntal stock, E  is the electricity consumption, and D \nis the difficulty of the puzzle. There is substitution \nbetween capital and electricity: miners can install \nmore advanced, more electricity-efficient equip -\nment to achieve the same solution power with less \nelectricity. \nMiners minimize costs under the restriction of \nthe production function, where the cost per trans -\naction is\n(2.1.2)   \nwhere c is the cost per transaction, r  is the return to \ncapital, δ is the depreciation rate of the equipment,  \nPh is the price of the capital goods, and Pe is the \nprice of electricity.\nThis optimization leads to the following cost per \ntransaction c: \n(2.1.3)       \nIf there are profits, new miners will keep enter -\ning the market, which will cause the difficulty of the \npuzzle to adjust so that in equilibrium profits equal \nzero:\n(2.1.4)  \nwhere n is the block reward in terms of the number \nof newly minted bitcoins, p  is the price of bitcoin, \nand f are the fees. \nThe market is not yet in equilibrium. Miners’ \nprofits are still large, as is the risk-adjusted return. \nAs a result, still more investments in computing power should be expected, which will increase the \ndifficulty of the puzzle. In equilibrium, the difficulty \nof the puzzle is given by\n(2.1.5)      \nDemand for transactions by consumers is down -\nward sloping in the size of the transaction fees:\n(2.1.6)  \nwhere TD is the total desired number of transac -\ntions miners supply, and B  is a scaling factor. The \nfees will be determined by the condition\n(2.1.7)  \nIf consumers want more transactions than min -\ners can facilitate, fees will go up and demand for \ntransactions will adjust. Miners are constrained by \nthe rule that only one block with not many more \nthan 2,000 transactions can be added to the block -\nchain. This restriction is represented by T . Conse -\nquently, fees are determined by consumer prefer -\nences and the maximum number of transactions \nallowed in the system:\n(2.1.8)  \nThe final price to endogenize is the price of a bit -\ncoin. Currently, speculative behavior, which is very \ndifficult to model, is likely to be one of the deter -\nminants of that price. A standard money demand \nfunction can describe the main determinants: \n(2.1.9)  \nwhere p is the price of bitcoin, a  is the aver -\nage size of transactions, and V  is the velocity of \nmoney. If people want to keep bitcoins in their \nwallet because they expect the price to rise, then \nthe velocity of circulation will fall and the current \nprice will rise. If people want to transfer larger val -\nues with bitcoins, pushing up the average value of \ntransactions, the price will also rise. These factors \nmay have been the two main drivers behind the \nsharp increase in the bitcoin price in December \nBOX 2.1\n(Continued next page)' metadata={'source': 'blkc.pdf', 'page': 41}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200329\n(continued)\n2017. Market participants bought bitcoins to trans -\nfer large sums, and speculation pushed the price \nfarther up. In equilibrium the bitcoin price would \nbe given by\n(2.1.10)  \nwhere MS is the exogenously given number of bit -\ncoins in circulation. Substituting this result in the \ndifficulty expression yields\n(2.1.11)      \nThe reduced-form equation for energy use per \ntransaction is\n(2.1.12)  \nThis model suggests that the system could \nachieve a long-term equilibrium in which electricity \nconsumption is lower because fewer bitcoins are created. A decline in n  reduces the energy use per \ntransaction. Increasing the price of energy can also \nreduce energy use. Such a price increase would \nnot increase the cost of transactions, it would \nmerely reduce the difficulty of the puzzle, as some \nminers are pushed out of the market. Increasing \nthe overall energy efficiency of mining (increasing \nA in equation 2.1.1) does not reduce energy use. It \nmerely makes the puzzle more difficult. \nThe long-term equilibrium can be achieved at a \nlower electricity use, but this raises other concerns. \nIt could lead to even more concentration of min -\ning power, as in the process many miners would \nexit the market, making it easier for highly special -\nized mining facilities to capture larger shares of the \ncomputational power. The concentration of mining \npower could erode trust in the network and thus \nreduce incentives to hold bitcoins long, increasing \nthe velocity of money, which would cause a drop \nin the price and further instability in the network. \nBOX 2.1\n020406080100120140160180\n23-Mar-16 18-May-1613-Jul-16 7-Sep-16 2-Nov-1628-Dec-16 22-Feb-17 19-Apr-17 14-Jun-17 9-Aug-17\n4-Oct-1729-Nov-17 24-Jan-18 21-Mar-18Earnings of miners (dollars)\nMining revenue per transaction Fees per transactionFIGURE 2.3  Most mining \nrevenue comes from the \nseignorage (block reward) \nof the network\nSource: blockchain.info.' metadata={'source': 'blkc.pdf', 'page': 42}
"
"page_content='30\u2003●   World Bank ECA Economic Update May 2018\nThe lack of scalability of the bitcoin payment system is another limitation. The \nproof-of-work concept prevents malicious participants from overwhelming the \nblockchain, ensuring its veracity. But it limits the addition of new blocks to one \nevery 10 minutes and each block to a maximum size of 1 MB. The average num-\nber of transactions that can be included in a block of this size is 2,000. In its cur -\nrent form, the bitcoin payment network can thus process only three transactions \nper second. By contrast, credit card companies process thousands of transactions \nper second. This constraint makes it impossible for bitcoin to substitute for large-\nscale digital payment systems.\nMany attempts have been made, through new cryptocurrencies or additions \nto the bitcoin network, to avoid the electricity-consuming puzzle and to increase \nscalability. A leading concept is proof of stake, which could replace proof of \nwork.8 In this concept, participants are elected to add a new block to the block-\nchain on the basis of the amount of own coins they want to attach to the contract. \nThis proof-of-stake concept is like putting coins in escrow to earn permission to \nintermediate and charge transaction fees. Selection would still be probabilistic, \nbut richer participants would have a higher probability of being selected. Ethe-\nreum, which runs a popular cryptocurrency, may adopt this approach. It repre-\nsents a shift back in the direction of trusted intermediaries. The concept is not \nvery different from existing financial institutions that are trusted because they \nhave a stake in preserving their company. \nAn even more radical departure from proof of work is to grant the authority \nto maintain the blockchain to a limited number of preselected, trusted partici-\npants. Ripple has taken this approach, working with commercial banks. It rein-\nstates trusted intermediaries into the blockchain network. \nAnother experiment to reduce electricity costs is to design a simple, albeit less \nsecure, system for small transactions and to put only the balances of many small \ntransactions on the blockchain. Lightning Network is taking this approach, as an \naddition to the bitcoin blockchain (Poon and Dryja 2016).\nMost of the discussions in the cryptocurrency community are about mecha-\nnisms to make trusted intermediaries superfluous. But another important ques-\ntion is how well cryptocurrencies perform the traditional functions of money. \nMoney is useful because it can serve as medium of exchange, a unit of account, \nand a store of value. Like other forms of electronic money, cryptocurrencies have \nadvantages over physical commodities like gold or banknotes. They are easier to \nstore and easier to transfer over large distances. However, some inherent draw-\nbacks of cryptocurrencies make them less optimal than legal tender in most \ncountries. \nThe most important drawback is the volatility of the purchasing power of \ncryptocurrencies, as illustrated by their exchange rate vis-à-vis legal tender (fig-\nure 2.4). That volatility in purchasing power makes them very risky to accept as \na medium of exchange. It also makes them suboptimal as a store of value, as there \nis no guarantee that their value will not drop to zero. Advocates argue that cryp-\ntocurrencies cannot be inflationary, because their supply is fixed or at least lim-\nited. In fact, cryptocurrencies can be extremely inflationary if demand for them ' metadata={'source': 'blkc.pdf', 'page': 43}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200331\ndrops (because, for example, customers prefer alternative cryptocurrencies that \nare more user-friendly, are more scalable, or provide more privacy). The volatility \nof their purchasing power also reduces the value of cryptocurrencies as a unit of \nmeasurement. With large overall price swings, it becomes difficult to discern \nmovements in relative prices.9 \nIn fact, there may be a natural limit to how stable the price of bitcoin can be-\ncome. Unlike other commodity-type assets, bitcoin does not have a feedback loop \nfrom the supply side. Source: coinmarketcap.com.\nNote: Panel a shows the percentage difference between the opening and closing price for the day. Panel b shows the percentage difference be-\ntween the highest and lowest price in a day.0102030405060708090\n28-Apr-13 28-Aug-13\n28-Dec-13 28-Apr-14 28-Aug-14 28-Dec-14 28-Apr-15 28-Aug-15 28-Dec-15\n28-Apr-16\n28-Aug-16\n28-Dec-16 28-Apr-17\n28-Aug-17\n28-Dec-17Daily range (percent)/endash.case50/endash.case40/endash.case30/endash.case20/endash.case100102030\n05,00010,00015,00020,00025,000\n28-Apr-13 28-Aug-13\n28-Dec-13 28-Apr-14 28-Aug-14\n28-Dec-14 28-Apr-15 28-Aug-15\n28-Dec-15 28-Apr-16 28-Aug-16\n28-Dec-16 28-Apr-17 28-Aug-17\n28-Dec-17\nDaily return (percent)Bitcoin price (dollars per bitcoin)\nDaily closing price (dollars, left-hand axis)\nDaily return (percent, right-hand axis)FIGURE 2.4  Daily price \nmovements of bitcoin \ncontinue to be large' metadata={'source': 'blkc.pdf', 'page': 44}
"
"page_content='32\u2003●   World Bank ECA Economic Update May 2018\nSustained volatility can be very inefficient for a bitcoin-based economy. Ex-\ntracting information about relative prices would be very costly. Entering into \nlong-term contracts could become prohibitively expensive. \nThe blockchain has proven to be very secure, but it is impossible to avoid se-\ncurity concerns altogether. Cryptocurrencies have been stolen by hacks into ex-\nchanges, where they are exchanged against legal tender or other cryptocurren-\ncies, and hacks into mining pools. Users can protect stored cryptocurrencies by \nkeeping their wallets offline. These offline wallets are called cold wallets; wallets \nthat are online are called hot wallets. Exchanges cannot be avoided; they remain a \nweak link. The problem is especially severe because once stolen there is little re-\ncourse to recover the funds.\nMany of these problems are already being addressed. The security breaches of \nexchange sites forced many exchanges to use hot and cold wallets. This practice \ninvolves storing most deposits in an offline wallet, whose private keys are secure \nand are never stored on a network-connected device. A small portion of the de-\nposits is transferred to the hot wallet, which is used for daily transactions and \npayments. If there is a security breach, potential losses are limited to the amount \nstored in the hot wallet; at least in theory, most deposits should be protected.\nThe attractiveness of cryptocurrencies will be tested once governments extend \ntheir financial oversight to cryptocurrencies in their efforts to fight money laun-\ndering, tax evasion, and illicit transactions. Doing so will challenge the (pseudo)\nanonymity of the cryptocurrencies. This oversight will be easier if the concentra-\ntion of mining power continues to increase. To the extent that current use is mo-\ntivated partly by the desire to avoid oversight, increased surveillance will reduce \ndemand for cryptocurrencies. However, it is also possible that oversight may \nmake the use of cryptocurrencies more attractive, as it becomes easier to incorpo-\nrate them in the overall financial infrastructure. \nThe innovative power of cryptocurrencies has been impressive. They have \nalready put some competitive pressure on cross-border payment systems. The \nconcept is promising, because it potentially improves financial access for people \nwho live in remote areas that are not covered by financial institutions. \nIt would be wrong to judge cryptocurrencies on the current state of affairs. As \nwith many new technologies, childhood diseases will be outgrown. However, their \nreal contribution may turn out to be very different from originally foreseen. \nThe original designer of bitcoin and the blockchain technology wrote that “the \nmain benefits are lost if a trusted third party is still required” (Nakamoto 2008). \nIn fact, the future benefits may appear precisely because the networks shift back \nto trusted intermediaries. It is even conceivable that the most successful crypto-\ncurrencies will be linked to legal tender and issued by central banks. \nCreating digital markets without intermediaries\nThe ability to achieve distributed consensus, and to store immutable information \nin a decentralized database, makes a wide variety of P2P contracts possible with-\nout a centralized authority. Enthusiasm about other possibilities is enormous. As \none observer put it, “The paradox about bitcoin is that it may well turn out to be ' metadata={'source': 'blkc.pdf', 'page': 45}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200333\na revolutionary breakthrough and at the same time a colossal failure as a cur -\nrency” (Johnson 2018). \nSmart, or self-executing, contracts are examples of blockchain applications \nthat go well beyond instantaneous transfers of funds with cryptocurrencies. Such \ncontracts could be used on a blockchain platform to engage in commitments over \ntime, without the help of middlemen. Ethereum, which has been operational \nsince the summer of 2015, enables the creation of P2P contracts that outline the \nconditions under which future payments occur. \nOne example of such a smart contract is a parametric insurance contract, such \nas a contract that insures farmers against drought. The seller commits to pay a \ncertain amount if rainfall remains below a certain threshold. The contract is pre-\nprogrammed to read the realized rainfall from a trusted weather data feed at a \npoint in the future. The buyer purchases the contract with a one-time payment. \nThe seller commits funds equal to the maximum payout in case of a drought. As \nthe contract is fully collateralized, there is no counterparty risk. At the expiration \ndate, either the buyer or the seller can execute the contract to check if the trigger \ncondition has been met. The contract distributes the funds between the buyer and \nthe seller and terminates itself. This type of contract could be handled without \nintermediation (although insurance companies could also provide such con-\ntracts). Storing these contracts on the blockchain makes them immutable and \nguarantees their enforcement.\nSmart contracts could also be used for financial instruments other than insur -\nance. Entrepreneurs already sell tokens to fund new companies through ICOs \nand promise future dividend payments in a smart contract on a blockchain. The \ntokens are similar to shares issued in an initial public offering (IPO), but there are \nkey differences. Shares are sold on stock markets and typically give the right via \nshareholder representation to participate in decision making. In contrast, tokens \nare traded on a P2P blockchain with no privileges outside what is written in the \nsmart contract. Regulators across the world are working on directives that would \nextend oversight to ICOs. Doing so would increase the similarities between ICOs \nand IPOs, but the financial smart contract would provide a new, innovative, in-\nstrument to fund start-ups. It creates relatively liquid new financial instruments \nthat can be used to finance small-scale risky ventures.\nThe potential advantages of such P2P contracts are obvious. They could be \navailable to people who have no access to financial instruments (box 2.2). They \ncould also increase access to financial services that is now limited because of \ndistrust in financial institutions. Currently, enforcement of contracts is not \nstraightforward in parts of ECA. Smart contracts are secure, even if the counter -\nparties do not know each other. Blockchain platforms could make these financial \nproducts more liquid if the new products could be traded outside specialized \nmarkets. \nThere are potential disadvantages of smart contracts. Adjustments to the cur -\nrent blockchain platforms are likely required for them to work in a user-friendly, \nefficient, and scalable way. These drawbacks may be the reason why, outside \nICOs, there have not yet been large-scale applications of smart contracts. \nThe first disadvantage of existing platforms is the volatility of the value of \ncryptocurrencies, which is especially inconvenient with contracts that span many ' metadata={'source': 'blkc.pdf', 'page': 46}
"
"page_content='34\u2003●   World Bank ECA Economic Update May 2018\nProviding access to secure insurance\nIn many countries, individuals, farmers, and \nsmall- to medium-size businesses have limited or \nno access to insurance or hedging instruments \nfor commodity price risks, floods, hurricanes, \nexchange rate volatility, and the like. Markets are \nincomplete or not available. When they are avail -\nable, contracts are often not trusted to be enforced \nor are very costly, particularly for small transac -\ntions. Lack of this key financial service is associated \nwith a high risk of falling into poverty, business fail -\nure, and the absence of entrepreneurship. \nSuppose that a small wheat farmer in a develop -\ning country is 30 days away from harvest. Although \nshe may be happy with the current wheat price, she \nknows that she can sustain at most a 20 percent \ndrop between now and the time she sells her har -\nvest. In order to hedge against a larger decline, the \nfarmer can purchase a put option with a duration \nof one month and a strike that is 20 percent lower \nthan the current market price. Entering in such a \ncontract will ensure that if the price falls below the \nstrike price, the contract will pay the difference. \nThe contract mitigates the risk by creating a price \nfloor. \nDespite the relative simplicity of these con -\ntracts, many frictions may prevent small farmers \nfrom entering into such agreements. Although \nbilateral over-the-counter agreements are pos -\nsible, the legal framework may not be well adapted \nto accommodate them, and enforcement can be \ndifficult and costly. Small- and medium-size farm -Especially in the transition economies of ECA, \nfinancial markets are incomplete. Market-based \nfinancial institutions were established only in the \nearly 1990s in these economies, and they are still \nonly partially developed. Insurance products are \nparticularly underdeveloped. The insurance rate \nof farmers in ECA is well below the global aver -\nage (box figure 2.2.1). A recent report finds that \nthese incomplete financial sectors are associated \nwith lower growth of the bottom 40 percent of the \nincome distribution (Gould and Melecky 2017). \ners are not likely to have access to international \nfinancial markets in which these contracts are well \nestablished and markets are deep, and the need \nfor intermediaries can make the process prohibi -\ntively expensive. \nGovernment interventions to support such con -\ntracts have often been ineffective. Such policies \nare either too costly from the government fiscal \nstandpoint or create moral hazard if noninsured \nrisks are covered by government payouts in the \nevent of widespread loss. \nBlockchain technology and smart contracts \nraise the potential for insurance/minimum price \ncontracts that are flexible, low-cost, secure, and \nhighly customizable to a multitude of risks and \npayouts (large and small), with only marginal trans -\nactions costs. This approach would provide easy \naccess to foreign insurers, and enforcement costs \nwould be low if the payout were collateralized in \nthe blockchain.\nBOX 2.2\nFIGURE B2.2. 1  Farmers in Europe and Central Asia are underinsured \n01234567\nSub-Saharan\nAfricaDeveloping\nEast Asia \nand P aciﬁcWorld South Asia Developing\nEurope and\nCentral AsiaAdults working in agriculture\nwho purchased agricultural\ninsurance in the previous \n12 months (2011, percentage)\nSource: World Bank Findex Survey.' metadata={'source': 'blkc.pdf', 'page': 47}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200335\nyears. Parties to the contract likely want security in terms of the purchasing \npower of payments. That goal could possibly be met by linking the contracts to \nfutures markets, but it seems more promising to use tokens that are linked to le-\ngal tender. Doing so would be a major step away from the original concept of \ncryptocurrencies, as it requires a trusted party that can guarantee the value of the \ntoken. Still, it could be a natural development of the smart contracts. \nFizzy is a parametric insurance application by the insurance company AXA \n(https://fizzy.axa/), in which passengers purchase insurance by sending funds \nto the smart contract along with their flight information. If their flight is delayed \nfor more than two hours according to a publicly accessible database, the smart \ncontracts pays out compensation in euros. Fizzy could be developed into an \nEthereum-based smart contract, but the volatility of the Ether token is likely to \nprove too much of a drawback for a large-scale application. \nIf contracts shift to tokens that are linked to legal tender, the market can no \nlonger operate without a trusted intermediary. Such an intermediary must sell \nadditional tokens in exchange for legal tender if demand for tokens increases. \nThe intermediary must hold part of the legal tender in reserve, so that tokens can \nbe repurchased if demand declines. Such reserves are similar to the reserves fi -\nnancial institutions must hold when they create electronic accounts or mobile \npayment systems. In the case of tokens linked to legal tender, participants who \nmaintain the blockchain would no longer be rewarded with the seigniorage of \nnew coins; the reward would consist only of fees paid by the parties in the con-\ntract. These fees might not be enough to attract enough participants who want to \ncompete with one another. It is plausible that such a system would naturally \nconverge to a permissioned blockchain, in which several preselected servers up-\ndate the blockchain, eliminating the need for costly competition among servers \nand making the maintenance of the platform more efficient. \nA second disadvantage of smart contracts is that they are collateralized by \nfreezing potential payouts on the blockchain. The blockchain provides security, \nbut it is also inefficient (like putting money in escrow, where it cannot be used \nproductively). Insurance companies can pool risks and invest the cash flow. As a \nresult, they should be able to provide cheaper services than offered in P2P con-\ntracts, in which investing the cash flow is not possible. Cutting out insurance \ncompanies could thus increase costs. \nThere may be a trade-off between efficiency and independence from interme-\ndiaries. Higher costs may be worth paying where the public does not trust that \nnormal contracts will be enforced. Where trust exists, the public might prefer to \ndeal with insurance companies rather than anonymous peers. If blockchain con-\ntracts are used, trusted intermediaries will likely offer contracts without freezing \nthe assets in the contract, reintroducing trust into these transactions. \nA similar argument holds for standard financial intermediation by banks. Be-\ncause P2P contracts likely have a broader reach and can create innovative instru-\nments, they could provide competitive additions to existing banking products. \nHowever, commercial banks have a big advantage in financial intermediation. By \npooling risk, they can turn short-term liabilities into long-term assets. Because \nintermediation between savings and investments is much more difficult in inde-\npendent P2P contracts without risk pooling, smart contracts are likely to be com -' metadata={'source': 'blkc.pdf', 'page': 48}
"
"page_content='36\u2003●   World Bank ECA Economic Update May 2018\nbined with, or even integrated into, existing financial institutions, rather than \nreplacing them. Risk pooling could also be explicitly programmed in smart con-\ntracts, implying that these contracts will not be completely risk free. \nA third potential disadvantage of following the original blockchain design for \nsmart contracts is the public nature of the blockchain. Transparency is attractive \nbecause it makes it easy to audit the validity of contracts by virtually anyone with \nan Internet connection. But participants in transactions may want more privacy. \nTherefore, it is plausible that smart contract applications will develop in the di-\nrection of more encryption, more restricted-read access, or both.10 \nMany governments are experimenting with blockchain to digitize their ser -\nvices. Experiments with land and real estate registries are popular. One objective \nis to avoid the vulnerabilities of a centralized server. Decentralized storage of \ndata means that several servers are always online, making it more difficult to \nalter data. \nAnother objective is to prepare for a link with smart contracts, so that real es-\ntate could be sold online without the help of notaries, as ownership could be veri-\nfied on the blockchain. Governments would still take responsibility for the infor -\nmation, including information about zoning and restrictions on sales. The goal is \nthus not to purge governments from transactions but rather to make government \nservices more efficient and more trustworthy. \nIn these applications, the registry can be updated by a limited, selected num-\nber of servers (a permissioned approach). There is no need to let an undeter -\nmined number of miners compete for the updates. There is, however, a need for \nfull transparency. Not everyone should be able to write on the system, but every-\none should be able to read the registry. The reading provides the actual service \nand is also a mechanism for double-checking the veracity of the information.\nAnother government application could be public procurement. The central \ngovernment could issue a token backed by the national currency. Each ministry \nor municipality could be issued an address and allocated tokens as part of the \nbudget process. They would use the tokens to pay contractors for public pur -\nchases; contractors would redeem their tokens with the central government. This \nmechanism would make all purchases not only fully transparent but also in-\nstantly auditable by anyone, reducing graft. Social protection transfers could \nbenefit from a similar set-up, although privacy concerns would have to be \naddressed. \nLarge companies are also exploring blockchain applications. Companies need \nto be online all the time, for internal communications and communications with \nclients. One central server is not reliable in this respect; a system that provides a \ncommon view of information through communication between independent \nservers is superior to a central server. Decentralized information is also more dif-\nficult to alter through hacks, because hackers would have to break into more than \none server. \nCompanies are experimenting with different versions of the blockchain proto-\ncol to transition toward a more decentralized information strategy. Experiments \nare moving toward permissioned systems, with a preselected number of servers \nmaintaining the decentralized database. Decentralizing reduces the probability \nthat participating servers become malicious, makes it easier to secure them, and ' metadata={'source': 'blkc.pdf', 'page': 49}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200337\nprevents the costly competition that is needed in a permission-less system. The \ndecentralized consensus problem is easier to solve than in the original bitcoin \napplication. However, with a small number of servers, data systems other than \nblockchain could be used. The advantages of a permissioned system may be the \nreason why there are no large-scale blockchain applications yet in these compa-\nnies, despite the many experiments. \nBlockchain technology could also be used to manage vast and diverse data \nsystems, such as health records, that are too complicated for a central server. They \ncould benefit from decentralized servers that communicate with one another and \nalways reflect the latest update of treatments and test results. The existence of \nsecure, decentralized digital health records could significantly increase the effi-\nciency of the health care industry. \nThe main challenge for these kinds of data systems is privacy. Both reading \nand writing of health records should be limited. This requires adjustments to the \noriginal blockchain design, which is public, in the sense that everyone can read \nit. A health record application would be private, with secure encryption to protect \nconfidentiality of medical information. \nThese examples show the broad range of potential applications of blockchain. \nThey also suggest that many of them could be very different from the original \nblockchain design. Instead of a public database, with an unlimited number of \nparticipants that maintain the blockchain and an independent cryptocurrency to \nbe used in transactions, the most successful future applications could work with \nprivate information, a limited number of permissioned servers, and a token \nlinked to legal tender for transactions. \nThe most important components of those future applications could become \nthe cryptography behind personal IDs, the time stamps that make data irrevers-\nible, and the open source character of the platform. These applications would not \neliminate trusted intermediaries, they would make more competition between \nintermediaries possible. Digital platforms like Facebook, Uber, Airbnb, and Ama-\nzon use proprietary software and organize their own user IDs; the veracity of \ntheir data is not protected through decentralized storage. All these platforms can \ngain natural monopoly power because of network effects, because the platforms \nbecome more useful and more powerful if more people participate. A standardize \nsystem of digital IDs and open-source networks could break that monopoly and \nincrease entry opportunities. Experiments with P2P digital interactions are very \nimportant for this reason. Even if current applications do not stand the test of \ntime, the ultimate result could well be transformational. \nBlockchain applications in Europe and Central Asia \nMany countries in ECA have provided fertile ground for cryptocurrencies and \nblockchain technologies, especially since late 2016. When cryptocurrencies \nemerged, almost 10 years ago, activities were small-scale. As everywhere else in \nthe world, early transactions were used largely for gambling or for the purchase \nillegal products on the dark web (figure 2.5).11 ' metadata={'source': 'blkc.pdf', 'page': 50}
"
"page_content='38\u2003●   World Bank ECA Economic Update May 2018\nThe use of cryptocurrencies intensified at the end of 2016, especially for large \ncross-border transfers. When the prices of cryptocurrencies skyrocketed in 2017, \ninvestments in mining capacity increased sharply and people began investing in \ncryptocurrencies in the hope of benefitting from further price rises.\nInvestments in blockchain technologies surged. Governments in many ECA \ncountries began experimenting with blockchain to improve their services. Some \ncentral banks are studying the issuance of legal tender in the form of digital cur -\nrency, and financial institutions are piloting blockchain applications to incorpo-\nrate them in the existing financial architecture. \nECA has become an important center for ICOs. In terms of the number of \nprojects, the Russian Federation ranks third globally (with 8.8 percent of all proj-\nects), Switzerland fifth (6.9 percent), Estonia seventh (3.0 percent), and Lithuania \neighth (2.8 percent) (figure 2.5). This section examines the reasons for the strong \ninterest in blockchain technologies in ECA, based on anecdotal evidence. \nBlockchain technologies, which place a heavy emphasis on making financial \nintermediaries redundant, are particularly attractive in countries where trust in Source: blockchain.info.\nNote: Each link (“edge”) in the figure represents a bitcoin transfer between nodes. The size of the nodes represents the total inflows of funds (one \nentity can have multiple addresses).\nFIGURE 2.5  Early use of bitcoin was clustered around gambling and the dark web' metadata={'source': 'blkc.pdf', 'page': 51}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200339\nfinancial institutions is lacking, people want to avoid oversight, and/or financial \nsectors are underdeveloped (Aris 2017). Countries where corruption and political \ninstability are higher, confidence in the rule of law is lower, and regulatory qual-\nity is lower tend to adopt bitcoin more rapidly (all four correlations shown in \nfigure 2.6 are statistically significant). \nA prime example is Republica Bolivariana de Venezuela, where people seek \nalternatives for the bolivar, the value of which been eroded by hyperinflation. \nSuch extreme examples of hyperinflation no longer exist in ECA. Nevertheless, \nsome anecdotal evidence suggests that weak institutions or vulnerable banks are \none reason behind the interest in cryptocurrencies.12 Financial dollarization \nremains substantial in the eastern part of the region, reflecting lack of trust in \nARG\nAUSBRA\nCAN CHLCHN\nCOLHRV\nCZEDOMHKG\nHUNINDIDN\nJPNKENMYS\nMEXMAR\nNZLNGA\nNORPAK\nPER\nPHLPOL\nROMRUS\nSAU\nSGPZAF\nSWE\nCHETZA\nTHA\nTURUKR\nGBRUSAVEN\nVNM\n0123456789\n–3 –2 –1 01 2\nInde x valuec. Political stability\nARG\nAUSBRA\nCAN CHLCHN\nCOLHRV\nCZEDNKDOMHKG\nHUNINDIDN\nIRN\nJPNKENMYS\nMEXMAR\nNZLNGA\nNORPAK\nPER\nPHLPOL\nROMRUS\nSAU\nSGPZAF\nCHETZA\nTHA\nTURUKR ARE\nGBRUSAVEN\nVNM\n0123456789\n–2 /endash.case1 01 23\nInde x valued. Control of corruptionFIGURE 2.6  Adoption of bitcoin is negatively correlated with the quality of institutions\nARG BRA\nCAN CHLCHN\nCOLHRV\nCZEDOMHKG\nHUNINDIDN\nIRN\nJPNKENMYS\nMEXMAR\nNZLNGA\nNORPAK\nPHLPOL\nROMRUS\nSAU\nSGPZAF\nCHETZA\nTHA\nUKR\nGBRUSAVEN\nVNM\n0123456789\n–3 –2 –1 01 23Weekly bitcoin volume growth (percent, dollars)\nWeekly bitcoin volume growth (percent, dollars)Weekly bitcoin volume growth (percent, dollars)\nWeekly bitcoin volume growth (percent, dollars)Inde x valuea. Rule of law\nARG BRA\nCAN CHLCHN\nCOLHRV\nCZEDOMHKG\nHUNINDIDN\nIRN\nJPNKENMYSMAR\nNZLNGA\nNORPAK\nPER\nPHLPOL\nROMRUS\nSAU\nSGPZAF\nCHETZA\nTHA\nTURUKR ARE\nGBRUSAVEN\nVNM\n0123456789\n–3 –2 –1 01 23\nInde x valueb. Regulatory quality\nSource: World Development Indicators and localbitcoins.com.\nNote: As bitcoin is traded on a global network, it is difficult to determine the geographic origin and destination of transactions. This analysis uses \nthe currency denomination on a popular P2P bitcoin exchange (localbitcoins.com). The vertical axis shows the speed of adoption of bitcoin, mea-\nsured by the average weekly growth of the volume of bitcoins exchanged on this exchange. The institutional variables are sourced from the World \nBank’s Governance Indicators database. ' metadata={'source': 'blkc.pdf', 'page': 52}
"
"page_content='40\u2003●   World Bank ECA Economic Update May 2018\nexisting legal tender. It has resulted in much lower savings at banks than in other \nparts of the world (Gould and Melecky 2017). Households are looking for alter -\nnative saving options. \nAnother reason for the use of blockchain technologies in ECA is the desire to \ndevelop alternative means of transferring large funds. Russia is the largest issuer \n(more than $956 million)—followed by the United States ($811 million) and Swit-\nzerland ($514 million)—because of the $850 million raised for the TON block-\nchain.13 One of the goals of that ambitious project is to provide an alternative to \nthe SWIFT international interbank payment system (Aris 2017). Russia also has \nthe largest number of users of the digital wallet on blockchain.com (UNDP 2018). \nDespite these examples, it is doubtful that ICOs will have a broader application \nas venture capital if security is not built in for investors. \nEstablished financial centers are striving to adjust to meet the competition \nfrom a disruptive technology like blockchain. Switzerland is leading in adjusting \nfinancial regulations to cover ICOs, ensuring that they are incorporated into the \nexisting financial architecture rather than developed as an outside alternative \n(see Atkins 2018a, 2018b; Financial Times 2018). Its aims to become a cryptocur -\nrency and blockchain hub is reflected in its vibrant ICO activities. For example, \nSirin Labs raised $157 million for the development of a blockchain-based smart-\nphone. In line with these developments, a Swiss foundation, advised by Jacob \nFrenkel, chairman of JPMorgan Chase International, and Nobel laureate Myron \nScholes, raised $50 million to develop a cryptocurrency backed by Special Draw-\ning Rights (SDRs). Saga would have a stable value and be integrated into the \nexisting financial sector, including anti-money-laundering checks, with deposits \nin the International Monetary Fund’s SDR holdings. France is also planning a \nregulatory framework for ICOs (Aris 2017). \nGovernments in ECA are accumulating in-house experience with blockchain \npilots to improve government services. Estonia, Georgia, and Ukraine have ex-\nperimented with blockchain to set up land and real estate registries. They are still \nsearching for more specialized and more efficient designs, but the experiments \nhave given a boost to efforts to digitize government services. \nSome government banks in ECA are seeking to improve their services through \nthe use of blockchain technologies. The Russian state-owned VEB bank is pilot-\ning a new blockchain-based payment system with the regional government of \nKaliningrad (Milano 2018). Another state-owned bank, Sberbank, is partnering \nwith Russia’s federal anti-monopoly service to use blockchain technologies to \nstore and transfer documents. \nOfficial bodies in ECA are investing in blockchain research to improve ser -\nvices. The European Commission has funded a blockchain observatory to en-\ncourage blockchain technologies and help formulate policy recommendations, \nespecially for smart contracts and the improvement of government services \n(Young 2017; Nicholson 2018). Lithuania has opened a blockchain center to incu-\nbate start-ups, partnering with similar centers in Melbourne and Shanghai (Med-\niTelegraph 2017). Separately, the central bank of Lithuania offers a one-year sand-\nbox environment for start-ups that develop new digital financial technologies. \nEstonia is exploring opportunities to use blockchain technologies in medicine ' metadata={'source': 'blkc.pdf', 'page': 53}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200341\n(https://e-estonia.com/).Georgia is investigating the possibility of supporting \nsmart contracts. Serbia and Tajikistan are experimenting with remittances on \nblockchain, in cooperation with the United Nations Development Programme \n(UNDP 2018). Azerbaijan is experimenting with digital IDs for banking using \nblockchain (SputnikInternational 2018). The Swedish central bank is considering \nlaunching its own digital currency (Aris 2017). \nSmall ECA countries with a supportive business climate and the absence of \nlegacy financial instruments are well placed to introduce new financial instru-\nments based on blockchain technologies. Tokenization and ICOs enable small \nstart-ups, which lack easy access to finance, to raise funds in global markets. \nDynamic start-ups in the Baltic countries and several other small countries, in-\ncluding Georgia, have issued ICOs (figure 2.7). These examples are instructive for \nother economies in the region that have long been dominated by state-owned \nenterprises and have grown primarily through the nontradable sectors. For many \nof those economies, the challenge is to unleash new growth potential in \nSource: Websites for ICO listings (icowatchlist.com, icobench.com, and tokenreport.com).\nSharea. Estimated share of ICO projects\nb. Estimated funds raised in ICOs\nAmount raised18.07%\n.20%\n$956, 174,361\n$110,000FIGURE 2. 7  Europe and \nCentral Asia is the site \nof many initial coin \noﬀerings (ICOs)' metadata={'source': 'blkc.pdf', 'page': 54}
"
"page_content='42\u2003●   World Bank ECA Economic Update May 2018\ninternationally competitive sectors. The new P2P technologies provide a gateway \nto these markets. More specifically, activities on and contributions to blockchain \nnetworks are automatically exposed to international competition.\nSeemingly more than in other parts of the world, governments in ECA are \nrestraining natural monopolies of tech giants. People in the region show strong \nprivacy concerns when data become proprietary and are captured by tech com -\npanies. The open character of the blockchain architecture could break the mo-\nnopoly on data. Several governments and the European Commission are looking \nat the possibility of using the new technologies to reduce the power of large digi-\ntal network companies. \nThe anecdotal evidence presented here suggests that there may be multiple \nexplanations for the blockchain activities in Europe and Central Asia: \n• In the eastern part of the region, market-based financial sectors are relatively \nnew and have not fully matured. Insurance and capital markets are underde-\nveloped. Land registration and cadasters of real estate can still be improved. \nBlockchain technologies could help fill these gaps. \n• Vulnerabilities in the banking sectors after the transition in 1991, the global \nfinancial crisis in 2008, and the plunge in oil prices in 2014 have eroded trust \nin financial institutions. In the eastern part of the region, bank deposits are \nexceptionally low, and consumers are looking for alternative ways to invest \ntheir savings (Gould and Melecky 2017)\n• Throughout the region, banks dominate financial sectors. Venture capital that \ndoes not require collateral is scarce. New forms of fund raising could help tech \nstart-ups that have a potential to grow quickly in competitive global markets. \n• Demand for new ways of making cross-border transfers is strong. Remittanc-\nes are large in the region; the high transactions costs associated with them is \nonerous. The region also has a large share of illicit financial flows, linked to \nmoney laundering, tax evasion, and the circumventing of capital controls or \nsanctions. \n• Governments in the region provide a broad range of services. They oversee \nelaborate social security systems, and most of them play an integrating role in \nhealth care, pensions, and education. There is continuous demand to make \nthese services more efficient and more transparent. Many governments are \nexperimenting with blockchain technologies to achieve those goals. \n• Governments in the region are looking for ways to break the power of large \ntech companies and increase privacy.\nIt is unclear which experiments will have a lasting impact. The transforma-\ntional impact may come from applications that are very different from the origi-\nnal blockchain design. The blockchain experiment has already boosted innova-\ntion and competition, in both the private sector and government. For that reason \nalone, blockchain experiments deserve support. \nECA is active in the mining of cryptocurrencies. Georgia is home to one of the \nlargest mining companies of the world (Bitfury) as well as many smaller miners \n(box 2.3). Bitfury, which is building additional facilities in Canada, Iceland, and \nNorway, controls about 10–15 percent of global mining. ' metadata={'source': 'blkc.pdf', 'page': 55}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200343\nCryptocurrency mining and the demand for electricity in Georgia\nMining of cryptocurrencies is surprisingly wide -\nspread in Georgia, thanks to tax exemptions and \nlow electricity prices. Indeed, Georgia has had the \nfastest-growing electricity consumption per capita \nin all of ECA since 2009 (box figure 2.3.1). \nThis process was jumpstarted when Bitfury, one \nof the world’s largest bitcoin miners, built a 20MW \ndata center in Gori and a 40MW mining facility in \nTbilisi, with funding from the Georgian Co-Invest -\nment Fund. The Tbilisi facility, located in a free \nindustrial zone, has daily revenue of $250,000–\n$400,000. Bitfury recently sold this facility to its \nChinese partner, Asian Chong Sing Holdings. It \nis now building mobile data centers to be sold to \nother investors. Other companies have built mining \nfacilities in free industrial zones in Kutaisi.\nMany households have joined mining pools. \nSurveys indicate that up to 5 percent of house -\nholds in Georgia are engaged in cryptocurrency \nmining or investments. \nThese mining activities have had a striking \nimpact on electricity consumption, turning Geor -\ngia from a net exporter to a net importer of elec -\ntricity. Estimates of the share of Georgia’s elec -\ntricity demand devoted to cryptocurrency mining \nrange from 10 to 15 percent—and the figure could \nbe even higher, because it is difficult to observe \nsmall-scale mining activities. Per capita electricity \nconsumption in Georgia was 3,343 KWh in 2016, \nalmost three times higher than in countries with \nsimilar levels of per capita income. Even after cor -\nrecting for historically high electricity consump -\ntion in Georgia (likely because of the availability \nof inexpensive hydropower), energy use in recent \nyears is remarkable. Between 2014 and 2016, per \ncapita energy consumption increased by 655 \nKWh, of which only 65 KWh can be explained by \nrises in income. Some 590 KWh, or 18 percent of \ntotal demand, remains unexplained. Even before \n2015—actually, since the start of bitcoin, in 2009—\nthe unexplained part of electricity demand was ris -\ning (box figure 2.3.2). \nBOX 2.3\nSource: World Development Indicators and the International \nEnergy Agency.–8 –6 –4 –2 0 2 4 6 8 10GeorgiaKyrgyz R epublicAzerbaijanKazakhstanAlbaniaTurkeyArmeniaBosnia and HerzegovinaLatviaTurkmenistanMaltaEstoniaBelarusPolandSloveniaRussian FederationRomaniaUkraineLithuaniaAustriaHungaryBulgariaIcelandSlovak R epublicGermanyMacedonia, FYRCzech R epublicSerbiaUzbekistanCroatiaFinlandNetherlandsBelgiumLuxembourgNorwayPortugalIrelandSwedenSpainFranceDenmarkSwitzerlan dItalyMontenegroUnited KingdomGreeceMoldovaCyprusTajikistan\nGrowth per capita (percent)Electricity consumption \nannual growth 2000–09\nElectricity consumption \nannual growth 2010–14FIGURE B2.3.1   Georgia had the fastest-growing\nelectricity consumption in Europe and \nCentral Asia in 2010–14\n(Continued next page)' metadata={'source': 'blkc.pdf', 'page': 56}
"
"page_content='44\u2003●   World Bank ECA Economic Update May 2018\nCryptocurrency mining is also booming in Iceland (Perper 2018), which is on \ntrack to use more electricity for mining than it uses to power all of its residences. \nArmenia is set to be home to a 50MW mining farm (Murphy and Stafford 2018). \nSlush Pool, a bitcoin mining pool with a market share of about 7 percent and \nmany participants from all over the world, is run by Satoshi Labs, a mining com-\npany based in the Czech Republic. KnCMiner is a mining pool in Sweden. An-\nother mining pool is in Russia. \nCryptocurrency mining thrives in a cold climate (avoiding the need for cool-\ning) and in areas where electricity costs are low. En+ Group, a Russian energy \ncompany, is preparing to offer electricity to cryptocurrency miners at five plants \nin Siberia (Marson 2017; Helms 2018). The electricity capacity available for min-\ners could well dwarf the capacity of existing mining facilities in ECA. EN+ could \nattract Chinese miners, who are currently dominant players in the global market \nbut find a less and less hospitable environment in China. (continued)\n BOX 2.3\nOf course, the mining of cryptocurrencies also \nraises incomes. Mining revenues in Georgia could \nwell contribute several percentage points to GDP, \neven if these revenues are not registered as part \nof GDP (if they were registered, they would prob -\nably be classified as exports). What is observable is \nthe additional consumption and imports not only \nof electricity and computer parts but also of more \ngeneral consumption financed by the mining reve -\nnues. This increase is similar to the increase in con -\nsumption as a result of large inflows of remittances. It would be interesting to see how the financing \nof these activities shows up in the balance of pay -\nments. Revenues in cryptocurrencies are likely \nexchanged into legal tender at exchanges abroad, \nafter which part of the legal tender is transferred \nback to Georgia. \nInvestment opportunities in mining cryptocur -\nrencies likely attract foreign direct investment. It is \ntoo early to draw conclusions about the spillovers \nto other sectors of the economy. It may trigger \nother innovative activities, or it could crowd out \ninvestments in other activities.FIGURE B2.3.2  Une xplained electricity demand in Georgia has risen rapidly since 2009\n05001,0001,5002,0002,500\n2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016Kwh per capita\nAnnual residual consumption of electricity Average residual consumption 2000–09\nSource: Data for 2000–14 are from World Development Indicators and the International Energy Agency. \nData for 2015 and 2016 are from Georgia’s energy services company.' metadata={'source': 'blkc.pdf', 'page': 57}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200345\nThese mining activities illustrate the dynamic response to new opportunities \nby entrepreneurs in the region. They bode well for the development of other ap-\nplications of these technologies. But the heavy electricity use by companies that \ncompete for the right to mine cryptocurrencies is a growing problem. How to \naccommodate and mitigate growing electricity demand from cryptocurrency \nminers and prepare for future declines in demand if mining activities relocate or \nmining stops altogether in its current form are the most urgent challenges as \nthese markets develop. \nThere are multiple approaches to meeting these challenges. The cryptocur -\nrency community is looking for more efficient ways to update the blockchain. \nGovernments are reconsidering their tariff policies; in order to curtail energy use, \nthey need to raise electricity tariffs for miners or create more market-based mech-\nanisms to determine tariffs. If unchecked, electricity use could rise before alterna-\ntives are found, possibly resulting in long-term damage to the environment. In \naddition, the fiscal costs of investments in power plants (or contingent liabilities, \nwhere new power plants are developed in partnership with the private sector) \ncould threaten public finances if demand for electricity driven by cryptocurren-\ncies collapses. \nPolicy challenges\nCryptocurrencies and blockchain technologies pose difficult challenges for pol-\nicy makers. There is no regulatory framework for transfers made with cryptocur -\nrencies or smart contracts. Transfers occur outside anti-money-laundering com-\npliance programs, and smart contracts are not subject to consumer protection \nlaws or financial oversight. \nTax codes do not fully cover the new markets if cryptocurrencies are not rec-\nognized in the law as payment systems but are instead viewed as commodities. \nIt is difficult to determine the geographic location of the value added created by \ncryptocurrency mining. Tax legislation therefore has to be adjusted to incorporate \nthese new activities into direct and indirect tax systems. \nAnother ambiguity for policy makers is whether these new activities should \nbe supported or constrained. Should they be encouraged because of positive ex-\nternalities and first-mover benefits? Or should they be constrained, because they \ncrowd out investments with greater social return? \nAnother pertinent question for policy makers is whether and how they can \nuse these technologies to improve their own services. \nIt is too early to offer specific advice, because there is still great uncertainty \nabout the future of cryptocurrencies and blockchain technologies. But experi -\nences with other digital technologies—such as e-commerce, digital platforms, \nand the sharing economy—suggest that the following general guidelines should \nbe followed.\n• Give the new technologies space, and avoid imposing restrictive legislation before \ninitial ambiguities are resolved. Even if these technologies are ultimately unsuc-\ncessful, the experiments can help develop entrepreneurial skills, put competi-\ntive pressure on more traditional activities, and trigger innovations in other ' metadata={'source': 'blkc.pdf', 'page': 58}
"
"page_content='46\u2003●   World Bank ECA Economic Update May 2018\nsectors. A dynamic business climate should encourage innovations, experi-\nments, and risk taking.\n• Make implicit subsidies explicit, and be clear about risks. If activities are not yet \ncovered by the tax code or are undertaken in special economic zones, the im-\nplicit subsidy and its temporary nature should be calculated and made public. \nConsumers should be warned about risks, such as the risks associated with \nvolatile cryptocurrencies.\n• Start planning for leveling the playing field. If these technologies become success -\nful, they should be integrated into the formal economy. Tax codes and regula-\ntions should be adjusted, so that both old and new technologies operate on a \nlevel playing field.14\n• Innovate as government. The corporate motto “think big, start small, quit soon, \nand scale fast” is relevant for governments, too. Blockchain technologies pro-\nvide a stimulus to further digitize government services. Most successful gov-\nernments are bold in their ideas, know when to terminate experiments that are \nnot successful, and have the professionalism to quickly scale small experi-\nments that are promising. \nAn undesirable side effect of the cryptocurrencies is the outsized use of elec-\ntricity in mining. If mining companies pay a lower electricity price than the mar -\nginal cost of supplying more electricity, governments should consider raising \ntariffs or at least calculating the implicit subsidy. The sharp increase in electricity \ndemand might be an opportunity to develop an electricity market with intra-day \nprice fluctuations, so that price differentiation reflects actual costs. Uncertainty \nabout future electricity demand for cryptocurrency mining warrants a rethinking \nof contingent liabilities of governments where additional power plants are built \nby public-private partnerships. Guarantees related to future demand for electric-\nity used in cryptocurrency mining are riskier than for other electricity demand. \nAt some point, electricity tariffs for mining could be used as indirect taxation of \nthe value added created by miners. Although it is difficult to determine the geo-\ngraphic location of the output of these activities, it is easy to locate the inputs. \nUltimately, financial oversight will cover cryptocurrencies and smart con-\ntracts. This process will be a gradual one of trial and error, and it will depend on \nthe direction in which blockchain applications develop. First steps have already \nbeen taken, in the United States (where bitcoin can be traded on futures markets), \nin Switzerland (where regulation of ICOs was proposed), and in the Netherlands \n(where guidance was provided about the tax treatment of cryptocurrency hold-\nings). Oversight to prevent money laundering, tax evasion, pump-and-dump \nschemes, and illicit cross-border transfers focuses on transactions in which cryp-\ntocurrencies are exchanged for legal tender.15 At some point, this oversight could \nextend to miners and other companies that update the blockchain. The ultimate \ngoal of all these efforts is to create a level playing field, so that blockchain applica-\ntion can be integrated into existing markets. The long-term outcome could be that \nsupervision becomes much more effective, because the transparency of the block-\nchain could provide supervisors and courts with access to real-time information. \nThis access would also make it easier to develop valuable early-warning systems.' metadata={'source': 'blkc.pdf', 'page': 59}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200347\nThe many experiments and brainstorms by governments and central banks \nthroughout the region are inspiring. Just as blockchain opportunities put com-\npetitive pressure on private financial sectors, they also trigger creative thinking \nin governments. It is important that these experiments not consider current \nblockchain designs as the full universe of possibilities. Even if decentralized \nmaintenance of digital government data can have major advantages, a permis -\nsioned system seems much more appropriate and efficient for governments than \nthe original system that maintains the blockchain for cryptocurrencies. The ulti-\nmate conclusion might even be that other data systems are better suited for spe-\ncific applications than blockchain technologies, including in the creation of digi-\ntal currencies by central banks (box 2.4). The flurry of experiments shows the \nsuccess of the blockchain revolution, but it also illustrates that progress may \ncome from innovations that are quite different from the original design and objec-\ntive of the blockchain protocol. \nWill central banks issue digital currencies?\n BOX 2.4\nCentral banks are exploring the possibility of issu -\ning digital money, for several reasons. First, the \nuse of traditional cash is steadily declining (Rogoff \n2014). Second, cryptocurrencies have provided a \nworking digital alternative to cash, replicating the \noriginal characteristics of cash in digital format. \nLike cash, cryptocurrencies allow anonymous P2P \ntransactions without involvement of middlemen. \nThird, demand for tokens that are linked to legal \ntender is increasing. These tokens could be used in \nthe same way as cryptocurrencies but without the \ndrawback of high volatility in their value. It seems a \nnatural development to transform actual coins and \nbanknotes into digital tokens with the same legal \nprotection and subject to the same price stabili -\nzation as all money issued by central banks.a The \ntransparency of transactions with central bank digi -\ntal currencies could facilitate the systematic con -\nduct of monetary policy (Bordo and Levin 2017).\nThere are serious concerns about the issuance \nof digital money by central banks. Digital tokens \nissued by central banks could potentially replace \nnot only cash but also electronic payment systems \noperated by commercial banks, which already offer \nelectronic accounts, mobile money, and value cards. \nThese systems can be uploaded and used offline. The Swedish central bank is exploring the pos -\nsibility of making electronic accounts and value \ncards directly available to the public. The idea is to \nadminister this digital money in a central register at \nthe central bank. This proposal to replicate instru -\nments that already exist in the private sector stems \nfrom the understanding that the government has \nthe legal obligation to provide means of payment \nto the public. It could, however, undercut the tra -\nditional financial intermediation role of commercial \nbanks, which transform liquid liabilities into long-\nterm assets. A central bank cannot take over the \nrole of pooling liquidity to finance investments. \nIf a central bank chose blockchain technolo -\ngies to administer digital transactions in a decen -\ntralized way, it would compete more directly with \ncryptocurrencies, with the advantage of providing \na token with a more stable value. Still, the system \nwould differ fundamentally from the early crypto -\ncurrency protocols. Supply of central bank coins \nwould be endogenous—in order to link their value \nto legal tender—and seigniorage would accrue to \nthe central bank. Such a system would undoubt -\nedly become a permissioned blockchain, with only \npreselected servers participating (Danezis and \nMeiklejohn 2016). \na. Bech and Garratt (2017) provides a comprehensive overview of the differences between central bank digital currencies and \ncryptocurrencies.' metadata={'source': 'blkc.pdf', 'page': 60}
"
"page_content='48\u2003●   World Bank ECA Economic Update May 2018\nNotes\n1.  Electronic accounts are much more popular than cash. Central banks do provide elec-\ntronic accounts to banks; they do not yet provide digital cash or electronic accounts di-\nrectly to the public.\n2.  The public key functions as a pseudonym in communications. The private key is used \nto prove one’s identity. If this digital ID becomes a standard on open-source platforms, it \ncould make IDs and passwords on proprietary platforms like Facebook or Google redun-\ndant.\n3.  See, for example, the Georgian start-up Golden Fleece (https://goldenfleece.co/).\n4.  Clark (2017) describes the early history of digital payment systems. \n5.  A bitcoin address is an identifier of 26–35 alphanumeric characters that are equivalent to \nunique IDs. Every transaction is recorded on the public blockchain, so anyone can view \neach address involved in each transaction. However, it is difficult to know the real iden-\ntity of the people involved in the transactions. For this reason, the bitcoin network is of-\nten described as being pseudo-anonymous rather than completely anonymous. \n6.  In the bitcoin protocol, a block can contain about 2,000 new transactions.\n7.  The block rewards are hard-coded, but there is no guidance on what the fee should be. \nAs miners have discretion over which transactions to include, they select the transactions \nwith the highest fees. As the size of each block on the blockchain is limited to 1 MB \n(roughly 2,000 transactions), if a user wants her transaction to be included in the next \nblock, she has to offer a high enough fee so that her transaction is among the approxi-\nmately 2,000 that are selected. \n8.  Other new concepts, often variations of the proof of stake, are proof of activity, proof of \nburn, proof of capacity, and proof of elapsed time (Rooney 2018). \n9.  The Austrian school and Keynesian economists have long debated the pros and cons of \nprivate, decentralized money versus government-sanctioned legal tender. What is an \nattraction for one group of economists (no reliance on governments, which are inclined \nto impose an inflation tax) is a nightmare for the other (financial instability, lack of mon-\netary instruments). \n10.  ZeroCash (http://zerocash-project.org/) is a good example of a platform that provides \nmore encryption. \n11.  Silk Road, an online market for illegal drugs that used bitcoins, started in 2011. The FBI \ntook it down in 2014. \n12.  The vulnerability of banks in oil-exporting countries after the fall in oil prices was one \nof the reasons for the formation of the Blockchain and Cryptocurrency Association \n(Dyussembekova 2017). \n13.  This project is spearheaded by Pavel Durov, one of the founders of the Russian social \nmedia platform Vkontakte, and the encrypted messaging app Telegram (Khrennikov \nand Voitova 2018). \n14.  Carstens (2018) strongly advocates this point.\n15.  Levin, O’Brien, and Zuberi (2015) discusses the regulation of cryptocurrencies. Bal \n(2015) discusses tax issues. He and others (2016) provide a comprehensive overview of \nall oversight measures. ' metadata={'source': 'blkc.pdf', 'page': 61}
"
"page_content='Chapter 2: Cryptocurrencies and Blockchain: Hype or Transformational Technologies? ●\u200349\nReferences\nAris, Ben. 2017. “Russia’s Blockchain Revolution.” Moscow Times, October 6. https://\nthemoscowtimes.com/articles/eastern-europes-blockchain-revolution-59179.\nAtkins, Ralph. 2018a. “Swiss Authorities Tread Wary Path through CryptoValley.” Financial \nTimes, March 20. https://www.ft.com/content/bea458ba-25fc-11e8-b27e-cc62a39d57a0.\n———. 2018b. “Switzerland’s Stock Exchange Chairman Calls for ‘e-Franc.’” Financial \nTimes. February 25. https://www.ft.com/content/fcc7d27a-186e-11e8-9376-4a6390addb44.\nBal, Aleksandra. 2015. “How to Tax Bitcoin.” In Handbook of Digital Currency: Bitcoin, \nInnovation, Financial Instruments, and Big Data, ed. David Lee Kuo Chuen. Cambridge, \nMA: Academic Press.\nBech, Morten Linnemann, and Rodney Garratt. 2017. “Central Bank Cryptocurrencies.” \nSeptember 17. Bank for International Settlements, Basel. https://www.bis.org/publ/\nqtrpdf/r_qt1709f.htm.\nBordo, Michael D., and Andrew T. Levin. 2017. “Central Bank Digital Currency and the \nFuture of Monetary Policy.” NBER Working Paper 23711. National Bureau of Economic \nResearch, Cambridge, MA. http://www.nber.org/papers/w23711.\nCarstens, Agustin. 2018. “Money in the Digital Age: What Role for Central Banks?” Lecture \nby the general manager of the Bank for International Settlements, House of Finance, \nGoethe University, Frankfurt, February 6. https://www.bis.org/speeches/sp180206.htm.\nCastor, Amy. 2017. “A (Short) Guide to Blockchain Consensus Protocols.” CoinDesk. May \n17. https://www.coindesk.com/short-guide-blockchain-consensus-protocols/.\nClark, Jeremy. 2017. “The Long Road to Bitcoin.” Foreword to “Distributed Ledger Technology \n(DLT) and Blockchain,” Harish Natarajan, Solvej Karla Krause, and Helen Luskin Gradstein, \nWorld Bank, FinTech Note No. 1, Washington, DC. http://documents.worldbank.org/\ncurated/en/177911513714062215/Distributed-Ledger-Technology-DLT-and-blockchain. \nDanezis, George, and Sarah Meiklejohn. 2016. “Centrally Banked Cryptocurrencies.” \nhttps://arxiv.org/pdf/1505.06895.pdf.\nDigiconomist. n.d. Bitcoin Energy Consumption Index. https://digiconomist.net/bitcoin-\nenergy-consumption.\nDyussembekova, Zhazira. 2017. “Kazakh Organizations form Blockchain and Cryptocurrency \nAssociation.” Astana Times, November 23. https://astanatimes.com/2017/11/kazakh-\norganisations-form-blockchain-and-cryptocurrency-association/ . \nFinancial Times. 2018. “Bringing Swiss Order to Initial Coin Offerings.” February 19. \nhttps://www.ft.com/content/36ef310c-1566-11e8-9e9c-25c814761640.\nGould, David Michael, and Martin Melecky. 2017. “Risks and Returns: Managing Financial \nTrade-Offs for Inclusive Growth in Europe and Central Asia.” World Bank, Washington, \nDC. https://openknowledge.worldbank.org/handle/10986/25494. \nHe, Dong, Karl Habermeier, Ross Leckow, Vikram Haksar, Yasmina, Almeida, Mikari \nKashima, Nadim Kyriakos-Saad, Hiroko Oura, Tahsin Saadi Sedik, Natalia Stetsenko, \nand Concepcion Verdugo-Yepes. 2016. “Virtual Currencies and Beyond: Initial \nConsiderations.” IMF Staff Discussion Note SDN/16/03, International Monetary Fund, \nWashington, DC. https://www.imf.org/external/pubs/ft/sdn/2016/sdn1603.pdf.\nHelms, Kevin. 2018. “Five Siberian Power Plants Attracting Crypto Miners with Surplus \nElectricity.” February 15. https://news.bitcoin.com/five-siberian-power-plants-attracting-\ncryptocurrency-miners-surplus-electricity/.\nLevin, Richard B., Aaron A. O’Brien, and Madina M. Zuberi. 2015. “Real Regulation of \nVirtual Currencies.” In Handbook of Digital Currency: Bitcoin, Innovation, Financial \nInstruments, and Big Data, ed. David Lee Kuo Chuen. Cambridge, MA: Academic Press.' metadata={'source': 'blkc.pdf', 'page': 62}
"
"page_content='50\u2003●   World Bank ECA Economic Update May 2018\nJohnson, S. 2018. “Beyond the Bitcoin Bubble.” New York Times, January 16. https://www.\nnytimes.com/2018/01/16/magazine/beyond-the-bitcoin-bubble.html.\nKhrennikov, Ilya, and Olga Voitova, 2018. “Telegram Triples Price in Largest Initial Coin \nOffering.” Bloomberg Technology, February 28. https://www.bloomberg.com/news/\narticles/2018-02-28/telegram-said-to-triple-price-in-largest-initial-coin-offering.\nKrugman, Paul. 2013. “Bitcoin Is Evil.” New York Times, December 28. https://krugman.\nblogs.nytimes.com/2013/12/28/bitcoin-is-evil/ .\nMarson, James. 2017. “Frigid, Industrial Siberia: Primed for the Digital Era.” September 3. \nhttps://www.wsj.com/articles/frigid-industrial-siberia-primed-for-the-digital-\nera-1504436400.\nMediTelegraph. 2017. “Lithuania Emerges as Blockchain Gateway to Europe.” December 5. \nhttp://www.themeditelegraph.com/en/green-and-tech/technology/2017/12/05/\nlithuania-emerges-blockchain-gateway-europe-YVX3gnWsH60lH36eLrU3qL/index.\nhtml.\nMilano, Annaliese. 2018. “Regional Government in Russia to Test Blockchain Payments.” \nCoindesk, February 20. https://www.coindesk.com/regional-government-russia-test-\nblockchain-payments/.\nMurphy, Hannah, and Philip Stafford. 2018. “Blockchain Explainer: A Revolution Only in \nIts Infancy.” Financial Times , February 1. https://www.ft.com/content/6c707162-ffb1-\n11e7-9650-9c0ad2d7c5b5.\nNakamoto, Satoshi. 2008. “Bitcoin: A Peer-to-Peer Electronic Cash System.” https://bitcoin.\norg/bitcoin.pdf.\nNicholson, Sibel. 2018. “EU Opens Blockchain Observatory, Looking to Invest up to €340 \nMillion.” Interesting Engineering, February 2. https://interestingengineering.com/eu-\nopens-blockchain-observatory-looking-to-invest-up-to-340-million.\nPerper, Rosie. 2018. “Iceland May Use More Electricity Mining Bitcoin than Powering \nHomes This Year.” BusinessInsider, February 12. http://www.businessinsider.com/\niceland-bitcoin-mines-are-booming-2018-2.\nPoon, Joseph, and Thaddeus Dryja. 2016 “The Bitcoin Lightning Network: Scalable Off-\nChain Instant Payments.” Lightning Network, January 14. https://lightning.network/\nlightning-network-paper.pdf.\nPopper, Nathaniel. 2018. “As Bitcoin Bubble Loses Air, Frauds and Flaws Rise to Surface.” \nNew York Times, February 5. https://www.nytimes.com/2018/02/05/technology/virtual-\ncurrency-regulation.html.\nRogoff, Kenneth. 2014. “Costs and Benefits to Phasing Out Paper Currency.” NBER \nMacroeconomics Annual, vol. 29. http://www.nber.org/chapters/c13431.\nRooney, Kate. 2018. “Peter Thiel Is Betting on Bitcoin Because One Cryptocurrency Will Become \nthe ‘Online Equivalent to Gold.’” CNBC, March 15. https://www.cnbc.com/2018/03/15/\npeter-thiel-is-betting-on-bitcoin-to-be-the-online-equivalent-to-gold.html .\nSputnikInternational. 2018. “Cryptocurrency Boom: Armenia Set to Be Home to 50 MW \nMining Farm.” February 7. https://sputniknews.com/business/201802071061451274-\ncryptocurrency-boom-armenia-mining-farm/.\nTruman, Edwin M. 2013. “Asian and European Financial Crises Compared.” WP13-9, \nPeterson Institute for International Economics, Washington, DC. https://piie.com/\npublications/wp/wp13-9.pdf. \nUNDP (United Nations Development Programme). 2018. The Future Is Decentralised: Block \nChains, Distributed Ledgers, & The Future of Sustainable Development. New York. https://\nwww.blockchain.com/assets/pdf/TheFutureisDecentralised.pdf . \nYoung, Joseph. 2017. “Why the EU Is Investing $540,000 in Blockchain Development and \nPilot Test.” BTCmanager.com, May 1. https://btcmanager.com/why-eu-is-investing-\n540000-in-blockchain-development-and-pilot-test/. ' metadata={'source': 'blkc.pdf', 'page': 63}
"
"page_content='PART\nSelected Country PagesII\n' metadata={'source': 'blkc.pdf', 'page': 64}
"
"page_content='Selected Country Pages ●\u200353\n40 MPO  Apr 18  Recent developments  \n \nAlbania’s real GDP grew by 3.8 percent \nin 2017, up from 3.4 percent in 2016. Key \ndrivers were private investment and con-\nsumption. Investment dynamics reflected \ntwo large energy projects financed by \nFDI (the Trans - Adriatic Pipeline and a \nhydropower plant). Private consumption \nwas supported by a recovery in employ-\nment, wages and credit. Public consump-\ntion made a small contribution to \ngrowth, reflecting growth of the public -\nsector wages. High tourism exports and \nrecovering commodity exports more than \ncompensated for the high investment -\nrelated imports of machineries and \nequipment as well as for the drought -\nrelated energy imports.  \nGrowth stimulated job creation. Employ-\nment grew by 2.9 percent in the first three \nquarters of 2017, following a strong ex-\npansion of 6.5 percent in 2016. Labor force \nparticipation increased to 58 percent, up \nby 0.4 percentage points year -on-year. \nBesides improved employment prospects, \nthe increase in labor force participation \nmay reflect the Government ’s anti -\ninformality campaign – including in-\ncreased audits and higher penalties for \nnon-compliance. The unemployment rate \ndeclined by 1.7 pp to an average of 13.9 \npercent in the first three quarters of 2017. \nReal wages in the formal employment \nhave started to pick up in 2017 in con-\nstruction, energy, and tourism.  \nPoverty is estimated to have declined as \ngrowth and employment continued to pick up. The poverty rate (measured as \nUS$ 5.5/day, 2011 PPP) is estimated to \nhave decreased in 2017 to 32.8 percent, \ncompared to 33.9 percent in 2016. Labor \nforce participation of women, particularly \nyoung women, has started to decline \nthroughout 2017, a trend that needs to be \nclosely monitored to avoid reversing pre-\nvious gains.  \nFiscal policy supported a reduction of \npublic debt, but the pace of fiscal consoli-\ndation slowed in 2017. The 2017 fiscal defi-\ncit is estimated at 2 percent of GDP, slight-\nly above the deficit of 1.8 percent in 2016. \nRevenue gains, from increased economic \nactivity and the recovery of commodity \nprices, were estimated at an additional 0.9 \npercent of GDP in comparison to 2016. On \nthe expenditure side, under -execution of \npublic investments and lower interest \nexpenditures partially compensated \ndrought -related emergency support to the \nelectricity sector and higher local govern-\nments spending. Prudent fiscal policy \nsupported the public debt decline to 71 \npercent of GDP in 2017, compared to 72.4 \npercent in 2016.  \nThe Bank of Albania ’s (BoA) policy stance \ncontinues to be accommodative and credit \ngrowth recovers. Average inflation picked \nup to 2 percent in 2017, but remained be-\nlow the BoA ’s 3 percent target, prompting \nno changes in the policy rate, which re-\nmains at 1.25 percent since May 2016. Un-\nderlying price pressures have remained \nsubdued, helped by an appreciation of the \nnational currency relative to the euro by 1.7 \npercent in 2017. The restructuring of NPLs \nfrom large borrowers and mandatory write\n-offs led to a decline in the NPL ratio to 13.2 ALBANIA  \nFIGURE 1  Albania / Real GDP  growth and contributions to \nreal GDP growth  FIGURE 2  Albania / Actual and projected poverty rates and \nreal private consumption per capita  \nSources: Instat, Bank staff calculations.  Sources: World Bank. Notes: See Table 2.  Growth is estimated to have strengthened \nat 3.8 percent in 2017 supported by in-\nvestments and is projected to moderate to \n3.6 percent in 2018 as large FDI -financed \nenergy projects wind down; growth will \nbe driven by household consumption, and \na pickup in exports. Growth created jobs, \ncontributing to poverty reduction. Public \ndebt declined in 2017, but the pace of \nfiscal consolidation slowed. Fiscal consol-\nidation, improvement in spending effi-\nciency, and implementation of structural \nreforms remain critical to fostering confi-\ndence and growth.  Table 1 2017\nPopulation, million 2.9\nGDP, current US$ billion 12 . 5\nGDP per capita, current US$ 4297\nInternational poverty rate ($1 .9)a0.9\nLower middle-income poverty rate ($3.2)a6.6\nUpper middle-income poverty rate ($5.5)a34.7\nGini coefficienta32.1\nSchool enrollment, primary (% gross)b113 . 7\nLife expectancy at birth, yearsb78.2\n(a) Most recent value (201 2), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n050000100000150000200000250000\n0102030405060\n2002 2004 2006 2008 2010 2012 2014 2016 2018 2020\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)\n-5-4-3-2-101234567\nQ1 -10 Q1 -11 Q1 -12 Q1 -13 Q1 -14 Q1 -15 Q1 -16 Q1 - 17\nNet taxes Other services\nInformation and communication Trade autorepair and transport\nConstruction Manifacturing\nExtractives Agriculture\nGDPPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 66}
"
"page_content='54\u2003●   World Bank ECA Economic Update May 2018\n41 MPO  Apr 18  percent of total loans as of December 2017. \nLow interest rates, progress in dealing with \nNPLs and economic growth stimulated an \nincrease of private sector credit issuance by \n13.5 percent in 2017.  \nThe current account deficit widened in \n2017. The current account deficit is esti-\nmated to have widened, reaching 8 per-\ncent of GDP in 2017. FDI -related invest-\nments in the energy sector and drought -\nrelated electricity imports increased im-\nports. Tourism and commodity prices \nincreased the value of exports. The result-\ning financing needs were covered by sig-\nnificant FDI inflows. With much of the \nfinancing coming through FDIs, external \ndebt declined by 2 percentage points \nreaching 70.4 percent of GDP in 2017. For-\neign exchange reserves have remained \nstable, covering 6 ½ months of imports of \ngoods and services.  \n \n \nOutlook \n \nGrowth is projected to moderate to 3.6 \npercent in 2018, as two large FDI projects \nin the energy sector wind down, and then \naverage 3.5 percent in the period 2019 -20. \nAs the demand stimulus from the large energy FDI projects winds down and eco-\nnomic activity increases to close to poten-\ntial, growth will moderate. Growth will be \nincreasingly relying on private consump-\ntion, supported by improved labor market \nconditions, and net exports supported by \nimproved foreign demand. Investment \nwill continue to support growth, reflecting \na public investment drive to reduce infra-\nstructure gaps and private investment, \nreflecting structural reforms and improve-\nments in the business climate. Labor mar-\nket improvements will support private \nconsumption. Poverty is expected to de-\ncline from 31.3 percent in 2018 to 29.5 per-\ncent in 2019.  \nSustained fiscal consolidation and struc-\ntural reforms are expected to gradually \nreduce the fiscal deficit to 1.5 percent of \nGDP by 2020, and the debt -to-GDP ratio \nto 60 percent of GDP by 2022. Under the \nGovernment medium term fiscal frame-\nwork, fiscal consolidation will continue \nuntil 2021 – lowering expenditures on \npersonnel, operational and maintenance, \nsocial outlays and local governments. On \nthe revenue side, the introduction of a \nnewly valued property tax in 2018 is ex-\npected to yield additional revenues. While \nthe government is planning sustained \ncapital expenditures at 5 percent of GDP over the medium term, it has also an-\nnounced sizable investments financed \nthrough public private partnerships \n(PPPs) to be contracted starting from 2018.  \n  \n \nRisks and challenges  \n \nEconomic prospects are vulnerable to \ndownside risks. Given high public debt, \nthe government needs to implement fiscal \nconsolidation and strengthen tax compli-\nance to preserve the macro -fiscal stability \nas a foundation for growth. The Govern-\nment needs to strengthen its PPP manage-\nment framework to contain fiscal risks \nfrom PPPs and to ensure that investment \nis cost -effective. Harnessing growth will \nrequire progress on structural reforms \nimproving the business climate - includ-\ning judiciary, financial and energy reform \n-, strengthening the skills of its labor force \n- and removing barriers to jobs for the \npopulation. Lower than expected growth \nin trading partners and higher global in-\nterest rates are also key risks for Albania ’s \ngrowth and public finances. Reforms \nshould be informed by equity considera-\ntions to ensure continued poverty reduc-\ntion and inclusion. \nTABLE 2  Albania / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 2.2 3.4 3.8 3.6 3.5 3.5\nPrivate Consumption 1.1 2.9 1.7 2.7 2.7 3.5\nGovernment Consumption -1.1 3.8 2.3 1.2 0.4 0.6\nGross Fixed Capital Investment 4.0 6.0 6.8 3.5 3.1 1.9\nExports, Goods and Services 1.0 13.0 7.5 6.5 6.5 6.3\nImports, Goods and Services -2.9 7.4 5.7 4.8 4.8 4.9\nReal GDP growth, at constant factor prices 3.1 3.4 3.7 3.6 3.5 3.5\nAgriculture 0.8 0.7 0.8 1.5 1.8 1.8\nIndustry 5.1 3.2 3.5 3.6 4.2 4.2\nServices 3.4 5.1 5.5 4.9 4.0 4.1\nInflation (Consumer Price Index) 1.9 0.9 2.0 2.1 2.3 2.8\nCurrent Account Balance (% of GDP) -7.8 -6.8 -8.0 -7.1 -6.9 -6.7\nFinancial and Capital Account (% of GDP) 6.4 5.6 6.8 5.9 5.7 5.5\nNet Foreign Direct Investment (% of GDP) 8.0 8.7 9.4 8.5 7.0 6.5\nFiscal Balance (% of GDP) -4.9 -1.8 -2.0 -2.0 -1.6 -1.4\nDebt (% of GDP) 73.1 72.4 71.0 69.0 66.6 64.3\nPrimary Balance (% of GDP) -2.2 0.7 0.2 0.1 0.9 1.1\nInternational poverty rate ($1.9 in 2011 PPP)a,b0.8 0.8 0.7 0.7 0.6 0.5\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b6.5 5.8 5.6 5.1 4.7 4.2\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b35.4 33.9 32.8 31.3 29.5 27.2\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 2-LSM S. Nowcast: 201 5 - 201 7. Forecast are from 201 8' metadata={'source': 'blkc.pdf', 'page': 67}
"
"page_content='.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 2-LSM S. Nowcast: 201 5 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 2) with pass-through = 0.87  based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 67}
"
"page_content=""Selected Country Pages ●\u200355\n42 MPO  Apr 18  Recent developments  \n \nArmenia's economic performance outper-\nformed expectations in 2017, recording the \nhighest rate of growth since 2007. Follow-\ning a flat economic performance in 2016, \nreal GDP expanded by 7.5 percent, mainly \ndriven by a recovery in the external envi-\nronment.  Growth was also supported by \na strong rebound in domestic demand. \nConsumption benefited from higher in-\ncomes —buoyed by a boost to remittance \ninflows of about 12 percent year on year \nand nominal average wage growth of 3 \npercent —which also benefited poor and \nvulnerable households.  \nOn the production side, growth was driv-\nen by a significant expansion in trade (16 \npercent), industry (10 percent) and ser-\nvices (9 percent). Also the construction \nsector showed modest growth (3 percent), \nbut output remains below its pre -crisis \nlevel of 2008. The agriculture sector \nshrunk (by 4 percent), due to unfavorable \nweather conditions.  \nA period of deflation came to an end in \n2017 and inflation began rising, reaching \nan annual rate of 2.6 percent by year -end, \nwithin the central bank's inflation target of \n4 percent (+/ - 1.5 percentage points). Re-\ncovering domestic demand, gradually \nrising commodity prices and excise tax \nhikes resulted in higher prices for food, \nbeverages, cigarettes, and transport, \naffecting the purchasing power of poor \nand vulnerable groups, which traditional-\nly spend a higher share of their budget on \nthese items.  The fiscal deficit narrowed slightly in \n2017, to 4.7 percent of GDP (down from \n5.5 percent in 2016), but remained wider \nthan the budgeted deficit of 2.8 percent of \nGDP. While tax revenue increased by 7.3 \npercent year on year in 2017 —driven by \nhigher collections of excise taxes, customs \nduties and environmental taxes —as a per-\ncentage of GDP revenue declined by 0.8 \npercentage points compared with 2016. \nCapital expenditure rose by 36 percent \nyear on year in nominal terms, but tight \ncontrol over current spending resulted in \na decline of 1.6 percentage points in over-\nall expenditure as a share of GDP. At the \nend of 2017, public debt (including CBA \ndebt) totaled almost 59 percent of GDP.  \nThe current account deficit continued to \nnarrow for a third consecutive year and is \nestimated to have fallen to under 2 per-\ncent of GDP in 2017. The improvement in \nthe current account was driven by a \nstrong increase in export earnings (up 25 \npercent year on year) —particularly from \nminerals and processed food products —\nrobust growth in tourist arrivals and ex-\nports of other services (such as ICT), and \nimprovement in the income account. The \nstrong inflows were partially offset by a \nsignificant increase in import spending \n(28 percent year on year), a large share of \nwhich comprised capital imports linked \nto investment.  \nBanking sector performance remained \nsolid, with a capital adequacy ratio of just \nunder 20 percent on average at end -2017, \nwell above the minimum requirement of \n12 percent. At the end of 2017, the non -\nperforming loan ratio stood at 5.5 percent, \nits lowest level since the 2014 Russian Table 1 2017\nPopulation, million 3.0\nGDP, current US$ billion 11. 6\nGDP per capita, current US$ 381 3\nInternational poverty rate ($1 .9)a1. 8\nLower middle-income poverty rate ($3.2)a14 . 1\nUpper middle-income poverty rate ($5.5)a43.5\nGini coefficienta32.5\nSchool enrollment, primary (% gross)b98.5\nLife expectancy at birth, yearsb74.2\n(a) Most recent value (201 6), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).ARMENIA  \nFIGURE 1  Armenia / GDP growth, fiscal, and current     \naccount balance  FIGURE 2  Armenia / Actual and projected poverty rates and \nreal private consumption per capita  \nSources: National Statistics Service of Armenia, Central Bank of Armenia and \nWorld Bank staff projections.  Source: World Bank (see notes to Table 2).    Firming international metal prices, eco-\nnomic recovery in Russia, and stronger \ndomestic demand supported a real GDP \ngrowth rate of 7.5 percent in 2017, the \nlargest annual expansion in a decade. \nGrowth in the medium term is projected \nto converge towards its potential of \naround 4 percent, accompanied by a con-\ntinued (albeit gradual) decline in the pov-\nerty rate. However, external vulnerabili-\nties and delayed structural reforms could \nundermine economic growth.  \n-12-8-4048\n2012 2013 2014 2015 2016 2017 2018 2019 2020Real GDP growth, % change\nCAB, % of GDP\nFiscal balance, % of GDPPercent, percentage points\n0500000100000015000002000000\n020406080100\n2001 2003 2005 2007 2009 2011 2013 2015 2017 2019\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)"" metadata={'source': 'blkc.pdf', 'page': 68}
"
"page_content=""56\u2003●   World Bank ECA Economic Update May 2018\n43 MPO  Apr 18  crisis. Dollarization ratios for bank depos-\nits and loans declined slightly but re-\nmained high at around 60 percent. Total \nlending grew by 10 percent, while the \nDram lending rate fell by 260 basis points \nover the course of 2017.  \nThe economic recovery in 2017 is expected \nto have supported a further reduction in \npoverty rates, which have been on a de-\nclining trend since the global economic \ncrisis. The absolute poverty rate \n(measured at the 2011 PPP -adjusted \nUS$3.2/day poverty line) is estimated to \nhave fallen from 14.1 percent in 2016 to \n11.6 percent in 2017.  \n \n \nOutlook \n \nArmenia's economic outlook remains pos-\nitive. The strong performance in 2017 sug-\ngests the opening of a window of oppor-\ntunity to undertake the reforms needed to \nmake growth inclusive and sustainable. \nOn the assumption of sustained favorable \nexternal economic conditions and robust \nstructural reforms, medium -term growth \nis forecast to be around the potential \ngrowth rate (4 percent), supported by pri-\nvate-sector, export -led activity. In particu-\nlar, the agribusiness, information and communication technology (ICT), and \ntourism sectors are expected to deliver \nsolid growth as efforts to boost competi-\ntiveness and connectivity start to deliver \nresults. As the economy continues to grow \nand incomes rise —and remittance inflows \ncontinue to support livelihoods thanks to \na benign external environment —the abso-\nlute poverty rate is forecast to decline to \n8.1 percent in 2020.  \nAlthough price pressures are forecast to \nincrease in the short term, mainly due to \nhigher customs duties and excise taxes on \nfuels starting in 2018, inflation is projected \nto remain within the official target range.  \nThe new Tax Code, which becomes fully \neffective in 2018, lays the foundation for \nbetter tax administration and higher tax \nrevenues. Implementation of the upgrad-\ned fiscal rule (approved in December \n2017) will result in stronger discipline for \ncurrent spending and will provide some \nroom to increase growth -friendly capital \nexpenditures while also stabilizing and \neventually reducing the public debt.  \n \n \nRisks and challenges  \n \nArmenia ’s vulnerability to economic con-\nditions in Russia and its other trading partners —as well as its low level of ex-\nport diversification —will remain high. \nAdverse shocks linked to the Russian \nrecovery or metal export prices would \nhave a negative impact on economic \ngrowth rates over the near to medium \nterm. Fiscal slippage could trigger the \nneed for sharper adjustments in public \nspending, undermining domestic demand \nand real economic activity. Fiscal policy \nshould remain prudent to contain public \ndebt levels. Avoiding fiscal procyclicality \nwill help prevent macroeconomic imbal-\nances and reduce the risks associated \nwith overheating (including potential \ncompetitiveness losses) during periods of \nstrong economic growth. Continuing co-\nordination with the monetary authorities \nand the maintenance of a flexible ex-\nchange rate will be vital to avoid episodes \nof real exchange rate appreciation that \ncan lead to losses in competitiveness.  \nSustaining robust economic growth will \nrequire bold structural reforms —such as \nproviding a fair and competitive business \nand investment environment —to address \nfundamental problems in Armenia's econ-\nomy. Increasing country-wide access to \neconomic opportunities will help to boost \nhousehold incomes and drive a further \nreduction in poverty, particularly in sec-\nondary cities where poverty is highest.  \nTABLE 2  Armenia / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.2 0.2 7.5 4.1 4.0 4.0\nPrivate Consumption -7.8 -1.3 8.8 5.0 4.7 4.5\nGovernment Consumption 4.7 4.1 9.8 4.3 3.7 3.5\nGross Fixed Capital Investment 2.5 -11.4 7.3 4.5 4.2 4.1\nExports, Goods and Services 4.9 19.1 23.2 10.1 9.8 9.5\nImports, Goods and Services -15.1 7.6 24.0 10.3 9.5 8.9\nReal GDP growth, at constant factor prices 4.3 0.7 7.2 4.1 4.0 4.0\nAgriculture 13.2 -5.8 -4.0 2.5 2.7 2.4\nIndustry 2.8 -0.9 8.0 5.4 5.2 5.1\nServices 2.1 4.0 10.5 3.9 3.8 3.9\nInflation (Consumer Price Index) 3.7 -1.4 1.0 3.5 3.8 4.0\nCurrent Account Balance (% of GDP) -2.6 -2.3 -1.7 -2.9 -3.5 -3.8\nFinancial and Capital Account (% of GDP) 4.0 4.5 1.4 2.9 3.5 3.8\nNet Foreign Direct Investment (% of GDP) 1.5 2.6 4.1 4.4 4.5 4.7\nFiscal Balance (% of GDP) -4.8 -5.5 -4.7 -2.6 -2.5 -2.3\nDebt (% of GDP) 48.7 56.6 58.8 58.6 58.3 57.5\nPrimary Balance (% of GDP) -3.0 -3.6 -2.7 -0.5 -0.3 0.0\nInternational poverty rate ($1.9 in 2011 PPP)a,b1.9 1.8 1.4 1.3 1.0 0.8\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b13.5 14.1 11.6 10.1 9.1 8.1\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b48.3 43.5 39.9 38.2 36.8 35.2\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n"" metadata={'source': 'blkc.pdf', 'page': 69}
"
"page_content=' 43.5 39.9 38.2 36.8 35.2\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 6-ILCS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 6)  with pass-through = 0.7  based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 69}
"
"page_content='Selected Country Pages ●\u200357\n44 MPO  Apr 18  Recent developments  \n \nThe Azerbaijani economy had a very mod-\nest recovery in 2017, as a rebound in the \nnon-oil economy was offset by a contrac-\ntion in the oil sector due to substantial \nOPEC-led cuts in oil production and ca-\npacity constraints. In particular, the non -\noil sector rebounded by 2.7 percent year -\non-year (y/y), supported by benign public \nfinancing, stronger external demand, and \nimproved confidence in response to recov-\nering oil prices. With the exception of the \nconstruction sector, output increased in all \nnon-oil sectors with strong y/y growth \nrecorded in transport (8.5 percent), infor-\nmation and communication technologies \n(6.6 percent), tourism (5.9 percent) and \nagriculture (4.2 percent).  On the down-\nside, and despite higher oil prices, oil GDP \ncontracted by 5 percent y/y.  \nAnnual end -year inflation declined from \n15.6 percent in 2016 to 7.9 percent in 2017, \nas the effect of the exchange rate pass -\nthrough and the impact of administrative \ntariffs dissipated. The high inflation rate \nrecorded for food items (9.4 percent y/y) \nwas due to a strong external demand for \nagricultural products. To curb inflation, \nthe central bank continued to tighten the \nmonetary policy stance by actively absorb-\ning manat liquidity through the use of \ndeposit auction operations and the issu-\nance of notes.  \nHigher oil prices, sluggish import growth, \nand expanded non -oil exports helped to \nimprove Azerbaijan ’s balance of payments \nin 2017. Exports expanded by 50 percent y/y, led by a rise in oil exports, as oil pric-\nes recovered (oil exports accounted for 90 \npercent of total exports), while imports \nrebounded by 3 percent y/y (compared to \na drop in 2016). Non -oil exports increased \nby 22 percent y/y, supported by stronger \nexternal demand, mainly from Russia. The \ncurrent account recorded an estimated \nsurplus of 4.3 percent of GDP in 2017.  \nThe tightening monetary policy, improved \nexternal environment, and transfers from \nthe Oil Fund to the central bank helped to \nmaintain a broadly stable exchange rate at \n1.7 AZN per USD in 2017. As a result, the \ncentral bank ’s reserves increased by 34 \npercent y/y in 2017 and totaled US$5.3 \nbillion by end -2017. The Oil Fund ’s assets \nrose by 8.02 percent y/y and totaled US$ \n35.8 billion (about 87% of GDP) in January \n2018, mainly due to higher oil prices and a \nportfolio revaluation.  \nIn June 2017, the Government of Azerbai-\njan (GoA) relaxed its fiscal consolidation \nprogram, and public spending was re-\nvised up to primarily inject capital equiva-\nlent to 0.7 percent of GDP in the Azerbai-\njan Deposit Insurance Fund1. Higher \nbudget spending is estimated to have wid-\nened the consolidated fiscal deficit \n(comprising State Budget, the Oil Fund, \nthe Social Protection Fund and the Na-\nkhchivan Government) from a nearly bal-\nanced position in 2016 to a deficit of 1.5 \npercent of GDP in 2017.  \nThere were signs of recovery in Azerbai-\njan’s financial sector in 2017, supported by \nthe stabilization of the manat exchange \nrate and growth across the non -oil sectors. \nThe level of non -performing loans is re-\nported to have dropped from 33 percent AZERBAIJAN  \nFIGURE 1  Azerbaijan / Non -oil sectors influenced by        \noil price  FIGURE 2  Azerbaijan / Official poverty rate  \nSource: State Statistical Committee.  \n Source: State Statistical Committee.  \nNotes: The official national poverty rates for 2013 -16 have not been reviewed by \nthe World Bank.  Azerbaijan ’s economy had a very modest \nrecovery in 2017. Benign public financ-\ning, improved confidence, and a favorable \nexternal environment supported non -oil \neconomic growth, but this was offset by \nan OPEC -led decline in oil production. \nGoing forward, growth is expected to \nstrengthen, driven mainly by a fiscal \nstimulus, a rise in hydrocarbon prices, \nand an increase in gas exports. Social \nconditions remain a major source of con-\ncern, as real wages and spending on social \nprotection programs declined in 2017.  Table 1 2017\nPopulation, million 9.9\nGDP, current US$ billion 40.7\nGDP per capita, current US$ 41 28\nSchool enrollment, primary (% gross)a1 06.6\nLife expectancy at birth, yearsa7 1. 8\nSource: WDI, M acro Poverty Outlook, and official data.\nNot es:\n(a) M ost  recent  WDI value (2015).\n49.0\n46.7\n44.7\n40.2\n29.3\n20.8\n15.8\n13.2\n10.99.17.66.0 5.3 5.0 4.95.9\n05101520253035404550\nPoverty headcount ratio at national linePercent\n-60-50-40-30-20-10010203040\n-6-4-2024681012\n2011 2012 2013 2014 2015 2016 2017 2018 2019 2020\nNon-oil GDP growth, y/y % Oil price, y/y % (RHS)Percent Percent' metadata={'source': 'blkc.pdf', 'page': 70}
"
"page_content='58\u2003●   World Bank ECA Economic Update May 2018\n45 MPO  Apr 18  in 1Q2016 to 19 percent in 4Q2017, thanks \nto the restructuring (largely at fiscal cost). \nThe restructuring of the largest bank — \nthe state -owned International Bank of \nAzerbaijan (IBA) —was completed. IBA ’s \nexternal liabilities worth US$3.3 billion \nwere converted into longer -term liabilities \nand the sovereign debt.  \nHigh inflation adversely affected house-\nhold incomes and reduced the real pur-\nchasing power. In 2017, the increase in the \nminimal cost of living and nominal aver-\nage wages by 11.6 percent y/y and 6 per-\ncent y/y, respectively, was not sufficient to \ncompensate for higher prices. As a result, \npoverty likely increased in 2017 and was \nprobably worsened by the 50 -percent cut \nin the coverage of the country ’s most im-\nportant social assistance program.  \n \n \nOutlook \n \nAzerbaijan ’s economy is projected to ex-\npand by 1.8 percent y/y in 2018, support-\ned mainly by the fiscal stimulus. The \ngrowth is expected to accelerate in the \nmedium term, driven by an expansion of \nnatural gas production, as the main pipe-\nline that will deliver gas to Europe from the Shah -Deniz II field will be operational \nby end -2018. Since the OPEC -deal is ex-\ntended until the end of 2018, Azerbaijan ’s \ncrude oil output is not expected to decline \nmuch further. Moreover, average oil pric-\nes will firm up somewhat in 2018 relative \nto 2017 and are projected to stabilize at \nrobust levels in the medium term. Non -oil \nGDP growth is expected to accelerate in \n2018, fueled by an 83 -percent y/y increase \nin budgeted public investment. Neverthe-\nless, growth in the non -oil economy is \nexpected to remain moderate due to a \nprotracted recovery of the banking sector \nand a weak business environment.  \nThe GoA plans a fiscal stimulus in 2018 \nthrough boosting capital spending, which \nwill be primarily financed by an increase \nin budget transfers from the sovereign \nwealth fund. The consolidated fiscal bal-\nance is likely to be slightly positive in 2018 \nand is estimated to average 1.3 percent of \nGDP in the medium term, as oil prices \nremain firm and gas exports rise.  \nTo contain inflation, the central bank \nneeds to continue tightening monetary \npolicy. Azerbaijan ’s external sector is ex-\npected to continue to improve due to an \nincrease in hydrocarbon production and a \ncontinuation of non -oil export growth, \nsupported by a rise in external demand and enhanced government support to \nexporters of non -oil products. However, \nspending cuts on social protection, as well \nas a moderate economic recovery, are not \nconducive to poverty reduction.  \n \n \nRisks and challenges  \n \nFollowing the recovery in oil prices after \nthe 2014 -16 shock, the likelihood of a pro -\ncyclical economic policy rather than eco-\nnomic reforms to stimulate growth is ris-\ning. The main challenge is to preserve the \nreform momentum induced by the shock \nand strengthen institutions to ensure the \nresilience of the economy to future exter-\nnal shocks. Moreover, progress on the \nstructural reform agenda to stimulate pri-\nvate-sector participation and jobs creation \nremains limited. An adaptive and effective \nsocial protection system and programs \naimed at productive inclusion of poor and \nvulnerable households are needed to re-\nduce poverty.  \n \n \n \n1/ ADIF was established in 2007 to protect individual \ndeposits when banks are closed.  \nTABLE 2  Azerbaijan / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 1.1 -3.1 0.1 1.8 3.8 3.2\nPrivate Consumption 5.4 -2.8 2.7 3.2 3.3 3.4\nGovernment Consumption -7.1 -8.1 1.8 3.0 0.3 -0.7\nGross Fixed Capital Investment -8.7 -20.0 -5.0 2.5 4.5 4.4\nExports, Goods and Services -1.0 -2.0 -1.1 0.3 4.0 3.5\nImports, Goods and Services -5.0 -10.0 0.2 2.2 2.4 2.8\nReal GDP growth, at constant factor prices 1.0 -3.1 0.1 1.8 3.8 3.2\nAgriculture 6.6 2.6 4.2 4.0 4.1 4.2\nIndustry -2.0 -4.9 -2.8 -0.1 3.2 2.7\nServices 6.9 -0.3 5.4 5.0 4.8 4.0\nInflation (Consumer Price Index) 7.7 15.6 7.9 6.4 4.2 3.9\nCurrent Account Balance (% of GDP) -0.4 -3.6 4.3 5.9 7.2 7.9\nFinancial and Capital Account (% of GDP) -16.8 -7.2 -4.3 -5.9 -7.2 -7.9\nNet Foreign Direct Investment (% of GDP) 3.2 3.2 2.8 2.6 2.3 2.1\nFiscal Balance (% of GDP) -6.2 0.3 -1.5 0.4 1.4 2.1\nPrimary Balance (% of GDP) -5.5 1.0 -0.4 1.7 2.3 2.7\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast. Fiscal accounts are calculated using Global Economic Prospects oil projections. ' metadata={'source': 'blkc.pdf', 'page': 71}
"
"page_content='Selected Country Pages ●\u200359\n46 MPO  Apr 18  Recent developments  \n \nThe modest cyclical expansion continues, \nsupported by improving external condi-\ntions and recovery in industry. In 2017, \nthe economy grew at 2.4  percent y/y, a \nrebound from the contraction of \n2.5 percent y/y in 2016. Modest economic \ngrowth in Russia and a gradual increase \nin commodity prices boosted merchandize \nexports and supported an increase in do-\nmestic business activity. On the demand \nside, real wage increases helped to in-\ncrease household consumption by almost \n6 percent in 3Q 2017 (vs. 6.5  percent fall in \n3Q 2016). In the same period, growth of \ngross fixed capital formation recovered to \n1.8 percent – mainly due to rebound of \npublic investment – versus the dramatic \nfall by 18.9  percent in 3Q 2016. \nIn 2017, annual average inflation slowed \nto 4.6  percent helped by better anchored \ninflation expectations, moderation in ad-\nministrative price adjustments, and im-\nported disinflation. Moderating inflation \nhas allowed the National Bank to cut its \nbenchmark rate from 17 to 10.5  percent \nduring 2017, leading to an almost twofold \nreduction in nominal lending rates in na-\ntional currency. As a result, supply of new \ncredit in nominal terms went up by almost \n30 percent y/y. However, NPL levels re-\nmain at around 13  percent and a compre-\nhensive NPL resolution mechanism is still \nnot put in place.  \nQuasi -fiscal expenditures continue to put \npressures on public debt levels and exter-\nnal financing needs. Recorded primary budget surplus has been spent on repay-\nment and servicing public debt in foreign \ncurrency, which amounted to \nUS$3.26  billion, or 6.9 percent of GDP. \nPressures were partially eased by the dis-\nbursement of the two tranches of the \nEFSD loan (totaling US$600 million), dis-\nbursement of a bilateral loan from Russia \n(US$700 million), and the issuance of Eu-\nrobonds —US$1.4  billion in 2017, and \nUS$0.6 billion in February 2018. Exports \nrecovered, helping to bring down the cur-\nrent account deficit to 1.1  percent of GDP \nin January -November 2017 (vs 3.2  percent \na year ago), yet driven by the primary \nincome deficit of 4  percent of GDP.  \nReal wage increases have stopped the \ndeterioration of household incomes. In \n2017, real wages and disposable incomes \ngrew by 6.2 and 2.4  percent respectively, \nbenefiting from lower inflation. Disposa-\nble incomes growth was the highest in \nMinsk, but also in regions with higher \nabsolute poverty rates, such as Brest and \nGomel. The hires -to-terminations ratio \nthroughout 2017 exceeded that of 2016 by \nan average of 12  percent. The share of \nhouseholds below the official poverty \nthreshold remained stable throughout the \nfirst three quarters of 2017.  \n \n \nOutlook  \n \nWhile the recovery is underway, annual \neconomic growth rates are unlikely to ex-\nceed 3 percent. Improved household con-\nsumption and investment activity, along \nwith gradual increase in exports, will help BELARUS  \nFIGURE 1 Belarus / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2 Belarus / Actual and projected poverty rates and \nreal GDP per capita  \nSources: World Bank Staff Calculations based on Belstat data.  Sources: World Bank. Notes: see Table 2.  Improving external conditions, stronger \ndomestic demand, and prudent macroeco-\nnomic policies supported a cyclical recov-\nery in 2017 and early 2018. Real incomes \nstarted to pick up, but accelerated wage \ngrowth, along with other fiscal stimulus, \ncould pose risks to macro stability. Rising \npublic debt levels and continued depend-\nence on external financing make the econ-\nomy vulnerable to macroeconomic shocks. \nThe revival of economic growth requires \naddressing structural bottlenecks imped-\ning productivity improvements.  Table 1 2017\nPopulation, million 9.4\nGDP, current US$ billion 57.0\nGDP per capita, current US$ 6039\nUpper middle-income poverty rate ($5.5)a0.7\nGini coefficienta27.0\nSchool enrollment, primary (% gross)b10 1. 3\nLife expectancy at birth, yearsb73.6\n(a) Most recent value (201 6), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n-15-10-5051015\nQ1/14 Q3/14 Q1/15 Q3/15 Q1/16 Q3/16 Q1/17 Q3/17\nTotal consumption of goods and services\nGross capital formation\nExports of goods and services\nImports of goods and services\nStatistical discrepancy\nGDP growthPercentage points\n05000001000000150000020000002500000\n0102030405060\n2001 2003 2005 2007 2009 2011 2013 2015 2017 2019\nUpper middle-income pov. rate GDP pcPoverty rate (%) GDP per capita (constant LCU)' metadata={'source': 'blkc.pdf', 'page': 72}
"
"page_content='60\u2003●   World Bank ECA Economic Update May 2018\n47 MPO  Apr 18  the economy to grow. At the same time, \npersisting domestic structural bottlenecks \nrelated to unaddressed legacy issues of \nmisallocation of capital and low export \ndiversification will continue to constrain \nthe growth potential. Weak foundations \nfor a sustainable growth recovery imply \nthat income per capita gaps between Bela-\nrus and its neighbors may widen as the \neconomies of the Baltic States and Poland \nare projected to grow on average above \n3 percent per annum. At the same time, \nmodest growth would ease balance -of-\npayment pressures, allowing to maintain a \ncurrent account deficit between 2 and \n3percent of GDP over the next three years.  \n \n \nRisks and challenges  \n \nDownside risks from external factors are \ncoming from two sources. First, although \nthe headline current account deficits have \nnarrowed down, a public debt to GDP ratio is likely to remain close to a half of GDP in \nthe medium term. Majority of gross exter-\nnal debt pertains to the public sector and is \ncharacterized by a heavy and uneven debt \nservice profile with repayment peaks every \nfew years. As the public debt is largely \ndenominated in foreign currency, there is a \nrisk of disorderly adjustment in external \nimbalance due to tightening of global fi-\nnancial conditions. Second, Belarus re-\nmains vulnerable to changes in global com-\nmodity prices and in terms of its energy \ntrade policy with Russia.  \nEither of these developments would make \nit harder for the government to generate \nthe foreign currency needed to service its \ndebt. Belarus ’s experience with the 2017 \nEurobond issuance indicates that access to \nexternal market financing – in contrast to \nloans from Russia and China – comes at a \nhigh cost. A ten -year, US$0.6 billion \ntranche was priced at 7.625 percent, high-\ner rates than the ones obtained by emerg-\ning economies. In 2018, the Government \nwill allocate US$3.1 billion for external public debt repayments and service (or \nabout 5.4 percent of forecasted GDP), \nwhile domestic obligations of the Govern-\nment denominated in foreign currency \nadd another US$0.7 billion (or about 1.2 \npercent of GDP).  \nDownside risks from domestic factors \nrelate to a possibility of a disorderly un-\nwinding of financial sector imbalances if \nmechanisms for addressing insolvent \nSOEs and NPL resolution are not put in \nplace. In addition, there are risks to fiscal \nsustainability arising from existing quasi -\nfiscal deficits related to the excesses of the \nexpansionary policies of the past. Reintro-\nduction of short -term demand stimulus is \nrisky, leaving little prospects for improv-\ning enterprise performance and strength-\nening of financing sector. The effects of \nlower interest rates are limited, as highly \nindebted enterprises are unable to invest \nmore. Boosting productivity of available \ncapital and labor remains a sustainable \nway to overcome prolonged stagnation of \ngrowth and incomes.  \nTABLE 2  Belarus / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices -3.8 -2.5 2.4 2.9 2.7 2.5\nPrivate Consumption -2.3 -3.9 2.5 3.0 3.1 3.1\nGovernment Consumption -0.5 -0.6 1.3 0.8 1.3 1.3\nGross Fixed Capital Investment -15.5 -16.1 9.9 6.5 5.6 5.2\nExports, Goods and Services 2.1 2.8 7.5 7.2 8.3 8.9\nImports, Goods and Services -10.6 -2.1 9.2 8.0 8.7 9.1\nReal GDP growth, at constant factor prices -4.6 -2.9 2.9 2.9 2.7 2.5\nAgriculture -2.8 3.8 4.1 4.5 3.9 3.8\nIndustry -6.8 -4.6 6.1 7.2 8.3 7.7\nServices -2.3 -2.8 -1.1 -2.8 -5.1 -5.9\nInflation (Consumer Price Index) 13.5 11.8 4.6 6.0 6.5 6.5\nCurrent Account Balance (% of GDP) -3.3 -3.6 -2.7 -2.9 -3.0 -2.8\nFinancial and Capital Account (% of GDP) -2.3 -1.7 1.7 2.6 1.4 1.2\nNet Foreign Direct Investment (% of GDP) 2.9 2.6 2.4 2.6 2.6 2.3\nFiscal Balance (% of GDP) 2.5 0.1 3.7 2.1 2.1 2.1\nDebt (% of GDP) 26.5 43.3 45.9 46.1 46.4 46.8\nPrimary Balance (% of GDP) 3.7 1.6 6.1 4.7 4.3 3.9\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b0.7 0.7 0.6 0.6 0.6 0.5\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 6-HHS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 6)  with pass-through = 0.7  based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 73}
"
"page_content='Selected Country Pages ●\u200361\n48 MPO  Apr 18  Recent developments  \n \nGrowth reached an estimated 3 percent in \n2017. Domestic demand remains the dom-\ninant driver of growth with consumption \nadding 3pp, investment 0.8 pp and im-\nports 5.1pp. Improved external demand \nhas supported exports growth, but   a \nstrong rise in imports is offsetting this \nmomentum. With negative overall net \nexports, they are estimated to have sub-\ntracted from growth ( -0.8 pp).   Unem-\nployment remains high, although some \nimprovements are observed in the labor \nmarket. The unemployment rate fell from \n25.4 percent in 2016 to 20.5 in 2017, driven \nby a fall in activity rate and a slight rise in \nemployment. The decrease in unemploy-\nment was more pronounced among work-\ners with primary education (from 26 per-\ncent in 2016 to 18 percent in 2017), which \nshould have made poverty recede in 2017.  \nAfter almost two years of deflation, infla-\ntion started to pick up in 2017, owing \nmainly to the recovery of global oil price. \nThe consumer price index increased by \n1.2 percent year -on-year (y -o-y) in De-\ncember 2017. The biggest driver of the \nincrease was transport, tobacco and rental \nhousing. In contrast, prices decreased \nnotably on alcohol, clothing, and telecom-\nmunication services. Given similar \ngrowth in nominal salaries, the effect on \nreal incomes was neutral.  \nIn 2017, the fiscal balance is expected to \nremain in surplus. The latest consolidated \ndata project a 2.0 percent of GDP surplus \nin 2017, up from a deficit of 0.3 percent in 2016. In 2017, revenues rose mainly due \nto stronger collection of indirect taxes \nwhile expenditure declined mainly be-\ncause of continued restraint on current \ngovernment spending. At the same time, \nsluggish capital spending reflected imple-\nmentation delays.  \nCurrent expenditures are expected to re-\nmain on a downward, driven by the com-\nmitment of the authorities to reduce the \nwage bill. Total public debt in 2017 re-\nmained at 37 percent of GDP (external \npublic debt was 27 percent of GDP) and \nconsisted largely of concessional debt to \ninternational financial institutions.  \nThe latest available poverty data using the \nnational poverty line is for 2015 and was \nestimated at 16 percent, very close to the \n15 percent poverty rate estimated for 2011. \nRural poverty (19 percent) was higher \nthan urban poverty (12 percent). Behind \nthe minimal movement in poverty in 2011\n-2015 there was a small positive effect of \npensions on household incomes, coun-\ntered mainly by a decrease in employment \nrate and a decline in self -employment \nearnings. The implementation of new la-\nbor laws in both BiH entities, and continu-\nation of support schemes for first -time job \nseekers are expected to improve labor \nmarkets outcomes in the coming years, \nhence also supporting poverty reduction.  \n \n \nOutlook  \n \nSupported primarily by consumption and \nto some extent by public investment, eco-\nnomic growth is projected to strengthen to BOSNIA AND \nHERZEGOVINA  \nFIGURE 1  Bosnia and Herzegovina / Real GDP growth and \ncontributions to real GDP growth  FIGURE 2  Bosnia and Herzegovina / Labor market      \nindicators, 2014 -2017 \nSources: BiH Agency for Statistics (BHAS),  World Bank staff estimate.  Sources: LFS 2014 -2017 report, World Bank staff calculations.  Economic growth in Bosnia and Herze-\ngovina (BiH), which reached an estimated \n3 percent in 2017, is expected to pick -up \nstarting in 2018 with the implementation \nof structural reforms and heavy infra-\nstructure investment. Translating this \ngrowth into improvements in labor mar-\nkets will be critical to observe declines in \npoverty. As BiH enters general elections \nyear, political turmoil may be a risk for \neconomic growth.  Table 1 2017\nPopulation, million 3.8\nGDP, current US$ billion 17 . 2\nGDP per capita, current US$ 4544\nSchool enrollment, primary (% gross)an.a.\nLife expectancy at birth, yearsa76.6\nSource: WDI, M acro Poverty Outlook, and official data.\nNot es:\n(a) M ost  recent  WDI value (2015).\n43.7\n31.7\n27.5\n23.542.7\n33.9\n20.5\n16.8\n05101520253035404550\nActivity rate Employment rate Unemployment\nrateUnemployment\nrate over 1 year\nduration2014 2015\n2016 2017Percent\n-3.0-2.0-1.00.01.02.03.04.05.0\n2013 2014 2015 2016f 2017f 2018f 2019f 2020f\nPrivate_consumption Government_consumption\nGross_fixed_investment Net exports\nGDPPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 74}
"
"page_content='62\u2003●   World Bank ECA Economic Update May 2018\n49 MPO  Apr 18  about 4 percent by 2020. As the BiH ’s re-\nform agenda advances, a moderate rise in \nexports is expected, but strong demand \nfor imports implies that net external de-\nmand will continue to be a drag on \ngrowth. Remittances are likely to remain \nstable, and, together with progress on \nreforms, will underpin a gradual pickup \nin consumption, which will remain a ma-\njor driver of growth. Investments in ener-\ngy, construction, and tourism will support \ninvestment growth generally, as well as \njob creation in those sectors. Because of \nthese dynamics, real GDP growth is pro-\njected to build up gradually from 3 per-\ncent in 2017 to 3.2 percent in 2018 and up \nto 4 percent in 2020.  \nAs poverty is strongly associated with \nunemployment and inactivity in BiH, for \neconomic growth to translate into pov-\nerty reduction, improvements in labor \nmarket participation and employment \nwill remain key. However, with high \nunemployment and the expectations of \nflat real wages due to the substantial \nremaining slack in the labor market , poverty is  projected to decline only slow-\nly over the next couple of years.  \nThe current account deficit (CAD) is fore-\ncast to rise slightly in 2018 as both imports \nand exports started to pick up in 2017. In \nthe medium run, with improved progress \non ongoing structural reforms and higher \ndemand for foreign savings, CAD is ex-\npected to deteriorate from 5.8 percent of \nGDP in 2017 to 6.8 percent of GDP by \n2020. Overall, in the medium term both \nfiscal and external deficits will persist un-\ntil 2020.  \n \n \nRisks and challenges  \n \nAchieving prudent, efficient, and effective \nfiscal policy, addressing persistent unem-\nployment and continuing to safeguard the \nbanking sector, will remain central to the \nBiH reform agenda. Although external \ndeficits continue to be moderate, on the \nfiscal side the tax burden is high, and pub-\nlic spending is inefficient, as evidenced by poorly -targeted benefits. Fiscal consolida-\ntion and provision of an effective safety \nnet will not be effective if structural rigidi-\nties in spending are not addressed —\nespecially the high public wage bill. How-\never, support from the international part-\nners can help the BiH authorities to deliv-\ner on their challenging reform agenda. \nWithout continued implementation of \nstructural reforms, it would be difficult to \naddress rigidities in public employment, \npensions, and debt.  \nThere are notable risks, both domestic and \nexternal. The main domestic risk is the \nchallenging political environment, which \nmakes structural reforms difficult in such \nareas as infrastructure, telecommunica-\ntions, energy sector, and transport. It also \nraises risks to the economic outlook. De-\nspite some delays, BiH has submitted a \ndetailed Questionnaire to the European \nCommission, a major step towards becom-\ning a candidate country. Main external \nrisk for BiH remains slow growth in the \nEU and rising inflation in developed \ncountries and interest rates.  \nTABLE 2  Bosnia and Herzegovina / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.7 3.1 3.0 3.2 3.4 4.0\nPrivate Consumption 0.4 1.8 3.2 3.4 3.7 3.5\nGovernment Consumption 0.8 1.8 3.6 5.5 6.3 4.2\nGross Fixed Capital Investment 1.0 1.7 3.8 2.5 6.5 4.7\nExports, Goods and Services 6.3 4.1 12.5 9.2 4.7 3.6\nImports, Goods and Services 0.9 1.2 9.9 8.0 6.5 3.3\nReal GDP growth, at constant factor prices 3.1 3.1 3.0 3.2 3.4 4.0\nAgriculture 9.2 5.0 2.8 3.0 3.0 3.0\nIndustry 3.4 3.0 2.7 3.0 3.0 3.0\nServices 2.3 2.9 3.1 3.4 3.6 4.5\nInflation (Private Consumption Deflator) 1.0 -0.8 1.2 1.4 1.4 1.4\nCurrent Account Balance (% of GDP) -5.7 -4.5 -5.8 -6.2 -6.8 -6.8\nFinancial and Capital Account (% of GDP) -2.0 -1.4 7.0 7.4 8.1 6.9\nNet Foreign Direct Investment (% of GDP) -1.4 -1.6 1.2 2.5 2.8 2.8\nFiscal Balance (% of GDP) 0.6 -0.3 2.0 1.3 0.2 0.0\nDebt (% of GDP) 40.6 41.1 36.8 33.3 30.8 29.5\nPrimary Balance (% of GDP) 1.5 0.8 3.2 2.8 1.4 0.9\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.' metadata={'source': 'blkc.pdf', 'page': 75}
"
"page_content='Selected Country Pages ●\u200363\n50 MPO  Apr 18  Recent developments  \n \nEconomic growth remained strong in Bul-\ngaria at 3.6 percent in 2017, only slightly \nlower than 3.9 percent in 2016. Consump-\ntion and investment were the main drivers \nof growth while the contribution of net \nexports was negative in 2017. Consump-\ntion was supported by a dynamic labor \nmarket, rising wages, and eased financial \ncredit  conditions.  Investment expanded at \na solid rate, despite slow implementation \nof public investment projects. On the pro-\nduction side, the greatest contributions to \nGDP growth came from manufacturing; \nconstruction; real estate; trade, transport, \nand tourism.  \nStrong domestic demand and higher ener-\ngy and commodity prices pushed inflation \nup. After three years of deflation, inflation \nturned positive to 2.1 percent in 2017.  \nFiscal performance remained positive on \nthe back of improved revenue collection \nand lower than planned public investment \nspending. Tax revenues grew by 10 per-\ncent in 2017 compared with 2016 thanks to \nstrong economic activity, better compli-\nance, higher minimum wages and an in-\ncrease in the pension contribution rate. \nLike 2016, capital investment was well \nbelow expectations as implementation of \nEU funded projects remained slow. In-\nstead of planned deficit of 0.6 percent of \nGDP, fiscal accounts were balanced for the \nsecond year in a row.  \nThe current account surplus narrowed \nto 3.9 percent of GDP in 2017 com-\npared with 5.3 percent in 2016 follow-ing the  deterioration of the trade bal-\nance and lower EU transfers.  \nAt 72.1 percent, the employment rate (20 -\n64) reached record high levels while unem-\nployment was close to pre -crisis levels. \nHowever, the working age population \ncontinued to shrink constraining the ex-\npansion of potential growth. Labor and \nskill shortages as well as rising minimum \nwages pushed overall salaries up about 9 \npercent compared with 2016.  \nStrong labor market conditions supported \ncontinued improvement in poverty reduc-\ntion. Poverty measured using the Upper \nMiddle -Income Class line of $5.5 per day \n(in 2011 PPP terms) is estimated to have \ndeclined from 8.5 percent in 2015 to 7.5 \npercent in 2017 (see Notes to Table 2). \nHowever, income inequality in Bulgaria is \nthe highest in the EU and has been increas-\ning over the last few years, with the in-\ncome of the richest 20 percent of the popu-\nlation equal to almost eight times that of \nthe poorest 20 percent in 2015. The cover-\nage and adequacy of the social transfer \nsystem remains low. Unemployment has \ndeclined significantly but regional varia-\ntions and long -term and youth unemploy-\nment remain high. Inactivity among cer-\ntain groups of the population persists and \nmany citizens – including the elderly, peo-\nple living in rural areas, and the Roma – \nare excluded from economic opportunities.  \n  \n \nOutlook  \n \nGDP growth is expected to remain robust, \nreaching 3.8 percent in 2018. Domestic  Table 1 2017\nPopulation, million 7.1\nGDP, current US$ billion 55.8\nGDP per capita, current US$ 7887\nInternational poverty rate ($1 .9)a1. 0\nLower middle-income poverty rate ($3.2)a3.8\nUpper middle-income poverty rate ($5.5)a7.5\nGini coefficienta37.4\nSchool enrollment, primary (% gross)b97.2\nLife expectancy at birth, yearsb74.5\n(a) See Not es t o Table 2.Source: WDI, M acro Poverty Outlook, and official data.\nNot es:\n(b) M ost recent WDI value (201 4).BULGARIA  \nFIGURE 1  Bulgaria / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2  Bulgaria / Actual and projected poverty rates and \nreal GDP per capita  \nSources: NSI; MFMod, World Bank.  Sources: World Bank (see notes to Table 2).  Economic growth remained strong in \n2017, slightly lower compared with 2016. \nThe employment rate peaked and wages \nwere pushed up by labor and skill short-\nages. Output and employment growth \ncontributed to a reduction in poverty. \nFurther gains in growth, poverty reduc-\ntion and shared prosperity hinge on the \nimplementation of policies to boost \nproductivity. Policy areas that require \nattention include strengthening institu-\ntions, enhancing the skills of the labor \nforce, and improving the effectiveness  \nand efficiency of public spending.  \n0200040006000800010000120001400016000\n0510152025\n2006 2008 2010 2012 2014 2016 2018 2020\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate GDP pcPoverty rate (%) GDP per capita (constant LCU)\n-3-2-10123456\n2011 2012 2013 2014 2015 2016 2017e 2018f 2019f 2020f\nConsumption Gross capital formation\nChange in inventories Net Exports\nGDPPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 76}
"
"page_content='64\u2003●   World Bank ECA Economic Update May 2018\n51 MPO  Apr 18  demand will continue to support growth \nas the expected intensified absorption of \nEU funds will boost investment, likely \noutweighing the negative contribution of \nnet exports. Private consumption is ex-\npected to continue expanding thanks to \ntight labor markets and rising real estate \nprices in large cities. Going forward, \nGDP growth is projected to moderate to \n3.6 percent in 2019 and 2020. Domestic \ndemand should remain the driver of \ngrowth with an increasing contribution \nof investment.  \nThe current account balance is likely to \nremain in surplus, but narrow net ex-\nports will continue to deteriorate and an \nexpected slowdown in EU growth due to \nhigher oil and commodity prices.  \nThe fiscal position is likely to weaken \nslightly in 2018 and 2019, reflecting plans \nfor expansion of public investment and \nincreasing wages and social assistance \npayments. Strong revenue collection, driv-\nen by further improvements in compli-\nance and an increased pension contribu-\ntion rate in 2018, is likely to support fiscal \nconsolidation in the medium term. Lack of \nimprovement in spending efficiency in health, public order, and infrastructure \ncould undermine fiscal consolidation and \nlimit the potential of public spending to \nenhance growth.  \nPoverty reduction is expected to continue \nat a modest pace in the near term. Sus-\ntained improvements in employment and \nwages, as well as recent increases in the \nminimum pension, should support real \nincomes and therefore further reductions \nin poverty. Poverty is projected to fall \nfrom 7.5 percent in 2017, as measured at \n$5.5 a day in 2011 PPP, to 7.0 percent in \n2018, and to 6.3 percent by 2020.  \n \n \nRisks and challenges  \n \nR i s k s  t o  t h e  p r o j e c t e d  g r o w t h  p a t h  a r e  \nbroadly balanced. Lower than expected \nEuropean growth could undermine export \ngrowth, while tightening global financial \nmarket conditions could increase the cost \nof lending to the private sector with nega-\ntive implications for investment. Continued \nwage growth at a faster pace than produc-\ntivity could translate into increasing  unit labor costs and therefore undermine com-\npetitiveness. Further acceleration of real \nestate prices in large cities could negative-\nly affect the quality of bank portfolios. \nUpside factors likely to lead to higher -\nthan expected growth are an enhanced \neconomic sentiment in Europe and strong-\ner global economic activity.  \nThe key challenges for Bulgaria are to \naccelerate convergence with the rest of the \nEU and to build a more inclusive society. \nAccelerating convergence requires im-\nprovements in productivity and labor \nforce participation as the demographic \ntransition is weighing on the size of the \nworking age population. Enhancing \nproductivity growth requires addressing \ngovernance challenges (public administra-\ntion, judiciary, business environment, \ngovernance of SOEs) that have under-\nmined Bulgaria ’s structural transfor-\nmation. Enhancing the skills and employ-\nability of all Bulgarians, more effective \nand efficient public spending on health, \npensions and long-term care are also \nneeded to ensure inclusiveness and sus-\ntainability of growth in the face of demo-\ngraphic changes.  \nTABLE 2  Bulgaria / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.6 3.9 3.6 3.8 3.6 3.6\nPrivate Consumption 4.5 3.6 4.8 5.2 4.7 4.5\nGovernment Consumption 1.4 2.2 3.2 3.2 1.7 0.8\nGross Fixed Capital Investment 2.7 -6.6 3.8 7.3 6.7 7.2\nExports, Goods and Services 5.7 8.1 4.0 3.9 4.0 4.0\nImports, Goods and Services 5.4 4.5 7.2 5.9 5.4 5.2\nReal GDP growth, at constant factor prices 3.0 3.2 3.7 3.8 3.6 3.6\nAgriculture -6.8 5.3 -0.1 2.1 1.9 1.9\nIndustry 3.6 3.2 3.4 3.2 3.5 3.8\nServices 3.3 3.1 4.1 4.2 3.7 3.6\nInflation (Consumer Price Index) -0.1 -0.8 2.1 2.1 2.1 2.2\nCurrent Account Balance (% of GDP) 0.0 5.3 3.9 2.3 1.4 0.7\nFinancial and Capital Account (% of GDP) 4.6 0.5 -3.8 -2.3 -1.3 -0.6\nNet Foreign Direct Investment (% of GDP) 5.5 1.4 1.8 2.3 2.3 2.4\nFiscal Balance (% of GDP) -1.6 0.0 0.0 -0.2 -0.2 0.2\nDebt (% of GDP) 26.0 29.0 25.6 24.3 23.0 21.4\nPrimary Balance (% of GDP) -0.7 0.9 1.0 0.7 0.7 1.1\nInternational poverty rate ($1.9 in 2011 PPP)a,b1.2 1.2 1.0 0.7 0.6 0.6\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b3.6 3.6 3.3 3.1 2.9 2.7\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b8.5 7.9 7.5 7.0 6.7 6.3\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices. NSI; BNB; Eurostat; World Bank, M acroeconomics and Fiscal M anagement Global Practice, and Poverty Global Practice.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on EU-SILC harmonization, using 201 4-EU-SILC. Nowcast: 201 5 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 4)' metadata={'source': 'blkc.pdf', 'page': 77}
"
"page_content=' on EU-SILC harmonization, using 201 4-EU-SILC. Nowcast: 201 5 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 4)  with pass-through = 0.87  based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 77}
"
"page_content=""Selected Country Pages ●\u200365\n52 MPO  Apr 18  Recent developments  \n \nGDP growth slowed from 3.2 percent in \n2016 to 2.8 percent in 2017. Exports of \ngoods and services was the main driver of \ngrowth in 2017. Tourism recorded excep-\ntional performance with foreign tourist \nnights rising by over 11 percent, and \nstrong growth of merchandise export con-\ntinued. Private consumption also made a \npositive contribution to growth, supported \nby favorable labor market developments \nand personal income tax rate cuts. Howev-\ner, the share of imported durable goods in \nconsumption increased. On balance, the \neffect of net exports on growth turned neg-\native. In addition, growth slowed down \nbecause investment growth decelerated \nmarkedly. This was mainly due to a weak-\ner absorption of EU funds, which led to a \nsharp fall in government investments.  \nFollowing deflationary pressures in 2016, \nprices increased by 1.1 percent y -o-y in \n2017 on the back of the recovery of inter-\nnational oil and food prices. With inflation \nstill subdued, the Croatian National Bank \n(CNB) continued to pursue an expansion-\nary monetary policy throughout 2017.  \nFiscal consolidation also continued in \n2017, with the budget surplus estimated at \n0.1 percent of GDP, down from a deficit of \n0.9 percent in 2016. The surplus was \nachieved by buoyant tax collection and \nconstrained growth in expenditures in line \nwith the November 2017 budget revision. \nThe combination of a significant primary \nsurplus and a small debt reducing interest\n-rate growth differential resulted in a stronger than expected fall in the govern-\nment’s debt ratio to 80 percent of GDP in \n2017, down from 82.7 in 2016.  \nExternal imbalances narrowed further as \nthe current account surplus increased to \n3.7 percent of GDP in September 2017 (on \na four -quarter basis). This rise is expected \nto be only temporary, as it reflects a fall in \nbanks’ profits resulting from their expo-\nsures to Agrokor Group. External debt (of \nthe public and private sectors) declined to \n84.2 percent of GDP in November 2017, \n5.6 percent lower than 2016, as banks and \nthe private corporate sector continued to \ndeleverage.  \n Employment rose across the board, with \nmanufacturing, tourism and construction \naccounting for more than a half of the \nincrease. Together with negative migra-\ntion flows, this led to a marked decline of \nthe survey -based unemployment rate to \nan estimated 11 percent in 2017, down \nfrom 13.1 percent in 2016. Real net wages \nincreased by 4.2 percent y -o-y in Decem-\nber. The positive wage trends are due the \nrecovery of firms' profitability, labor \nshortages in some sectors, a 6 -percent rise \nin public sector wages and cuts in the per-\nsonal income tax rate.  \nEconomic recovery and labor market \nimprovements are now starting to re-\nduce absolute poverty, after increasing \nduring six subsequent years of economic \nrecession. The poverty rate measured at \nthe upper middle -income class poverty \nline of $5.5 at 2011 PPP per capita fell \nfrom 7.3 percent in 2013 to 5.8 percent in \n2015, which is still higher than the pre -\ncrisis rate. The poverty rate for 2017 is \nprojected at 5.1 percent, suggesting that CROATIA  \nFIGURE 1  Croatia / Real GDP growth and contributions to \nreal GDP growth   FIGURE 2  Croatia / Actual and projected poverty rates and \nreal GDP per capita  \nSources: CROSTAT, World Bank.   Sources: World Bank (see notes to Table 2).  Economic growth decelerated to 2.8 per-\ncent in 2017 due to a slowdown in gov-\nernment investment and a rebound in \nimports. The poverty rate is projected to \nhave declined to 5.1 percent as disposable \nincomes have increased. Strong fiscal con-\nsolidation continued in 2017, leading to a \nfurther fall in the debt ratio. However, the \nreform momentum has faltered and, with-\nout addressing substantial economic and \ninstitutional weaknesses, prospects for \nreinitiating real convergence and promot-\ning inclusive growth are weak.  Table 1 2017\nPopulation, million 4.1\nGDP, current US$ billion 54.9\nGDP per capita, current US$ 1 3297\nLower middle-income poverty rate ($3.2)a1. 3\nUpper middle-income poverty rate ($5.5)a5.8\nGini coefficienta30.8\nSchool enrollment, primary (% gross)b98.0\nLife expectancy at birth, yearsb77.3\n(a) M ost  recent  value (2015), 2011 PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n020000400006000080000100000\n012345678\n2009 2011 2013 2015 2017 2019\nLower middle-income pov. rate Upper middle-income pov. rate\nGDP pcPoverty rate (%) GDP per capita (constant LCU)\n-4-3-2-101234\n2011 2012 2013 2014 2015 2016 2017 2018f 2019f 2020f\nFinal consumption Gross fixed capital formation\nChange in inventories Net exports\nResidual item GDP growthPercent, percentage points"" metadata={'source': 'blkc.pdf', 'page': 78}
"
"page_content='66\u2003●   World Bank ECA Economic Update May 2018\n53 MPO  Apr 18  the reduction in poverty is slowing down.  \nWhile real per capita income has returned \nto its 2008 level, output is still about 4 \npercent lower than in 2008. Therefore, the \nrebound in per capita income reflects the \nimpact of demographic trends.  \n \n \nOutlook \n \nGrowth is expected to slow further to 2.6 \npercent in 2018, due to a slowdown in \nprivate consumption as the favorable \neffects of the tax reform on real wages \nstart to fade. Furthermore, exports of tour-\nist services are expected to slow in 2018, \ndue to capacity constraints. On the other \nhand, better absorption of EU funds will \ngive a boost to investment spending. \nThese trends suggest an average economic \ngrowth of 2.8 percent for 2019 and 2020.  \nThe government balance is expected to \nstay in surplus and may reach 1 percent by 2020, leading to a further decline in public \ndebt to below 70 percent of GDP. Howev-\ner, the overall fiscal stance will become \nmoderately pro -cyclical, as the structural \nbudget balance is expected to worsen.  \nPositive labor market developments are \nexpected to support the growth of dispos-\nable income for all segments of the wel-\nfare distribution. The continued decline in \nthe share of long -term unemployed and \nNEETs will reduce the absolute poverty \nrate further to 4.0 percent in 2020.  \n \n \nRisks and challenges  \n \nRisks are slightly skewed to the downside. \nAs the operational restructuring of Agro-\nkor Group unfolds in 2018, the negative \neffects on investment activity and private \nconsumption might be greater than cur-\nrently envisaged. In addition, although \nthe positive contribution of exports of goods to GDP growth is expected to stay \nhigh, it is exposed to the risk of a slow-\ndown in external demand from the EU. \nFurthermore, the still high level of public \ndebt makes Croatia vulnerable to interest \nrate shocks and worsening external fi-\nnancing conditions. Finally, the cyclical \nupturn and the sounder fiscal position \nmay foster continued complacency. The \nlack of reforms would have an adverse \neffect on growth over the medium term.  \nCroatia’s prospects for improving higher \nand more inclusive growth remain weak. \nCurrently low potential growth calls for a \nstrong structural reform agenda. Substan-\ntial economic, social and institutional \nweaknesses should be addressed to boost \nprivate sector productivity and competi-\ntiveness, raise the quality of human and \nphysical capital and modernize public \nservices. This would lead to increasing \neconomic activity and employment, \nwhich are crucial for a further reduction \nin poverty.  \nTABLE 2  Croatia / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 2.3 3.2 2.8 2.6 2.7 2.8\nPrivate Consumption 1.1 3.5 3.6 3.0 2.8 2.6\nGovernment Consumption -0.9 1.9 2.0 1.5 1.5 1.6\nGross Fixed Capital Investment 3.8 5.3 3.4 6.4 6.9 7.4\nExports, Goods and Services 9.4 5.6 6.1 5.8 5.0 5.0\nImports, Goods and Services 9.2 6.2 8.1 7.4 6.3 6.4\nReal GDP growth, at constant factor prices 2.3 2.8 2.8 2.6 2.7 2.8\nAgriculture 1.3 0.6 -2.2 2.2 2.2 2.2\nIndustry 2.6 4.4 1.3 3.6 2.8 2.8\nServices 2.3 2.3 3.6 2.3 2.7 2.8\nInflation (Consumer Price Index) -0.5 -1.0 1.5 1.4 1.4 1.5\nCurrent Account Balance (% of GDP) 4.5 2.6 3.6 2.6 1.7 1.0\nFinancial and Capital Account (% of GDP) -3.5 -1.7 -3.2 -1.5 -0.6 0.0\nNet Foreign Direct Investment (% of GDP) 0.5 4.0 1.3 2.6 2.6 2.8\nFiscal Balance (% of GDP) -3.3 -0.9 0.1 0.5 0.6 1.0\nDebt (% of GDP) 85.4 82.7 80.1 76.0 72.1 67.7\nPrimary Balance (% of GDP) 0.2 2.3 3.1 3.2 3.2 3.5\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b1.3 1.3 1.3 1.1 1.0 1.0\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b5.8 5.4 5.1 5.0 4.4 4.0\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on EU-SILC harmonization, using 201 5-EU-SILC. Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 5) with pass-through = 0.87  based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 79}
"
"page_content='Selected Country Pages ●\u200367\n54 MPO  Apr 18  Recent developments  \n \nThe economy performed well in 2017. \nGDP growth improved markedly to 5 \npercent —from 2.8 percent in 2016 —led by \nan improved external environment. Pru-\ndent macro -fiscal policies helped preserve \nfiscal space and supported price stability. \nInflation spiked to 6.7 percent (eop) in \n2017 in response to higher excise taxes on \ntobacco and fuel, but dropped to below 3 \npercent in February 2018. With inflation \nabove the ceiling of its target range in 2017 \nand rapid credit growth, the NBG in-\ncreased the policy rate by 0.75 bps to 7.25 \npercent over 2017.  \nGeorgia’s external position improved \nconsiderably. Export of goods expanded \nby 24 percent on the back of strong de-\nmand from Russia, Azerbaijan, Ukraine, \nChina, and the US; tourism proceeds rose \nby 27 percent; and worker ’s remittances \nincreased by 21 percent in 2017. Import \ngrowth was relatively lower, reflecting \ngradually the firming oil prices. Gross \nFDI inflows increased in 2017 to 12.3 per-\ncent of GDP, helping strengthen the inter-\nnational reserve position, which stood at \n4 months of imports of goods and ser-\nvices. Total external debt remained high \nat 112 percent of GDP at the end Septem-\nber 2017.  \nFiscal policy was prudent. Despite elimi-\nnating the income tax on reinvested \nprofits starting in 2017, revenues in-\ncreased by 11 percent. To prioritize so-\ncial and infrastructure spending, the \nauthorities generated savings of about 0.8 percentage points of GDP from re-\nduced administrative costs in 2017. This \nhelped to scale up public investments to \n8.3 percent of GDP and slightly narrow \nfiscal deficit to 3.8 percent of GDP from \nthe 3.9 percent observed in 2016. Georgia ’s \npublic debt remained sustainable at 44 \npercent of GDP as of end -2017.  \nThe banking sector is well capitalized, \nprofitable and with low non -performing \nloans (NPLs), although structural vulnera-\nbilities persist. The sector yielded a return \non assets of 2.8 percent and a return on \nequity of over 20 percent as of end -2017. \nAlso by December 2017, NPLs represented \nonly 2.4 percent of gross loans, down from \n3.6 percent as of end -2016. At the same \ntime, systemic vulnerabilities persist, in-\ncluding the large market concentration by \nthe top two banks, the high retail loan \ngrowth (including by non -bank financial \ninstitutions), and elevated dollarization, \nagainst the backdrop of deficient financial \nsafety nets. NBG plans to address the \nlatter issues with the support from the WB \nand IMF.  \nPoverty is estimated to have fallen in 2017, \ndriven by an increase of employment op-\nportunities related to the expansion of the \nconstruction and services sectors, resum-\ning the decreasing trend started in 2010 \n(and which stalled in 2016). The spike in \ninflation in 2017 may have offset —albeit \nto a minor extent —the positive effect of \nemployment on poverty by reducing \nhouseholds ’ purchasing power. The most \nrecent poverty figures available for the \ncountry are for the year 2016, when pov-\nerty was estimated at 17 percent using the \nlower -middle income.  GEORGIA  \nFIGURE 1  Georgia / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2  Georgia / Actual and projected poverty rates and \nreal GDP per capita  \nSources: Geostat and World Bank staff estimates.  Sources: World Bank. Notes: see Table 2.  \n  Georgia’s growth accelerated to 5.0 per-\ncent in 2017, on the back of an improved \nexternal environment. In 2018 growth is \nprojected at 4.5 percent, led by invest-\nment. The fiscal deficit declined to 3.8 \npercent of GDP in 2017, slightly improv-\ning from 2016; while fiscal consolidation \nwill continue in 2018, public investment \nis expected to remain robust. Poverty is \nexpected to return to its declining trend \nas economic growth recovers and trans-\nlates into higher income.  \n05001000150020002500300035004000\n020406080100\n2001 2003 2005 2007 2009 2011 2013 2015 2017 2019\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate GDP pcPoverty rate (%) GDP per capita (constant LCU)Table 1 2017\nPopulation, million 3.7\nGDP, current US$ billion 15 . 5\nGDP per capita, current US$ 41 94\nInternational poverty rate ($1 .9)a4.2\nLower middle-income poverty rate ($3.2)a17 . 1\nUpper middle-income poverty rate ($5.5)a45.5\nGini coefficienta36.5\nSchool enrollment, primary (% gross)b116 . 8\nLife expectancy at birth, yearsb73.0\n(a) Most recent value (201 6), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n-10-5051015\n2012 2013 2014 2015 2016 2017p 2018p 2019p 2020p\nGov. consumption Net Exports\nInvestments Prv. Consumption\nGDP growthPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 80}
"
"page_content='68\u2003●   World Bank ECA Economic Update May 2018\n55 MPO  Apr 18    \nOutlook  \n \nGeorgia’s growth outlook over the medi-\num term is positive. The more benign ex-\nternal environment should facilitate the \ndevelopment of private sector -led export \nsectors, encourage FDI, and support con-\nsumption from still robust remittances. A \nsteady implementation of the reform pro-\ngram will result in a further acceleration \nof growth over the medium term to 5 per-\ncent by 2020, particularly by enhancing \nproductivity. Inflation is envisaged to \nremain well contained, converging to the  \nNBG’s target of 3 percent by year -end \n2018, while the current account deficit \nwould narrow to below 9 percent of GDP \nby 2020.  \nConsiderable consolidation of administra-\ntive spending, streamlining of  subsidies \nand a more efficient social safety net will \nhelp to achieve medium -term fiscal con-\nsolidation while providing space for capi-\ntal spending. Current spending is project-\ned to decline from 24.5 percent of GDP in \n2017 to 23 percent in 2020, primarily by \ncontaining the wage bill and administra-\ntive expenses —which rose steadily and \nsteeply for at least 4 years —and better \ntargeting of subsidies and social assistance programs. The fiscal deficit of the general \ngovernment will be gradually reduced to \n3.0 percent of GDP by 2020 keeping public \ndebt stable. Still, fiscal slippages, or accu-\nmulation of new liabilities or materializa-\ntion of contingent liabilities may compro-\nmise the expected consolidation and result \nin higher debt burden. \nContinuous expansion of the economy in \nupcoming years should lead to more em-\nployment opportunities and further pov-\nerty reduction. Employment opportunities \noutside agriculture in rural areas (in par-\nticular) will play a critical role in leading \nto significant reductions in lagging re-\ngions. Pensions and social assistance are \nexpected to play a much smaller role for \npoverty reduction in upcoming years, in \ncontrast to the 2010 -2015 period, given the \nmore limited fiscal space.  \n \n \nRisks and challenges  \n \nGeorgia’s quasi -fiscal risks emanating \nfrom the contingent liabilities of the State -\nOwned Enterprises (SOEs) are substantial \nand a source of vulnerability. The Fiscal \nRisks Annex to the 2018 Budget Law sug-\ngests that the liabilities of the 76 high and \nmedium risk SOEs are around 20 percent of GDP. Additional risks stem from con-\ntingent liabilities generated by the gov-\nernment ’s Power Purchasing Agreements \n(PPAs). At the end -2017 there were 72 \nsigned PPAs, in which the state issues \nguarantees to purchase excess electricity \nfrom operators on a seasonal basis. While \nthe fiscal risks of PPAs exist, the needs for \nadditional power capacity are also evi-\ndent from the consumption growth trend. \nThe Government is committed to review \ncarefully its decisions going forward, \nensuring compliance of new PPAs with \nthe draft Law on Public Private Partner-\nships that is expected to be approved and \nenacted in 2018.  \nAs a very open economy, Georgia is vul-\nnerable to regional developments given its \nhistorically high current account deficit, \nand the risks of export demand and re-\nmittances shock. The downside risks to \nthe baseline scenario are associated with \nfurther tightening of US monetary policy \nand Lari depreciation; deterioration in the \nexternal environment (including due to a \nweaker EU outlook) and regional geopo-\nlitical tensions.  \nRural poverty and high poverty rates in \nlagging regions also remain a challenge. \nProviding employment opportunities and \nraising agricultural productivity will be \ncritical to address them.  \nTABLE 2  Georgia / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 2.9 2.8 5.0 4.5 4.8 5.0\nPrivate Consumption 0.1 -0.3 4.2 5.0 4.0 3.0\nGovernment Consumption 22.1 2.8 1.3 0.8 0.0 2.8\nGross Fixed Capital Investment 11.7 8.8 -2.4 14.5 16.1 11.1\nExports, Goods and Services 6.0 -0.7 21.0 9.0 4.0 5.0\nImports, Goods and Services 10.4 -0.2 10.0 10.0 6.0 5.0\nReal GDP growth, at constant factor prices 3.2 2.6 5.0 4.5 4.9 5.1\nAgriculture 1.5 0.0 2.0 2.5 3.0 3.0\nIndustry 4.1 5.5 4.0 5.0 4.8 4.8\nServices 3.1 2.1 5.6 4.5 5.1 5.3\nInflation (Consumer Price Index) 4.0 2.1 6.5 3.0 3.0 3.0\nCurrent Account Balance (% of GDP) -11.9 -12.8 -8.7 -9.4 -9.1 -8.9\nFinancial and Capital Account (% of GDP) 11.9 12.8 8.7 9.4 9.1 9.9\nNet Foreign Direct Investment (% of GDP) 9.0 9.8 10.5 8.9 8.9 9.0\nFiscal Balance (% of GDP) -3.8 -3.9 -3.8 -3.7 -3.3 -3.0\nDebt (% of GDP) 41.4 38.2 36.0 36.8 37.7 38.8\nPrimary Balance (% of GDP) -2.8 -2.7 -3.1 -2.9 -2.5 -2.2\nInternational poverty rate ($1.9 in 2011 PPP)a,b4.0 4.2 3.7 3.4 3.0 2.7\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b16.7 17.1 15.5 14.0 12.7 11.1\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b46.7 45.5 42.6 40.2 37.6 34.9\nSource: World Bank, Poverty & Equity and' metadata={'source': 'blkc.pdf', 'page': 81}
"
"page_content='.1\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b46.7 45.5 42.6 40.2 37.6 34.9\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 6-HIS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 6) with pass-through = 0.87  based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 81}
"
"page_content='Selected Country Pages ●\u200369\n56 MPO  Apr 18  Recent developments  \n \nFollowing two years of weak growth, Ka-\nzakhstan ’s economy recovered in 2017. \nReal GDP growth accelerated to 4  percent \nin 2017, up from 1.1 percent in 2016. Oil \nproduction, which rose by 10.5 percent \nyear on year in 2017, was the primary \ndriver of this improvement. The increase \nin oil output was observed in the oil fields \nthat were not covered by the OPEC -led \ncuts in 2017. Together with more favora-\nble terms of trade, it generated positive \nspillover effects to the manufacturing and \nservices sectors. While the agriculture \nsector contributed modestly to overall \ngrowth in 2017, growth of the construction \nsector slowed, largely reflecting the com-\npletion of oil transportation projects.  \nOn the demand side, growth was driven \nby an improvement of net exports, high-\nlighting oil sector expansion and the re-\ncovery of global oil prices.  \nThe current account deficit narrowed \nsubstantially in 2017, to 3 percent of \nGDP (from 6.5  percent in 2016), buoyed \nby more favorable terms of trade. The \nimprovement in the current account bal-\nance helped the tenge to strengthen by \nabout 10 percent in real terms against \nthe U.S. dollar in 2017. On the financing \nside, FDI inflows and foreign borrowing \nby state -owned enterprises were offset \nby short -term capital outflows. The cen-\ntral bank reported an increase of assets \nheld by residents abroad. As a result, \ngross international reserves of the cen-\ntral bank and the government (in the oil fund) declined by nearly US$5 billion (3 \npercent of GDP).  \nThe government continued to consolidate \nits core fiscal accounts, but the overall fiscal \ndeficit widened to 7 percent of GDP in 2017 \nas a result of the banking sector bailout. \nThe government recapitalized the Problem \nLoans Fund with an injection of US$6.5 \nbillion (about 4 percent of GDP) in 2017 to \nsupport the recovery of banks ’ balance \nsheets; the central bank provided another \nUS$2 billion to support ailing banks.  \nThe central bank continued to implement \nits inflation targeting policy. As the im-\npact of the 2015 currency depreciation \neased, consumer price inflation halved \nfrom an average of 14.6 percent in 2016 to \n7.4 percent in 2017. With inflation easing, \nthe central bank cut its policy interest rate \nthree times in 2017 and two times in early \n2018. The latest rate cut, in March 2018, \nlowered the policy rate to 9.5  percent.  \nThe poverty rate (using the $5.5/day inter-\nnational poverty line) rose from 5.6 per-\ncent in 2013 to a peak of 7.9 percent in \n2016; it is estimated to have fallen to 6.9 \npercent in 2017. The incidence of poverty \nincreased in all regions of Kazakhstan \nbetween 2014 and 2015, the last year for \nwhich data are available. Poverty rates in \nthe most vulnerable southern regions \nmore than doubled during this period, \njumping from 5.2 percent to 13.9 percent \nin Kyzylorda oblast and from 5 percent to \n12.5 percent in Jambyl oblast.  \nDespite the economic recovery and im-\nproved consumer confidence, household \nincome remained under pressure in 2017, \nas the labor market struggled to recover. \nReal wages and salaries declined by 2.1 KAZAKHSTAN  \nFIGURE 1  Kazakhstan / Real GDP growth and contributions \nto real GDP growth  FIGURE 2  Kazakhstan / Actual and projected poverty rates \nand real GDP per capita  \nSources: Statistical Office of Kazakhstan; World Bank staff estimates.  Sources: World Bank staff estimates.  More favorable terms of trade and in-\ncreased oil production supported the eco-\nnomic recovery and an improvement in \npoverty indicators in Kazakhstan in 2017. \nOver the medium term, the real GDP \ngrowth rate is expected to hover around \n3 percent, as the oil sector ’s contribution \nto economic growth declines relative to \n2017 (when a structural shift in oil out-\nput occurred). Risks to the outlook in-\nclude a potential weakening of the exter-\nnal environment, a worsening of problems \nin the banking sector, and a missed oppor-\ntunity to deepen structural reforms.  Table 1 2017\nPopulation, million 18 . 0\nGDP, current US$ billion 1 58.2\nGDP per capita, current US$ 8792\nLower middle-income poverty rate ($3.2)a0.4\nUpper middle-income poverty rate ($5.5)a7.8\nGini coefficienta26.9\nSchool enrollment, primary (% gross)b110 . 6\nLife expectancy at birth, yearsb72.0\n(a) M ost  recent  value (2015), 2011 PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n660680700720740760780800820\n0123456789\n2013 2014 2015 2016 e 2017 e 2018 f 2019 f 2020 f\n$5.5/day, 2011 PPP $3.2/day, 2011 PPP\nReal GDP per capita (RHS)Poverty rate, percent Thousand, tenge\n-2-101234567\n2013 2014 2015 2016 2017 e\nConsumption Investment\nNet exports Real GDP growthPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 82}
"
"page_content='70\u2003●   World Bank ECA Economic Update May 2018\n57 MPO  Apr 18  percent year on year. Although wages \nrose by 2.5 percent year on year in Asta-\nna, the capital —and by 1.6 percent and \n1.9 percent in Pavlodar and Kostanay \noblasts, respectively —these gains were \nmore than offset by falling real wages in \nthe rest of the country. The official unem-\nployment rate remained unchanged in \n2017 at 4.9 percent.  \n \n \nOutlook \n \nAs oil output growth stabilizes from 2018 \nonward, real GDP growth is expected to \nmoderate to an average annual rate of 3 \npercent through 2020. Growth in the non -\ntradable services sector will be supported \nby stronger domestic demand as real in-\ncomes of households are expected to start \nrecovering. Moreover, the planned addi-\ntional investment in oil output expansion \nprojects will drive an increase in construc-\ntion activity.  \nAssuming that there are no external \nshocks and that the authorities continue \ntheir inflation targeting regime, consumer \nprice inflation will stabilize at between 4.3\n-5.3 percent in the medium term.  \nAs oil prices are projected to stabilize \naround US$60 per barrel in 2018 -20, the current account balance and fiscal oil reve-\nnue are also expected to level off. The fis-\ncal position will improve gradually in the \nwake of fiscal consolidation efforts. The \ngovernment is planning to cut the non -oil \nfiscal deficit from over 13 percent of GDP \nin 2017 to 7 percent by 2020.  \nAs the economy continues to grow, labor \nincome —the primary driver of poverty \nreduction in Kazakhstan —is forecast to \nreturn to positive real growth. As a result, \nthe poverty rate is projected to decline to 5 \npercent by 2020.  \nThe successful implementation of struc-\ntural reforms will be required to deliver \nmore sustainable and inclusive economic \ngrowth. The ongoing structural and insti-\ntutional reforms (including those under \nthe 100 Concrete Steps program and the \nStrategic Plan for Development of Ka-\nzakhstan to 2025, as adopted in early 2018) \nshould aim to reduce the role of the state \nin the economy and facilitate the develop-\nment of a vibrant, modern and innovative \ntradable non -oil sector. In this context, \nefforts to restructure and privatize state -\nowned enterprises would be expected to \nfocus on improving the efficiency of pub-\nlic administration, reducing fiscal risks, \nand open contestable spaces for the pri-\nvate sector to act. Prudent fiscal and mon-\netary policies would support economic and price stability and encourage invest-\nment in the non -oil economy. Higher in-\ncomes will also have positive spillover \neffects on poverty reduction.  \n.  \n \nRisks and challenges  \n \nBoth external and domestic factors present \nrisks to Kazakhstan ’s medium-term eco-\nnomic outlook. The economy ’s vulnerabil-\nity to external shocks remains the main \nchallenge to achieving stable and sustaina-\nble development. External demand from \nChina and the Russian Federation, Ka-\nzakhstan ’s main trading partners, as well \nas global oil demand and prices will re-\nmain the key external factors impacting \nKazakhstan ’s economic performance. Do-\nmestic factors include the pace of imple-\nmentation of structural and institutional \nreforms, especially in anticipation of a \npolitical transition over the medium term. \nA potential escalation of problems in the \nbanking sector is also a concern. To miti-\ngate these risks and facilitate a sizeable \nexpansion of the tradable non -oil sector ’s \nrole in the economy, the government must \ndemonstrate significant improvements to \nthe rule of law, the investment climate, \nand the quality of human capital.  \nTABLE 2  Kazakhstan / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 1.2 1.1 4.0 2.8 3.0 3.2\nPrivate Consumption 1.8 1.2 1.5 1.7 2.0 2.2\nGovernment Consumption 2.4 2.4 -2.5 -3.4 1.7 1.5\nGross Fixed Capital Investment 4.2 3.0 6.2 7.6 4.5 4.6\nExports, Goods and Services -4.1 -4.4 1.5 1.7 1.9 3.1\nImports, Goods and Services -0.1 -2.2 -6.0 1.0 2.1 2.5\nReal GDP growth, at constant factor prices 1.9 1.2 3.9 2.8 3.0 3.2\nAgriculture 3.5 5.4 2.9 3.0 3.0 3.0\nIndustry -0.4 1.1 6.1 2.1 2.3 3.1\nServices 3.2 0.9 2.7 3.2 3.4 3.3\nInflation (Consumer Price Index) 6.6 14.6 7.4 5.3 4.3 4.5\nCurrent Account Balance (% of GDP) -2.8 -6.5 -3.0 -0.6 -0.5 -0.3\nFinancial and Capital Account (% of GDP) 5.2 6.9 6.1 2.6 1.8 1.7\nNet Foreign Direct Investment (% of GDP) 1.7 10.5 6.0 5.2 4.6 4.2\nFiscal Balance (% of GDP) -7.9 -6.4 -7.0 -2.6 -2.4 -2.0\nDebt (% of GDP) 21.9 19.6 20.7 20.9 22.4 24.6\nPrimary Balance (% of GDP) -7.1 -5.3 -6.1 -1.8 -1.5 -1.2\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b0.4 0.4 0.3 0.3 0.3 0.3\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b7.8 7.9 6.9 6.2 5.6 5.0\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f =' metadata={'source': 'blkc.pdf', 'page': 83}
"
"page_content='7.8 7.9 6.9 6.2 5.6 5.0\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 5-HBS. Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 5) with pass-through = 0.87  based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 83}
"
"page_content='Selected Country Pages ●\u200371\n58 MPO  Apr 18  Recent developments  \n \nGrowth reached 4.4 percent in 2017, up \nfrom 4.1 percent in 2016.  The upturn is \ndriven by rise in investment, and recovery in \nexports. Higher private investment was driv-\nen by FDI inflows, thanks to higher growth \nin Europe, low interest rates, and a better \nbusiness environment as Kosovo improved \nits rank from 60 to 40 in Doing Business. \nInvestment contributed 3pp to economic \ngrowth, with public investment increasing \nby 5 percent y -o-y. The recovery in goods \nexports was led by a rebound in commodity \nprices with a broad -based increase in vol-\numes of goods exports, albeit from a low \nbase, and a surge in the export of services. \nNet exports contributed a 1.1pp while the \ncontribution of consumption was only 0.4pp. \nIn terms of economic sectors, construction, \ntrade, financial and transport were the main \nengine of growth in 2017 with a contribution \nof 2.6 pp. Agriculture remained stagnant, \nwhereas industry contributed 0.7pp.  \nConsumer price inflation was 1.5 percent \nin 2017 y -o-y, up from 0.3 percent in 2016, \nas prices for fuel, food, tobacco, alcohol, \nand other household items increased add-\ning to the cost of living.  \nHigher revenues (up 5.3 percent y -o-y) \nand under -execution of public invest-\nments narrowed the fiscal deficit to 1.4 \npercent of GDP in 2017, lower than the \nearlier projected 2 percent of GDP. Indi-\nrect tax revenues grew by 6.1 percent \n(VAT by 8.1 percent), while non -tax reve-\nnues grew by 5.6 percent y -o-y. Direct tax \nrevenues added only 2.5 percent growth, due to a decline in CIT collections by 7 \npercent. Spending increased by 5.7 per-\ncent, due to a 11.9 percent increase in so-\ncial transfers and 5.4 percent increase in \ncapital spending. Higher actual costs than \nplanned costs for spending on veterans \nbenefits exceeded plans due to the delay \nin the implementation of the cap on the \nscheme. In addition, goods and services \nspending rose by 10.7 percent due to early \nelections and creation of two additional \nministries. Public and publicly guaranteed \ndebt remains  on a rising trajectory, reach-\ning 15.8 percent of GDP at end -2017.   \nThe current account deficit (CAD) improved \nto 5.1 percent of GDP in 2017, from 8.2 per-\ncent in 2016, thanks to better external condi-\ntions and increase in export volumes. Ex-\nports of goods jumped up by 23.1 percent y -o\n-y in 2017 due to higher growth of the trad-\ning partners, and higher global prices of base \nmetals. Exports of services grew by 17.7 per-\ncent in 2017, mainly due to higher travel \nexpenditures by the diaspora.  \nHigher growth continued to foster job crea-\ntion in 2017. Employment grew by 1.2pp y -o-\ny in the third quarter of 2017, however, as \nlabor force participation expanded further, \nunemployment increased by 2.7 pp. Despite \nthe recent improvements, employment is still \nlow at 29.7 percent on average as a share of \ntotal population. The share of self -employed \nand unpaid family workers, i.e. those in vul-\nnerable employment and measures job quali-\nty, remains high at 23 percent; the youth \nunemployment rate slightly increased reach-\ning 53.3 percent in Q3 2017. The duration of \nunemployment is worrying with over 70 \npercent of the unemployed seeking a job for \nover a year.   KOSOVO  \nFIGURE 1  Kosovo / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2  Kosovo / Actual and projected poverty rates and \nreal private consumption per capita  \nSources: Statistics Agency of Kosovo and WB Staff.  Sources: World Bank. Notes: see Table 2.  The economy grew at 4.4 percent in \n2017, up from 4.1 in 2016. The accelera-\ntion was due to a pickup in investment \nand a recovery in exports. Stronger \ngrowth fostered job creation in 2017, \nsupporting poverty reduction; but  labor \nforce participation remains low. The \noutlook is positive, with 4.8 percent  \nannual growth projected between 2018 -\n2020, driven by  investment and con-\nsumption. Risks to the outlook include \nthe ability to execute the  public invest-\nment program,  metal price dynamics \nand the fragile political situation.  Table 1 2017\nPopulation, million 1. 8\nGDP, current US$ billion 7.1\nGDP per capita, current US$ 3902\nSchool enrollment, primary (% gross)an.a.\nLife expectancy at birth, yearsa7 1. 3\nSource: WDI, M acro Poverty Outlook, and official data.\nNot es:\n(a) M ost  recent  WDI value (2015).\n050010001500200025003000\n051015202530\n2012 2014 2016 2018 2020\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)\n-6.0%-4.0%-2.0%0.0%2.0%4.0%6.0%8.0%\n2014 2015 2016 2017\nConsumpti on Inves tments\nNet exports Real GDP growthPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 84}
"
"page_content='72\u2003●   World Bank ECA Economic Update May 2018\n59 MPO  Apr 18  growth in Europe and other trading part-\nners pose risks to the outlook.  \nPerceived fragility of the government, \nwith only 61 out of 120 votes in the parlia-\nment, can slow down the implementation \nof public projects through the investment \nclause. In addition, the delay in fiscal re-\nforms such as the implementation of the \ncap on the war veteran ’s benefits, further \nincreases in untargeted categorical social \nbenefits, and unfunded early retirement \nschemes increase fiscal pressures.  \nReform priorities should include shifting \nsources of growth towards tradable sec-\ntors and increasing productivity to ad-\ndress high unemployment, low participa-\ntion rates, and poverty.  \n  \nOutlook  \n \nEconomic growth is projected at 4.8 per-\ncent in 2018 -2020, propelled by higher \ncapital spending. Growth in public invest-\nment is expected to be driven by several \nprojects under preparation, including the \nrailway project and regional roads fi-\nnanced by IFIs. Private investment is ex-\npected to increase reflecting improve-\nments in the business environment,  and \nincrease in credit due to the partial credit \nguarantee fund for SMEs established in \n2017.  Higher wages and social spending, \ngrowth in remittances and credit to house-\nholds are expected to promote household \nconsumption adding an additional 2.3 pp \nto growth. Exports are likely to benefit \nfrom robust growth in Europe and higher \nbase metal prices. However, net exports \nare projected to subtract 0.9 pp from \ngrowth in 2018 because of higher imports \nlinked to public investment projects.  The CAD is expected to reach 6 percent of \nGDP in 2018. Increased demand for in-\nvestment goods is expected to widen the \nCAD in 2018, despite higher exports pro-\njected. Net FDI and remittances, are ex-\npected to finance larger shares of the CAD \nas growth in Europe firms up and larger \nimplementation of the Stabilization and \nAssociation Agreement.  \nPoverty, measured at the lower middle -\nincome poverty line (US$ 3.2/day, 2011 \nPPP), is expected to decline slightly to 2.55 \nin 2018, from 2.6 percent in 2017 driven by \nstronger growth.  High unemployment \nand inactivity rates remain the key imped-\niments to sustainable poverty reduction. \n \n \nRisks and challenges  \n \nKosovo’s outlook is positive, but the risks \nare tilted to the downside. Lower than \nprojected absorption of public investment, \nlower base metal prices and slower \nTABLE 2  Kosovo / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 4.1 4.1 4.4 4.8 4.8 4.8\nPrivate Consumption 4.3 5.7 0.3 2.0 2.5 2.2\nGovernment Consumption -6.5 -6.3 1.0 4.5 1.5 3.3\nGross Fixed Capital Investment 12.1 7.3 11.3 12.1 11.8 10.5\nExports, Goods and Services 1.9 7.5 15.6 8.3 7.9 7.7\nImports, Goods and Services 3.8 7.0 5.1 5.9 5.9 5.3\nReal GDP growth, at constant factor prices 3.0 2.4 4.5 3.6 5.1 5.0\nAgriculture -4.1 3.1 3.7 6.6 8.4 6.2\nIndustry 5.9 1.8 3.8 -0.5 5.8 4.5\nServices 3.0 2.6 5.1 5.4 3.9 4.9\nInflation (Consumer Price Index) -0.5 0.3 1.5 1.7 1.7 1.7\nCurrent Account Balance (% of GDP) -8.6 -8.2 -5.1 -6.0 -7.0 -7.5\nFiscal Balance (% of GDP) -1.8 -1.3 -1.4 -2.2 -3.0 -3.3\nDebt (% of GDP) 12.7 14.1 15.8 16.6 18.6 20.9\nPrimary Balance (% of GDP) -1.5 -1.0 -1.1 -1.9 -2.6 -2.9\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.' metadata={'source': 'blkc.pdf', 'page': 85}
"
"page_content='Selected Country Pages ●\u200373\n60 MPO  Apr 18  Recent developments  \n \nThe Kyrgyz economy has recovered from \nthe external shocks of 2014 -15 as growth \naccelerated to 4.5% in 2017, from 3.8% a \nyear earlier. Growth was driven by the \nnon-gold industry (22%) while it deceler-\nated in other main sectors: gold, construc-\ntion, agriculture and services. On the de-\nmand side, growth was supported by \npublic investment, net exports and private \nconsumption fueled by a steady rebound \nin remittances inflows.  \nAn expansionary fiscal stance was main-\ntained, even as external tailwinds strength-\nened. The estimated overall fiscal deficit \nwas 5% of GDP in 2017, down from 6.6% \nin 2016 and lower than the budgeted defi-\ncit of 7.5%, but still above the levels of pre-\nvious years. Both tax and non -tax revenues \nincreased as a share of GDP. In addition, \nthe budget received rising grant support \nfrom international donors. At the same \ntime, expenditures increased, driven large-\nly by capital outlays. Substantial overruns \nin current spending in the first part of the \nyear were partially mitigated by expendi-\nture restraint in the last quarter of 2017. \nThe deficit was mainly financed by foreign \nborrowing, which increased total public \ndebt to 63.2% of GDP from 61.4% in 2016.  \nThe current account deficit is estimated to \nhave narrowed to 9.4% of GDP in 2017 \nfrom 12.1% a year before, as exports \npicked -up (+14.5% in US dollar terms) and \nremittances continued to grow (by 24.2% \nin US dollar terms). The export perfor-\nmance was driven mainly by non -gold exports, which benefited from the recov-\nery in regional demand as well as im-\nproved compliance by Kyrgyz producers \nwith Eurasian Economic Union (EEU) \nquality standards. Imports are estimated \nto have risen by 12% (in US dollar terms), \na slower increase than might have been \nenvisaged given the improvement in re-\nmittances and high levels of public invest-\nment. The current account deficit was fi-\nnanced by FDI and government borrow-\ning. International reserves increased \nslightly to US$2.1 billion, covering about 4 \nmonths of imports.    \nThe stronger balance of payments (and \ncorresponding foreign exchange liquidity \nin the economy) led to a further apprecia-\ntion of the Kyrgyz som by 0.6% in 2017 \n(8.8% in 2016). In real effective terms, \nhowever, the som depreciated by 0.5%, \nlargely reflecting relative inflation dynam-\nics with key trading partners.  \nInflation rose slightly in 2017 reaching \n3.7%, given buoyant domestic demand. \nWith inflation still below the National \nBank (NBKR) target of 5 -7%, monetary \npolicy remained accommodative. Econom-\nic activity was supported by a recovery in \ncredit to the economy (14% growth), fol-\nlowing a decline early in the year.    \nThe poverty rate (measured at below \nUS$3.2 per day, 2011 PPP terms) is esti-\nmated to have fallen to 19% in 2016. Low \nconsumer price growth and higher re-\nmittance inflows supported household \nconsumption. At the same time, moderate \ngrowth in services and agriculture, where \nabout 50% of the bottom 40 are employed, \nconstrained real labor income growth for \nthe poor.  Table 1 2017\nPopulation, million 6.2\nGDP, current US$ billion 7.2\nGDP per capita, current US$ 116 0\nInternational poverty rate ($1 .9)a1. 4\nLower middle-income poverty rate ($3.2)a19 . 1\nUpper middle-income poverty rate ($5.5)a67.1\nGini coefficienta26.8\nSchool enrollment, primary (% gross)b1 07.4\nLife expectancy at birth, yearsb70.7\n(a) Most recent value (201 6), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).KYRGYZ       \nREPUBLIC  \nFIGURE 1  Kyrgyz Republic / Real GDP growth and       \ncontributions to real GDP growth  FIGURE 2  Kyrgyz Republic / Actual and projected poverty \nrates and real GDP growth per capita  \nSources: Kyrgyz authorities and WB staff calculations.  Sources: Kyrgyz authorities and WB staff calculations.  In 2017, growth was stronger than ex-\npected, supported by external tailwinds, \nthe expansionary macroeconomic policy \nstance, which buoyed domestic demand, \nand a better -than-expected (albeit weak-\nening) performance in the gold sector. \nGoing forward, growth is projected to \ndecline slightly in 2018, before picking -\nup to 5% over the medium term, allow-\ning for continued moderate declines in \nthe poverty rate.  \n-2024681012\n0510152025303540\n2007 2009 2011 2013 2015 2017 2019Percent Percent of population\nGDP growth, RHS $3.2/day PPP, LHS0123456\n-10123456\n2014 2015 2016 2017 2018 2019 2020Percent Percentage points\nAgriculture Industry w/out Kumtor\nKumtor Construction\nServices GDP (RHS)' metadata={'source': 'blkc.pdf', 'page': 86}
"
"page_content='74\u2003●   World Bank ECA Economic Update May 2018\n61 MPO  Apr 18   \nOutlook  \n \nReal GDP growth is projected to deceler-\nate slightly to 4.2% in 2018 -as industrial \noutput growth moderates - and then pick \nup to reach 5% by 2020. This scenario as-\nsumes that recovery takes hold in Russia \nand Kazakhstan, benefiting the Kyrgyz \neconomy via the traditional remittance \nand trade channels. An additional boost is \nexpected to come from exports, thanks to \na number of developments, which in-\nclude: (i) enhanced access to the EEU mar-\nket; and (ii) improved bilateral relations \nwith Uzbekistan, which should lead to \nhigher trade between the two countries. \nThese effects should mitigate the antici-\npated moderation of public expenditure.  \nInflation is envisaged to remain in line \nwith the NBKR target, assuming no sig-\nnificant global food price increases and \nrelative exchange rate stability.  \nWhile remittance inflows are expected to \ngrow further, the current account deficit \nis projected to remain elevated at around \n1 0 %  o f  G D P ,  r e fl e c t i n g  s t r u c t u r a l  f e a -\ntures of the economy and continued \nhigh, albeit gradually moderating, levels \nof public investment.  The fiscal deficit is projected to decline to \n2.9% of GDP by 2020. This will be achieved \nthrough measures to increase tax revenues \nand curtail current spending, while capital \nexpenditures would remain robust at about \n7.6% of GDP on average (although falling to \n6.1% in 2020 as externally financed projects \ndecline). Over 2018 -20, tax revenues should \nincrease as a share of GDP, with measures \nto: (i) expand the tax base by encouraging \nbusinesses to formalize, (ii) improve the \nadministration of taxes, (iii) reduce tax ex-\nemptions, and (iv) increase some tax rates. \nOver the same period, expenses are target-\ned to decline by over 5 percentage points \n(from 38.7% in 2018) as a result of efforts to \n(i) streamline non -priority purchases of \ngoods and services, (ii) reduce the wage bill \nas a share of GDP, and (iii) strengthen pub-\nlic procurement.  \nModest increases in growth in agriculture \nand construction, and a solid performance of \nremittances, are likely to support rural pov-\nerty reduction. Social transfers will continue \nto play an important role in driving poverty \nreduction in both urban and rural areas. A \nscheduled increase in pensions should also \nbenefit poor households given that pensions \nrepresent close to 15% of income among the \npoor.  The poverty rate is projected to decline \nto 18.5% in 2018 and 16.7% in 2020.   \nRisks and challenges  \n \nThe outlook is subject to downside risks. \nGrowth will continue to be highly de-\npendent on exogenous regional develop-\nments. Specifically, a slowdown in Russia \nand Kazakhstan could affect negatively \nthe baseline scenario via remittances and \ntrade. Adverse exchange rate develop-\nments could heighten competition in the \ndomestic and EEU markets.     \nA core challenge continues to be to accel-\nerate the process of convergence of local \nproduction to EEU standards. This would \nhelp Kyrgyz producers to boost exports of \nagricultural and textile products in the \nshort and medium run.    \nAnother challenge will be to bring fis-\ncal policy back to a sustainable path, \nwhile continuing to provide adequate \nsupport to the economy. Several policy \ndecisions taken in the run -up to the \nPresidential elections in October 2017 \nare expected to add structural pressure \non spending, including a universal ex-\ntension of the previously income -\ntargeted benefit for low income families \nwith children, which will complicate \nthe task of fiscal consolidation.  \nTABLE 2  Kyrgyz Republic / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.9 3.8 4.5 4.2 4.8 5.0\nPrivate Consumption -0.9 1.8 1.9 2.8 3.6 4.0\nGovernment Consumption 0.9 2.7 0.6 0.6 0.7 0.5\nGross Fixed Capital Investment 3.9 3.7 4.0 4.9 5.7 6.0\nExports, Goods and Services -5.6 2.2 5.6 8.4 8.5 8.9\nImports, Goods and Services -13.2 -4.0 0.0 2.7 3.3 4.4\nReal GDP growth, at constant factor prices 3.9 3.8 4.5 4.2 4.8 5.0\nAgriculture 6.2 3.0 2.2 2.7 2.2 2.2\nIndustry 2.9 5.9 10.3 6.8 8.9 9.8\nServices 2.6 3.7 4.2 4.3 5.2 5.1\nInflation (Consumer Price Index) 6.5 0.4 3.6 4.0 4.0 4.0\nCurrent Account Balance (% of GDP) -15.8 -12.1 -9.4 -11.0 -10.7 -9.8\nFinancial and Capital Account (% of GDP) 17.4 9.7 7.2 11.0 10.7 9.8\nNet Foreign Direct Investment (% of GDP) 15.1 8.1 6.9 7.0 7.0 6.5\nFiscal Balance (% of GDP) -3.0 -6.6 -5.0 -4.1 -4.4 -2.9\nDebt (% of GDP) 67.3 61.4 63.2 63.5 63.7 63.4\nPrimary Balance (% of GDP) -2.0 -5.6 -4.1 -2.5 -3.3 -2.2\nInternational poverty rate ($1.9 in 2011 PPP)a,b2.5 1.4 1.0 0.8 0.5 0.4\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b23.2 19.1 18.5 18.0 17.4 16.7\nU' metadata={'source': 'blkc.pdf', 'page': 87}
"
"page_content='.0 0.8 0.5 0.4\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b23.2 19.1 18.5 18.0 17.4 16.7\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b69.9 67.1 66.1 65.1 63.9 62.6\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 2009-KIHS,  201 5-KIHS, and  201 6-KIHS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using average elasticity (2009-201 5) with pass-through = 0.7 based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 87}
"
"page_content='Selected Country Pages ●\u200375\n62 MPO  Apr 18  Recent developments  \n \nThe political turmoil of 2015 -2017 slowed \nreal GDP growth in 2017 from 2.9 percent \nin 2016 to zero percent in 2017, driven by a \nfall in investments. The inauguration of \nthe new government in June 2017 resolved \nthe stalemate as evidenced by the compa-\nnies’ improved expectations on future \nproduction. Investment fell by 4.5 percent \ny-o-y in 2017, but it started recovering by \nyear -end with recovering investor confi-\ndence. Private consumption was the only \ncontributor to growth in 2017, supported \nby higher employment and wages. Net -\nexports contributed negatively to growth \n(-0.7 pp). Solid exports growth was pro-\npelled by the recovery in the Euro area but \nwas not enough to compensate for rising \nimports for energy, FDI -related imports, \nand iron and steel. At the sector level, \nconstruction and manufacturing stalled in \n2017, with construction falling by almost \n14 percent y -o-y in real terms as both pri-\nvate and public construction activities \nstalled. Mining, wholesale and retail trade \nand agriculture were the only sectors that \ncontributed positively to growth, support-\ned by rising metal prices, growth in dis-\nposable income and a favorable harvest \nseason, respectively.  \nInflation remained low in 2017 at 1.4 per-\ncent, although it increased from a 2016 de-\nflation, driven by rising prices of food and \nbeverages, energy (including oil), clothing \nand footwear and communications.    \nDespite slower growth, there were improve-\nments in the labor market. Employment  grew by 2.4 percent y -o-y in 2017, helped \nin part by employment subsidies in the \nfirst part of the year, through which al-\nmost third of the net new jobs were creat-\ned. The employment rate has been con-\nstantly improving, but remains low at 44 \npercent, meaning that more than half of \nthe working age population is either un-\nemployed or outside of the labor force. \nMost of the jobs created were in wholesale \nand retail trade, accommodation and food \nservices and manufacturing —the latter \nsectors with links to the FDI -economy, \nwhich benefit from tax exemptions and \nother government support. As a result, the \nunemployment rate fell to a historical low, \nat 22.4 percent in 2017, close to 80 percent \nof which is long -term.  \nPoverty is estimated to have continued \ndeclining in 2017. Poverty (at US$5.5/day \nat 2011 PPP) is projected to have fallen to \n21 percent in 2017, continuing a decreas-\ning trend present since 2009. Employment \ngrowth and increases in salaries, especial-\nly in the labor -intensive sectors, are ex-\npected to have driven most of the poverty \nreduction in 2017. Pensions, which played \na role in the 2009 -2014 decrease, are un-\nlikely to have played a relevant role in \nrecent poverty dynamics.  \nRevenue gains in 2017 were offset by in-\ncreases in spending, resulting in un-\nchanged fiscal deficit —at 2.7 percent of \nGDP. Revenues increased on the back of \nsolid VAT and collection of the social se-\ncurity contributions, while expenditures \nincreased due to higher spending for \nhealth, pensions, and subsidies. Capital \nspending once again remained under -\nexecuted reflecting a slowdown in project MACEDONIA  \nFIGURE 1  Macedonia / Real GDP growth and contributions \nto real GDP growth  FIGURE 2  Macedonia / Annual and projected poverty rates \nand real GDP per capita  \nSources: FYR Macedonia State Statistics Office and World Bank staff calculations.  Sources: WDI and own calculations based on SILC 2010 -2015.  As investment contracted after a pro-\nlonged political crisis, economic growth \nslowed to zero percent in 2017. Growth is \nprojected to rise to 2.3 percent in 2018, \ndriven by consumption and recovering \ninvestment. Despite the slowdown, labor \nmarket improved thanks to public subsi-\ndies; but employment and labor force \nparticipation rates remain low compared \nto the EU. The fiscal deficit remained \nunchanged in 2017, with higher spend-\ning offsetting improved tax collection. \nPoverty continued to decline in 2017, \npropelled by job creation.  \n-6-4-20246\n2009 2011 2013 2015 2017 f 2019 f\nFinal consumption  Gross capital formation\nNet exports Real growthPercent, percentage pointsTable 1 2017\nPopulation, million 2.1\nGDP, current US$ billion 11. 3\nGDP per capita, current US$ 5440\nInternational poverty rate ($1 .9)a5.3\nLower middle-income poverty rate ($3.2)a9.8\nUpper middle-income poverty rate ($5.5)a23.2\nGini coefficienta35.6\nSchool enrollment, primary (% gross)b93.2\nLife expectancy at birth, yearsb75.5\n(a) M ost  recent  value (2015), 2011 PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n9.7 10.4 9.9\n7.56.24.9 5.3 5.2 5.0 4.9 4.835.132.532.2\n29.7\n28.9\n24.823.221.7 21.420.519.3\n02,0004,0006,0008,00010,00012,00014,00016,000\n05101520253035404550\n2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019\n$1.9/day $5.5/day GDP per capitaPoverty headcount GDP per capita (USD 2011 PPP)' metadata={'source': 'blkc.pdf', 'page': 88}
"
"page_content='76\u2003●   World Bank ECA Economic Update May 2018\n63 MPO  Apr 18  implementation. Public and publicly guar-\nanteed debt declined to 47.5 percent in \n2017, from 48.4 percent in 2016, but due to \na drawdown on accumulated deposits to \nreduce new borrowing.  \nCredit growth increased in 2017. House-\nhold credit grew by 9.2 percent, while \ncorporate lending remained subdued \nthroughout 2017 (2.6 percent). The loan -to\n-deposit ratio stood at 88 percent, which \nshould allow banks to expand lending \nactivities. Non -performing loans (NPLs) \nstood at 6.3 percent, similar to 6.4 percent \nat end -2016, but corporate NPLs increased \nslightly to 9.9 percent.  \nThe current account deficit narrowed to \n1.1 percent of GDP in 2017. Solid export \nperformance of FDIs, iron and steel, furni-\nture and tobacco helped to reduce the \ngoods and services deficit to 13.9 percent \nof GDP (from 15 percent in 2016). Net \nprivate transfer inflows increased slightly \nto 15.8 percent of GDP, while primary \nincome deficit widened further to 4.2 per-\ncent of GDP as foreign investors kept re-\npatriating profits amidst the political tur-\nmoil. Foreign direct investments declined \nin 2017 to only 2.3 percent of GDP, com-\npared to 3.2 percent in 2016. At end -2017, \nforeign reserves stood at 4.4 months of imports and were further replenished in \nJanuary 2018 as the Government issued a \n7-year EUR 500 million Eurobond at 2.75 \npercent which fully covers government \nborrowing requirements for 2018.  \n \n   \nOutlook  \n \nThe economic outlook is positive, with \ngrowth expected to average 2.7 percent \nduring 2018 -2020. Construction activity is \nexpected to recover, as the construction of \ntwo highways is resumed. The manufac-\nturing sector is also expected to recover, a \nprocess that began in late 2017, propelled \nby improved foreign demand from the \nEU. Private consumption is projected to \nrise supported by higher employment and \nas the new authorities indicated rise in \nsocial transfers.  \nPoverty is likely to continue its down-\nward trend in 2018 -2020 with improved \neconomic outlook. Public investment in \ninfrastructure should sustain employ-\nment creation. Increases in social transfers \nshould also translate into further poverty \nreductions, if properly designed and \nmeans -tested.  Fiscal deficit is planned to remain un-\nchanged in 2018 leading to rise in public \ndebt to 50 percent of GDP.  \n \n \nRisks and challenges  \n \nWith the political crisis now resolved, the \nmain risk comes from fiscal vulnerabilities \nand low potential growth. A low revenue \nto GDP ratio, a growing deficit in the pen-\nsion system, higher interest payments, \nand accumulated arrears are risks to fiscal \nsustainability. Discussions about raising \nuntargeted social transfers compound the \nsustainability concerns.  \nCredible fiscal consolidation program \nfocused on strengthening efficiency of \npublic spending and broadening of the tax \nbase would help to stabilize public debt, \nrebuild fiscal buffers against future shocks \nand increase investor confidence.  \nEnsuring the backward linkages of the \nFDIs, unlocking potentials in the energy, \ntourism and agriculture sectors, as well \nas reducing the overregulation in pro-\nfessional and infrastructure network \nservices could help increasing the poten-\ntial growth.  \nTABLE 2  Macedonia / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.9 2.9 0.0 2.3 2.7 3.0\nPrivate Consumption 4.4 3.1 2.9 2.2 1.9 1.9\nGovernment Consumption 3.9 1.9 -1.5 2.1 1.5 1.5\nGross Fixed Capital Investment 2.1 -3.9 -4.5 0.9 3.3 4.7\nExports, Goods and Services 8.5 8.1 9.2 5.4 6.3 6.3\nImports, Goods and Services 9.9 11.6 7.3 3.6 4.2 4.2\nReal GDP growth, at constant factor prices 5.0 3.7 -0.8 4.1 2.6 2.9\nAgriculture 1.9 2.8 4.1 0.9 1.2 1.2\nIndustry 6.2 6.1 -7.8 16.4 5.1 5.1\nServices 4.9 2.7 1.7 -0.5 1.6 2.1\nInflation (Consumer Price Index) -0.3 -0.2 1.4 1.6 2.0 2.0\nCurrent Account Balance (% of GDP) -1.9 -2.8 -1.1 -2.5 -2.5 -2.6\nFinancial and Capital Account (% of GDP) 1.8 2.6 1.0 6.7 2.2 2.4\nNet Foreign Direct Investment (% of GDP) 2.3 3.3 2.2 2.6 2.9 3.1\nFiscal Balance (% of GDP) -3.6 -2.7 -2.7 -2.7 -2.5 -2.3\nDebt (% of GDP) 38.1 39.6 39.3 43.3 44.4 45.5\nPrimary Balance (% of GDP) -2.4 -1.5 -1.4 -1.2 -0.9 -0.5\nInternational poverty rate ($1.9 in 2011 PPP)a,b5.3 5.2 5.0 5.0 4.8 4.8\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b9.8 9.7 9.6 9.3 9.2 9.2\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b23.2 21.9 21.0 20.6 20.5 20.2\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on SILC harmonization, using 201 5-SILC grouped data (survey year). Actual data: 201 5. Nowcast: 201 6 - 201' metadata={'source': 'blkc.pdf', 'page': 89}
"
"page_content=': e =  estimate, f = forecast.\n(a) Calculations based on SILC harmonization, using 201 5-SILC grouped data (survey year). Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 5)  with pass-through = 0.7 based on Private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 89}
"
"page_content='Selected Country Pages ●\u200377\n64 MPO  Apr 18  Recent developments  \n \nGrowth reached 4.5 percent in 2017 on ac-\ncount of strong consumption led by the \nongoing recovery in remittances and in-\ncreases in real wages. A double -digit in-\ncrease in public investments stimulated \ngross fixed capital formation (+5.1 percent). \nDespite robust exports supported by the \ngood harvest of the past two years, imports \nincreased rapidly resulting in a negative \ncontribution of net exports to growth ( -2.7 \npercentage points). On the production side, \ngrowth has been mainly driven by the re-\ntail and wholesale trade (+1.3 percentage \npoints), followed by growth in agriculture \n(+1 percentage points) and industry (+0.4 \npercentage points).  \nAfter a sharp deceleration in 2016, the in-\nflation rate averaged 6.6 percent in 2017, \njust above the target corridor of 5 percent \n+/- 1.5 percent. Increases in regulated pric-\nes, unfavorable climatic conditions in \nSpring which affected seasonal agricultur-\nal outputs, and stronger internal demand \naccelerated the inflation rate, which has \nbeen out of the target corridor since April \n2017. To stimulate credit activity and ab-\nsorb the existing liquidity after the bank-\ning crisis, throughout 2017, the NBM grad-\nually reduced the base interest rate (from 9 \npercent to 6.5 percent), while increasing \nthe reserve requirement ratio to a record \nhigh of 40 percent. Strong foreign inflows \npushed the appreciation of the Moldovan \nLeu, tempering the cost -push inflation \npressures. By end -January 2018, the infla-\ntion rate registered 6.5 percent y/y.  The increasing real wages and a recover-\ning flow of remittances, as well as the \nfavorable 2016 harvest have been associ-\nated with a downward trend in the pov-\nerty headcount, which, measured at the \ninternational moderate poverty thresh-\nold of US$ 5.5/day in 2011 PPP, de-\ncreased to 16.3 percent in 2015 from 18.4 \nin 2014, and continued decreasing in \n2016. The unemployment rate fell form \n4.9 percent in 2015 to 4.2 percent in 2016, \nthe decline being particularly pro-\nnounced in rural areas (0.9 percentage \npoints), where the incidence of poverty \nis higher. Salaries increased by a further \n5.2 percent in real terms in 2017, sup-\nporting household welfare.  \nThe external position remains stable, de-\nspite a recent increase in current account \ndeficit. In the first nine months of 2017, \nexports increased in nominal terms by \n25.2 percent, remittances increased by 12.1 \npercent, while net direct investments in-\ncreased 1.2 percentage points of GDP \ncompared to end -2016, on account of rein-\nvested profits, reaching 2.5 percent of \nGDP. Yet, supported by a stronger Leu \nand imports of electricity, imports in-\ncreased (+22.5 percent y/y), determining \nthe widening of the current account deficit \nby 3.4 percentage points y/y reaching 9.2 \npercent of GDP. The current account defi-\ncit continues to be financed predominant-\nly through external debt. As of end -\nSeptember 2017, total external debt grew \nby 8.1 percent totaling 83 percent of GDP. \nAgainst this background, by end -January \n2018 foreign reserves reached an all -time \nrecord of 2.9 billion USD, covering more \nthan 5 months of imports.  MOLDOVA  \nFIGURE 1  Moldova / Actual and projected GDP growth and \ncurrent account balance  FIGURE 2  Moldova / Actual and projected poverty rates and \nreal private consumption per capita  \nSources: National authorities and World Bank estimates.  Sources: World Bank. Notes: see Table 2.  In 2017, Moldova registered robust growth \nsupported by favorable conditions in agri-\nculture and strong private consumption. \nHigher wages and the recovery of re-\nmittances brought poverty rate down. \nGrowth momentum is expected to be pre-\nserved during 2018 and 2019 supported by \ngrowing consumption and investments, \nparticularly public. While Moldova rebuilt \nits macroeconomic buffers, major policy \nchallenges related to upcoming elections, \ngovernance, particularly in the financial \nsector, to the efficiency of public spending, \nand to revenue mobilization remain.  Table 1 2017\nPopulation, million 3.5\nGDP, current US$ billion 8.2\nGDP per capita, current US$ 2307\nInternational poverty rate ($1 .9)a0.2\nLower middle-income poverty rate ($3.2)a1. 3\nUpper middle-income poverty rate ($5.5)a16 . 5\nGini coefficienta26.3\nSchool enrollment, primary (% gross)b92.4\nLife expectancy at birth, yearsb7 1. 4\n(a) Most recent value (201 6), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n020004000600080001000012000\n020406080100\n2001 2003 2005 2007 2009 2011 2013 2015 2017 2019\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)\n-6.07.1 6.8\n-0.79.4\n4.8\n-0.44.5 4.53.8 3.7 3.5\n-15-10-50510\n2009 2011 2013 2015 2017 2019Real GDP, % change\nCurrent Account Balance, % GDPPercent\n' metadata={'source': 'blkc.pdf', 'page': 90}
"
"page_content='78\u2003●   World Bank ECA Economic Update May 2018\n65 MPO  Apr 18  Following two years of tight fiscal poli-\ncies, a lower than expected deficit was \nregistered in 2017, as fiscal revenues out-\npaced the double -digit increase in expend-\nitures. Following the under execution in \n2016, public spending increased 12.5 per-\ncent y/y. Supported by a strong increase in \nfiscal revenues and better compliance, \npublic revenues increased 16.2 percent y/\ny. Buoyant foreign trade was also reflected \nin strong collections of VAT (+15.8 per-\ncent, y/y) and excises (+30.9 percent, y/y). \nAs a result, the fiscal deficit was 2.2 per-\ncentage points higher, totaling -0.8 percent \nof GDP.  \n \n \nOutlook \n \nGrowth is expected to be robust and reach \n3.8% in 2018 and 3.7% in 2019 but remain \nbelow the historical averages (of 4.6%). In \nthe medium -term the recovery in re-\nmittances together with private wage \ngrowth will sustain private consumption, \nwhich will remain a key driver of growth. \nImport growth will outpace export \ngrowth, leading to a negative contribution \nof net trade to GDP growth. With parlia-\nmentary elections in November 2018, after \na prolonged contraction, the Government plans to increase public investments, with \na focus on the road sector. Still, structural \nweaknesses will contain growth at around \n3.5 percent. As consumption and imports \nstrengthen, the current account deficit is \nexpected to gradually increase, but to re-\nmain below its historical average thanks \nto revitalization of foreign inflows. The \ninflation rate is expected to reach the low-\ner bound of the target corridor in 2018 due \nto base effects and lower regulated prices \nand to gradually increasing to the target \nof 5 percent in medium term. In the base-\nline scenario, fiscal deficits are projected to \nremain under control. Due to mandated \nindexation and valorization of pensions, \nwage increases and additional public capi-\ntal investments, expenditures will increase \nreaching about 3 percent of GDP in 2018.  \nThe factors underlying a favorable growth \nforecast similarly suggest a further decline \nin the poverty headcount during the pro-\njection period, following the trend from \nrecent years. Increases in real wages and \nremittances, as well as a good harvest year \nshould support household welfare, inclu-\nsively in rural areas, where the incidence \nof poverty remains higher. The rate of \nwage increases according to latest data \nfrom Q3 of 2017 suggests that on an annu-\nal basis wages in agriculture increased \nfaster than in the economy overall. The poverty headcount, measured at the inter-\nnational moderate poverty threshold of \n$5.5/day is projected to decline from 16.3 \npercent in 2015 to 12.7 percent in 2018 and \n11.7 percent in 2019.  \n \n \nRisks and challenges  \n \nAfter two years of good climatic condi-\ntions, extreme weather may affect agricul-\ntural output with consequences for overall \ngrowth. The banking sector has stabilized, \nyet it is important to continue reforms and \nstrengthen the transparency in the sector. \nMoreover, the increased demand (+30 per-\ncent in the first half of 2017) observed for \nthe unregulated and poorly monitored non\n-banking financial intermediation sector \nraises concerns. Weaker growth of key \ntrade partners and potential changes in \ninternational trade and migration relations \ncould undermine exports and remittance \nflows. While the authorities have made \nefforts to reduce macroeconomic risks, fast-\ner growth is necessary to converge with EU \ncountries. For this to happen, Moldova \nneeds deep transformational reforms that \nwill create new and better jobs in the pri-\nvate sector and consequently will create \nspace for public investment needs.  \nTABLE 2  Moldova / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices -0.4 4.5 4.5 3.8 3.7 3.5\nPrivate Consumption -2.3 4.0 4.9 3.8 3.6 3.5\nGovernment Consumption 0.2 -0.1 0.2 0.7 -0.1 0.2\nGross Fixed Capital Investment -3.3 -2.1 5.2 6.1 5.3 5.8\nExports, Goods and Services 2.9 8.7 12.7 2.2 3.9 5.1\nImports, Goods and Services -4.7 5.2 11.4 2.9 4.1 5.3\nReal GDP growth, at constant factor prices -0.3 5.3 4.0 2.4 3.1 3.1\nAgriculture -13.4 18.0 7.9 1.1 2.3 3.5\nIndustry 3.5 2.6 3.0 3.8 4.6 5.4\nServices 3.8 1.8 2.7 2.5 2.9 2.2\nInflation (Consumer Price Index) 9.7 6.4 6.6 3.5 4.5 5.0\nCurrent Account Balance (% of GDP) -7.2 -4.2 -8.0 -4.8 -5.2 -5.6\nFinancial and Capital Account (% of GDP) 8.0 2.9 4.7 4.2 4.7 5.1\nNet Foreign Direct Investment (% of GDP) 3.5 1.3 2.6 2.7 3.3 3.4\nFiscal Balance (% of GDP) -2.2 -1.8 -0.8 -3.0 -2.5 -2.2\nDebt (% of GDP) 46.4 43.8 38.9 39.2 38.7 38.1\nPrimary Balance (% of GDP) -1.5 -0.7 0.3 -2.1 -1.6 -1.3\nInternational poverty rate ($1.9 in 2011 PPP)a,b0.0 0.2 0.1 0.1 0.1 0.1\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b1.4 1.3 0.9 0.6 0.4 0.3\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b16.3 16.5 15.0' metadata={'source': 'blkc.pdf', 'page': 91}
"
"page_content='a,b1.4 1.3 0.9 0.6 0.4 0.3\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b16.3 16.5 15.0 13.6 12.3 11.2\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 1 -HBS and 201 6-HBS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using annualized elasticity (201 1 -201 6)   with pass-through = 0.87 based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 91}
"
"page_content='Selected Country Pages ●\u200379\n66 MPO  Apr 18  Recent developments  \n \nThe economy grew by 4.3 percent in 2017. \nInvestment made the strongest contribu-\ntion to growth at 5 percentage points (pp), \nas the construction of the Bar -Boljare \nhighway and residential construction \naccelerated. Consumption also grew, con-\ntributing an additional 3.7 percentage \npoints, supported by employment and \nwage growth. Net exports continued to \ncontribute negatively to growth, but in \n2017 subtracted less from growth due to a \nrecord tourism season and a pickup in \ngoods exports from the metal industry, \ndriven by improved EU demand. Due to \nhigh import content, the growth impact of \nthe higher investment for highway con-\nstruction is subdued.  \nCredit growth increased by close to 12 \npercent in 2017, as household lending \nsurged, amid subdued corporate lending. \nNPLs declined to 7 percent of total loans, \nsupported by relaxed voluntary financial \nrestructuring rules. Current account deficit \nfurther widened to 18.9 percent of GDP in \n2017 on the back of rising construction -\nrelated imports and despite rise in exports \nof metals, mineral ore sales, and tourism. \nNet FDI inflows increased to 11.2 percent \nof GDP, financing two -thirds of the CAD. \nStill, after a decline in 2016 to 160 percent, \nexternal debt increased again in 2017 to an \nestimated 162 percent of GDP and remains \nthe highest in the region.  \nRobust growth led to employment rise by \n2.5 percent in 2017; however, it slowed \ndown in the last quarter by 0.2 percentage points --first such decline since late 2013, \ndue to agriculture, mining industry, retail \nand real estate. While the registered un-\nemployment rate increased to above 22 \npercent in 2017, given the large informali-\nty (one out of three jobs), the survey -based \nunemployment rate shows a decline by \nover 1 pp, to 16.1 percent by September \n2017 (a four -quarter average). Survey -\nbased employment rate grew by one per-\ncentage point to 45.9 percent along with \nthe activity rate, albeit at a slower pace.  \nPoverty is estimated to have declined in \nthe past few years as economic growth \npicked up and social transfers surged. In \n2017, however, it was difficult to achieve \nsignificant poverty reduction given the \nwithdrawal of the mothers ’ benefit in the \nsecond half of the year. Additionally, led \nby public sector wage dynamics, real \ngross wages declined by 0.4 percent in \n2017. Poverty (measured as consumption \nbelow the standardized middle -income -\ncountry poverty line of $5.5/day in 2011 \nPPP terms) declined from 8.7 percent in \n2012 to an estimated 4.4 percent in 2017.  \nInflation picked up in 2017 to 2.4 percent \non the back of rise in excises on tobacco, \nalcohol and sugary drinks, and spillovers \nfrom international oil and food price. Due \nto the increase in the VAT rate from 19 to \n21 percent, and excises on tobacco and \nalcohol, inflation increased by 2.6 percent \nyoy in January 2018.  \nGovernment launched an ambitious fiscal \nconsolidation program in 2017 reducing \nthe deficit by one percentage point of \nGDP in 2017 compared to a no -reform \nscenario. By December, tax revenues in-\ncreased by over 9 percent y -o-y led by MONTENEGRO  \nFIGURE 1  Montenegro / Real GDP growth and contributions \nto real GDP growth  FIGURE 2  Montenegro / Actual and projected poverty rates \nand real private consumption per capita  \nSources: MONSTAT, World Bank.   Sources: World Bank (see notes to Table 2).   Economic growth accelerated in 2017 due \nto surge in investment led by the highway \nconstruction and a historically strong \ntourism season. Employment increased \ncontinuing four years of growth. Howev-\ner, unemployment remains high amid \nhigh informality and increased labor im-\nports. Labor force participation increased \nslightly led by male activation. While \nfiscal consolidation efforts are underway, \nled by tax changes, high deficit and public \ndebt require continued efforts. The im-\nproved credit rating outlook is providing \neasier access to capital market.  Table 1 2017\nPopulation, million 0.6\nGDP, current US$ billion 4.7\nGDP per capita, current US$ 7528\nUpper middle-income poverty rate ($5.5)a4.8\nGini coefficienta3 1. 9\nSchool enrollment, primary (% gross)b94.3\nLife expectancy at birth, yearsb76.9\n(a) Most recent value (201 4), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n-10-8-6-4-20246810\n2010 2012 2014 2016 2018f\nFinal consumption Gross fixed capital formation\nChange in inventories Net exports\nGDP growthPercent, percentage points\n050010001500200025003000\n024681012\n2005 2007 2009 2011 2013 2015 2017 2019\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)' metadata={'source': 'blkc.pdf', 'page': 92}
"
"page_content='80\u2003●   World Bank ECA Economic Update May 2018\n67 MPO  Apr 18  improved collection of VAT and excises. \nSpending increased by close to 12 percent \non the back of tripled capital budget. On \nthe other hand, wage reduction and abol-\nishment of the mothers ’ benefit from the \nsecond half of 2017 helped decelerate \ngrowth of the wage bill and social trans-\nfers. Consequently, general government \ndeficit increased from 3.1 percent in 2016 \nto an estimated 5.2 percent of GDP in \n2017. Public debt including guarantees \nincreased to 74 percent of GDP by end -\n2017. After the initial fiscal consolidation \nefforts, outlook on the credit rating of B+ \nimproved to stable. This has allowed easi-\ner access to capital market for a regular \nrefinancing of liabilities coming due in \n2018 and 2019 -2021.  \n \n \nOutlook \n \nThe economy is expected to grow by an \naverage of 2.5 percent annually in 2018 -20 \non the back of public investments and \npersonal consumption. While growth of investment will slow down as the high-\nway construction gets to its closure, its \ncontribution to growth will remain strong \nin 2018. Current imbalances are likely to \nstay high given the import dependence of \nthe current growth pattern.  \nInflation is projected at 2.5 percent in the \nperiod 2018 -19, as the VAT rate rise adds \nto the current inflation growth in 2018. \nFiscal deficit is projected to be brought \ndown to 3.2 percent in 2018, and slowly \nreaching surplus by 2020.  \nWith the potential poverty impact of fiscal \nconsolidation measures, in 2018 poverty is \nexpected to slightly increase as mothers ’ \nbenefits phase out. Poverty is likely to \nresume its decline in 2019 -20 to an esti-\nmated 4.4 percent by 2020, subject to im-\nprovements in private sector employment \nand earnings.  \n \n \nRisks and challenges  \n \nThe positive economic outlook faces high, \nbut moderating risks. As the highway construction is completed in 2019, growth \nwill slow unless productivity gains and \nnew private sector investments realize. \nLarge fiscal deficit and growing public \ndebt call for the decisive implementation \nof the recently adopted fiscal consolida-\ntion program. The fiscal framework that \naims to have a balanced budget by 2019, \nfrom over 5 percent deficit in 2017, will \nrequire credible spending consolidation in \nwage bill, social transfers, and operational \ncosts to put public deficit and debt on a \nsustainable trajectory.  \nExternal imbalances are still high, adding \nto an already high external vulnerability. \nEnhancing policy predictability and accel-\nerating the pace of structural reforms, \nwould be needed for their moderation.  \nReducing unemployment, especially for \nyouth and mitigating short -term poverty \nand social impacts of fiscal consolidation \nand facilitating access to employment \nneed to be an important part of the poli-\ncy agenda.  \nTABLE 2  Montenegro / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.4 2.9 4.3 2.8 2.5 2.1\nPrivate Consumption 2.2 5.4 4.2 2.1 3.3 3.6\nGovernment Consumption 1.9 0.8 1.3 -3.6 -1.9 1.9\nGross Fixed Capital Investment 11.9 27.5 15.8 9.0 1.7 -3.2\nExports, Goods and Services 5.7 6.2 4.1 4.3 5.5 6.1\nImports, Goods and Services 4.4 15.0 8.2 4.0 3.5 3.3\nReal GDP growth, at constant factor prices 3.8 2.9 4.3 2.8 2.5 2.1\nAgriculture 2.1 3.9 5.1 2.1 2.1 2.1\nIndustry 3.3 25.8 -2.2 3.0 3.2 3.5\nServices 4.8 -20.6 14.6 2.8 1.7 0.2\nInflation (Consumer Price Index) 1.5 -0.3 2.4 3.1 2.1 1.6\nCurrent Account Balance (% of GDP) -13.2 -18.1 -18.9 -18.5 -17.9 -17.3\nFinancial and Capital Account (% of GDP) 9.3 12.4 15.5 15.2 14.8 14.3\nNet Foreign Direct Investment (% of GDP) 16.9 9.4 11.4 11.3 10.9 9.3\nFiscal Balance (% of GDP) -7.3 -3.1 -5.4 -3.1 -0.6 2.2\nDebt (% of GDP) 66.2 64.4 66.3 70.5 68.1 63.3\nPrimary Balance (% of GDP) -4.9 -1.0 -3.0 -0.8 1.8 4.6\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b4.6 4.2 4.4 4.8 4.6 4.4\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 2009-HBS and 201 4-HBS. Actual data: 201 4. Nowcast: 201 5 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using point-to-point elasticity (2009-201 4) with pass-through = 0.4 based on private consumption per capita in constant LCU, with estimated impact of fiscal \nconsolidation. ' metadata={'source': 'blkc.pdf', 'page': 93}
"
"page_content='Selected Country Pages ●\u200381\n68 MPO  Apr 18  Recent developments  \n \nBooming domestic demand boosted real \nGDP growth to 4.6 percent in 2017, from \n2.9 percent in 2016. Powered by an ex-\ntremely strong labor market and social \nspending (mainly for the Family 500+ pro-\ngram), private consumption grew by 4.8 \npercent, adding 2.8 percentage points to \nGDP growth.  \nThe biggest positive development in 2017 \nwas a 5.4 percent expansion in gross fixed \ninvestment. This was a remarkable recov-\nery from a 7.9 percent drop in 2016 caused \nby a cyclical fall in EU -funded projects, \nreduced FDI inflow, and elevated political \nrisk. The rebound in investment resulted \nfrom the resumption of EU funding and \nremoval of a source of instability in the \nbanking sector related to the conversion of \nforeign -currency -denominated mortgages \nto local currency.  \nThe renewed investment helped to \nboost import demand in the second half \nof the year. Hence, despite heavy de-\nmand for Poland ’s exports from outside \nof the euro zone, net exports contribut-\ned just 0.1 percentage points to overall \nGDP growth.  \nLabor market conditions have tightened \nfurther. The ratio of vacancies to unem-\nployment has shot past 10 percent; in \nfour years the number of low -skilled un-\nemployed has been cut in half and now \naccounts for just 30 percent of unemploy-\nment; and, for the first time since the \ntransition, long -term unemployment \ndipped below 500,000. Employment rates  continued to rise and labor shortages have \nstarted to affect business activity.  \nAfter two years of persistent deflation, \nconsumer prices rose an average of 2 per-\ncent in 2017, mainly because of higher \nglobal commodity prices, food inflation \nand firmer domestic demand. At 2.1 per-\ncent year on year in December 2017, infla-\ntion is still below the National Bank of \nPoland (NBP) medium -term target of 2.5 \npercent. Demand -side price pressures are \nmodest so far, with core inflation just 0.9 \npercent year on year in December. Real \nmonetary conditions eased considerably \nin 2017, despite nominal appreciation of \nthe zloty. Since March 2015 the NBP Mon-\netary Policy Council has kept its bench-\nmark policy rate unchanged at 1.5 percent. \nThe zloty continued to be somewhat vola-\ntile in 2017 but strengthened overall \nagainst the euro and the US dollar.  \nIt is estimated that poverty and shared \nprosperity indicators continued to im-\nprove in 2017 in light of surging private \nconsumption supported by a tight labor \nmarket and government social pro-\ngrams. Poverty is expected to have de-\nclined from 2.7 percent in 2015 to 1.3 \npercent in 2017 using the $5.50/day 2011 \nPPP poverty line.  \nMore efficient tax collection helped the gov-\nernment to realize its ambitious 2017 spend-\ning plans while running the tightest budget \nexecution on record. This was possible be-\ncause more was collected in taxes, mostly \nfrom indirect taxes (due to robust private \nconsumption and improved tax compli-\nance) but also from one -off non -tax reve-\nnues, such as higher NBP profits. In 2016 \nthe general government deficit narrowed  to POLAND  \nSources: MFMod, World Bank.  Sources: World Bank (see notes to Table 2).  Real GDP growth picked up to 4.6 per-\ncent in 2017, driven primarily by private \nconsumption. A recovery in investment \nin the end of 2017 promises continued \ngrowth. The main risks to medium term \ngrowth relate to labor shortages and lower \nallocation of EU funds for Poland. Pov-\nerty will continue to decline in line with \ngrowing disposable incomes. Although \nthe general deficit is at a record low, \nstructural weakening is possible. Fiscal \nadjustment may constitute a challenge as \nPoland prepares for elections.  Table 1 2017\nPopulation, million 37.9\nGDP, current US$ billion 504.7\nGDP per capita, current US$ 1 3306\nInternational poverty rate ($1 .9)a0.4\nLower middle-income poverty rate ($3.2)a0.8\nUpper middle-income poverty rate ($5.5)a2.6\nGini coefficienta3 1. 8\nLife expectancy at birth, yearsb78.2\n(a) M ost  recent  value (2015), 2011 PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\nFIGURE 1 Poland / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2 Poland / Actual and projected poverty rates and \nreal private consumption per capita  \n05000100001500020000250003000035000\n02468101214\n2004 2006 2008 2010 2012 2014 2016 2018 2020\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)\n3.65.0\n1.61.43.33.8\n2.94.6\n4.2\n3.73.5\n-2.0-1.00.01.02.03.04.05.06.0\n2010 2011 2012 2013 2014 2015 2016 2017e 2018f 2019f 2020f\nFinal consumption Gross Fixed Investment\nChange in inventories Net exports\nStatistical Discrepancy GDP growthPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 94}
"
"page_content=""82\u2003●   World Bank ECA Economic Update May 2018\n69 MPO  Apr 18  a 1.6 percent of GDP, a record low, after \nhitting 2.5 percent in 2016.  \nDespite the zloty appreciating against the \neuro and heightened domestic demand, \nthe strong performance of exports man-\naged in 2017 to lift the current account to a \nsurplus of 0.1 percent of GDP.  \n \n \nOutlook \n \nIn light of the positive investment results \nin 2017 and improved growth prospects \nin the EU, the previous projection of real \nGDP growth for Poland has been revised \nupward by 0.2 percentage points: again, \ndriven by both private consumption and \ninvestment; economic growth may reach \n4.2 percent in 2018 and 3.7 percent in \n2019. Household spending will benefit \nf r o m  g r o w t h  i n  t h e  r e a l  w a g e  b i l l  o f  \nmore than 8 percent in 2018 -19, plus \nhigher state spending on pensions and \nsocial benefits. Rising real incomes are \nexpected to lead to further declines in \npoverty. The $5.50/ day 2011 PPP pov-\nerty rate is projected to decline to 1.2 \npercent in 2018 and further to 1.0 percent \nby 2020.  \nPublic spending is likely to be strong, \nsupported by EU funds and the political cycle leading up to the elections. High \ncorporate profitability and EU funds \nshould support private investment. Ex-\nports and industrial production are like-\nly to benefit from stronger European \ndemand in 2018- 19, but imports may \noutpace both.  \nThe general government deficit is set to \nwiden again in 2018 to about 2 percent of \nGDP —but still safely below the 3 per-\ncent EU threshold. Spending is expected \nto rise due to higher government con-\nsumption, local pre -elections investment, \nand the decision to roll back the planned \nincreases of the retirement age. The reve-\nnue side will also contribute to the in-\ncreasing budget gap: non -tax revenues \ncould be lower this year due to less NBP \nprofit, and the change in retirement age \nwill depress social contributions from \nthe cohort eligible for earlier retirement. \nPublic debt will stabilize around 51 per-\ncent of GDP in 2018 -19, but the structur-\nal budget deficit will widen.  \nThe current -account is likely to come \nback to a small deficit in 2018 as robust \nhousehold consumption, higher invest-\nment, and a firming in global commodity \nmarkets push up the volume and cost of \nimports. Nonetheless, the current -\naccount deficit will remain modest in \n2018 -20 at less than 0.5 percent of GDP.   \nRisks and challenges  \n \nThere are three main clouds on Poland ’s \neconomic horizon: (i) Structural weaken-\ning in public finance; (ii) a shortage of la-\nbor; and (iii) EU sanctions against Poland \nfor not respecting EU democratic values. \nFirst, the government's spending plans, \nwith increases in social benefits and public \ninvestment, and the reduction in the statu-\ntory retirement age, could erode the struc-\nture of public finances. Strengthening the \nfiscal position might be difficult given lo-\ncal, presidential, and parliamentary elec-\ntions all coming up within 18 months. Sec-\nond, the shortage of labor may soon weigh \nheavily on GDP growth, and would be \nexacerbated by retirement of a greater part \nof the workforce. Too few workers could \nnegatively affect production capacities and \ninvestment. This would heighten pressure \non the government to encourage immigra-\ntion, which could come primarily from \nUkraine. Third, the government's failure to \naddress rule of law issues and a vote by \nthe European Parliament in late 2017 to \ninitiate Article 7 proceedings against Po-\nland may lead the EU to impose sanctions, \npossibly lowering the EU fund allocation \nfor 2021–27.  \nTABLE 2 Poland / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.8 2.9 4.6 4.2 3.7 3.5\nPrivate Consumption 3.0 3.9 4.8 4.0 3.7 3.3\nGovernment Consumption 2.4 1.7 3.1 3.7 3.0 3.2\nGross Fixed Capital Investment 6.1 -7.9 5.4 6.7 6.4 6.1\nExports, Goods and Services 7.7 8.8 7.1 6.2 5.2 5.4\nImports, Goods and Services 6.6 7.9 7.3 6.7 5.9 5.9\nReal GDP growth, at constant factor prices 3.7 2.8 4.2 4.3 3.7 3.5\nAgriculture -8.5 2.8 1.8 2.2 2.2 2.2\nIndustry 3.8 3.6 4.5 4.1 4.1 4.1\nServices 4.1 2.6 4.2 4.4 3.7 3.3\nInflation (Consumer Price Index) -1.0 -0.6 2.0 2.3 2.5 2.5\nCurrent Account Balance (% of GDP) -0.5 -0.3 0.1 -0.3 -0.3 -0.1\nFinancial and Capital Account (% of GDP) 2.2 5.4 2.9 2.4 1.9 1.8\nNet Foreign Direct Investment (% of GDP) 1.9 1.1 1.0 1.5 1.6 1.5\nFiscal Balance (% of GDP) -2.6 -2.5 -1.6 -2.1 -2.6 -2.9\nDebt (% of GDP) 51.1 54.1 53.1 51.7 51.0 50.7\nPrimary Balance (% of GDP) -0.9 -0.8 0.2 -0.3 -0.8 -1.1\nInternational poverty rate ($1.9 in 2011 PPP)a,b0.4 0.4 0.3 0.3 0.3 0.3\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b0.8 0.6 0.6 0.5 0.5 0"" metadata={'source': 'blkc.pdf', 'page': 95}
"
"page_content=' 0.4 0.3 0.3 0.3 0.3\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b0.8 0.6 0.6 0.5 0.5 0.5\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b2.6 1.7 1.3 1.2 1.1 1.0\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on EU-SILC harmonization, using 2004-EU-SILC and 201 5-EU-SILC. Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using point-to-point elasticity (2004-201 5)   with pass-through = 1  based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 95}
"
"page_content='Selected Country Pages ●\u200383\n70 MPO  Apr 18  Recent developments  \n \nPrivate consumption (+8.8 percent) was \nthe main driver of growth in 2017, fueled \nby tax cuts; hikes in minimum and public -\nsector wages; and increases in pensions \nthat boosted disposable incomes. With a \n5.4 percent increase, investment also \nshowed signs of recovery. Exports grew \nstrongly (+9.5 percent), but were outpaced \nby imports (+11.1 percent). On the produc-\ntion side, ICT (+10.9 percent) and industry \n(+8 percent) were the main drivers of \ngrowth, with agriculture (+18.3 percent) \nperforming better than expected, facilitat-\ned by good weather conditions.  \nFiscal policy was pro -cyclical in 2017. In-\ncreases in public wages and pensions led \nto a 22 percent hike in the compensation \nof employees and a 15.5 percent increase \nin current spending, outpacing fiscal reve-\nnue growth (+12.5 percent). The deficit, \nhowever, remained below 3 percent of \nGDP because of the decline in public in-\nvestment ( -9.5 percent), including low \nutilization of the EU funds.  \nThe expansionary fiscal policy led to an \noverheating of the economy, contributing \nalso to inflation to 4.7 percent in February \n2018 – above the upper limit of the Na-\ntional Bank of Romania (NBR) band. In \nresponse, the NBR board increased the \npolicy rate by 25 ppts (to 2.25 percent) in \ntwo consecutive meetings in early 2018. \nThis came amid robust private sector cred-\nit growth (up 5.6 percent as of December \n2017) and concerns over the fiscal stance. \nThe current account deficit deteriorated to 3.4 percent of GDP at end -2017 reflecting \nthe strong imports growth.  \nThe labor market benefited from the eco-\nnomic growth, with unemployment fall-\ning to 4.6 percent as of December 2017 – a \n25-year low – and real wages increasing \nby 8.1 percent. Nonetheless, the low em-\nployment rate of 65.3 in Q3 2017, down 0.2 \npercentage points from the previous quar-\nter, reflects persistent structural rigidities \nin the labor market.  \nIn line with economic growth, a boost in \nprivate consumption and labor market \nimprovements, the poverty rate corre-\nsponding to upper middle-income coun-\ntries (using the $5.50/day 2011 PPP pov-\nerty line) is estimated to have declined \nfrom 26.1 percent in 2015 to 23.6 percent \nin 2017, continuing its downward path \nsince the peak of the crisis in 2011 (31.7 \npercent). High poverty incidence contin-\nues to be associated with reliance on agri-\nculture and in rural/marginalized areas. \nEmployment gains in sectors that employ \na large share of low -skilled people have \nhelped improve the incomes of the bottom \n40 and prevented a further increase in the \nGini index in 2015.  \n \n \nOutlook  \n \nThe economy is projected to continue to \ngrow above potential in 2018. GDP will \nlikely expand by around 5.1 percent in \n2018, driven by the fiscal stimulus and \naided by a resurgent EU. Continued \ngrowth in consumption is expected to \nwiden the current account deficit to 4.3 ROMANIA  \nFIGURE 1 Romania / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2 Romania / Actual and projected poverty rates and \nreal GDP per capita  \nSources: World Bank, Romanian National Statistical Institute.  Sources: World Bank. Notes: see Table 2.  Private consumption propelled growth to 7 \npercent in 2017. Growth was supported by \nan expansionary fiscal policy, that coincid-\ned with an increase in exports to a resur-\ngent EU. Improvements in the labor mar-\nket contributed to poverty reduction. \nGrowth will remain solid in 2018, but \nmedium-term risks to the outlook have \nincreased. Pressures on the budget deficit, \narising from an increase in recurrent \nspending, will continue in 2018. To im-\nprove the quality of growth, renewed atten-\ntion should be given to public investment .  Table 1 2017\nPopulation, million 19 . 6\nGDP, current US$ billion 206.9\nGDP per capita, current US$ 1 0563\nUpper middle-income poverty rate ($5.5)a25.6\nGini coefficienta35.9\nSchool enrollment, primary (% gross)b89.8\nLife expectancy at birth, yearsb75.0\n(a) M ost  recent  value (2015), 2011 PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) Most recent WDI value (201 4).\n010002000300040005000600070008000900010000\n051015202530354045\n2006 2008 2010 2012 2014 2016 2018 2020\nUpper middle-income pov. rate GDP pcPoverty rate (%) GDP per capita (constant LCU)\n-6-4-2024681012\n2014 2015 2016 2017e 2018f 2019f 2020f\nNet exports Private Consumption\nGross fixed capital formation Public Consumption\nGDPPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 96}
"
"page_content='84\u2003●   World Bank ECA Economic Update May 2018\n71 MPO  Apr 18  percent in 2018. Inflation is set to peak at \naround 5 percent in mid -2018 reflecting \nthe excess domestic demand and the fad-\ning out of the base effect of the tax cuts. \nThe NBR anticipates a gradual subsequent \ndecline in inflation towards 3.5 percent at \nthe end of 2018, due to a slowdown in \nprivate consumption dynamics as no fur-\nther fiscal boost to households ’ real dis-\nposable income is envisioned.  \nThe fiscal measures passed in 2017 have \nput pressure on the consolidated budget \ndeficit. In the absence of corrective \nmeasures, the fiscal deficit is projected to \nreach 3.3 percent of GDP in 2018, which \nwould place Romania on a trajectory to re -\nentering the Excessive Deficit Procedure \nof the EU. However, the government has \nstated that, like in 2017, it would be ready \nto promote adjustment measures should \nthe deficit threaten the 3 percent ceiling. \nThe widening of the fiscal deficit would \npush public debt to 46.8 percent of GDP at \nend-2020, from 44.5 percent in 2017. De-\nspite this, public debt remains one of the \nlowest in the EU.  \nStrong private consumption aided by the \nexpansionary fiscal policy and continued growth in real wages, partly supported by \nminimum wage increases, should boost \nreal incomes and lead to further declines \nin poverty incidence. Moreover, the \nplanned introduction of the Minimum \nSocial Inclusion Income program (MSII) is \nexpected to improve targeting and in-\ncrease the level of benefits for the most \nvulnerable. The $5.50/day 2011 PPP pov-\nerty rate is projected to decline to 22.6 \npercent in 2018, 21.7 percent in 2019, and \n20.9 percent in 2020.  \n \n \nRisks and challenges  \n \nAccumulating fiscal pressures and excess \ndomestic demand limit the space for poli-\ncy-makers to maneuver in 2018 and be-\nyond. The current account deficit is on the \nrise, and inflationary pressures persist. \nThese developments leave the Romanian \neconomy vulnerable to exogenous shocks. \nThe authorities may need to take correc-\ntive measures to keep the deficit below 3 \npercent of GDP in 2018 through good \nquality fiscal adjustment. Externally, a likely tapering of the quantitative easing \nin the Eurozone and higher global interest \nrates may lead to a repositioning in inves-\ntor sentiment towards the emerging econ-\nomies and to higher refinancing costs, \nfurther reinforcing fiscal pressures. On the \nupside, a better-than -projected economic \nperformance of the Eurozone will act as a \ndriver of growth in the broader EU area, \nincluding Romania. \nRenewed efforts are needed to improve \nlabor participation and generate broad -\nbased employment, as unemployment \nremains high among youth and the low -\nskilled, and to ensure that all Romanians \nobtain access to high quality public ser-\nvices. Gradually, the focus of the fiscal \npolicy should be rebalanced away from \nboosting consumption towards mobiliz-\ning investment, including from the EU \nfunds, to support a sustainable EU con-\nvergence path and social inclusion. Re-\nforms in public administration and \nSOEs, increased regulatory predictabil-\nity, as well as policies to address the \nlarge social and spatial discrepancies \nshould be on the agenda of priorities of \nthe government.  \nTABLE 2  Romania / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 3.9 4.8 7.0 5.1 4.5 4.1\nPrivate Consumption 5.7 7.1 8.8 8.1 7.2 6.6\nGovernment Consumption -0.8 4.8 6.2 5.9 5.4 5.1\nGross Fixed Capital Investment 7.2 0.8 5.4 6.2 5.1 4.8\nExports, Goods and Services 5.3 7.6 9.5 8.3 7.1 7.0\nImports, Goods and Services 9.4 9.7 11.1 9.7 8.4 8.1\nReal GDP growth, at constant factor prices 3.6 4.6 7.0 5.1 4.5 4.1\nAgriculture -11.1 -0.8 18.3 3.0 2.1 2.0\nIndustry 6.1 0.4 8.0 6.1 5.2 4.6\nServices 4.3 8.1 5.0 4.8 4.4 4.1\nInflation (Consumer Price Index) -0.6 -1.5 1.3 3.7 3.2 3.0\nCurrent Account Balance (% of GDP) -1.2 -2.6 -3.4 -4.3 -4.7 -4.9\nFinancial and Capital Account (% of GDP) 1.4 2.7 3.5 4.4 4.8 5.0\nNet Foreign Direct Investment (% of GDP) 1.8 1.8 2.5 3.1 3.0 3.0\nFiscal Balance (% of GDP) -1.5 -2.7 -2.9 -3.3 -3.0 -3.0\nDebt (% of GDP) 39.4 44.5 44.5 45.6 46.3 46.8\nPrimary Balance (% of GDP) -0.1 -1.3 -1.5 -1.9 -1.5 -1.4\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b,c26.1 25.0 23.6 22.6 21.7 20.9\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on EU-SILC harmonization, using 2007-EU-SILC,  201 2-EU-SILC, and  201 5-EU-SILC.\n(b) Projection using annualized elasticity (2007-201 2)   with pass-through = 0.7 based on GDP per capita in constant LCU. \n(c) Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.' metadata={'source': 'blkc.pdf', 'page': 97}
"
"page_content='Selected Country Pages ●\u200385\n72 MPO  Apr 18  Recent developments  \n \nIn 2017, Russia ’s economy emerged from \nrecession to recovery, with the GDP ex-\npanding by 1.5 percent year -on-year. \nDeepening macro -economic stability, \nfirming energy prices and a recovering \nglobal economy contributed to the return \nto growth. Non -tradable sectors, primari-\nly transportation, retail and wholesale \ntrade, contributed 1.4 percentage points \n(pp) of the 1.5 percent total. Mineral -\nresource extraction increased by 1.4 per-\ncent, year -on-year, as oil production \nflattened after Russia joined the OPEC+ \nagreement. Growth in manufacturing was \nsubdued, partly due to lower public \nspending on defense.  \nDomestic demand was the main engine of \ngrowth. Both household and investment \ndemand expanded. Private consumption, \nsupported by growing real wages and \npensions and by a revival of credit to \nhouseholds, contributed 1.8 pp to growth. \nFixed -capital investment in mineral re-\nsource extraction, transportation, and in \nthe financial sector, mainly supported \ninvestment growth. However, growth in \nmanufacturing was not followed by fixed \ncapital investment growth. While robust \nexternal demand supported the country ’s \nexports, a major increase in imports result-\ned in a negative contribution of net ex-\nports to GDP growth.  \nThe Central Bank of Russia (CBR) contin-\nued to clean up the banking sector: 16 \nbanks had their licenses revoked due to \nnon-compliance with regulations, and another systemically important private \nbank (Promsvyazbank, 1.6 percent share \nby assets) was bailed out by CBR. That \nmade it the third bank to be rescued un-\nder a new resolution mechanism. As a \nresult, the share of state -controlled banks \nin the combined assets of the Russian \nbanking system has increased to 66.2 per-\ncent, most of them under CBR ownership \n(45 percent of assets). This may affect the \nlevel playing -field and pose a conflict of \ninterest between the CBR ’s regulatory and \nownership functions.  \nIn 2017, credit grew both in retail and cor-\nporate segments (13.3 percent and 3.8 per-\ncent, year -on-year, respectively). The \nshare of non -performing loans remained \nstable —but high —at 10 percent as of Janu-\nary 1, 2018, and the overall banking sector \ncapital adequacy ratio was also stable at \n12.1 percent. However, compared to other \nemerging markets, both figures point to \nunderlying vulnerabilities in Russia.  As of \nJanuary 1, 2018, profitability in the bank-\ning sector declined to 2016 levels, with the \nreturn on assets and equity at 1 percent \nand 8.3 percent, respectively.  \nThe CBR continued its gradual approach \nto monetary easing aimed at anchoring \ninflation expectations. A combination of a \nstronger ruble and a bumper harvest, and \nrelatively tight monetary and fiscal policy, \nhelped reach record -low inflation levels. \nIn 2017, consumer inflation reached 3.7 \npercent (year -on-year, 12-month average), \ndown from 7.1 percent in 2016.  \nIn 2017, the current account surplus \nreached US$40.2 billion, strengthened by \nan improved trade balance, and was mir-\nrored by higher net capital outflows, RUSSIAN   \nFEDERATION  \nFIGURE 1  Russian Federation / Real GDP growth and   \ncontributions to real GDP growth  FIGURE 2  Russian Federation / Actual and projected    \npoverty rates and real private consumption per capita  \nSources: Russia Statistical Authorities and World Bank staff Calculations.  Sources: World Bank (see notes to Table 2).  Russia’s economy has emerged from reces-\nsion to recovery, supported by deepening \nmacro-economic stability, firming energy \nprices and global recovery. Growth is pro-\njected to settle between 1.7 and 1.8 percent \nin 2018 — 2020. However, many house-\nholds remain close to the poverty line, and \nmany individuals lack formal jobs. Priori-\nty policy objectives include limiting the \nrole of the state in the economy, increasing \ninvestment, and promoting fair competi-\ntion, as well as measures to improve in-\nvestments in human capital.  \n050000100000150000200000250000300000\n051015202530\n2001 2003 2005 2007 2009 2011 2013 2015 2017 2019\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)Table 1 2017\nGDP, current US$ billion 1 578.6\nGDP per capita, current US$ 1 0771\nInternational poverty rate ($1 .9)a0.0\nLower middle-income poverty rate ($3.2)a0.3\nUpper middle-income poverty rate ($5.5)a2.7\nGini coefficienta37.7\nSchool enrollment, primary (% gross)b1 00.5\nLife expectancy at birth, yearsb70.9\n(a) M ost  recent  value (2015), 2011 PPPs.WDI, M PO, Rosst at , and Bank of  Russia.\nNot es:\n(b) M ost  recent  WDI value (2015).\n-10-8-6-4-202468\n2013 2014 2015 2016 2017Percent, percentage points\nConsumption Gross fixed capital formation\nChange in inventories Export\nImport Stat error\nGDP growth' metadata={'source': 'blkc.pdf', 'page': 98}
"
"page_content='86\u2003●   World Bank ECA Economic Update May 2018\n73 MPO  Apr 18  mainly from the banking sector, which \ncontinued its external -debt repayments. \nInternational reserves increased by \nUS$15.4 billion mainly on the back of cur-\nrency purchases conducted by the CBR on \nbehalf of Ministry of Finance.  \nThe general government fiscal stance im-\nproved in 2017, aided by higher oil prices, \na recovering economy, an improved tax \nadministration, and lower expenditures. \nThe general government primary budget \ndeficit narrowed from 2.8 percent of GDP \nin 2016 to 0.6 percent of GDP in 2017. Rus-\nsia’s new fiscal rule, expected to reduce \nthe influence of external volatility on the \nbudget and the real exchange rate, comes \ninto effect in 2019 and will require fiscal \nconsolidation in 2018 -20. Combined with \nthe move towards inflation -targeting, it \nunderscores the Russian authorities ’ com-\nmitment to enhance macro -stability.  \nUnemployment declined further in 2017 \nto a current 5.2 percent, while real wages \nand pensions increased on the back of \nlow inflation. Wage growth was highest \nin the tradable sector and above the rate \nof inflation in the non -tradable and pub-\nlic sectors. However, growth in real dis-\nposable incomes remained negative, \ndriven by a decline in income from other \nsources, including some not directly reg-\nistered by statistics.  The poverty rate under the national defini-\ntion (population share with income per \ncapita below subsistence minimum level of \n9,828 rubles per month in 2016) increased \nmarginally from 13.3 percent in 2015 to \n13.4 percent in 2016. The international \nmoderate poverty rate (population share \nwith per capita consumption below 5.5 \nUSD/day in 2011 PPP) increased from 2.7 \npercent in 2015 to an estimated 3.3 percent \nin 2016, before decreasing to an estimated \n2.9 percent in 2017, as wages and pensions \nincreased. The extreme poverty rate re-\nmained marginal, below one percent.  \n \n \nOutlook  \n \nAmid the recovered oil prices, macro sta-\nbilization and improved business and \nconsumer confidence, we expect Russia ’s \neconomy to keep growing. With the ex-\npected price of oil remaining robust at \nUS$58, 59 and 60/bbl in 2018, 2019, and \n2020 respectively, our growth estimates \nstand at 1.7 percent in 2018, 1.8 percent in \n2019 and 1.8 percent in 2020.  \nThe moderate poverty rate is expected to \nfall in 2018 and further through 2019. As \npublic spending is constrained, labor in-\ncome will become the most important  driver of income growth for the bottom 40 \npercent. Wage growth and pension indexa-\ntion at the inflation level, will support dis-\nposable incomes and contribute to a gradual \ndecline in the poverty rate. However, many \nhouseholds remain close to the poverty line, \nand many individuals lack formal jobs.   \n \n \nRisks and challenges  \n \nExternal downside risks stem from a sig-\nnificant drop in oil prices, a sudden tight-\nening of global financial conditions and an \nexpansion of sanctions.  \nThe performance of the banking sector is \nexpected to remain stable. However, the \nbailout of three large private banks points \nto the continuing fragility in the sector, and \nthe quality of capital and assets, and related\n-party lending will likely remain a concern.  \nWeak productivity growth and a shrinking \nlabor force will constrain GDP growth. \nPriority policy objectives include limiting \nthe role of the state in the economy, in-\ncreasing investment, and promoting fair \ncompetition. Also, measures to improve \nthe quality of and access to health and \neducation services will be needed to pro-\nmote longer and more productive work-\ning lives.  \nTABLE 2  Russian Federation / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices -2.5 -0.2 1.5 1.7 1.8 1.8\nPrivate Consumption -9.4 -2.8 3.4 3.1 2.5 2.5\nGovernment Consumption -3.1 0.9 -0.9 -0.6 -0.5 0.0\nGross Fixed Capital Investment -11.2 0.8 3.6 2.7 2.7 2.7\nExports, Goods and Services 3.7 3.2 5.4 2.0 3.0 3.0\nImports, Goods and Services -25.1 -3.6 17.0 7.0 4.0 4.0\nReal GDP growth, at constant factor prices -1.9 0.0 1.6 1.7 1.8 1.8\nAgriculture 2.5 2.9 1.2 1.7 1.7 1.7\nIndustry -2.4 0.4 0.6 1.1 1.6 1.6\nServices -2.0 -0.5 2.2 2.0 1.9 1.9\nInflation (Consumer Price Index) 15.5 7.1 3.7 3.2 4.0 4.0\nCurrent Account Balance (% of GDP) 5.0 2.0 2.5 2.9 2.8 2.7\nFinancial and Capital Account (% of GDP) -5.2 -1.6 -2.8 -2.9 -2.8 -2.7\nNet Foreign Direct Investment (% of GDP) -1.1 0.8 -0.4 -0.5 -0.5 -0.5\nFiscal Balance (% of GDP)a-3.4 -3.5 -1.6 -0.3 0.7 0.7\nDebt (% of GDP) 15.9 15.7 15.1 15.6 16.1 16.3\nPrimary Balance (% of GDP)a-2.6 -2.6 -0.7 0.6 1.6 1.6\nInternational poverty rate ($1.9 in 2011 PPP)b,c0.0 0.0 0.0 0.0 0.0 0.0\nLower middle-income poverty rate ($3.2 in 2011 PPP)b,c0.3 0.3 0.3 0.3 0.2 0.2\nUpper middle-income' metadata={'source': 'blkc.pdf', 'page': 99}
"
"page_content='0 0.0 0.0\nLower middle-income poverty rate ($3.2 in 2011 PPP)b,c0.3 0.3 0.3 0.3 0.2 0.2\nUpper middle-income poverty rate ($5.5 in 2011 PPP)b,c2.7 3.3 2.9 2.6 2.4 2.1\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Fiscal and Primary Balance refer to general government balances.\n(b) Calculations based on ECAPOV harmonization, using 201 5-HBS. Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.\n(c) Projection using neutral distribution (201 5) with pass-through = 1   based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 99}
"
"page_content='Selected Country Pages ●\u200387\n74 MPO  Apr 18  Recent developments  \n \nExternal, one -off factors, such as the dis-\nruption of energy production in early \n2017 and a drought which affected agri-\nculture, coupled with the slow imple-\nmentation of the government ’s invest-\nment program, led to slower than previ-\nously -projected growth in 2017. Based on \npreliminary assessments from the nation-\nal authorities, the economy grew by 1.9 \npercent y/y, compared to previously pro-\njected 2.3 percent. Widening external \ndeficit, increase in imports and recovery \nin consumption are driving a shift from \npositive to negative contribution of net -\nexports to growth.  \nLooking at sectors of the economy, both \nservices and industry performed well in \n2017, growing by 2.2 and 3.9 percent (in \nreal terms), respectively. Construction \nsector started to recover as well (growing \nat 1.8 percent y/y) on the back of recent \nimprovements in issuing construction \npermits and lower financing costs as inter-\nest rates fell in 2017. On the other hand, \nagriculture sector output is estimated to \nhave fallen by 9.5 percent (in real terms), \ncompared to 2016, due to the drought.  \nGrowth in industry and services contribut-\ned to steady labor market performance in \n2017, which improved over 2016. The activ-\nity rate increased to 54 percent in 2017 \n(annual average) while the employment \nrate stood at 46.7 percent (compare to 45.2 \npercent in 2016), even with unemployment \nedging up only slightly in the fourth quar-\nter of 2017, to reach 14.7 percent.  Average salaries increased by 3.9 percent in nomi-\nnal terms in 2017 compared to the year \nbefore, mainly driven by growth of wages \nin the private sector (increase of 4.5 per-\ncent). The average pension was 2.4 per-\ncent higher than in 2016.  \nSince employment and labor income play \na strong role in influencing welfare of the \npoor and vulnerable, poverty (living on \nincome under $5.5/day in 2011PPP terms, \nthe standardized middle-income -country \npoverty line) is estimated to have declined \nfrom 23.8 percent in 2014, to 23.1 percent \nin 2016, to 22.4 percent in 2017. The in-\ncrease of salaries and public sector pen-\nsions helped household budgets to recov-\ner some of the losses from previous fiscal \nconsolidation measures. The energy bill \ndiscount program for vulnerable popula-\ntions was expanded in 2017 to mitigate the \nimpact of increases in electricity tariffs, as \npart of fiscal reforms. However, a decline \nin agriculture output in 2017 is likely to \nhave adverse impacts on rural poverty \nand slow the pace of poverty reduction \noverall. Also, food prices increased (up by \n4.1 percent through December) more than \nthe average CPI, in particular over the \nsummer months, and likely affecting the \npoor disproportionately. Overall inflation \nreached 3 percent by year -end.   \nA good budget performance continued \nthroughout 2017 and Serbia ended up \nwith a surplus of 1.2 percent of GDP in \n2017. As a result of lower financing needs, \npublic debt declined to around 62.5 per-\ncent of GDP year end, compared to 74 \npercent at the end of 2016. Part of the rea-\nson for improved budget performance lies \nin under -execution of the capital budget Table 1 2017\nPopulation, million 7.0\nGDP, current US$ billion 4 1. 2\nGDP per capita, current US$ 5860\nInternational poverty rate ($1 .9)a5.6\nLower middle-income poverty rate ($3.2)a11. 1\nUpper middle-income poverty rate ($5.5)a23.6\nGini coefficienta39.7\nSchool enrollment, primary (% gross)b10 1. 3\nLife expectancy at birth, yearsb75.5\n(a) M ost  recent  value (2015), 2011 PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).SERBIA  \nFIGURE 1  Serbia / General government balance (% of GDP)  FIGURE 2  Serbia / Actual and projected poverty rates and \nreal private consumption per capita  \nSources: WB Staff calculations based on the Ministry of Finance and the Statisti-\ncal office data.  Sources: World Bank. Notes see Table 2.  Despite a slowdown in economic growth \n(GDP growth, now estimated at 1.9 per-\ncent y/y in 2017), labor market perfor-\nmance improved and unemployment \nreached 13.5 percent. The state of public \nfinances improved significantly and Ser-\nbia showed a budget surplus in 2017. \nPoverty is estimated to have declined \nfrom 23.8 percent in 2014 to 23.1 per-\ncent in 2016. Over the medium -term, \ngrowth is expected to reach 3 -4 percent, \nalthough risks remain, especially from \npolicy reversals related to previous fiscal \nstability program.  \n300000320000340000360000380000400000\n051015202530\n2012 2014 2016 2018 2020\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)\n-8.00-7.00-6.00-5.00-4.00-3.00-2.00-1.000.001.002.00\n2000 2002 2004 2006 2008 2010 2012 2014 2016 2018 2020Percent of GDP' metadata={'source': 'blkc.pdf', 'page': 100}
"
"page_content='88\u2003●   World Bank ECA Economic Update May 2018\n75 MPO  Apr 18  (down -9.5 percent in 2017, in nominal \nterms), which however had a negative \nimpact on growth.  \nThe current account deficit (CAD) al-\nmost doubled (in euro terms) in 2017 (an \nincrease of 94 percent, y/y). This resulted \nin widening trade deficit, as import in-\ncreased significantly (14.2 percent, y/y, \nor around EUR 2 billion), because of a \nhigher import of energy and consumer \ngoods. The growing external deficit con-\ntinued to be financed by FDI, which in-\ncreased by 37.5 percent in euro terms. \nFDI covers 135 percent of CAD. Foreign \ncurrency reserves dropped by 243 mil-\nlion euros in 2017.  \nThe dinar strengthened by 4 percent \nagainst the euro in 2017, while foreign \ncurrency reserves decreased by about \nEUR 245 million through December. The \nbanking sector remains stable and loans to \nthe private sector increased by 3.6 percent \nby end-December (y/y), but mainly due to \nincrease in lending to households (up 7.8 \npercent, y/y). NPLs declined to 11.1 per-\ncent through November, due to more ac-\ntive role of banks in selling and writing off \nNPLs. Still, NPLs represent a significant \nproblem for state -owned banks.   \nOutlook  \n \nIn 2018 as well as over the medium term, \ngrowth is expected to pick up, thus helping \nwith labor market recovery and poverty \nreduction. Growth is expected to be driven \nby increased investment, stimulated by \nreforms to improve the business climate, \nand the recovery of consumption (as the \nfiscal consolidation program gradually \nexpires and private sector wages continue \nto grow). Growth is expected to be around \n3-4 percent over the medium term.  \nWith economic growth and improvements \nin the labor market, poverty is expected to \ncontinue its gradual decline.  Poverty, meas-\nured as income below the standardized $5.5/\nday 2011PPP line is estimated to continue \ndeclining to around 21 percent by 2019. As \npart of the government ’s fiscal consolidation \nprogram, another nominal electricity tariff \nincrease in 2018 will be considered, though \nsmaller than previous increases. The recent-\nly expanded energy bill discount program \ncan help protect vulnerable customers, but \nimplementation challenges related to pro-\ncessing of applications remain.   \nRisks and challenges  \n \nAs witnessed over the last couple of years, \nSerbian economy is highly vulnerable to \nclimate change related events (droughts,  \nsevere winters, floods, etc.). These external \nshocks might reoccur at any moment in \nthe future thus endangering growth pro-\njections. Also, such events often hurt more \nthe poor who predominantly live in areas \nless protected from climate -related weath-\ner events and who depend more on in-\ncome earned in agriculture. In addition, \nfaster growth requires further effort to-\nward implementation of structural re-\nforms: in secondary and tertiary educa-\ntion; health financing; privatization of \nremaining state stakes in SOEs and finan-\ncial institutions. Also, special attention \nneeds to be paid to expanding external \nimbalances. Any delay with implantation \nof these reforms can have a major impact \non growth outlook. In addition, the poten-\ntial distributional impacts of these im-\nportant structural reforms may present \ncontinued challenges to faster poverty \nreduction in the short run.  \nTABLE 2  Serbia / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 0.8 2.8 1.9 3.0 3.5 4.0\nPrivate Consumption 0.5 1.0 1.7 2.2 2.9 4.0\nGovernment Consumption -1.5 2.3 4.0 3.6 -0.4 11.8\nGross Fixed Capital Investment 5.6 5.1 3.7 5.6 7.7 2.9\nExports, Goods and Services 10.2 12.0 8.1 6.5 7.5 7.5\nImports, Goods and Services 9.3 9.0 7.0 5.9 6.4 7.3\nReal GDP growth, at constant factor prices 0.7 3.2 1.4 3.0 3.5 4.0\nAgriculture -7.7 8.1 -9.9 5.0 3.0 3.0\nIndustry 3.0 2.4 4.5 4.0 5.0 5.0\nServices 1.1 2.8 1.7 2.3 2.9 3.7\nInflation (Consumer Price Index) 1.4 1.1 3.0 3.3 3.5 3.5\nCurrent Account Balance (% of GDP) -4.7 -3.1 -5.7 -4.7 -4.4 -4.6\nFinancial and Capital Account (% of GDP) 3.9 1.5 4.6 3.1 2.8 2.7\nNet Foreign Direct Investment (% of GDP) 3.7 3.7 4.7 4.3 4.3 4.1\nFiscal Balance (% of GDP) -3.6 -1.3 1.2 -0.6 -0.7 -1.2\nDebt (% of GDP) 76.0 73.2 62.4 60.0 57.5 55.5\nPrimary Balance (% of GDP) -0.4 2.2 3.9 2.2 2.2 1.3\nInternational poverty rate ($1.9 in 2011 PPP)a,b5.6 5.5 5.4 5.3 5.3 5.1\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b11.1 10.8 10.6 10.4 10.0 9.6\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b23.6 23.1 22.4 21.7 20.9 19.7\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on EU-SILC harmonization, using 201 5-EU-SILC. Actual data: 201 5. Nowcast' metadata={'source': 'blkc.pdf', 'page': 101}
"
"page_content=' Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on EU-SILC harmonization, using 201 5-EU-SILC. Actual data: 201 5. Nowcast: 201 6 - 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 5)  with pass-through = 0.87  based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 101}
"
"page_content='Selected Country Pages ●\u200389\n76 MPO  Apr 18  Recent development  \n \nReal GDP growth accelerated to 7.1 percent \nin 2017 from 6.9 percent a year ago. The \neconomy was largely fueled by private \nconsumption, supported by remittances —\nwhich expanded by about 16 percent \nthrough nine months of 2017, y -o-y—and \nby net exports, boosted by metallic miner-\nals. Investments have also fostered growth, \ndespite a deceleration in gross fixed capital \nformation, reflected both more muted FDI \nas well as a base effect from past increases. \nOn the supply side, growth was supported \nby both tradable and non -tradable sectors \nwith the highest contribution by industry \nfollowed by agriculture and services.  \nAnnual consumer price inflation accelerat-\ned to 6.7 percent, slightly above last year ’s \n6 percent, yet within the National Bank ’s \ntarget of 7±2 percent. Inflationary pressures \nstemmed from the depreciation of the na-\ntional currency (about 11 percent during \nthe year) which pushed up prices of im-\nported goods along with factors, such as a \nsupply -side shock on some food staples \nand increases in utility tariffs. As inflation-\nary pressures and expectations moderated, \nthe National Bank lowered the policy rate \nto 14.75 percent in the beginning of 2018.  \nPreliminary fiscal outcomes for 2017 sug-\ngest that the government adhered to the \napproved medium -term Fiscal Strategy \n2017 -20. The overall fiscal deficit was re-\nduced to 2.6 percent of GDP in 2017 from \n3.9 percent in the previous year (excluding \n6.1 percent of GDP related to the financial \nsector bailout). The authorities spent 13.6 percent of GDP in investment, while keep-\ning current spending below 18 percent of \nGDP. The fiscal contraction was attained \nthrough cuts of non -priority outlays, de-\nlays in implementation of further banking \nsector bailouts and contained the overall \nfiscal stance. Construction of the Rogun \nHPP was on full track, facilitated by pro-\nceeds from the Eurobond issuance in late \n2017. The latter increased the level of pub-\nlic debt to above 50 percent of GDP, exac-\nerbating the country ’s debt -related risks. \nThe external position continued to im-\nprove on the back of the recovering remit-\ntances, net export growth and more gener-\nally improved terms of trade. During the \nfirst three quarters of 2017, the current \naccount balance turned positive to 1.5 per-\ncent of GDP compared to a 4 percent defi-\ncit in the same period of 2016. Exports \ngrew by over 23 percent bolstered by high-\ner production of metallic minerals, while \nimports declined by 3 percent in the first \nnine months of 2017, y -o-y. Foreign direct \ninvestments contracted to 2.1 percent of \nGDP through January-September 2017 (a \nhistorical low), compared to 2.9 percent of \nGDP in the corresponding period of 2016.  \nThe financial sector remains partially in-\nsolvent despite some reduction of non -\nperforming loans from 47 percent in 2016 \nto 35.8 percent by end 2017. The two larg-\nest problem banks have downsized sig-\nnificantly and now account for about 20 \npercent of the banking sector. While \nboosting efforts for asset sales, rehabilita-\ntion plans have been submitted to the gov-\nernment’s review. The needed, long -\npending legislative amendments, which \naimed at enhancing the financial sector TAJIKISTAN  \nFIGURE 1  Tajikistan / Real GDP growth and contributions \nto real GDP growth  FIGURE 2  Tajikistan / Official poverty rate and real GDP \ngrowth, actual and projected, 2014 -20  \nSources: TajStat, World Bank staff estimates.   Source: World Bank staff estimates.  Tajikistan ’s economy sustained high \ngrowth in 2017 supported by an improved \nexternal environment, reflected in net \nexports and the recovering remittances. \nThe positive outlook for the Russian econ-\nomy, the improving regional environ-\nment, and construction of Rogun hydro-\npower plant (HPP) support strong \ngrowth projections. However, the slow \npace of reforms, heightened vulnerabili-\nties, and the pending decisions in the \nbanking and SOE sectors present down-\nside risks. Poverty reduction prospects \nremain positive as remittances continue to \nrecover and growth is sustained.  Table 1 2017\nPopulation, million 8.8\nGDP, current US$ billion 7.2\nGDP per capita, current US$ 8 12\nPoverty rate (LCU 1 87.7/month)a29.7\nGini coefficienta28.0\nSchool enrollment, primary (% gross)b98.2\nLife expectancy at birth, yearsb7 1. 0\n(a) 2017.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n0%1%2%3%4%5%6%7%8%\n22%24%26%28%30%32%34%\n2014 2015 2016 2017e 2018 f 2019 f 2020 fOfficial poverty rate (LHS)\nPoverty projection (LHS)\nReal GDP growth (RHS)Percent Percent\n6.7\n6.06.97.1\n6.1 6.0 6.0\n02468\n2014 2015 2016 2017 2018 2019 2020\nAgriculture Industry Services Real GDP growthPercent, percentage points ' metadata={'source': 'blkc.pdf', 'page': 102}
"
"page_content='90\u2003●   World Bank ECA Economic Update May 2018\n77 MPO  Apr 18  regulation and oversight, are still under \nreview by the government.  \nDespite strong growth, poverty fell only \nslightly from 30.3 percent in 2016 to 29.7 \npercent by September 2017 with extreme \npoverty stagnant at 14.1 percent of popu-\nlation. Income from employment and re-\nmittances remain the primary drivers of \npoverty reduction. Lower remittances \nslowed the pace of poverty reduction in \n2014 – H1 2016, but began recovering in \nH2 of 2016, and rebounded throughout \n2017. Poverty was relatively stagnant in \nurban areas during 2015 -16 (hovering at \naround 24 percent) but became more dy-\nnamic in 2017 by declining to 22 percent. \nDuring the same period rural poverty fell \nfrom 36.1 percent in 2014 to 33.1 percent \nin 2017. Food expenditure accounts for \nabout 75 percent of total consumption for \npoor households. The Listening -to-\nTajikistan survey identified a noticeable \ndecline in the share of households that \nhave reduced food consumption to pay \nfor other basic needs –  from about 45 per-\ncent to about 27 percent between Novem-\nber 2016 to November 2017.  \n \n \nOutlook  \n \nTajikistan ’s outlook for the short - to medi-\num term remains positive and is explained  by the improved external environment, \nincluding prices projected for major ex-\nport commodities, and deepening rela-\ntionship with neighbors, particularly Uz-\nbekistan. Despite the weak banking sec-\ntor, growth is expected to be around 6 \npercent supported by growing remittanc-\nes, construction of large infrastructure \nprojects and electricity sales. Inflation is \nforecasted to remain in single digits as-\nsuming the central bank ’s move to the \ninflation targeting framework improves \ninflation monitoring.  \nOver the medium term the fiscal stance is \nexpected to remain prudent, in line with \nthe deficit ceiling set by the Government ’s \nmedium -term fiscal strategy. The fiscal \ndeficit is projected at around 3 percent of \nGDP, primarily reflecting investments into \ninfrastructure projects and higher debt \nservice obligations. The baseline scenario \ndoes not assume additional budget sup-\nport for the banking sector resolution; any \nneeded bailout would expand the aug-\nmented deficit concomitantly.  \nThe external balance is expected to deteri-\norate, while remaining below 3 percent of \nGDP affected by second -round effects of \nthe remittance -driven consumption recov-\nery and investment -related imports, par-\nticularly for the construction of the Rogun \nHPP. International reserves, which rose to \n5.6 months of imports by the end of Sep-\ntember 2017, are expected to decline in line as the construction of the Rogun HPP \nunwind into imports.  \nPoverty is projected to fall to about 24 \npercent by 2020. Strong growth and recov-\nering remittances and expansion of the \nTargeted Social Assistance (TSA) program \nnationally are expected to push down \npoverty over the medium term.   \n \n \nRisks and challenges  \n \nRisks are tilted to the downside subject to \nexternal and domestic factors. External \nuncertainties may negatively affect re-\nmittance inflows. Domestic vulnerabilities \ninclude the adequate resolution of prob-\nlem banks, growing contingent liabilities \nin public enterprises, and a very slow pace \nof structural reforms, particularly to en-\nhance the business climate. The country ’s \ndeteriorated debt trend and growing debt \nservice obligations pose macro -fiscal chal-\nlenges and limit the fiscal space for much \nneeded social spending. Any potential \nbanking sector bailout and/or second -\nround of Eurobonds issuance will sub-\nstantially threaten the country ’s fragile \nmacroeconomic stability.  \nTABLE 2  Tajikistan / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 6.0 6.9 7.1 6.1 6.0 6.0\nPrivate Consumption -15.0 6.4 3.3 3.4 3.5 3.5\nGovernment Consumption 3.3 3.9 -5.9 6.8 7.7 8.5\nGross Fixed Capital Investment 24.4 20.3 2.4 3.6 3.8 3.9\nExports, Goods and Services 0.0 0.0 10.4 8.5 8.2 8.1\nImports, Goods and Services 0.0 0.0 5.0 5.2 5.4 5.5\nReal GDP growth, at constant factor prices 5.4 6.6 7.1 6.1 6.0 6.0\nAgriculture 3.2 5.2 6.8 5.1 5.2 5.3\nIndustry 15.7 18.1 14.0 11.0 11.1 11.2\nServices 1.6 1.0 2.8 3.3 2.5 2.1\nInflation (Consumer Price Index) 5.8 5.9 7.3 8.5 7.0 7.0\nCurrent Account Balance (% of GDP) -6.0 -3.8 -1.0 -2.4 -2.5 -2.6\nFinancial and Capital Account (% of GDP) 7.4 8.1 4.5 2.4 2.5 2.6\nNet Foreign Direct Investment (% of GDP) 5.3 4.9 3.1 3.3 3.3 3.3\nFiscal Balance (% of GDP) -1.9 -9.7 -2.6 -3.0 -3.1 -3.3\nDebt (% of GDP) 35.0 43.2 50.4 51.2 51.7 52.2\nPrimary Balance (% of GDP) -1.3 -9.2 -1.1 -1.2 -1.2 -1.3\nN ational poverty rate a,b31.3 30.3 29.7 27.7 25.5 23.9\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on 201 7 HBS. Actual data: 201 5, 201 6, 201 7. Forecast is from 201 8 to 2020.\n(b) Projection using neutral distribution (201' metadata={'source': 'blkc.pdf', 'page': 103}
"
"page_content=', f = forecast.\n(a) Calculations based on 201 7 HBS. Actual data: 201 5, 201 6, 201 7. Forecast is from 201 8 to 2020.\n(b) Projection using neutral distribution (201 7) with pass-through =  (0.7) based on GDP per capita constant PPP.' metadata={'source': 'blkc.pdf', 'page': 103}
"
"page_content='Selected Country Pages ●\u200391\n78 MPO  Apr 18  Recent developments  \n \nTurkey experienced a strong recovery in \n2017 with growth at 7.4 percent growth, \nstimulated by fiscal measures and a Credit \nGuarantee Fund for SME financing. Con-\nsumption accounted for over two thirds of \ngrowth in this period, and investment start-\ning to pick up. EU recovery helped acceler-\nate exports.  \nStrong demand has come at a cost of grow-\ning macroeconomic imbalances. Consumer \nprice inflation averaged 11 percent in 2017. \nThe current account deficit widened from \n3.8 percent of GDP in 2016 to 5.5 percent in \n2017 amid rising energy prices, high gold \ndemand and imports stimulated by strong \ngrowth. A recovery in net portfolio flows \nhelped finance half of the current account \ndeficit while FDI inflows declined. Growth \nand import demand accelerated revenue \ncollection, keeping the fiscal deficit at 1.9 \npercent of GDP in 2017.   \nThe Central Bank raised the effective poli-\ncy rate from 8.3 to 12.75 percent in 2017 \ndue to price and exchange rate pressures. \nDespite this, inflationary expectations \nremain high. Growth in money stock (M3) \nmoderated slightly but remained high at \n16 percent in 2017 in line with strong de-\nmand, driven by a 20 percent expansion in \nprivate sector credit. The Central Bank \nalso introduced stricter regulations on \nforex debt for corporates to mitigate risks \nof high forex exposure.  \nPoverty in Turkey continued to decline. \nThe population with per capita expenditure \nbelow the poverty line ($5.5 a day in 2011 PPP) fell from 23.1 percent to a low of 9.9 \npercent in the 10 years up to 2016. It is esti-\nmated to have declined to 9.1 percent in \n2017.  The more recent progress was helped \nby the availability of more jobs, coupled \nwith a 30 percent increase in minimum \nwage in 2016.  \nStrong growth stimulated the labor market \nin 2017. Unemployment rate decreased by \n2.3 percentage points from 12.7 percent in \nDecember 2016 to 10.4 percent in December \n2017. Employment increased by 1.6 million \npersons in the same period, mainly driven \nby services (55 percent), industry (19.5 per-\ncent) and agriculture (18.3 percent). Labor \nforce participation rate for females rose to \n33.5 percent, a 1.3 percentage point annual \ninter -annual increase. Meanwhile, the job-\nless rate among the youth fell by 4.8 per-\ncentage points to 19.2 percent.  \n \n \nOutlook  \n \nFor 2018, economic growth is projected at \n4.7 percent, gradually converging to a \npotential rate of around 4.5 -5 percent. \nRecent surveys point to a moderation in \nconsumer demand, weighed down by \nrising costs and declining real wages. Rap-\nid credit expansion has increased credit \nrisk and raised lending rates, pointing to a \nslowdown in credit growth in 2018.  \nNevertheless, expansionary policies will \nlikely in place to stimulate demand to \nmaintain growth especially ahead of the \nelections. The 2018 Budget approved in \nDecember 2018 was supplemented by \nfiscal stimulus measures proposed in  TURKEY  \nFIGURE 1  Turkey / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2  Turkey / Actual and projected poverty rates and \nreal GDP per capita  \nSources: Turkstat and World Bank staff calculations.  Sources: World Bank. Notes: see Table 2.  Turkey’s strong recovery in 2017 (at 7.4 \npercent) came at a cost of widening mac-\nroeconomic imbalances. Growth in 2018, \nhowever, is projected to moderate closer to \npotential, at 4.7 percent. Poverty is fore-\ncast to decrease, although at a slower pace \nthan previous years. Expansionary poli-\ncies will likely in place to stimulate de-\nmand, especially ahead of the upcoming \nelections. Key risks include inflation and \ntightening of global financial condi-\ntions—all of which could constrain access \nto external finance, raise cost of external \ndebt, and weaken the external balance.  Table 1 2017\nPopulation, milliona80.3\nGDP, current US$ billion 850.7\nGDP per capita, current US$ 1 0592\nInternational poverty rate ($1 .9)b0.2\nUpper middle-income poverty rate ($5.5)b9.9\nGini coefficientb4 1. 9\nSchool enrollment, primary (% gross)c1 02.5\nLife expectancy at birth, yearsc75.4\n(a) M id-year of f icial dat a.\n(b) Most recent value (201 6), 201 1  PPPs.Source: Turkst at  and World Bank st af f  calculat ion.\nNot es:\n(c) M ost  recent  WDI value (2015).\n0500010000150002000025000\n0510152025303540\n2002 2004 2006 2008 2010 2012 2014 2016 2018 2020\nInternational poverty rate Upper middle-income pov. rate\nGDP pcPoverty rate (%) GDP per capita (constant LCU)\n-15-10-505101520\n2000 2003 2006 2009 2012 2015 2018\nGov. cons. Exports GFCF\nInventories Private cons. Imports\nStatistical disc. GDPPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 104}
"
"page_content='92\u2003●   World Bank ECA Economic Update May 2018\n79 MPO  Apr 18  February 2018 to accelerate investment \nand employment. The latter could poten-\ntially raise the budget deficit target fur-\nther. In addition, despite banking sector \npressures, the Credit Guarantee Fund has \nbeen extended by a further TL 55 billion \nfor 2018.  \nGiven the above, inflation is expected to \nremain at just above 10 percent in 2018. \nCore inflation, which remained elevated, \nhit double digits in the last months, and \ncould push headline inflation further. The \ncurrent account deficit is projected to re-\nmain high at 5.6 percent of GDP. Despite \ncontinued export growth driven by con-\ntinued recovery in the EU, the import bill \nis likely to remain large, not least due to \nrising commodity prices.  \nPoverty is forecast to decrease at a slower \npace. It is estimated to decline further to \n8.8 percent in 2018 (from 9.1 percent in \n2017). Poverty could decline more rapidly \nif the recently introduced Attraction Cen-\nters Program (ACP) proves effective in \nboosting employment in the poorest re-\ngions. The program covers 23 provinces in \neastern and southeastern Anatolian re-\ngions where poverty rates are 3 -4 times \nhigher than in the western regions. It aims to create new jobs and investments in less \ndeveloped provinces and reduce high and \npersistent regional inequality.  \n \n \nRisks and challenges  \n \nExternal vulnerability for Turkey remains \nhigh. The US monetary policy tightening \nin 2018 could increase the pace and vol-\nume of capital outflows. This increases \ninterest and exchange rate risks for Tur-\nkey’s external debt. The private sector is \nparticularly affected as it accounts for 70 \npercent of external debt. Although most of \nthe debt is of long -term maturity, a weak-\ner Lira and costlier external financing \nmight adversely impact corporates ’ bal-\nance sheets.  \nThis raises macro -financial risks. Capital \nadequacy and NPL ratios hover around 16 \npercent and 3 percent respectively, alt-\nhough total troubled assets are estimated \nto be higher. Exchange rate and interest \nrate risks, together with a slowing econo-\nmy, all coming on the heels of rapid credit \nexpansion, point to a potential deteriora-\ntion in banking sector asset quality.  The US announcement on steel and alumi-\nnum tariffs will affect Turkey – the sixth \nlargest seller of steel to the US. The direct \nimpact on the trade balance will likely be \nlimited, given the overall level of trade \nwith the US.  \nThe current macroeconomic environment \nand projected external conditions will re-\nquire monetary and fiscal discipline. Sound \nmacroeconomic policies need to be accom-\npanied by deeper structural reforms to en-\nsure a more sustainable economic growth \ntrajectory over the medium term. Steady \nprogress in advancing structural reforms \nwill be key to restoring investor confidence, \nmitigating vulnerabilities, enhancing \nproductivity and supporting growth.  \nOn the poverty and inequality front, the \nimpact of the employment subsidies tar-\ngeted to disadvantaged populations, and \nthe investment incentives focused on lag-\nging regions, remains uncertain, both in \nthe short term and in the long run. In addi-\ntion, uptake from private employers may \nnot reach significant levels, and low -\nincome candidates may lack skills for jobs \nthat become available. Considering these \nconstraints, the impact of these policies \nwarrants close monitoring.  \nTABLE 2  Turkey / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 6.1 3.2 7.4 4.7 4.4 4.0\nPrivate Consumption 5.4 3.7 6.1 4.0 3.8 3.6\nGovernment Consumption 3.9 9.5 5.0 5.0 5.3 4.6\nGross Fixed Capital Investment 9.3 2.2 7.3 5.3 4.7 4.0\nExports, Goods and Services 4.3 -1.9 12.0 6.7 5.5 5.0\nImports, Goods and Services 1.7 3.7 10.3 6.0 5.2 4.6\nReal GDP growth, at constant factor prices 5.7 3.1 7.8 4.7 4.4 4.0\nAgriculture 9.4 -2.6 4.7 1.9 1.9 1.9\nIndustry 5.0 4.6 9.1 4.0 3.8 3.6\nServices 5.6 3.2 7.5 5.4 5.0 4.4\nInflation (Consumer Price Index) 7.7 7.8 11.1 10.4 9.0 8.2\nCurrent Account Balance (% of GDP) -3.7 -3.8 -5.5 -5.7 -5.6 -5.5\nFinancial and Capital Account (% of GDP) 2.6 2.6 5.5 5.7 5.6 5.5\nNet Foreign Direct Investment (% of GDP) 1.5 1.2 1.0 1.1 1.2 1.2\nFiscal Balance (% of GDP) -0.1 -1.3 -1.9 -2.1 -2.1 -1.7\nDebt (% of GDP) 27.6 28.3 28.3 28.4 28.4 28.0\nPrimary Balance (% of GDP) 2.2 0.7 0.0 0.0 0.0 0.6\nInternational poverty rate ($1.9 in 2011 PPP)a,b0.3 0.2 0.2 0.2 0.2 0.2\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b11.5 9.9 9.1 8.8 8.4 8.2\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 2008-HICES and 201 6-HICES. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using point-to-point elasticity (2008-201 6) with pass-through = 1  based on GDP per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 105}
"
"page_content='Selected Country Pages ●\u200393\n80 MPO  Apr 18  Recent developments  \n \nThe official real GDP growth rate accelerat-\ned slightly —from 6.2 percent in 2016 to an \nestimated 6.5 percent in 2017. Growth was \nlargely supported by more favorable terms \nof trade, primarily reflecting a recovery in \nglobal gas prices, which rose by 24 percent \nyear -on-year. China remains the largest \npurchaser of Turkmen gas, while a price \ndispute with Iran over gas supplies re-\nmains unresolved and has affected export \nrevenues. In early 2018, Iran announced \nreadiness to file a case with the Interna-\ntional Court of Arbitration.  \nThe domestic retail trade sector grew at an \nannual rate of 19 percent in 2017, as an \nexpansion of credit and government trans-\nfers supported consumption growth; the \ntransport and communications sector \ngrew by 11 percent year -on-year, and the \nservice sector grew at an annual rate of 9 \npercent. However, gross fixed investments \nfell sharply (by almost 9 percent year -on-\nyear), as flows of both domestic and for-\neign direct investments fell, dampening \ngrowth in the construction sector. Moreo-\nver, agriculture output increased by a \nmere 5 percent, just below GDP growth, \nsuggesting less growth dividends for a \nlarge share of the population employed in \nthe agricultural sector.  \nConsumer price inflation hiked from 6.2 \npercent in the end of 2016 to 10.4 percent \nby the end of 2017. Inflation was driven by \nthe high pressure on the foreign exchange \n(FX) markets, which pushed up the prices \nof imported goods, as well as an upward adjustment of the highly subsidized fuel \nprices, including for utilities, and a 10 \npercent rise in public -sector salaries, pen-\nsions, and other government payments.  \nThe current account deficit remained high \nin 2017, although with some improvement \ndue to a recovery in global hydrocarbon \nprices and a substantial contraction in \nimports. After falling in 2015 -16, export \nrevenues grew by 3.6 percent year -on-year \nin 2017; still not sufficient to close the ex-\nternal gap. In contrast, imports continued \nto decline, falling by 23 percent in 2017. \nThe sharp drop in imports was due to \ntighter trade regulations and significant \npressures on the FX markets as the author-\nities avoided tapping on their buffers, \nrestricting liquidity in the FX markets.  \nThe monetary authorities continued to \nstrengthen oversight and control of FX \noperations, and adopted restrictions that \nlimited foreign currency withdrawals \nfrom cash, bank cards, and cross -border \ntransactions in 2017. The drying up of FX \nliquidity in the domestic markets suggests \nthat a correction of the official exchange \nrate (currently pegged at 3.5 manat per US \ndollar) may need to be considered, along \nwith other macroeconomic and structural \nreforms to reduce the external imbalances.  \nThe Turkmen authorities continued their \nfiscal consolidation efforts and balanced \nthe state budget in 2017, compared to the \n1.3 percent deficit in 2016. Compared to \ngovernment plans, revenue collection over\n-performed by 1.8 percent in 2017, while \nexpenditures underperformed by 3.6 per-\ncent, primarily due to cuts in capital \nspending and a gradual elimination of \nwelfare subsidies since the last quarter of Table 1 2017\nPopulation, milliona5.7\nGDP, current US$ billionb42.4\nGDP per capita, current US$b7355\nSchool enrollment, primary (% gross)c89.4\nLife expectancy at birth, years d67.6\n(a) UNPD st af f  est imat es (2016).\n(b) World Bank st af f  est imat es (2017).\n(d) M ost recent WDI value (201 5).Sources: UNPD, M acro Poverty Outlook, and WDI.\nNot es: \n(c) M ost recent WDI value (201 4).TURKMENISTAN  \nFIGURE 1  Turkmenistan / Real GDP growth and gas prices  FIGURE 2  Turkmenistan / Exchange rate and oil prices  \nSource: State Statistics Committee of Turkmenistan.  Source: Central Bank of Turkmenistan.  Turkmenistan ’s real GDP growth rate \nrose by 6.5 percent year -on-year in 2017, \nmainly supported by a recovery in hydro-\ncarbon prices. The external and fiscal ac-\ncounts improved according to official da-\nta, but inflation surged to double -digits, \nhinting at a possible buildup of imbalanc-\nes. The rise of inflation and the gradual \nremoval of welfare subsidies for utilities \nhas negatively impacted the purchasing \npower of households. The country ’s growth \noutlook remains positive, but risks are \ntilted downwards, given the needed struc-\ntural reforms aimed at boosting private -\nsector development.  \n9.214.7\n11.1\n10.2 10.3\n6.56.26.5\n-50-40-30-20-10010203040\n0246810121416\n2010 2011 2012 2013 2014 2015 2016 2017\nReal GDP growth (LHS) Change in gas prices (RHS)Percent Percent \n020406080100120 2.6\n2.8\n3.0\n3.2\n3.4\n3.6\n3.8\n4.0\n4.2\n2010 2011 2012 2013 2014 2015 2016 2017\nExchange rate, TMT/US$ (LHS) Oil prices, average (RHS)USD/TMT US$ per barrel' metadata={'source': 'blkc.pdf', 'page': 106}
"
"page_content='94\u2003●   World Bank ECA Economic Update May 2018\n81 MPO  Apr 18  2017. Reportedly, civil servant wages, \npensions, and other core social transfers \nwere protected. It should be noted that the \nstate budget does not represent the full \nfiscal picture as an important share of \npublic spending is executed via extra -\nbudgetary funds, including through di-\nrected lending. \nTurkmenistan does not release official statis-\ntics on household welfare, and little is \nknown about most recent labor market de-\nvelopments. However, the gradual removal \nof subsidies for utilities and rising inflation \nis likely to have affected the real purchasing \npower and living standards of households.  \n \n \nOutlook \n \nThe baseline scenario assumes a continua-\ntion of fiscal consolidation, some moderation \nin the buildup of external imbalances, and \n(sustainable) external debt accumulation to \nhelp finance the still sizeable (but narrow-\ning) current account deficit. This baseline, \nhowever, is not without downside risks.  \nTurkmenistan ’s outlook will remain high-\nly dependent on hydrocarbon prices and \nthe growth performance of its major trad-\ning partner, China. Over the medium \nterm, the real GDP growth rate is project-\ned to remain below 7 percent, assuming \nfavorable tailwinds (including via the terms of trade) but slow progress on im-\nplementing the national strategy ’s struc-\ntural reforms aimed at promoting non -\ntraditional (non -hydrocarbon) exports. \nInflation would remain high while gradu-\nally returning to single digits, assuming \nfurther fiscal and monetary tightening.  \nThe positive outlook on gas prices and the \nrobust external demand from China would \nhelp strengthen the external position. The \ncurrent -account deficit would narrow from \nits peak level in 2016, largely on the back \nof the restrain on merchandise imports \ndue to FX constraints. Over the medium \nterm, the reduction on imports would also \nfollow in case the construction of the Turk-\nmenistan —Afghanistan —Pakistan —India \n(TAPI) gas pipeline project is delayed. \nMore generally, however, a sharp reduc-\ntion of imports driven by FX restrictions \ncould impinge on domestic price dynam-\nics, and/or curtail the government ’s ability \nto proceed with ongoing investment pro-\njects, harming the growth prospects.  \n \n \nRisks and challenges  \n \nThere are both external and domestic \nthreats that raise country ’s risk profile. \nExternal risks include weaker -than -\nexpected growth in trading partners,  \nparticularly in China, and an unexpected drop in energy prices, which may exacer-\nbate external and domestic imbalances.  \nDomestic risks include a low quality and \nrapid credit expansion that may potential-\nly undermine the performance of the fi-\nnancial sector, lower -than -expected re-\nturns on state -funded projects, and the \nstalling of structural reforms aimed at \ndiversifying the economy through private -\nsector development.  \nAn opening of the economy, an improve-\nment in the business regulatory environ-\nment, an acceleration in the corporatiza-\ntion and privatization of state -owned en-\nterprises, and more investments in human \ncapital will be vital to boost private -sector \ndevelopment and achieve the goals of the \nmedium - and long -term national develop-\nment strategies.  \nLimited access to economic opportunities, \nand lack of economic diversification re-\nmain a major obstacle to inclusive growth, \nespecially for households outside the capi-\ntal city Ashgabat. Households in rural \nareas are more vulnerable to economic \ndownturns and the rising inflation, due to \nfactors that include their limited access to \njobs beyond the agricultural sector. Eco-\nnomic diversification (beyond the gas and \nagricultural sectors) with further private \nsector growth would create more econom-\nic opportunities for households, including \nthose in rural areas and secondary cities.  \nTABLE 2  Turkmenistan / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2014 2015 2016 2017 e 2018 f\nReal GDP growth, at constant market prices 10.3 6.5 6.2 6.5 6.3\nInflation: consumer price index, end of period 4.4 6.0 6.2 10.4 6.2\nCurrent account balance (% of GDP) -6.4 -14.1 -21.0 -11.6 -11.5\n    of which: Exports of hydrocarbons (% of GDP) 42.0 29.9 16.6 14.7 14.4\nFinancial and capital account (% of GDP) 7.0 5.2 9.8 6.8 7.7\n    of which: Net foreign direct investment (% of GDP) 8.8 8.6 6.1 4.5 3.6\nFiscal balance (% of GDP) 0.9 -0.7 -1.3 -0.2 0.5\nPublic debt (% of GDP) 18.0 19.4 23.9 24.3 27.6\nSources: World Bank, International Monetary Fund.\nNotes: e = estimate; f = forecast.' metadata={'source': 'blkc.pdf', 'page': 107}
"
"page_content='Selected Country Pages ●\u200395\n82 MPO  Apr 18  Recent developments  \n \nGrowth remains weak due to key pending \nreforms needed to strengthen investors ’ \nconfidence. GDP grew by 2.5 percent in \n2017 (and 2.3 percent in 2016) which is a \nweak recovery since it follows a cumula-\ntive 16 percent contraction in 2014-2015. \nKey sectors exhibiting relative strength \nsuch as manufacturing and domestic trade \ngrew over 5 percent in 2017, while con-\nstruction grew by almost 27 percent. In \ncontrast, mining and electricity generation \ncontracted due to the trade blockade with \nDonbas. The growth of fixed investment \nhas slowed in the second half of the year, \nwhile FDI remained weak at 2.1 percent of \nGDP in 2017, compared to 5 percent on \naverage before the crises. Investor confi-\ndence has been affected by the slow pace \nin adopting key reforms and delays in \ncompleting reviews of the IMF program \ngiven macroeconomic vulnerabilities and \nuncertainty surrounding the 2019 elec-\ntions. CPI reached 13.7 percent at the end \nof 2017, that is significantly higher than \nthe NBU target of 8+/ -2 percent, due to \ngrowth of public sector wages and pen-\nsions. As a result, NBU raised its key poli-\ncy rate to 17 percent in March 2018 from \n12.5 percent in April 2017. This has in-\ncreased the cost of funds for local curren-\ncy borrowing for both the government \nand the private sector.  \nPoverty remains above pre -crisis levels, \nbut has registered small decline I in 2017 \ndue to the modest economic recovery and \nwage growth. The unemployment rate remained steady in the third quarter of \n2017 at 9.4 percent, compared to 9.2 the \nprevious year. Real wages grew signifi-\ncantly by 19 percent in 2017 in part due to \nhigher public -sector wages. This, together \nwith real growth of pensions, led to fur-\nther decline in poverty (consumption per \ncapita below 5.5 USD/day in 2011 PPP) to \n5.7 percent in 2017 from 6.4 percent in \n2016 and 7.8 percent in 2015. Estimates of \npoverty by the National Statistical Service \nusing an absolute poverty line comparable \nover time show much higher incidence \nlevels, but a similar modest decline to 51.1 \npercent in 2016 from 51.9 percent in 2015.  \nThe fiscal deficit was within target in 2017 \nbut spending growth, inflation, and the \ncurrent account deficit remain high. The \nfiscal deficit remained flat and on target at \n2.4 percent of GDP in 2017. However, ex-\npenditures were up by 11.7 percent in real \nterms and reached 42.6 percent of GDP \ndue to the increase in the minimum wage \n(resulting in higher wages for teachers, \ndoctors, and civil servants), as well as \nhigher spending on social programs. This \nwas balanced by strong revenue growth in \n2017, driven by payroll tax (20 percent in \nreal terms, due to the hike in wages), VAT \n(17 percent, due to higher proceeds from \nimports) and personal income tax (16 per-\ncent). Public and publicly guaranteed debt \nlevel remained high at 70.4 percent of \nGDP in 2017. The boost in wages and so-\ncial expenditures triggered inflationary \nand current account pressures in 2017. \nThe current account deficit was at 3.5 per-\ncent of GDP in 2017. FDI remains weak \nand covered 60 percent of the CAD, with \nthe remainder financed by public and UKRAINE  \nFIGURE 1  Ukraine / Real GDP growth and contributions to \nreal GDP growth  FIGURE 2  Ukraine / Actual and projected poverty rates and \nreal private consumption per capita  \nSources: State Statistic Service of Ukraine.  Sources: World Bank. Notes: see Table 2.  Economic growth in 2017 remained mod-\nest at 2.5 percent for a second year in a \nrow, which is inadequate to reduce elevat-\ned compared to pre -crisis levels. Foreign \ninvestment and credit to the private sector \nis anemic. Macroeconomic vulnerabilities \ngoing forward come from significant fi-\nnancing needs, fiscal pressures from high-\ner public-sector wages and social benefits. \nCompleting the pending reforms in ad-\nvance of elections in 2019 will be critical \nto mobilize adequate international financ-\ning, maintain macroeconomic stability, \nand bolster investment.  Table 1 2017\nPopulation, million 44.8\nGDP, current US$ billion 112 . 9\nGDP per capita, current US$ 2522\nInternational poverty rate ($1 .9)a0.1\nLower middle-income poverty rate ($3.2)a0.5\nUpper middle-income poverty rate ($5.5)a6.4\nGini coefficienta25.0\nLife expectancy at birth, yearsb7 1. 2\n(a) Most recent value (201 6), 201 1  PPPs.Source: WDI, M acro Povert y Out look, and of f icial dat a.\nNot es:\n(b) M ost  recent  WDI value (2015).\n-30-25-20-15-10-505101520\n2015-Q1 2015-Q3 2016-Q1 2016-Q3 2017-Q1 2017-Q3\nAgricul ture Manuf acturi ng Domestic trade GDPPercent, percentage points\n0500010000150002000025000\n-1001020304050\n2002 2004 2006 2008 2010 2012 2014 2016 2018 2020\nInternational poverty rate Lower middle-income pov. rate\nUpper middle-income pov. rate Consumption pcPoverty rate (%) Private consumption per capita (constant LCU)' metadata={'source': 'blkc.pdf', 'page': 108}
"
"page_content='96\u2003●   World Bank ECA Economic Update May 2018\n83 MPO  Apr 18  private borrowings. International reserves \ngrew to $18.8 billion or an equivalent of \n3.4 month of imports.  \n \n \nOutlook \n \nBolstering economic growth and address-\ning macroeconomic vulnerabilities will \nrequire progress on the unfinished struc-\ntural reform agenda. Progress on the re-\nform agenda and staying on track with \nthe IMF program would not only boost \npotential growth, but also provide an \nimportant signal to strengthen investor \nconfidence. This would help stimulate a \nsustained recovery in fixed investment, \nfinanced by local sources and FDI, and \nboost growth to 4.0 percent by 2019. With \nagriculture and commodities expected to \nremain relatively flat in 2018, the accelera-\ntion in growth is expected to come from \nmanufacturing, construction, and ser-\nvices. Meeting the fiscal deficit target of \n2.5 percent of GDP will require better \ntargeting of social programs, rationalizing \npublic sector staffing, and implementa-\ntion of the recently adopted education \nand health reform laws in a manner that leads to  optimizing the school and hospi-\ntal network. Under an alternative scenario \nwhere reforms do not progress and the \nIMF reviews are not completed, growth is \nlikely to remain at 2 percent, or potentially \nfall further if political and social stability \ndeteriorates around the 2019 elections.  \nThe moderate poverty rate (under 5.5 USD/\nday) is expected to decline further in 2018 \nbut remain elevated through 2019. As pub-\nlic spending is constrained, labor income \nwill become the most important driver of \nincreasing incomes for the bottom 40 per-\ncent. Some rebound in the real sector, in-\ncluding wage growth in the private sector \nwill support disposable incomes and help \nthe poverty rate to gradually decline. How-\never, the magnitude of this reduction will \ndepend on the growth prospects, especially \ni n  t h e  s e c t o r s  w e r e  m o s t  o f  t h e  p o o r /\nvulnerable are employed (trade, manufac-\nturing, agriculture, construction).  \n \n \nRisks and challenges  \n \nElections scheduled in 2019 pose major \nrisks in adopting further reforms needed to \nmobilize international financing, address fiscal and financial sector imbalances, and \npromote stronger economic growth.  \nMacroeconomic vulnerabilities come total \nfiscal financing needs of $18 billion in 2018 \nand 2019 that will require mobilizing \nabout $8 billion in external financing. Ad-\nditional fiscal pressures come from the \nrising public-sector wage bill and signifi-\ncant spending on social programs, which \nwill prove challenging to consolidate \nthrough the 2019 elections.  \nFinancial sector weaknesses from high \nnonperforming loans at 55% of total loans, \nweak corporate governance of the domi-\nnant state -owned banks, and weak finan-\ncial position of the Deposit Guaranty \nFund not only stand in the way of stimu-\nlating investment and growth, but also \npose significant fiscal risks.  \nWith real household incomes still below \npre-crisis levels, continued weak econom-\nic growth of 2 percent going into the 2019 \nelections could undermine overall politi-\ncal and social support for the broad re-\nform effort launched since 2014.  \nExternal risks related to possible decline \nin commodity prices and higher inflation \nin advanced economies that may result in \nhigher external trade deficit and cost of \nfinancing respectively.  \nTABLE 2  Ukraine / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices -9.8 2.3 2.5 3.5 4.0 4.0\nPrivate Consumption -19.7 1.8 7.8 5.4 4.1 3.8\nGovernment Consumption -0.4 0.0 3.3 4.5 3.2 1.6\nGross Fixed Capital Investment -9.2 20.1 18.2 14.9 9.0 9.2\nExports, Goods and Services -13.2 -1.6 3.5 8.0 6.4 5.9\nImports, Goods and Services -17.9 8.4 12.2 14.0 7.2 5.8\nReal GDP growth, at constant factor prices -8.8 2.4 2.5 3.5 4.0 4.0\nAgriculture -4.4 6.0 -2.5 0.5 2.0 2.5\nIndustry -15.1 3.3 2.5 5.0 4.5 4.0\nServices -7.3 1.4 3.4 3.6 3.6 4.2\nInflation (Consumer Price Index) 48.7 13.9 13.7 9.9 6.5 6.3\nCurrent Account Balance (% of GDP) -0.2 -3.7 -3.5 -3.7 -3.3 -3.3\nFinancial and Capital Account (% of GDP) -0.2 3.4 3.3 3.7 3.3 3.4\nNet Foreign Direct Investment (% of GDP) 0.2 0.2 2.1 2.3 2.3 2.5\nFiscal Balance (% of GDP) -1.2 -2.3 -2.3 -2.5 -2.7 -2.4\nDebt (% of GDP) 79.7 81.2 72.3 75.1 73.5 68.4\nPrimary Balance (% of GDP) 3.0 2.0 1.4 1.5 1.7 1.6\nInternational poverty rate ($1.9 in 2011 PPP)a,b0.1 0.1 .. .. .. ..\nLower middle-income poverty rate ($3.2 in 2011 PPP)a,b0.5 0.5 0.4 0.4 0.4 0.3\nUpper middle-income poverty rate ($5.5 in 2011 PPP)a,b7.8 6.4 5.7 5.2 4.0 3.4\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 6-HLCS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n' metadata={'source': 'blkc.pdf', 'page': 109}
"
"page_content=' f = forecast.\n(a) Calculations based on ECAPOV harmonization, using 201 6-HLCS. Actual data: 201 5, 201 6. Nowcast: 201 7. Forecast are from 201 8 to 2020.\n(b) Projection using neutral distribution (201 6)  with pass-through = 1   based on private consumption per capita in constant LCU. ' metadata={'source': 'blkc.pdf', 'page': 109}
"
"page_content='Selected Country Pages ●\u200397\n84 MPO  Apr 18  Recent developments  \n \nGDP growth slowed to 5.3 percent in 2017 \n(from 7.8 percent in 2016), led by the de-\nceleration in domestic demand.  Total \ninvestment moderated relative to previ-\nous years, while remaining the main \ngrowth engine for the economy. This was \npossible thanks to the public investment \nprogram, which supported a range of \nsectors (transport, utilities, oil and gas \nexplorations, and housing) as well as \npublic enterprises and private investment \nactivity. On the other hand, private con-\nsumption declined slightly in real terms \ndue to the pickup in CPI inflation, and \ndespite a recovery in remittance inflows \n(which rose by 27 percent y/y in dollar \nterms in the first 9 months of 2017, togeth-\ner with the strengthening of economic \nactivity in Russia).  \nThe average nominal monetary income \nof the population grew by 12.3 percent \nin 2017, supported by an increase in \nminimum salaries and pensions by 15 \npercent in December 2017 (vis -à-vis an \naverage inflation of 12.5 percent in 2017, \nin line with the IMF ’s methodology). \nHigher food inflation negatively affected \nmostly urban consumers, particularly \namong the bottom 40 percent households \nfor whom food accounts for 61 percent \nof total consumption.  \nUzbekistan mitigated the impact of export \nprice declines in 2014 -16 via increased \nexport volumes. This trend continued in \nthe first half of 2017 —albeit at a decelerat-\ning rate as capacity diminished. Imports also grew, however, on the back of lower \nimport prices and the very significant re-\nduction in import tariffs implemented in \nSeptember, which resulted in an expand-\ned demand for imported goods. The trade \nbalance was in surplus in 2017 (compared \nto a deficit in 2016) thanks to the higher \ncommodity prices in the second half of \n2017, and the recovery of food and manu-\nfacturing exports as the demand of Uzbek-\nistan’s trading partners firmed up. Over-\nall, the current account surplus strength-\nened further in 2017 compared to 2016, \nowing not only to the stronger trade bal-\nance, but the recovery remittances.  \nOn September 5, 2017, the Central Bank of \nUzbekistan (CBU) liberalized the ex-\nchange rate; the official rate depreciated \nfrom 4,210 UZS to 8,100 UZS per dollar, as \nit converged with the curb rate; the CBU \nhas pursued a managed floating of the \ncurrency thereafter. The authorities also \nabolished the mandatory sales of a portion \nof firms’ export revenues to the CBU at \nthe official exchange rate (“surrender re-\nquirements ”), widening the participation \nof the private sector in the foreign ex-\nchange market. In preparation of the ex-\nchange rate liberalization, the CBU raised \nthe policy rate from 9 to 14 percent in June \n2017, curtailing the strong credit expan-\nsion that took place earlier in the year, and \nhelping stabilize the banking -loans -to-\nGDP ratio at 43.1 percent in 2017 \n(compared to 26.6 in 2016). Official figures \nsuggest that non -performing loans (NPLs) \nwere at 0.79 percent in Q2 2017 and 1.2 \npercent at the end of 2017 as per CBU esti-\nmates; Moody ’s assessed NPLs at 2.0 -2.5 \npercent in August 2017; these could be UZBEKISTAN  \nFIGURE 1  Uzbekistan / Real GDP growth and contributions \nto real GDP growth  FIGURE 2  Uzbekistan / Poverty, GDP per capita, and small \nbusiness development  \nSource: Uzbekistan official statistics.  Source: Poverty line is national data based on minimum food consumption at  \n2,100 calories per person per day and it excludes non -food items.  \nNote: Due to the lack of data access, the Bank cannot validate the official figures.  Uzbekistan ’s real growth slowed in 2017, \nled by a deceleration in domestic demand, \nincluding investment as the key growth \ndriver. The medium -term outlook is favor-\nable, thanks to the government ’s ambi-\ntious reform program (e.g., a liberalized \nexchange rate regime, an enhanced policy \nframework and business climate), and the \nimproved external tailwinds. Going for-\nward, ensuring a sound reform imple-\nmentation —including by tackling the \nremaining risks —will be key to sustain-\ning inclusive and robust growth and se-\ncure job creation.  Table 1 2017\nPopulation, million 32.0\nGDP, current US$ billion 4 1. 2\nGDP per capita, current US$ 1 290\nSchool enrollment, primary (% gross)a1 02.1\nLife expectancy at birth, yearsa7 1. 1\nSource: WDI, M acro Poverty Outlook, and official data.\nNot es:\n(a) M ost  recent  WDI value (2015).\n0102030405060\n05001,0001,5002,0002,500\n2002 2004 2006 2008 2010 2012 2014 2016\nSmall business, % of GDP\nGDP per capita, US$, lhs\nNational poverty rate, % of population, rhsGDP per capita, US$ Percent\n0246810\n2003 2005 2007 2009 2011 2013 2015 2017*\nServices Construction Agriculture\nIndustry Net taxes GDP totalPercent, percentage points' metadata={'source': 'blkc.pdf', 'page': 110}
"
"page_content='98\u2003●   World Bank ECA Economic Update May 2018\n85 MPO  Apr 18  higher after the exchange rate unification \ngiven the currency exposures of key bor-\nrowers, particularly public enterprises.  \nDuring 2017 the government sustained a \nrobust (but softer) public investment pro-\ngram, while cutting back on current \nspending to meet its state budget targets. \nThe authorities reduced direct taxes on \nfirms and citizens while increasing prop-\nerty and resource taxes in an effort to \nachieve revenue neutrality while support-\ning economic activity. The government \nlaunched a privatization program and \nsold 542 state objects in 2017 with budget \nreceipts of 0.3 percent of total budget reve-\nnue. The government also drew from its \nsignificant fiscal buffers (at the Uzbek \nFund for Reconstruction and Develop-\nment, UFRD, a reserve fund) to cover the \ndebts of largest bank and industry public \nenterprises (particularly in the energy \nsector) that were affected by the deprecia-\ntion of the official exchange rate. As a re-\nsult, the augmented budget (including the \nstate and UFRD activity) incurred a larger \ndeficit of -3.3 percent of GDP in 2017, rela-\ntive to a -0.6 percent of GDP a year earlier.  \nThe official poverty rate declined slightly \nfrom 12.5 percent in 2016 to an estimated \n12.4 percent in 2017. Still robust economic \ngrowth, small business development, and \nsocial safety net programs have driven poverty reduction in the past. Income \ndistribution has become more equitable \nover time and the official Gini coefficient \nfell from 0.39 in 2001 to 0.29 in 2013. \nHowever, the official unemployment rate \nwas 5.8 percent in 2017, higher than 5.2 \npercent in 2016.  \n \n \nOutlook  \n \nRobust growth is expected to continue at \nabout 5 percent in 2018 -19, but job crea-\ntion may take longer to pick up, as invest-\nments may not return quickly to pre -2017 \nlevels. Fiscal activity (including through \nUFRD lending) and bank credit are pro-\njected to become less expansionary than in \nthe past to help reign on inflation, which \nis expected to remain elevated as liberal-\nized prices continue to adjust. Budget \nspending would be geared towards miti-\ngating the impact of the exchange rate \nadjustment on the vulnerable population, \nas well as supporting critical public enter-\nprises to gradually converge towards \ngreater sustainability and cost -recovery, \nand sustaining the public investment pro-\ngram. Monetary policy is expected to be \ntighter than in previous years, also aiming \nat containing inflation from trending up. The current account surplus would nar-\nrow as imports continue to rise in the face \nof trade liberalization, even as exports \n(both commodities and manufactures) \nmaintain a positive growth, and re-\nmittances remain solid. Real GDP growth \nis projected to accelerate slowly to 5.5 per-\ncent by 2020 as the private business cli-\nmate improves on the back of the reform \nprocess, supporting an acceleration of \nprivate investment, including FDI.  \nWhile data limitations do not allow for \npoverty projections, we expect that in-\ncreased income growth and the sustained \nrobust net remittances in 2018 will allow \nsome progress in poverty reduction over \nthe near term.    \n \n \nRisks and challenges  \n \nUzbekistan economy ’ upside and down-\nside risks are broadly balanced. On the \nupside, there are benign prospects for com-\nmodity prices, and accelerated private in-\nvestment (including as FDI) thanks to the \nauthorities ’ b o l d  r e f o r m  a g e n d a .  O n  t h e  \ndownside, a slower recovery in the Russia ’s \neconomy, potential delays in other struc-\ntural reforms and higher inflation could \nundermine growth and job prospects.  \nTABLE 2  Uzbekistan / Macro poverty outlook indicators  (annual percent change unless indicated otherwise)  \n2015 2016 2017 e 2018 f 2019 f 2020 f\nReal GDP growth, at constant market prices 7.9 7.8 5.3 5.0 5.1 5.5\nPrivate Consumption 1.1 1.0 -0.3 1.2 1.2 2.2\nGovernment Consumption 7.2 -12.8 -8.3 -7.6 -4.3 -1.1\nGross Fixed Capital Investment 9.5 9.5 7.1 6.9 7.0 7.5\nExports, Goods and Services 5.6 11.6 13.9 18.5 17.4 16.0\nImports, Goods and Services -2.1 -3.6 7.1 16.4 16.9 17.2\nReal GDP growth, at constant factor prices 7.8 7.9 5.3 5.0 5.1 5.5\nAgriculture 6.8 6.6 2.0 3.6 3.7 4.4\nIndustry 8.5 6.9 4.8 3.7 3.8 4.1\nServices 8.0 9.0 7.1 6.1 6.2 6.5\nInflation (Private Consumption Deflator) 8.5 8.0 12.5 19.5 12.9 9.1\nCurrent Account Balance (% of GDP) 0.7 0.7 3.7 0.4 -1.0 -1.4\nFiscal Balance (% of GDP) -1.3 -0.6 -3.3 -1.3 -1.2 -0.2\nDebt (% of GDP) 9.2 10.5 24.5 22.3 20.8 21.2\nPrimary Balance (% of GDP) -1.2 -0.5 -3.2 -0.8 -0.7 0.5\nSource: World Bank, Poverty & Equity and M acroeconomics, Trade & Investment Global Practices.\nNotes: e =  estimate, f = forecast.' metadata={'source': 'blkc.pdf', 'page': 111}
"
"page_content='ISBN (electronic): 978-1-4648-1299-6\n© 2018 International Bank for Reconstruction and Development / The World Bank\nSome rights reserved\n1818 H Street NW, Washington, DC 20433\nTelephone: 202-473-1000Internet: www.worldbank.org\nThis work is available under the Creative Commons Attribution 3.0 IGO license (CC BY 3.0 IGO) http://creativecommons.org/licenses/by/3.0/igo.WORLD BANK  ECA ECONOMIC UPDATE MAY 2018\nCryptooccuurrencies and Blockchai n\nWith growth in Europe and Central Asia likely at its peak, \nthis report addresses two questions. How well is the region prepared for an expected slowdown? How well has the economic upswing been used to adjust to the digital revolution? The report specifically focuses on cryptocurrency and blockchain activities in the region.' metadata={'source': 'blkc.pdf', 'page': 113}
"
"page_content=' \n \n \n \n \n \nDot Net Technology  Notes (BCA 602 ) \n \nBCA VI  \n \nUNIT I & UNIT II  \n \nMs. POONAM VERMA  ' metadata={'source': 'dotnet.pdf', 'page': 0}
"
"page_content='Syllabus  \n \n \n \n\uf0b7 The .Net Framework:Introduction   \n\uf0b7 Introduction   \n\uf0b7 Common Language Runtime (CLR)  \n\uf0b7 Common Type System (CTS)  \n\uf0b7 Common Language Specification (CLS)  \n\uf0b7 Microsoft Intermediate Language \n(MSIL)  \n\uf0b7 Just-In –Time Compilation  \n\uf0b7 Framework Base Classes.   \n\uf0b7 C -Sharp Language (C#):  \n\uf0b7 Introduction   \n\uf0b7 Data Types, Identifiers, Variables, \nConstants and Li terals   \n\uf0b7 Array and Strings   \n\uf0b7 Object and Classes   \n\uf0b7 Inheritance and Polymorphism   \n\uf0b7 Operator Overloading   \n\uf0b7 Interfaces, Delegates and Events   \n\uf0b7 Type conversion.   \n\uf0b7 C# Using Libraries  \n\uf0b7 Namespace - System  \n\uf0b7 Input -Output,  \n\uf0b7 Multi -Threading,  \n\uf0b7 Networking and soc kets,  \n\uf0b7 Managing Console I/O Operations,  \n\uf0b7 Windows Forms,  \n\uf0b7 Error Handling.   \n\uf0b7 Advance Features using C#  \n\uf0b7 Web Services,  \n\uf0b7 Window Services,  \n\uf0b7 Asp.net Web Form Controls,  \n\uf0b7 ADO.Net.  \n\uf0b7 Distributed Application in C#,  \n\uf0b7 Unsafe Mode,  \n\uf0b7 Graphical Device interface wit h C#.   \n\uf0b7 Assemblies and Attributes  \n\uf0b7 .Net Assemblies   \n\uf0b7 Attributes   \n\uf0b7 Generic.  \n \n \n \n \n \n \n ' metadata={'source': 'dotnet.pdf', 'page': 1}
"
"page_content=' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n3 ' metadata={'source': 'dotnet.pdf', 'page': 2}
"
"page_content='Unit -1 \nIntroduction to .Net framework  \n1. 1 Introduction to Dot Net Framework  \nThe .NET is the technology fro m Microsoft, on which all other Microsoft technologies will be \ndepending on in future.   \nIt is a major technology change. Just like the computer world moved from DOS to \nWindows, now they are moving to .NET. But don\'t be surprised if you find anyone saying t hat ""I \ndo not like .NET and I would stick with the good old COM and C++"". There are still lot of \npeople who like to use the bullock -cart instead of the latest Honda car.   \n.NET technology was introduced by Microsoft, to catch the market from the SUN\'s Java.  \nFew years back, Microsoft had only VC++ and VB to compete with Java, but Java was catching \nthe market very fast. With the world depending more and more on the Internet/Web and java \nrelated tools becoming the best choice for the web applications, Microsoft  seemed to be loosing \nthe battle. Thousands of programmers moved to java from VC++ and VB. To recover the market, \nMicrosoft announced .NET.   \n.NET framework comes with a single class library. And thats all programmers need to \nlearn!! Whether they write the code in C# or VB.NET or J#, it doesn\'t matter, you just use the  \n.NET class library. There is no classes specific to any language. There is nothing more you can \ndo in a language, which you can\'t do in any other .NET language. You can write code in C# or \nVB.NET with the same number of lines of code, same performance and same efficiency, because \neveryone uses same .NET class library.  \n \nFeatures of .NET   \n\uf0b7 It is a platform neutral framework. \uf020 \uf020\n\uf0b7 It is a layer between the operating system and the programming language . \uf020\n\uf0b7 It supports many programming languages, including VB.NET, C# etc. \uf020\n\uf0b7 .NET provides a common set of class libraries, which can be accessed from any .NET \nbased programming language. There will not be separate set of classes and libraries for \neach language. If you know any one .NET language, you can write code in any .NET \nlanguage. \uf020 \uf020\n\uf0b7 In future versions of Windows, .NET will be freely distributed as part of operating system \nand users will never have to install .NET separately. \uf020\nMajor Components of .NET   \nThe di agram given below describes various components of .NET Framework.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n4 ' metadata={'source': 'dotnet.pdf', 'page': 3}
"
"page_content='The .NET framework can only be exploited by languages that are compliant with .NET. Most of \nMicrosoft languages have been made to fully comply with .NET.  \n.NET also i ntroduces Web Forms, Web Services and Windows Forms. The reason why they have \nbeen shown separately and not as a part of a particular language is that these   \ntechnologies can be used by any .NET compliant language. For example Windows Forms is used \nby VC, VB.NET, C# all as a mode of providing GUI.  \nThe next component of .NET is the .NET Framework Base Classes. These are the common class \nlibraries (much like Java packages) that can be used by any .NET compliant language. These \nclasses provide the programmers with a high degree of functionality that they can use in their \nprograms. For example their are classes to handle reading, writing and manipulating XML \ndocuments, enhanced ADOs etc.  \nThe bottom most layer is the CLR - the common runtime language.  \nOrigin of . net Technology  \n1. OLE Technology  \n2. COM Technology  \n3. .net Technology  \n \nOLE Technology(Object Linking and Embedding)   \n–  Easy interprocess communication  \n–  Embed documents from one application into another application  \n–  To enable one application to manipulate objects located in another application  \n–  Ex: inter operability between various products such as MS word and MSExcel   \nCOM Technology( Component Object Model)  \n–   Monolithic approach leads to many problem of maintainability and testing  \n– A program is br oken into number of independent components where each one offers a \nparticular service  \n– Each component can be developed and tested independently and then integrated into main \nsystem.  \n–   Benefits:  \n–   Reduces the overall complexity of software.  \n–   Enables distributed development across multiple organization or departments.  \n–   Enhances software maintainability  \n.net Technology  \n–   Third generatiom component model  \n–   IPC in COM is replaced by Intermediate Language(IL or MSIL)  \n–   Interoperability by  compiling code into IL.  \n–   Metadata  \n \n1.2 Common Language Runtime (CLR)   \nThe CLR is the heart of .NET framework. It is .NET equivalent of Java Virtual Machine (JVM). \nIt is the runtime that converts a MSIL (Micro Soft Intermediate Language) code into the ho st \nmachine language code, which is then executed appropriately.  \nThe CLR provides a number of services that include:  \n\uf0b7 Loading and execution of codes \uf020 \uf020\n\uf0b7 Memory isolation for application \uf020\n\uf0b7 Verification of type safety \uf020\n\uf0b7 Compilation of IL into native executable cod e \uf020\n\uf0b7 Providing metadata \uf020\n\uf0b7 Automatic garbage collection \uf020\n\uf0b7 Enforcement of Security \uf020 \n5 ' metadata={'source': 'dotnet.pdf', 'page': 4}
"
"page_content='\uf0b7 Interoperability with other systems \uf020 \uf020\n\uf0b7 Managing exceptions and errors \uf020\n\uf0b7 Provide support for debugging and profiling \uf020\n\uf020\n1.3 Common Type System (CTS)   \nThe language interoperability, and .NET Class Framework, are not possible without all the \nlanguage sharing the same data types. What this means is that an ―int‖ should mean the same in \nVB, VC++, C# and all other .NET compliant languages. Same idea follows for all the other data \ntypes. T his is achieved through introduction of Common Type System (CTS).   \nCTS, much like Java, defines every data type as a Class. Every .NET compliant language must \nstick to this definition. Since CTS defines every data type as a class; this means that only Obje ct-\nOriented (or Object -Based) languages can achieve .NET compliance. Given below is a list of \nCTS supported data types:   \nData Type   \nSystem.Byte  \n \nSystem.Int16  \n \n \nSystem.Int32  \n \n \nSystem.Int64  \n \n \n \n \nSystem.Single  \n \n \n \n \n \n \n \nSystem.Doub le \nDescription  \n1-byte unsigned integer between 0 -255  \n2-bytes signed integer in the following range:   \n32,678 to 32,767   \n4-byte signed integer containing a value in the following \nrange: -2,147,483,648 to 2,147,483,647  \n \n8-byte signed inte ger containing a value from -\n9,223,372,036,854,775,808 to 9,223,372,036,854,775,807  \n \n4-byte floating point. The value limits \nare: for negative values:  \n-3.402823E38 to - 1.401298E -45 \nfor positive values:   \n1.401298E -45 TO 30402823E38  \n \n8-bytes wide fl oating point. The value limits \nare: for negative values:  \n-1.79769313486231E308 to - 4.964065645841247E -\n324 for positive values:   \n4.964065645841247E -324 to 1.79769313486232E308  \n \nSystem.Object   4-bytes address reference to an object  \n   \nSystem.Char   2-bytes single Unicode Character.  \n   \nSystem.String   string of up to 2 billion Unicode characters.  \n    \nSystem.Decimal 12 -bytes signed integer that can have 28 digits on either side of decimal.  \n \nSystem.Boolean\n 4-Bytes number that contains true(1 ) or false (0)  \n \n1.4 Common Language Specification (CLS)   \nOne of the obvious themes of .NET is unification and interoperability between various \nprogramming languages. In order to achieve this; certain rules must be laid and all the languages  \n \n6 ' metadata={'source': 'dotnet.pdf', 'page': 5}
"
"page_content='must foll ow these rules. In other words we can not have languages running around creating their \nown extensions and their own fancy new data types. CLS is the collection of the rules and \nconstraints that every language (that seeks to achieve .NET compatibility) must  follow. \nMicrosoft has defined three level of CLS compatibility/compliance. The goals and objectives of \neach compliance level have been set aside. The three compliance levels with their brief \ndescription are given below:  \nCompliant producer  \nThe component de veloped in this type of language can be used by any other language.  \nConsumer  \nThe language in this category can use classes produced in any other language. In simple words \nthis means that the language can instantiate classes developed in other language. Thi s is similar \nto how COM components can be instantiated by your ASP code.  \nExtender  \nLanguages in this category can not just use the classes as in CONSUMER category; but can also \nextend classes using inheritance.   \nLanguages that come with Microsoft Visual Stu dio namely Visual C++, Visual Basic and C#; all \nsatisfy the above three categories. Vendors can select any of the above categories as the targeted \ncompliance level(s) for their languages.  \n \n1.5 Microsoft Intermediate Language (MSIL)   \nA .NET programming lang uage (C#, VB.NET, J# etc.) does not compile into executable code; \ninstead it compiles into an intermediate code called Microsoft Intermediate Language (MSIL). \nAs a programmer one need not worry about the syntax of MSIL - since our source code in \nautomatica lly converted to MSIL. The MSIL code is then send to the CLR (Common Language \nRuntime) that converts the code to machine language which is then run on the host machine.  \nMSIL is similar to Java Byte code. A Java program is compiled into Java Byte code (the .class \nfile) by a Java compiler, the class file is then sent to JVM which converts it into the host machine \nlanguage.  \nManaged Code  \nThe role of CLR doesn‘t end once we have compiled our code to MSIL and a JIT compiler has \ncompiled this to native code. Code written using the .NET framework, is managed code when it \nis executed. This stage is usually referred to as being at runtime. This means that the CLR looks \nafter our applications, by managing memory, handling security, allowing cross language \ndebugging and  so on. By contrast, applications that do not run under the control of the CLR are \nsaid to be unmanaged and certain languages such as C++ can be used to write such applications, \nthat for example, to access low level functions of the operating systems. Howe ver in C# we can \nonly write code that runs in a managed environment.  \nUnified classes  \nThe term .NET framework refers to the group of technologies that form the development \nfoundation for the Microsoft .NET platform. The key technologies in this group are th e run time \nand the class libraries.   \nThe run time is responsible for managing your code and providing services to it while it \nexecutes, playing a role similar to that of the Visual Basic 6.0 run time.  \nThe .NET programming languages including Visual Basic . NET , Microsoft Visual C# and C++ \nmanaged extensions and many other programming languages from various vendors utilize .NET \nservices and features through a common set of unified classes.   \nThe .NET unified classes provide foundation of which you build your applications, regardless of \nthe language you use. Whether you simply concating a string, or building a windows Services or \na multiple -tier web -based applications, you will be using these unified classes.  \n \n \n7 ' metadata={'source': 'dotnet.pdf', 'page': 6}
"
"page_content=""The unified classes provide a consistent method  of accessing the platforms functionality. Once \nyou learn to use the class library, you‗ll find that all tasks follow the same uniform architecture, \nyou no longer need to learn and master different API architecture to write your applications.   \nBy building your applications on a unified, integrated framework, you maximize your return on \nthe time you spend learning this framework, and you end up with more robust applications that \nare easy to deploy and maintain.  \n1.6 Just In Time Compiler  \n• To make it easy for l anguage writers to port their languages to .NET, Microsoft developed \na language akin to assembly language called Microsoft intermediate language (MSIL). To \ncompile applications for .NET, compilers take source code as input and produce MSIL as \noutput.   \n• MSIL itself is a complete language that you can write applications in. However, as with \nassembly language, you would probably never do so except in unusual circumstances. \nBecause MSIL is its own language, each compiler team makes its own decision about how \nmuch of the MSIL it will support. However, if you're a compiler writer and you want to \ncreate a language that does interoperate with other languages, you should restrict yourself to \nfeatures specified by the CLS.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n• You write source co de in C# and compile it using the C# compiler (csc.exe) into an EXE.   \n• The C# compiler outputs the MSIL code and a manifest into a read -only part of the EXE \nthat has a standard PE (Win32 -portable executable) header.  When the compiler creates \nthe output, it  also imports a function named _ CorExeMain  from the .NET runtime.    \n• When the application is executed, the operating system loads the PE, as well as any \ndependent dynamic -link libraries (DLLs), such as the one that exports the _ \nCorExeMain  function (mscore e.dll), just as it does with any valid PE.  \n1.7 Framework Base Classes   \nThe .NET Framework has an extensive set of class libraries. This includes classes for:  \n \n \n \n \n8 "" metadata={'source': 'dotnet.pdf', 'page': 7}
"
"page_content='\uf0d8 Data Access: High Performance data access classes for connecting to SQL Server or \nany other O LEDB provider. \uf020\n\uf020\n\uf0d8 XML Supports: Next generation XML support that goes far beyond the functionality \nof MSXML. \uf020\n\uf020\n\uf0d8 Directory Services: Support for accessing Active Directory/LDPA using ADSI.  \uf020\n\uf020\n\uf0d8 Regular Expression : Support for above and beyond that found in Perl  5. \uf020\n\uf020\n\uf0d8 Queuing Supports: Provides a clean object -oriented set of classes for working \nwith MSMQ. \uf020\n \nThese class libraries use the CLR base class libraries for common functionality.  \n \nBase Class Libraries   \nThe Base class library in the .NET Framework is huge. I t covers areas such as:  \n\uf0d8 Collection : The System.Collections namespaes provides numerous collection classes.  \uf020\n\uf020\n\uf0d8 Thread Support: The System.Threading namespace provides support for creating \nfast, efficient, multi -threaded appliction. \uf020\n\uf020\n\uf0d8 Code Generation: The Sy stem.CodeDOM namespace provides classes for \ngenerating  source files in numerous language. ASP.NET uses these classes when \nconverting ASP.NET pages into classes, which are subsequently compiled. \uf020\n\uf020\n\uf0d8 IO: The System.IO provides extensive support for working wit h files and all other \nstream  types. \uf020\n\uf020\n\uf0d8 Reflection: The System.Reflection namespace provides support for load \nassemblies,  examining the type with in assemblies, creating instances of types, etc. \uf020\n\uf020\n\uf0d8 Security: The System.Security namespace provides support for services such as  \nauthentication, authorization, permission sets, policies, and cryptography. These base \nservices are used by application development technologies like ASP.NET to build \ntheir security infrastructure. \uf020\n \nThe list of support base classes goes o n forever in .NET, but if you ever find yourself lost \nlooking for a specific class, you can use the WinCV tool to locate it. You can run this from the \nStart bar Run menu. The file is typically located in the c: \\program files \\ \nMicrosoft.Net \\FrameworkSDK \\Bin directory.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n9 ' metadata={'source': 'dotnet.pdf', 'page': 8}
"
"page_content='Unit -II  \nC -Sharp Language (C#)  \n \n2.1 Introduction   \nMicrosoft Corporation, developed a new computer programming language C# pronounced as ‗C -\nSharp‘. C# is a simple, modern, object oriented, and type safe programming language deri ved \nfrom C and C++. C# is a purely object -oriented language like as Java. It has been designed to \nsupport the key features of .NET framework.   \nLike Java, C# is a descendant language of C++ which is descendant of C language.  \n \n \n \nC \n \nObject Orientation  \n \n \n \n \nC++ \n \nComponent   \nOrientation  \n \n Component   \nJava  Orientation  VB \n   \n \nElegance  \n \n \nC# Productivity  \n \n \n \nC# modernize C++ by enhancing some of its features and adding a few new features. C# borrows \nJava‘s features such as grouping of classes, interface and implemen tation together in one file so \nthe programmers can easily edit the codes. C# also handles objects using reference, the same way \nas Java.   \nC# uses VB‘s approach to form designing, namely, dragging controls from a tool box, \ndropping them onto forms, and writ ing events handlers for them.   \nComparing C# to C++ and Java  \nC# versus Java  \nC# and Java are both new -generation languages descended from a line including C and C++. \nEach includes advanced features, like garbage collection, which remove some of the low level  \nmaintenance tasks from the programmer. In a lot of areas they are syntactically similar.   \nBoth C# and Java compile initially to an intermediate language: C# to Microsoft Intermediate \nLanguage (MSIL), and Java to Java bytecode. In each case the intermediat e language can be run - \n \n10 ' metadata={'source': 'dotnet.pdf', 'page': 9}
"
"page_content=""by interpretation or just -in-time compilation - on an appropriate 'virtual machine'. In C#, \nhowever, more support is given for the further compilation of the intermediate language code \ninto native code.  \nC# contains more primiti ve data types than Java, and also allows more extension to the value \ntypes. For example, C# supports 'enumerations', type -safe value types which are limited to a \ndefined set of constant variables, and 'structs', which are user -defined value types.  \nUnlike Java, C# has the useful feature that we can overload various operators.  \nLike Java, C# gives up on multiple class inheritance in favour of a single inheritance model \nextended by the multiple inheritance of interfaces. However, polymorphism is handled in a \nmore complicated fashion, with derived class methods either 'overriding' or 'hiding' super class \nmethods C# also uses 'delegates' - type-safe method pointers. These are used to implement \nevent -handling. In Java, multi -dimensional arrays are implemented sol ely with single -\ndimensional arrays (where arrays can be members of other arrays. In addition to jagged arrays, \nhowever, C# also implements genuine rectangular arrays.  \nC# versus C++  \nAlthough it has some elements derived from Visual Basic and Java, C++ is C# 's closest relative. In \nan important change from C++, C# code does not require header files. All code is written inline. As \ntouched on above, the .NET runtime in which C# runs performs memory management, taking care of \ntasks like garbage collection. Becaus e of this, the use of pointers in C# is much less important than in \nC++. Pointers can be used in C#, where the code is marked as 'unsafe', but they are only really useful \nin situations where performance gains are at an absolute premium.   \nSpeaking generally , the 'plumbing' of C# types is different from that of C++ types, with all C# \ntypes being ultimately derived from the 'object' type. There are also specific differences in the \nway that certain common types can be used. For instance, C# arrays are bounds ch ecked unlike \nin C++, and it is therefore not possible to write past the end of a C# array.   \nC# statements are quite similar to C++ statements. To note just one example of a difference: \nthe 'switch' statements has been changed so that 'fall -through' behavio r is disallowed.  \nAs mentioned above, C# gives up on the idea of multiple class inheritance. Other differences \nrelating to the use of classes are: there is support for class 'properties' of the kind found in \nVisual Basic, and class methods are called using the . operator rather than the :: operator.  \nFeatures of C#  \n1. Simplicity  \nAll the Syntax of java is like C++. There is no preprocessor, and much larger library. C# code \ndoes not require header files. All code is written inline.  \n \n2. Consistent behavior   \nC# introduced an unified type system which eliminates the problem of varying ranges of integer \ntypes. All types are treated as objects and developers can extend the type system simply and easily.  \n \n3. Modern programming language   \nC# supports number of modern fe atures, such as:   \n\uf0b7 Automatic Garbage Collection \uf020 \uf020\n\uf0b7 Error Handling features \uf020\n\uf0b7 Modern debugging features \uf020\n\uf0b7 Robust Security features \uf020\n\uf020\n4. Pure Object - Oriented programming language   \nIn C#, every thing is an object. There are no more global functions, variable and c onstants. \nIt supports all three object oriented features:   \n\uf0b7 Encapsulation \uf020\n \n11 "" metadata={'source': 'dotnet.pdf', 'page': 10}
"
"page_content='\uf0b7 Inheritance \uf020 \uf020\n\uf0b7 Polymorphism \uf020\n\uf020\n5. Type Safety   \nType safety promotes robust programming. Some examples of type safety are:   \n\uf0b7 All objects and arrays are initialized by zero dynamically  \uf020 \uf020\n\uf0b7 An error message will be produced , on use of any uninitialized variable \uf020\n\uf0b7 Automatic checking of array out of bound and etc. \uf020 \uf020\n6. Feature of Versioning   \nMaking new versions of software module work with the existing applications is known \nas versioning. Its achieve by the keywords new and override.  \n \n7. Compatible with other language   \nC# enforces the .NET common language specifications (CLS) and therefore allows inter -\noperation with other .NET language.  \n \n8. Inter -operability   \nC# provides support for using COM objects, no matter what language was used to author them. \nC# also supports a special feature that enables a program to call out any native API.  \nA Simple C# Program   \nLet\'s begin in the traditional way, by looking at the code of a Hello World program (note t hat \nthe tabulation and line numbers are included just for the sake of readability).   \n1. Using System;   \n2. public class HelloWorld   \n3. {   \n4. public static void Main()   \n5. {   \n6. // This is a single line comment   \n7. /* This is a   \n8. multiple   \n9. line comment */   \n10. Console.Write Line(""Hello World! "");   \n11. }   \n12. }   \n\uf0b7 The first thing to note about C# is that it is case -sensitive. You will therefore get compiler \nerrors if, for instance, you write \'console\' rather than \'Console\'. \uf020 \uf020\n\uf0b7 The second thing to note is that every statement finishes with a semicolon (;) or else takes \na code block within curly braces. \uf020\nExplanation of Program \nLine 1 : using System;   \nwe are using the System namespace (namespaces are also covered in chapter 7). The point of \nthis declaration is mostly to save ourselves tim e typing. Because the \'Console\' object used in \nline 10 of the code actually belongs to the \'System\' namespace, its fully qualified name is \n\'System.Console\'. However, because in line 1 we declare that the code is using the System \nnamespace, we can then leav e off the \'System.\' part of its name within the code.  \nLine 2: public class HelloWorld   \n12 ' metadata={'source': 'dotnet.pdf', 'page': 11}
"
"page_content=""As C# is an object -oriented language, C# programs must be placed in classes (classes are \ndiscussed in chapter 5 but if you are new to object orientation we suggest t hat you first read some \nintroductory material). This line declares the class to be named 'HelloWorld'.  \nLine 4: public static void Main()   \nWhen compiled and run, the program above will automatically run the 'Main' method declared \nand begun in this line. Not e again C#'s case -sensitivity - the method is 'Main' rather than 'main'.  \nLine 3,11 and 5,12 :   \nThese lines are uses the ‗{‗ for starting braces and ‗}‘ for closing braces of \nblock. Lines 6 -9 : Comments  \n( ‗//‘ uses for single line and ‗/* -- - - */‘ uses fo r multiple line comments)   \nThese lines of the program are ignored by the compiler, being comments entered by \nthe programmer for his own benefit.  \nLine 6 shows a single line comment, in which everything on the line after the two forward \nslashes  is ignored by  the compiler.   \nLines 7 -9 demonstrate a multi -line comment, in which everything between the opening /* \nand closing */ is ignored, even when it spans multiple lines.  \nLine 10:   \nThe statement on this line calls the 'WriteLine' method of the Console class in t he System \nnamespace. It should be obvious how this works in the given example - it just prints out the \ngiven string to the 'Console' (on PC machines this will be a DOS prompt).  \nInstruction for Saving the Program  \nIn order to run the program, it must first b e saved in a file. Unlike in Java, the name of the class \nand the name of the file in which it is saved do not need to match up, although it does make \nthings easier if you use this convention. In addition, you are free to choose any extension for the \nfile, but it is usual to use the extension '.cs'.  \nWriting program in Computer  \nThere are two ways of program writing in \ncomputer \uf0b7 Using Text Editor  \nUsing Visual Studio.NET  \n \n2.2 Data Types. Identifiers, Variables, Constants and Literals   \nIdentifiers & Variables  \nIdentifiers refer to the names of variables, functions arrays, classes, etc. created by programmer.  \nThey are fundamental requirement of any language. Each language has its own rules for naming \nthese identifiers.   \nTo name the variables of your program, you m ust follow strict rules. In fact, everything else in \nyour program must have a name.   \nThere are some rules you must follow when naming your objects. On this site, here are the rules \nwe will follow:  \n\uf0b7 The name must start with a letter or an underscore \uf020\n\uf0b7 After t he first letter or underscore, the name can have letters, digits, and/or underscores \uf020\n\uf0b7 The name must not have any special characters other than the underscore \uf020\n\uf0b7 The name cannot have a space \uf020\nC# is case -sensitive. This means that the names Case, case, and CAS E are completely \ndifferent. For example, the main function is always written Main.  \nC# Keywords   \nC# uses a series of words, called keywords, for its internal use. This means that you must avoid \nnaming your objects using one of these keywords. They are:  \n \n \n \n13 "" metadata={'source': 'dotnet.pdf', 'page': 12}
"
"page_content=""          \nabstract  const   extern   int out short   typeof  \n          \nas continue   false  interface  override  sizeof   uint \n          \nbase decimal   finally   internal  params  stackalloc   ulong  \n          \nbool default   fixed   is private  static   unchecked  \n          \nbreak  delegate   float  lock protected  string   unsafe  \n          \nbyte do  for  long public  struct   ushort  \n          \ncase double   foreach   namespace  readonly  switch   using  \n          \ncatch  else  goto  new ref this  virtual  \n          \nchar enum  if  null return  throw   void \n          \nchecked  event   implicit   object  sbyte  true  volatile  \n          \nclass explicit   in  operator  sealed  try  while  \n          \n \nData types   \nC# is a type -safe language. Variables are declared as being of a particular type, and each \nvariable is constrained to hold only values of its declared type.  \nVariables can hold either value types or reference types, or they can be pointers. Here's a \nquick recap of the difference between value types and reference types.   \n- where a var iable v contains a value type, it directly contains an object with some value. No \nother variable v' can directly contain the object contained by v (although v' might contain an \nobject with the same value).   \n- where a variable v contains a reference type, wh at it directly contains is something which refers to \nan object. Another variable v' can contain a reference to the same object referred to by v.  \nValue Types    \nC# defines the following value types:   \n\uf0b7 Primitives  int i; \n\uf0b7 Enum  enum state { off, on }  \n\uf0b7 Struct  struct Point{ int x, y; }  \nIt is possible in C# to define your own value types by declaring enumerations or structs. These \nuser-defined types are mostly treated in exactly the same way as C#'s pr edefined value types, \nalthough compilers are optimized for the latter. The following table lists, and gives information \nabout, the predefined value types. Because in C# all of the apparently fundamental value types \nare in fact built up from the (actually f undamental) object type, the list also indicates which \nSystem types in the .Net framework correspond to these pre -defined types.   \nC# .Net Framework  Signed?  Bytes  Possible Values   \n \nType  (System) type   Occupied   \n \nsbyte  System.Sbyte  Yes 1 -128 to 127  \n \nshort  System.Int16  Yes 2 -32768 to 32767  \n \nint System.Int32  Yes 4 -2147483648 to 2147483647  \n \nlong System.Int64  Yes 8 -9223372036854775808 to  \n \n    9223372036854775807  \n \nbyte System.Byte  No 1 0 to 255  \n \nushort  System.Uint16  No 2 0 to 65535  \n \nuint System. UInt32  No 4 0 to 4294967295  \n \n   14  \n "" metadata={'source': 'dotnet.pdf', 'page': 13}
"
"page_content='ulong  System.Uint64  No 8 0 to 18446744073709551615   \n \nfloat System.Single  Yes 4 Approximately ±1.5 x 10-45 to ±3.4  \n \n    x 1038 with 7 significant figures  \n \ndouble  System.Double  Yes 8 Approximately ±5.0 x 10-324 to ±1.7  \n \n    x 10308 with 15 or 16 significant  \n \n    figures  \n \ndecimal  System.Decimal  Yes 12 Approximately ±1.0 x 10-28 to ±7.9  \n \n    x 1028 with 28 or 29 significant  \n \n    figures  \n \nchar System.Char  N/A 2 Any Unicode character (16 bit)  \n \nbool System.Bo olean  N/A 1 / 2 true or false  \n \n      \nIn the following lines of code, two variables are declared and set with integer values.  \n \nint x = 10; \nint y = x;  \ny = 20; // after this statement x holds value 10 and y holds value 20  \n \nReference Types   \nThe pre -defin ed reference types are object and string, where object - is the ultimate base class \nof all other types. New reference types can be defined using \'class\', \'interface\', and \'delegate\' \ndeclarations. There fore the reference types are :  \nPredefined Reference Ty pes  \n\uf0b7 Object \uf020 \uf020\n\uf0b7 String \uf020\nUser Defined Reference Types   \n\uf0b7 Classes \uf020 \uf020\n\uf0b7 Interfaces \uf020\n\uf0b7 Delegates \uf020\n\uf0b7 Arrays \uf020  \nReference types actually hold the value of a memory address occupied by the object they \nreference. Consider the following piece of code, in which two variables ar e given a reference to \nthe same object (for the sake of the example, this object is taken to contain the numeric property \n\'myValue\').   \nobject x = new \nobject(); x.myValue = \n10; object y = x ;   \ny.myValue = 20; // after this statement both \nx.myValue // and  y.myValue equal 20   \nThis code illustrates how changing a property of an object using a particular reference to it is \nreflected in all other references to it. Note, however, that although strings are reference types, \nthey work rather more like value types.  When one string is set to the value of another, eg  \n \nstring s1 = ""hello""; \nstring s2 = s1;  \n \n \n \n \n15 ' metadata={'source': 'dotnet.pdf', 'page': 14}
"
"page_content='Then s2 does at this point reference the same string object as s1. However, when the value of s1 \nis changed, for instance with  \n \ns1 = ""goodbye"";  \n \n \nwhat happens is that a new string object is created for s1 to point to. Hence, following this piece \nof code, s1 equals ""goodbye"", whereas s2 still equals ""hello"".  \nThe reason for this behaviour is that string objects are \'immutable\'. That is, the properties of  \nthese objects can\'t themselves change. So in order to change what a string variable references, a \nnew string object must be created.  \nBoxing   \nC# allows you convert any value type to a corresponding reference type, and to convert the \nresultant \'boxed\' type back again. The following piece of code demonstrates boxing. When the \nsecond line executes, an object is initiated as the value of \'box\', and the value held by i is \ncopied across to this object. It is interesting to note that the runtime type of box is ret urned as \nthe boxed value type; the \'is\' operator thus returns the type of box below as \'int\'.   \nint i = 123; \nobject box = i; \nif (box is int)   \n{Console.Write(""Box contains an int"");} // this line is printed  \n \nWhen boxing occurs, the contents of value type are copied from stack into memory allocated \ninto the managed heap. The new reference type created contains a copy of the value type, and \ncan be used by other types that expect an object reference. The value contained in the value type \nand the created refer ence types are not associated in any way (except that they contain the same \nvalues). If we change the original value type, the refernce type is not affected.  \n \nThe following code explicitly unboxes  a reference type into a value type:  \n \n \n \nobject o;   \nint i = (int) o ; \n \n \nWhen unboxing occurs, memory is copied from the managed heap to the stack.  \n \n2.3 Array and Strings   \nArrays   \nAn array is a group or collection of similar values. An array contains a number of variables, which \nare accessed through computed indi ces. The various value contained in an array are also called the \nelements of array. All elements of an array have to be of same type, and this type is called the \nelement type of the array. The element of an array can be of any type including an array type.   \nAn array has a rank that determines the number of indices associated wth each array elements. \nThe rank of an array is also referred as the dimension of the array. An array may be :   \n\uf0b7 Single Dimensional \uf020 \uf020\n\uf0b7 Multi Dimensional \uf020\n \n \n \n16 ' metadata={'source': 'dotnet.pdf', 'page': 15}
"
"page_content='An array with a rank of o ne is called single -dimensional array, and an array with a rank \ngreater than one is called a multi dimensional array.  \nEach dimension of array has an associated length, which is an integer number greater than or \nequal to zero. For a dimension of length n, i ndices can range from 0 to n -1. in C#, array types are \ncategorized under the reference types alongside with classes and interfaces.  \nSingle Dimensional Array  \nSingle -dimensional arrays have a single dimension (ie, are of rank 1). The process of creation \nof arrays is basically divided into three steps:  \n1. Declaration of Array  \n2. Memory Allocation for Array  \n3. Initialization of Array  \nDeclaration of Array   \nTo declare an array in C# place a pair of square brackets after the variable type. The syntax \nis given below :  \n \ntype[] arrayname;  \n \nFor Example:  \n \n \nint[] a; float[] \nmarks; \ndouble[] x; \nint[] m,n;  \n \n \nYou must note that we do not enter the size of the arrays in the declaration.   \nMemory Allocation for Array  \nAfter declaring an array, we need to allocate space and defini ng the size. Declaring arrays \nmerely says what kind of values the array will hold. It does not create them. Arrays in C# are \nobjects, and you use the new keyword to create them. When you create an array, yu must tell the \ncompiler how many components will b e stored in it. Here is given the syntax:  \n \narrayname = new type[size];  \n \nFor Example:  \n \n \na = new int[5];   \nmarks = new float[6]; \nx = new double[10]; \nm = int[100];   \nn = int [50];  \n \n \n \n \n \nIt is also possible to combine the two steps, declaration and memory all ocation of array, into one \nas shown below:  \n \n17 ' metadata={'source': 'dotnet.pdf', 'page': 16}
"
"page_content=' \n \nint[] num = new int [5];  \n \n \n \n \n \nInitialization of Array   \nThis step involves placing data into the array. Arrays are automatically assigned the default \nvalues associated with their type. For example, if we  have an array of numerical type, each \nelement is set to number 0. But explicit values can be assigned as and when desired.   \nIndividual elements of an array are referenced by the array name and a number that represents \ntheir position in the array. He numbe r you use to identify them are called subscripts or indexes \ninto the array.   \nSubscripts are consecutive integers beginning with 0. thus the array ―num‖ above has \ncomponents num[0], num[1], num[2], num[3], and num[4].   \nThe initialization process is done usi ng the array subscripts as shown:  \n \narrayname[subscript] = value;  \n \nFor Example:   \nnum[0] = 5; \nnum[1] = 15; \nnum[2] = 52; \nnum[3] = 45; \nnum[4] = 57;  \n \nWe can also initialize arrays automatically in the same way as the ordinary variables when they \nare declare d, as shown below:  \ntype[] arrayname = { list of values };  \n \nthe list of variables separated by commas and defined on both ends by curly braces. You must note \nthat no size is given in this syntax. The compiler space for all the elements specified in the list . \n \nFor Example:  \n \nint[] num = {5,15,52,45,57};  \n \nYou can combine all the steps, namely declaration, memory allocation and initialization of \narrays like as:   \nint[] num = new int [5] {5,15,52,45,57};  \n \nYou can also assign an array object to another. For  Example  \n \nint[] a = { 10, 20, \n30}; int[] b;   \nb=a;  \nThe above example is valid in C#. Both the array will have same values.  \n \n18 ' metadata={'source': 'dotnet.pdf', 'page': 17}
"
"page_content=""Example \nusing system; \nclass Number  \n{ \npublic static void Main()  \n{ \nint [] num = {10, 20, 30, 40, \n50}; int n = num.Length;   \n// Length is predefined attribute to access the size of \narray Console.Write(― Elements of array are :‖);  \nfor(int i=0; i<n; i++)  \n{ \nConsole.WriteLine(num[i]);  \n} \n \nint sum =0;   \nfor(int i=0; i<n; i++)  \n{ \nsum = sum + num[i]);  \n} \nConsole.WriteLine(― The sum of element s :‖+sum);  \n} \n \nOUTPUT:   \nElements of array \nare: 10 20 30 40 50  \n \n \n \n \n \nThe sum of elements :150  \n \nMulti Dimensional Array   \nC# supports two types of multidimensional arrays:  \n\uf0b7 Rectangular Array \uf020 \uf020\n\uf0b7 Jagged Array \uf020\nRectangular Arrays \uf020\nA rectangular array is a single arr ay with more than one dimension, with the dimensions' sizes \nfixed in the array's declaration. The following code creates a 2 by 3 multi -dimensional array: \uf020  \nint[,] squareArray = new int[2,3];  \n \nAs with single -dimensional arrays, rectangular arrays can be  filled at the time they are \ndeclared. For instance, the code   \nint[,] squareArray = {{1, 2, 3}, {4, 5, 6}};  \n \ncreates a 2 by 3 array with the given values. It is, of course, important that the given values do \nfill out exactly a rectangular array.  \nThe System.Array  class includes a number of methods for determining the size and bounds of \narrays. These include the methods GetUpperBound(int i)  and GetLowerBound(int i) , which  \n \n \n19 "" metadata={'source': 'dotnet.pdf', 'page': 18}
"
"page_content=""return, respectively, the upper and lower subscripts of dimension i of the ar ray (note that i is \nzero based, so the first array is actually array 0).  \nFor instance, since the length of the second dimension of squareArray is 3, the \nexpression squareArray.GetLowerBound(1)   \nreturns 0, and the expression \nsquareArray.GetUpperBound(1)   \nreturns 2.   \nSystem.Array also includes the method  GetLength(int i) , which returns the number of \nelements  in the ith dimension (again, zero based).  \nThe following piece of code loops through squareArray and writes out the value of its elements.   \nfor(int i = 0; i < squareArray.GetLength(0); i++) \nfor (int j = 0; j < squareArray.GetLength(1); j++)  \nConsole.WriteLine(squareArray[i,j]);  \n \n \nA foreach loop can also be used to access each of the elements of an array in turn, but using this \nconstruction one doesn 't have the same control over the order in which the elements are accessed.  \nJagged Arrays  \nUsing jagged arrays, one can create multidimensional arrays with irregular dimensions. This \nflexibility derives from the fact that multidimensional arrays are impleme nted as arrays of \narrays. The following piece of code demonstrates how one might declare an array made up of a \ngroup of 4 and a group of 6 elements:   \nint[][] jag = new int[2][]; \njag[0] = new int [4]; \njag[1] = new int [6];   \nThe code reveals that each of jag[0] and jag[1] holds a reference to a single -dimensional int \narray. To illustrate how one accesses the integer elements: the term jag[0][1] provides access to \nthe second element of the first group.   \nTo initialise a jagged array whilst assigning values to its elements, one can use code like \nthe following:   \nint[ ][ ] jag = new int[ ][ ] {new int[ ] {1, 2, 3, 4}, new int[ ] {5, 6, 7, 8, 9, 10}};  \n \nBe careful using methods like GetLowerBound, GetUpperBound, GetLength, etc. with jagged \narrays. Since jagged  arrays are constructed out of single -dimensional arrays, they shouldn't be \ntreated as having multiple dimensions in the same way that rectangular arrays do.   \nTo loop through all the elements of a jagged array one can use code like the following:   \nfor (i nt i = 0; i < jag.GetLength(0); i++)   \nfor (int j = 0; j < jag[i].GetLength(0); \nj++) Console.WriteLine(jag[i][j]);  \n \n \nor  \nfor (int i = 0; i < jag.Length; i++)   \nfor (int j = 0; j < jag[i].Length; j++) \nConsole.WriteLine(jag[i][j]);  \n \n \n \n \n20 "" metadata={'source': 'dotnet.pdf', 'page': 19}
"
"page_content='Strings   \nA string i s an empty space, a character, a word, or a group of words that you want the compiler \nto consider ""as is"", that is, not to pay too much attention to what the string is made of, unless you \nexplicitly ask it to. This means that, in the strict sense, you can put in a string anything you want.   \nPrimarily, the value of a string starts with a double quote and ends with a double -quote. An \nexample of a string is ""Welcome to the World of C# Programming!"". You can include such a \nstring in the Console.Write()  method t o display it on the console. Here is an example:   \nExample using \nSystem; class \nBookClub  \n{ \nstatic void Main()  \n{ \nConsole.WriteLine(""Welcome to the World of C# Programming!"");  \n} \n} \nOUTPUT:   \nWelcome to the World of C# Programming!  \n \nTypes of String   \nThere are two  types of string in C#:  \n \n1) Immutable strings   \n2) Mutable strings  \n \nThe immutable strings are can‘t be modify and mutable strings are modifiable.C# also supports a \nfeature of regular expression  that can be used for complex strings manipulations and pattern  \nmatc hing. \nStrings  \n \n \n \nImmutable Strings   Regular   Mutable Strings  \n  Expression    \n     \n \n \nString class   \nHandling of Strings   \nWe can create immutable strings using string  or String  objects in \na some techniques to handling the immutable strings:   \nAssigning S tring  \n \nstring s1;   \ns1 = ―Welcome‖;   \nor  \nstring s1 = ―Welcome‖;   \n \nStringBuilder \nclasss   \nnumber of ways. There are  \n \n \n \n \n21 ' metadata={'source': 'dotnet.pdf', 'page': 20}
"
"page_content='Copying String   \nstring s2 = s1;   \nor  \nstring s2 = string.Copy(s1);   \nConcatenating Strings   \nstring s3 = s1 + s2;   \nor  \nstring s3 = string.Concat(s1,s2);   \nReading from Console   \nstring s1 = Console.ReadLine();   \nConverting Number to String \nint num = 100;   \nstring s1= num.ToString();   \nInserting String   \nstring s1 = Wel;  \nstring s2 = s1.insert(3,‖come‖); \n// s2 = Welcome  \nstring s3 = s1.insert(3,‖don‖); \n// s3 = Weldon;   \nComparing Strings   \nint n = string. Compare(s1,s2);   \nThis statement will perform case -sensitive comparison and returns integer values for \ndifferent conditions. Such as:  \n\uf0b7 If s1 is equal to s2 it wi ll return zero. \uf020 \uf020\n\uf0b7 If s1 is greater than s2 it will return positive integer (1). \uf020\n\uf0b7 If s1 is less than s2 it will return negative integer( -\n1). Or you can use following statement: \uf020\nbool a = s2.Equals(s1); bool \nb = string.Equal(s1,s2);   \nAbove statements will  return a Boolean value true (if equal) or false (if not equal).  \n \nOr you can also use the ―==‖ operator for comparing the strings. Like as:  \n \nif ( s1 == s2)   \nConsole.Write(― both are equal‖);   \nIn this statement, it will return a Boolean value true (if eq ual) or false (if not equal).  \n \nMutable String   \nMutable strings are those strings, which can be modify dynamically. This type of strings \nare created using StringBuilder  class. For Example:  \n \n \nStringBuilder s1 = new StringBuilder(―Welcome‖);   \nStringBuilder  s2 = new StringBuilder( );  \n \n \n \n \n22 ' metadata={'source': 'dotnet.pdf', 'page': 21}
"
"page_content='The string str1 is created with an initial size of seven characters and str2 is created as an empty \nstring. They can grow dynamically as more character added to them. Mutual string are referred \nas a dynamic strings .  \nThe StringBuilder class supports many methods that are useful for manipulating dynamic \nstrings. Some of the most common methods are listed below:  \nMethod  Operation  \nAppend( )  Append a string  \nAppendFormat( )  Append string using specific format  \nEnsureCapacity ( ) Ensure sufficient size  \nInsert( )  Insert a string at a specified position  \nRemove( )  Remove specified character  \nReplace( )  Removes previous string with new one  \n \nStringBuilder also provides some attributes to access some properties of strings, such as :  \n Attributes   Puspose  \n Capacity   To retrieve or set the number of characters  \n   the object can hold  \n Length   To retrieve or set the length  \n MaxCapacity   To retrieve maximum capacity of the object  \n [ ]  To get or set a character at a specified  \n   position  \nExample    \nusing System.Text;  //For using StringBuilder  \nusing System;    \n \nclass StrMethod   \n{ \npublic static void Main( )  \n{ \nStringBuilder s = new StringBuilder(―C‖); \nConsole.WriteLine(― Stored String is :‖+ s); \nConsole.WriteLine(―Length of string is  :‖+s.Length);  \n \ns.Append(―Sharp ‖);   \n// appending the string s  \n \nConsole.WriteLine(― After Append String is :‖+ s);   \nConsole.WriteLine(―Length of string is :‖+s.Length);  \n \ns.Insert(7,‖Language‖);   \n// inserting the string at last in s  \n \nConsole.WriteLine(―Afte r Insertion String is:‖+ s);   \nConsole.WriteLine(―Length of string is :‖+s.Length);  \n \nint n = s.Length;  \n \ns[n] = ―!‖;  \n \n \n23 ' metadata={'source': 'dotnet.pdf', 'page': 22}
"
"page_content=""Console.WriteLine(― At Last String is :‖+ s);   \n}  \n}  \nOUTPUT:  \n \nStored String is : C   \nLength of String is : 1  \n \nAfter Append string is : C Sharp   \nAfter Insertion String is : CSharp Language   \nAt Last String is : CSharp Language!  \n \n2.4 Object and Classes   \nAs we noted previously, one can create new reference types by defining classes. Classes provide \n'templates' from which these direct instances are generated. Where we appeal to the relation \nbetween a class and its corresponding reference type instances we shall say that a class specifies \nthe type (also that the class specifies the constitutive elements of the type).   \nAny type is made up of elemen ts, which we term type members. There are two main kinds of \ntype members that a class can specify. Firstly, a class can specify other types - both value and \nreference. This idea, that types can contain other types, is known within the literature on object \norientation as 'containment', or else 'aggregation'. Where a type contains another reference type, \nwe shall call it the containing type of the latter.  \nThe second, main kind of type members that a class can specify are methods, functions \ndesigned for readin g and manipulating the value and reference types an instance contains.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nObjects in C# are created from types, just like a variable. This type of an object is known as \nclass. we can use class definition to instantiate objects, which means to create a real named \ninstance of a class.  \nDeclaration of Classes   \nClass is an user -defined data type. To create a class, you start with the class  keyword followed \nby a name and its body delimited by curly brackets. . The following is an example of a very \nsimple class declaration   \nclass classname   \n{ \n// class -body  \n} \n \n \n \n \n24 "" metadata={'source': 'dotnet.pdf', 'page': 23}
"
"page_content='The class -body contains the member data and member function of the class. C++ \nprogrammer must note that there is no semicolon after the closing brace of the class.  \nMembers of Class  \nClass is a mechanism to implement the encapsulation, it bind the data and a function in a \nsingle unit. Therefore data and functions are the members of class, which is known as member \ndata and member function.   \nThere is an example of full class :  \n \nclass Circle   \n{ \ndouble radius;  \npublic void get_radius(double r)  \n{ \nradius = r;  \n} \npublic double area()  \n{ \nreturn ( 3.14 * r *r);  \n} \n} \n \n \nMember Access Modifiers   \nAccess modifiers provide the accessibility control for the members of classes to outside the \nclass. They als o provide the concept of data hiding. There are five member access modifiers \nprovided by the C# Language.  \n \nModifier  Accessibility  \nprivate  Members only accessible with in class  \n  \npublic  Members may accessible anywhere outside class  \n  \nprotected  Members only accessible with in class and  \n derived class  \ninternal  Members accessible only within assembly  \n  \nprotected internal  Members accessible in assembly, derived class  \n or containing program  \n \nBy default all member of class have private  accessibility. If  we want a member to have any \nother accessibility, then we must specify a suitable access modifier to it individually.   \nFor Example:  \n \nclass Demo   \n{  \npublic int a; \ninternal int x;  \nprotected  double d;  \nfloat m;  // private by default  \n}  \n  \n 25 ' metadata={'source': 'dotnet.pdf', 'page': 24}
"
"page_content='We canno t declare more than one member data or member function under an \naccessibility modifier.  \n \nRead Only Member   \nWhen creating a member variable of a class, one of the decisions you make consists of deciding \nhow the field would get its value(s). Sometimes you wi ll allow the clients of the class to change \nthe values of the field. In some other cases, you may want the field to only hold or present the \nvalue without being able to change it. This can still allow the clients to access the field and its \nvalue but on a read-only basis.   \nTo create a field whose value can only be read, precede its data type, during declaration, with the \nreadonly keyword. Here is an example:  \n \npublic readonly  double PI;  \n \nAfter declaring the variable, you should initialize it. You have two  main alternatives. You can \ninitialize the field when declaring it. Here is an example:   \nExample \nusing System;  \nnamespace Geometry  \n{ \nclass Circle  \n{ \npublic double Radius;  \n \npublic Circle(double rad)   \n{ \nRadius = rad;  \n} \n \npublic readonly double PI = 3.14159;   \n} \nclass Exercise  \n{ \nstatic int Main()  \n{ \nCircle circ = new Circle(24.72);  \n \nConsole.WriteLine(""Circle Characteristics"");   \nConsole.WriteLine(""Radius: {0}"", circ.Radius);   \nConsole.WriteLine(""PI:  {0}\\n"", circ.PI);  \n \nreturn 0;   \n} \n} \n} \n \nOUTPUT:   \nCircle Characteristic s \nRadius: 24.72  \nPI: 3.14159  \n \n26 ' metadata={'source': 'dotnet.pdf', 'page': 25}
"
"page_content=' \nObject Creation   \nIn C# objects are created using the new keyword. Actually it new is an operator, creates an \nobject of the specified class and returns a reference to that object. Here is an example :  \n \npublic class Exercise   \n{ \npublic void Welcome()  \n{ \nConsole.WriteLine(""This is Exercise class"");  \n} \n} \n \npublic class Class1   \n{ \nstatic void Main()  \n{ \nExercise exo = new Exercise();  \n} \n} \n \n \n \n \nConstructor and Destructor   \nWhen you declare a variable of a class, a special method must b e called to initialize the members \nof that class. This method is automatically provided for every class and it is called a constructor.  \nDefault Constructor   \nWhenever you create a new class, a constructor is automatically provided to it. This particular \nconstructor is called the default constructor. You have the option of creating it or not. Although a \nconstructor is created for your class, you can customize its behavior or change it tremendously.   \nA constructor holds the same name as its class and doesn\'t r eturn any value, not even void. Here \nis an example:   \nLike every method, a constructor can be equipped with a body. In this body, you can access any \nof the member variables (or method(s)) of the same class. When introducing classes other than \nthe main class , we saw that, to use such a class, you can declare its variable and allocate memory \nusing the new operator. You can notice that we always included the parentheses when declaring \nsuch a variable. Here is an example:  \npublic class Class1  \n{ \nstatic void Mai n() \n{ \nExercise exo = new Exercise();  \n}  \n}  \nIn this case, the parentheses indicate that we are calling the default constructor to instantiate the \nclass.  \nConsider the following Example:   \nExample \nusing System;  \n \n27 ' metadata={'source': 'dotnet.pdf', 'page': 26}
"
"page_content='public class Exercise   \n{ \npublic void Welcom e() \n{ \nConsole.WriteLine(""The wonderful world of C# programming"");   \n} \n \npublic Exercise()   \n{ \nConsole.WriteLine(""The Exercise class is now available"");  \n}  \n} \n \npublic class Class1   \n{ \nstatic void Main()  \n{ \nExercise exo = new Exercise();  \n} \n} \nOUTPUT:   \nThe Exercise class is now available  \n \n \nThis shows that, when a class has been instantiated, its constructor is the first method to be \ncalled. For this reason, you can use a constructor to initialize a class, that is, to assign default \nvalues to its member variables. Whe n a constructor is used to initialize a variable declared for a \nclass. That constructor is referred to as an instance constructor.  \n \nParameterized Constructor   \nIn the previous section, we saw that there is always a default constructor for a new class that y ou \ncreate; you just the option of explicitly creating one or not. The default constructor as we saw it \ndoesn\'t take arguments: this is not a rule, it is simply assumed. Instead of a default constructor, \nyou may want to create a constructor that takes an ar gument. Here is an example:  \nusing System;  \npublic class Quadrilateral  \n{ public Quadrilateral(double side) \n{…….  \n} \n} \npublic class Class1  \n{ \nstatic void Main()   \n{ \n \nQuadrilateral Square = new Quadrilateral(6.55);  \n \n}  \n} \n \n \n \n28 ' metadata={'source': 'dotnet.pdf', 'page': 27}
"
"page_content=""Static Constructor   \nLike the ab ove described instance constructors, a static constructor is used to initialize a class. \nThe main difference is that a static constructor works internally, in the class. Therefore, it is not \nused to initialize a variable of the class and you can never decl are a variable of a class using a \nstatic constructor.   \nTo make a constructor static, when creating it, type the static  keyword to its left. Here is an \nexample:  \n \nusing System;  \n \npublic class Quadrilateral   \n{  \nstatic Quadrilateral()   \n{ \n \n}  \n} \n \npublic class Class1   \n{ \nstatic void Main()  \n{ \n \n/* Use the default constructor to initialize \nan instance of the class */  \n \nQuadrilateral Square = new Quadrilateral();   \n} \n} \n \n \nIn the above class, a static constructor is created for the class but the default constructor is \nstill available and it is used to instantiate the class.  \n \nConstructor Overloading   \nA constructor is the primary method of a class. It allows the programmer to initialize a variable of a \nclass when the class is instantiated. A constructor that plays this rol e of initializing an instance of a \nclass is also called an instance constructor. Most of the time, you don't even need to create a \nconstructor, since one is automatically provided to any class you create. Sometimes too, as we have \nseen in some classes, you  need to create your own class as you judge it necessary. And sometimes, a \nsingle constructor may not be sufficient. For example, when creating a class, you may decide, or find \nout, that there must be more than one way for a user to initialize a variable.   \nLike any other method, a constructor can be overloaded. In other words, you can create a class \nand give it more than one constructor. The same rules used on overloading regular methods also \napply to constructors: the different constructors must have diffe rent number of arguments or a \ndifferent number of arguments.  \n \nExample \nusing System;   \npublic class Applicant  \n{ \npublic string FullName; \npublic string Address; \npublic string City; \npublic string State;  \n \n29 "" metadata={'source': 'dotnet.pdf', 'page': 28}
"
"page_content='public string ZIPCode; \npublic string Sex;   \npublic str ing \nDateOfBirth; public int \nWeight; public string \nHeight; public int Race;  \n \n// The default constructor, used to initialize an   \n// Applicant instance without much \ninformation public Applicant()  \n{  \nthis.FullName = ""Unknown""; \nthis.Sex = ""Ungenerated"";   \n} \n \n// A const ructor that is passed only one \nargument public Applicant(string n)  \n{  \nthis.FullName = n;  \n}  \n \n// A constructor with more than one argument   \n// This type is suitable to completely initialize a \nvariable public Applicant(string n, string s, string dob)   \n{   \nthis.FullName = n; \nthis.Sex = s; \nthis.DateOfBirth = dob;  \n}  \n} \n \npublic class Exercise   \n{ \nstatic Applicant RegisterPersonalInformation()  \n{ \nstring name; \nchar sex;   \nstring gender = \nnull; string dob;  \n \n \nConsole.WriteLine("" ** Motor Vehicle Administration \n**""); Conso le.WriteLine(""Applicant\'s Registration""); \nConsole.Write(""Full Name: "");   \nname = Console.ReadLine();  \n \ndo  \n{ \nConsole.Write(""Sex(F=Female/M=Male): \n""); sex = char.Parse(Console.ReadLine());  \n \nif( (sex != \'f\') && (sex != \'F\') && (sex != \n\'m\') && (sex != \'M\') )   \nConsole.WriteLine(""Please enter a valid character"");  \n \n}while( (sex != \'f\') && (sex != \'F\') && \n(sex != \'m\') && (sex != \'M\') );  \n \nif( (sex == \'f\') || sex == \'F\' ) \ngender = ""Female"";  \n \n30 ' metadata={'source': 'dotnet.pdf', 'page': 29}
"
"page_content='else if( (sex == \'m\') || (sex == \'M\') )   \ngender = ""Male"";  \n \nConsole.Write( ""Date of Birth(mm/dd/yyyy): "");   \ndob = Console.ReadLine();  \n \nApplicant person = new Applicant(name, gender, dob);  \n \nreturn person;   \n} \n \nstatic void Show(Applicant person)   \n{ \nConsole.WriteLine("" \\n ** Motor Vehicle Administration **"");  \nConsole.WriteLine("" --- Applicant\'s Personal Information ---""); \nConsole.WriteLine(""Full Name:   {0}"", person.FullName);  \nConsole.WriteLine(""Sex:  {0}"", person.Sex);  \nConsole.WriteLine(""Date of Birth: {0} \\n"", person.DateOfBirth);   \n} \n \npublic static int Main()   \n{ \nApplicant App = new App licant();  \n \nApp = RegisterPersonalInformation();   \nShow(App);  \n \nreturn 0;   \n} \n} \n \nOUTPUT:  \n \n** Motor Vehicle Administration \n** Applicant\'s Registration  \nFull Name: Dominique Monay \nSex(F=Female/M=Male): d \nPlease enter a valid character \nSex(F=Female/M=Male): M   \nDate of Birth(mm/dd/yyyy): 06/10/1972  \n \n** Motor Vehicle Administration **   \n--- Applicant\'s Personal Information ---  \nFull Name: Dominique Monay \nSex: Male   \nDate of Birth: 06/10/1972  \n \nDestructor   \nWhile a constructor is a method used to initialize an instance of  a class, a destructor is used to \ndestruct an instance of class when that variable is not used anymore. Like the constructor, the \ndestructor has the same name as the class. To indicate that the method is a destructor, its name is \npreceded with a tilde.   \nExample \nusing System;  \n \nclass SampleClass  \n \n31 ' metadata={'source': 'dotnet.pdf', 'page': 30}
"
"page_content='{  \n// Constructor  \npublic SampleClass()  \n{ \nConsole.WriteLine(""SampleClass - Constructor"");   \n} \n \n~SampleClass()   \n{  \nConsole.WriteLine(""Destructor of SampleClass"");  \n} \n} \n \npublic class NewProject   \n{ \n \nstatic void Main()   \n{  \nSampleClass Sample = new SampleClass();  \n \nConsole.WriteLine(―Welcome‖);   \n} \n} \nOUTPUT:  \nSampleClass - \nConstructor Welcome   \nDestructor of SampleClass  \n \nLike a (default) constructor, a destructor is automatically created for your class but you can also \ncreate  it if you want. A class can have only one constructor. If you don\'t create it, the compiler would \ncreate it for your class. If you create it, the compiler would not create another. A destructor cannot \nhave an access level. A destructor is called when the memory that a class was used is no longer \nneeded. This is done automatically by the compiler. For this reason, you will hardly need to create a \nconstructor, since its job is automatically taken care of behind the scenes by the compiler . \n \n2.5 Inheritance an d Polymorphism   \nInheritance means taking an existing class and adding functionality by deriving a new class \nfrom  it. \nThe class you start with is called the base class , and the new class you create is called the \nderived  class .  \nWhen you derive a class from another class, the new class gets all the functionality of the \nbase class plus whatever new features you add. You can add data members and functions to \nthe new class, but you cannot remove anything from what the base class offers.  \n \nIn C# inheritance may be  implemented in different combinations as illustrated in figure \n6.1and they include :  \n1) Single Inheritance  \n2) Multilevel Inheritance  \n3) Multiple Inheritance  \n4) Hierarchical Inheritance  \n \nClass A   \nClass A  \n \n \n \nClass A   Class A  32 Class A   Class A  \n       ' metadata={'source': 'dotnet.pdf', 'page': 31}
"
"page_content=' \n \n \n \nSingle inheritance  Hierarchical inheritance  \n \n \n \n \nClass A   Class A   Class A  \n     \n \n \nClass A  \n \n \n \n \n Class A    Class A   \n      \n      \nMultilevel inheritance  Multiple inheritance  \n \nFigure   \nThe Multiple inheritance does not directly implemented by C#. But we ca n implement the \nconcept of multiple inheritance using interface.  \nDerived class definition   \nA derived class can be defined with specifying its relationship with the base class. The syntax \nand general form of derived class is:   \nclass derived -class -name : bas e-class -name   \n{ \nmembers of \nclass };  \n \nClass Modifiers   \nWhen implementing inheritance, it is important to understand how establish accessibility level \nfor our classes and their members. Class modifier is used to decide which parts of the system \ncan create cl ass objects.  \nBasically there are four different - optional - class modifiers. These are :  \n\uf0b7 public \uf020 \uf020\n\uf0b7 internal \uf020\n\uf0b7 protected \uf020\n\uf0b7 private \uf020  \nThese are used to specify the access levels of the types defined by the classes. The \nfollowing different access levels can be specified with above four modifiers:   \n\uf0b7 protected internal \uf020 \uf020\n\uf0b7 new \uf020\n\uf0b7 abstract \uf020\n\uf0b7 sealed \uf020\n \n \n \n33 ' metadata={'source': 'dotnet.pdf', 'page': 32}
"
"page_content=""public   \nThe 'public' keyword identifies a type as fully accessible to all other types. This is the \nimplicit accessibility of enumeration members and interface members.  \ninternal   \nIf a class is declared as 'internal', the type it defines is accessible only to types within the same \nassembly (a self -contained 'unit of packaging' containing code, metadata etc.). This is the \ndefault access level of non -nested classes.  \nprotect ed \nIf a class is declared as 'protected', its type is accessible by a containing type and any type \nthat inherits from this containing type. This modifier should only be used for internal \nclasses (ie. classes declared within other classes).  \nprivate  \nWhere a class is declared as 'private', access to the type it defines is limited to a containing \ntype only. This modifier should only be used for internal classes (ie. classes declared within \nother classes).  \nprotected internal  \nThe permissions allowed by this acces s level are those allowed by the 'protected' level plus \nthose allowed by the 'internal' level. The access level is thus more liberal than its parts taken \nindividually. This modifier should only be used for internal classes (ie. classes declared within \nother classes).  \nnew \nThe 'new' keyword can be used for 'nested' classes. A nested class is one that is defined in the \nbody of another class; it is in most ways identical to a class defined in the normal way, but its \naccess level cannot be more liberal than that  of the class in which it is defined. A nested class \nshould be declared using the 'new' keyword just in case it has the same name as (and thus \noverrides) an inherited type.  \nabstract  \nA class declared as 'abstract' cannot itself be instanced - it is designed  only to be a base class \nfor inheritance.  \nsealed   \nA class declared as 'sealed' cannot be inherited from other classes.  \nAbstract Classes   \nIn C#, you can create a class whose role is only meant to provide fundamental characteristics for \nother classes. This t ype of class cannot be used to declare a variable of the object. Such a class is \nreferred to as abstract. Therefore, an abstract class can be created only to serve as a parent class \nfor others. To create an abstract class, type the abstract  keyword to the left of its name. Here is \nan example:  \nabstract class Ball  \n{  \nprotected int TypeOfSport; \nprotected string Dimensions;   \n} \n \nThe important features of abstract class are:   \n\uf0b7 The abstract class may contain the one or more abstract methods \uf020 \uf020\n\uf0b7 The abstract class  cannot be instantiate in the other classes \uf020\n\uf0b7 If your are inheriting the abstract class in other class, you should implement all the \nabstract methods in the derived class. \uf020\n \n \n \n34 "" metadata={'source': 'dotnet.pdf', 'page': 33}
"
"page_content=""Example  \n \nusing System; \nabstract class First  \n{ \nprotected string s = ― ‖;  \npubli c abstract void SayHello();   \n} \n \nclass Second : First   \n{ \npublic override  void SayHello()  \n{ \ns = ―Hello World‖; \nConsole.WriteLine(―{0}‖,s);  \n} \n} \n \nclass mainclass   \n{ \npublic static void Main()  \n{  \nSecond S = new Second();  \n \nS.SayHello();   \n} \n} \nOUTPUT:   \nHello World  \n \nIn class First we define abstract method called SayHello().  But there is no implementation. The \nclass Second derived from the class First and inherits the abstract class, where we overriding the \nSayHello() method. Overriding is discussed in the section of  polymorphism in more detail.  \n \nSealed Class   \nAny of the classes we have used so far in our lessons can be inherited from. If you create a \ncertain class and don't want anybody to derive another class from it, you can mark it as sealed. In \nother words, a sea led class is one that cannot serve as base for another class.   \nTo mark a class as sealed, type the sealed  keyword to its left. Here is an \nexample: public sealed class Ball  \n{ \npublic int TypeOfSport; \npublic string Dimensions;  \n} \n \n \nPolymorphism   \nPolymorphi sm is a feature to use one name in many forms. There Polymorphism can be \nachieved in following ways in c#:   \n\uf0b7 Method Overloading \uf020\n \n35 "" metadata={'source': 'dotnet.pdf', 'page': 34}
"
"page_content=""\uf0b7 Method Overriding \uf020 \uf020\n\uf0b7 Method Hiding \uf020  \nMethod overloading ,discussed in chapter 5, means one method name with different argume nts. \nMethod overriding and hiding makes use of the following three method -head keywords   \n\uf0b7 new \uf020 \uf020\n\uf0b7 virtual, \uf020\n\uf0b7 override \uf020  \nThe main difference between hiding and overriding relates to the choice of which method to \ncall where the declared class of a variable is di fferent to the run -time class of the object it \nreferences. This point is explained further below.  \nMethod Overriding  \nSuppose that we define a Square class which inherits from a Rectangle class (a square being \na special case of a rectangle). Each of these cl asses also specifies a 'getArea' instance \nmethod, returning the area of the given instance.   \nFor the Square class to 'override' the Rectangle class' getArea method, the Rectangle class' \nmethod must have first declared that it is happy to be overridden. One  way in which it can do \nthis is with the 'virtual'  keyword. So, for instance, the Rectangle class' getArea method might \nbe specified like this:   \npublic virtual  double getArea() \nreturn length * width;   \n}  \nTo override this method the Square class would then  specify the overriding method with \nthe 'override' keyword. For example:   \npublic override  double getArea()   \n{ \nreturn length * length;  \n} \n \n \nNote that for one method to override another, the overridden method must not be static, and it \nmust be declared as ei ther 'virtual', 'abstract'  or 'override '. Furthermore, the access modifiers \nfor each method must be the same.   \nThe major implication of the specifications above is that if we construct a new Square instance \nand then call its 'getArea' method, the method ac tually called will be the Square instance's \ngetArea method. So, for instance, if we run the following code:   \nSquare sq = new Square(5); \ndouble area = sq.getArea();   \nthen the getArea method called on the second line will be the method defined in the Squ are \nclass. There is, however, a more subtle point. To show this, suppose that we declare two \nvariables in the following way:   \nSquare sq = new Square(4); \nRectangle r = sq;   \nHere variable r refers to sq as a Rectangle instance (possible because the Squar e class derives \nfrom the Rectangle class). We can now raise the question: if we run the following code  \n \ndouble area = r.getArea();  \n \nthen which getArea method is actually called - the Square class method or the Rectangle \nclass method?  \n \n36 "" metadata={'source': 'dotnet.pdf', 'page': 35}
"
"page_content=""The answer in  this case is that the Square class method would still be called. Because the \nSquare class' getArea method 'overrides' the corresponding method in the Rectangle class, \ncalls to this method on a Square instance always 'slide through' to the overriding metho d. \nMethod Hiding   \nWhere one method 'hides' another, the hidden method does not need to be declared with any \nspecial keyword. Instead, the hiding method just declares itself as 'new' . So, where the Square \nclass hides the Rectangle class' getArea method, the  two methods might just be written thus:   \npublic double getArea() // in Rectangle   \n{ \nreturn length * width;  \n} \n \n \n \npublic new double getArea() // in Square   \n{ \nreturn length * length;  \n} \n \n \n \nNote that a method can 'hide' another one without the access modifie rs of these methods being \nthe same. So, for instance, the Square's getArea method could be declared as private, viz:   \nprivate new double getArea()   \n{ \nreturn length * length;  \n} \n \n \n \nThis leads us to an important point. A 'new' method only hides a super -class  method with a \nscope defined by its access modifier. Specifically, where the access level of the hiding method \nis 'private', as in the method just described, this method only hides the super -class method for \nthe particular class in which it is defined.   \nTo make this point more concrete, suppose that we introduced a further class, SpecialSquare, which \ninherits from Square. Suppose further that SpecialSquare does not overwrite the getArea method. In \nthis case, because Square's getArea method is defined as pri vate, SpecialSquare inherits its getArea \nmethod directly from the Rectangle class (where the getArea method is public).   \nThe final point to note about method hiding is that method calls do not always 'slide through' in \nthe way that they do with virtual met hods. So, if we declare two variables thus:   \nSquare sq = new Square(4);  \n \nRectangle r = sq;  \n \n \nthen run the code   \ndouble area = r.getArea();   \nthe getArea method run will be that defined in the Rectangle class, not the Square class.  \n \n \n \n \n37 "" metadata={'source': 'dotnet.pdf', 'page': 36}
"
"page_content="" \nPropertie s  \nThis Chapter teaches C# Properties. Our objectives are as follows:  \n\uf0b7 Understand What Properties Are For. \uf020\n\uf0b7 Implement a Property. \uf020\n\uf0b7 Create a Read -Only Property. \uf020\n\uf0b7 Create a Write -Only Property. \uf020\n\uf0b7 Create an auto -implemented property. \uf020\nOverview of Properties   \nProperties provide the opportunity to protect a field in a class by reading and writing to it \nthrough the property. In other languages, this is often accomplished by programs implementing \nspecialized getter and setter methods. C# properties enable this type o f protection while also \nletting you access the property just like it was a field.   \nAnother benefit of properties over fields is that you can change their internal implementation \nover time. With a public field, the underlying data type must always be the sa me because calling \ncode depends on the field being the same. However, with a property, you can change the \nimplementation. For example, if a customer has an ID that is originally stored as an int, you \nmight have a requirements change that made you perform a  validation to ensure that calling \ncode could never set the ID to a negative value. If it was a field, you would never be able to do \nthis, but a property allows you to make such a change without breaking code. Now, lets see how \nto use properties.  \nCreating Read -Only Properties  \nProperties can be made read -only. This is accomplished by having only a get accessor in \nthe property implementation.  \nCreating a Write -Only Property   \nYou can assign values to, but not read from, a write -only property. A write -only prope rty only \nhas a set accessor.  \nIndexers   \nIndexers are real easy. They allow your class to be used just like an array. On the inside of a \nclass, you manage a collection of values any way you want. These objects could be a finite set \nof class members, another array, or some complex data structure. Regardless of the internal \nimplementation of the class, its data can be obtained consistently through the use of indexers. \nHere's an example.   \nAn Example \nusing System;  \n \n/// <summary>   \n/// A simple indexer example.  \n/// </summary >  \nclass IntIndexer  \n{  \nprivate string[] myData;  \n \npublic IntIndexer(int size)   \n{  \nmyData = new string[size];  \n \nfor (int i=0; i < size; i++)   \n{ \n \n38 "" metadata={'source': 'dotnet.pdf', 'page': 37}
"
"page_content='myData[i] = ""empty"";   \n} \n} \npublic string this[int pos]  \n{ \nget \n{ \nreturn myData[pos];  \n} \nset \n{ \nmyData[pos] = value;  \n}  \n} \n \nstatic void Main(string[] args)   \n{  \nint size = 10;  \n \nIntIndexer myInd = new IntIndexer(size);  \n \nmyInd[9] = ""Some Value""; \nmyInd[3] = ""Another Value""; \nmyInd[5] = ""Any Value"";  \n \nConsole.WriteLine("" \\nIndexer Output \\n""); \n \nfor (int i=0; i < size; i++)   \n{ \nConsole.WriteLine(""myInd[{0}]: {1}"", i, myInd[i]);  \n} \n}  \n} \n \nOverloaded Indexers that accept different types   \nAdditionally, Indexers can be overloaded. In listing 11 -2, we modify the previous program \nto accept overloaded Indexers that accept different types.   \nListing 11 -2. Overloaded Indexers: \nOvrIndexer.cs using System;  \n \n/// <summary>   \n/// Implements overloaded indexers.  \n/// </summary>  \nclass OvrIndexer  \n{  \nprivate string[] myData; \nprivate int arrSize;  \n \npublic OvrIndexer(int size)   \n{ \n \n39 ' metadata={'source': 'dotnet.pdf', 'page': 38}
"
"page_content='arrSize = size;   \nmyData = new str ing[size];  \n \nfor (int i=0; i < size; i++)   \n{ \nmyData[i] = ""empty"";  \n}  \n} \n \npublic string this[int pos]   \n{ \nget \n{ \nreturn myData[pos];  \n} \nset \n{ \nmyData[pos] = value;  \n} \n} \n \npublic string this[string data]   \n{ \nget \n{  \nint count = 0;  \n \nfor (int i=0; i < arrSize; i++)   \n{ \nif (myData[i] == data)  \n{ \ncount++;  \n} \n} \nreturn count.ToString();  \n} \nset \n{ \nfor (int i=0; i < arrSize; i++)  \n{ \nif (myData[i] == data)  \n{ \nmyData[i] = value;  \n} \n} \n} \n} \n \nstatic void Main(string[] args)   \n{ \n \n40 ' metadata={'source': 'dotnet.pdf', 'page': 39}
"
"page_content='int size = 10;   \nOvrIndexer myInd = new OvrIndexer(size);  \n \nmyInd[9] = ""Some Value""; \nmyInd[3] = ""Another Value""; \nmyInd[5] = ""Any Value"";  \n \nmyInd[""empty""] = ""no value"";  \n \nConsole.WriteLine("" \\nIndexer Output \\n""); \n \nfor (int i=0; i < size; i++)   \n{ \nConsole.WriteLine(""myInd[{0}]: {1}"", i, myInd[i]);  \n} \n \nConsole.WriteLine("" \\nNumber of \\""no value \\"" entries: {0}"", myInd[""no value""]);   \n} \n} \nAn indexer with multiple parameters  \nAn Indexer signature is specified by the number and type of parameters in an Indexers \nparameter list. The class will be smart enough to figure out which Inde xer to invoke, based on \nthe number and type of arguments in the Indexer call. An indexer with multiple parameters \nwould be implemented something like this:  \npublic object this[int param1, ..., int paramN]  \n{ \nget {  \n// process and return some class data  } \nset {  \n// process and assign some class data  } \n} \nref ,out and params   \nThe out method parameter keyword on a method parameter causes a method to refer to the same \nvariable that was passed into the method. Any changes made to the parameter in the method wil l \nbe reflected in that variable when control passes back to the calling method.   \nDeclaring an out method is useful when you want a method to return multiple values. A method \nthat uses an out parameter can still return a value. A method can have more than o ne out \nparameter.   \nTo use an out parameter, the argument must explicitly be passed to the method as an out \nargument. The value of an out argument will not be passed to the out parameter.  \nA variable passed as an out argument need not be initialized. However , the out parameter must \nbe assigned a value before the method returns.  \nA property is not a variable and cannot be passed as an out parameter.   \nAn overload will occur if declarations of two methods differ only in their use of out. However, it \nis not possib le to define an overload that only differs by ref and out. For example, the following \noverload declarations are valid:  \nclass MyClass  \n{ \npublic void MyMethod(int i) {i = 10;} \npublic void MyMethod(out int i) {i = 10;}  \n \n41 ' metadata={'source': 'dotnet.pdf', 'page': 40}
"
"page_content=""}  \nwhile the following overload decl arations are \ninvalid: class MyClass  \n{  \npublic void MyMethod(out int i) {i = 10;} \npublic void MyMethod(ref int i) {i = 10;}  \n} \nExample: \n// cs_out.cs   \nusing System; public \nclass MyClass  \n{ \npublic static int TestOut(out char i)  \n{  \ni = 'b'; \nreturn -1;  \n} \n \npublic  static void Main()   \n{ \nchar i; // variable need not be initialized \nConsole.WriteLine(TestOut(out i)); \nConsole.WriteLine(i);  \n} \n} \nOutput: \n-1  \nB \n \nref Keyword:   \nThe ref method parameter keyword on a method parameter causes a method to refer to the \nsame variabl e that was passed into the method. Any changes made to the parameter in the \nmethod will be reflected in that variable when control passes back to the calling method.   \nusing System; public \nclass MyClass  \n{ \npublic static void TestRef(ref char i)  \n{  \n// The val ue of i will be changed in the calling \nmethod i = 'b';  \n} \n \npublic static void TestNoRef(char i)   \n{  \n// The value of i will be unchanged in the calling \nmethod i = 'c';   \n} \n \npublic static void Main()   \n{ \n \n42 "" metadata={'source': 'dotnet.pdf', 'page': 41}
"
"page_content=' \nchar i = \'a\'; // variable must be initialized \nTestR ef(ref i); // the arg must be passed as \nref Console.WriteLine(i);  \nTestNoRef(i);  \nConsole.WriteLine(i);  \n} \n}  \nOUTPUT: \nb  \nb \nParameter Arrays(Params)   \n• A parameter declared with a params modifier is a parameter array. If a formal parameter \nlist includes a parame ter array, it must be the last parameter in the list and it must be of a \nsingle -dimensional array type.   \n• For example, the types string[] and string[][] can be used as the type of a parameter array, \nbut the type string[,] cannot.  \n• It is not possible to com bine the params modifier with the modifiers ref and out.   \n• A parameter array permits arguments to be specified in one of two ways in a \nmethod invocation:  \n– The argument given for a parameter array can be a single expression of a type that is \nimplicitly co nvertible to the parameter array type.  \n– Alternatively, the invocation can specify zero or more arguments for the parameter array, \nwhere each argument is an expression of a type that is implicitly convertible to the \nelement type of the parameter array. In  this case, the invocation creates an instance   \nof the parameter array type with a length corresponding to the number of \narguments, initializes the elements of the array instance with the given argument \nvalues, and uses the newly created array instance as  the actual argument.   \nusing System; \nclass Test {  \nstatic void F(params int[] args) {   \nConsole.Write(""Array contains {0} elements:"", \nargs.Length); foreach (int i in args)  \nConsole.Write("" {0}"", \ni); Console.WriteLine();  \n}  \nstatic void Main() \n{ int[] arr = {1,  2, \n3}; F(arr);   \nF(10, 20, 30, \n40); F();  \n} }  \n \n2.6 Operator Overloading   \nOverloading  \nAnother important and exciting feature object -oriented programming is Operator overloading. C# \nsupports the concept of operator overloading. Operator overloading is a concept  in which operator  \n \n43 ' metadata={'source': 'dotnet.pdf', 'page': 42}
"
"page_content='can defined to work with the user -defined data types such as structs and classes in the same way \nas the pre -defined data types.  \n \nExample using \nSystem; public \nclass Item  \n{  \npublic int i; \npublic Item( int j)  \n{ \ni = j;  \n} \n \npublic static  Item operator + ( Item x , Item y)  \n \n{  \nSystem.Console.WriteLine(―operator +‖ + x.i +― ‖+ \ny.i); Item z = new Item(x.i+y.i);  \nreturn z;  \n} \n} \n \npublic class Test   \n{ \npublic static void Main() \n{ Item a = new Item(10); \nItem b = new Item(5); \nItem c;   \nc = a + b ; \nSystem.Console.WriteLine(c.i);  \n}  \n} \n \nOutput: \noperator + 10 5 \n15 \n \n \nThere are many operators that cannot be overloaded. Which are listed below:   \n\uf0b7 Conditional Operator  & &, ||  \n\uf0b7 Compound Assignment  +=, -=, *=, /=, %=  \n\uf0b7 Other Operators  [], (), = , ?:, ->, new, sizeof,  \n  types of, is, as  \n \n2.7 Interfaces, Delegates and Events.   \nInterface   \nImagine you start creating a class and, while implementing or testing it, you find out that this \nparticular class can be instead as a general base that other classes can be derived from. An  \n \n \n44 ' metadata={'source': 'dotnet.pdf', 'page': 43}
"
"page_content=""interface is a special class whose purpose is to serve as a template that actual classes can be \nbased on.  \nAn interface is primarily created like a class: it has a name, a body and can have members. To \ncreate an interface, instead of the class keyword, you use the interface keyword. By convention, \nthe name of an interface starts with I. Here is an example:  \n \ninterface ICourt Dimensions   \n{  \n}  \nAn interface is mostly used to lay a foundation for other classes. For this reason, it is the prime \ncandidate for class derivation. To derive from an interface, use the same technique we have \napplied in inheritance so far. Here is an e xample of a class named SportBall that derives from an \ninterface named ISportType : \n \npublic class SportBall : ISportType   \n{  \nint players; \nstring sport;   \n}  \nJust as you can derive a class from an interface, you can create an interface that itself is base d on \nanother interface. Here is an example:  \npublic interface ISportType : IBall  \n{ \n}  \nThe C# language doesn't allow multiple inheritance which is the ability to create a class based on \nmore than one class. Multiple inheritance is allowed only if the bas es are interfaces. To create \nmultiple inheritance, separate the names of interface with a comma. Here is an example:  \npublic interface ISportType : IBall, ICourtDimensions  \n{  \n}  \nYou can also involve a class as parent in a multiple inheritance scenario b ut there must be only \none class. Here is an example in which a class called Sports derives from one class and various \ninterfaces:  \npublic interface Sports: Player, IBall, ICourtDimensions  \n{ \n} \n \nExample   \n// implementation of multiple \ninterface using Syst em; \n \ninterface Add   \n{ \nint sum();  \n} \ninterface Multiply  \n{ \nint mul();  \n} \n \n45 "" metadata={'source': 'dotnet.pdf', 'page': 44}
"
"page_content=' \nclass calculate : Add, Multiply   \n{ \nint a,b;  \npublic calculate( int x, int y)  \n{  \na = x; \nb = y;  \n} \npublic int sum()  \n{ \nreturn ( a + b );  \n} \npublic int mul()  \n{ \nreturn ( a * b );  \n} \n} \nclass MyInterface  \n{ \npublic static void Main()  \n{ \n \ncalculate cal = new calculate(5,10);  \n \nAdd A = (Add) cal;  // casting   \nConsole.WriteLine(―Sum : ‖ + A.sum());  \n \nMultiply M = (Multiply) cal; \nConsole.WriteLine(―Multiplication :‖ + M.mul());  \n}  \n} \n \nOUTPUT:  \n \nSum : 15   \nMultiplication : 50  \n \nDelegates   \nThe C and C++ languages are having the concept of function pointer. This was even more useful \nwhen programming for the Microsoft Windows operating systems  because the Win32 library relies on the \nconcept of callback functions.  Callback functions are used in Microsoft Windows  programming to process \nmessages. For this reason and because of their functionality, callback functions were carried out in \nthe .NET Framework but they were defined with the name of delegate.   \nA delegate is  a special type of user -defined variable that is declared globally, like a class. In fact, \na delegate is created like an interface but as a method. Based on this, a delegate provides a \ntemplate  for a method, like an interface provides a template for a clas s. Like an interface, a \ndelegate is not defined. Its role is to show what a useful method would look like. To support this \nconcept, a delegate can provide all the necessary information that would be used on a method. \nThis includes a return type, no argumen t or one or more arguments.  \n \n46 ' metadata={'source': 'dotnet.pdf', 'page': 45}
"
"page_content="" \nDelegate Declaration and Instantiation   \nDelegates can be specified on their own in a namespace, or else can be specified within \nanother class. In each case, the declaration specifies a new class, which inherits from  \nSystem .MulticastDelegate .  \nEach delegate is limited to referencing methods of a particular kind only. The type is indicated \nby the delegate declaration - the input parameters and return type given in the delegate \ndeclaration must be shared by the methods its del egate instances reference. To illustrate this: a \ndelegate specified as below can be used to refer only to methods which have a single String input \nand no return value:   \npublic delegate void Print (String s);   \nSuppose, for instance, that a class contains  the following method:   \npublic void realMethod (String myString)   \n{ \n// method code  \n}  \nAnother method in this class could then instantiate the 'Print' delegate in the following way, so \nthat it holds a reference to 'realMethod':   \nPrint delegateVariable = new Print(realMethod);   \nWe can note two important points about this example. Firstly, the unqualified method passed to \nthe delegate constructor is implicitly recognised as a method of the instance passing it. That is, \nthe code is equivalent to:   \nPrint delegateVariable = new Print(this.realMethod);   \nWe can, however, in the same way pass to the delegate constructor the methods of other class \ninstances, or even static class methods. In the case of the former, the instance must exist at the \ntime the metho d reference is passed. In the case of the latter (exemplified below), the class need \nnever be instantiated.   \nPrint delegateVariable = new Print(ExampleClass.exampleMethod);  \n \nExample \nusing System;  \ndelegate int operation(int x, int y)  \n{  \ndelegate int Op eration(int x, int \ny); class MathOpr  \n{ \npublic static int Add(int a, int b)  \n{ \nreturn(a + b);  \n} \npublic static int Sub(int a, int b)  \n{ \nreturn( a – b); \n} \npublic static int Mul(int a, int b)  \n{ \nreturn( a * b);  \n \n47 "" metadata={'source': 'dotnet.pdf', 'page': 46}
"
"page_content=""}  \n} \nclass Test  \n{  \nOperation opr1 = new Operati on (Mathopr.Add); \nOperation opr2 = new Operation (Mathopr.Sub); \nOperation opr3 = new Operation (Mathopr.Mul);  \n \n//invoking of delegates int \nans1 = opr1(200, 100); int \nans2 = opr2(200, 100); int \nans3 = opr3(20,10);  \n \nConsole.WriteLine(― \\n Addition :‖+ ans1); \nConsole.WriteLine(― \\n Subtraction :‖+ ans2); \nConsole.WriteLine(― \\n multiplication :‖+ ans3);  \n}  \n} \nOUTPUT:  \nAdiition : 300   \nSubtraction :100 \nMultiplication : 200  \n \nMulticast Delegates   \nThe second thing to note about the example is that all delegates can be co nstructed in this \nfashion, to create a delegate instance which refers to a single method. However, as we noted \nbefore, some delegates - termed 'multicast delegates'  - can simultaneously reference multiple \nmethods. These delegates must - like our Print dele gate - specify a 'void' return type.   \nOne manipulates the references of multicast delegates by using addition and subtraction . \nThe following code gives some examples:   \nPrint s = null;   \ns = s + new Print (realMethod);  \ns += new Print (otherRealMethod);   \nThe - and -= operators are used in the same way to remove method references from a \ndelegate. The following code gives an example of the use of multicast delegates.  \nExample \nusing System;   \ndelegate void \nMultiDel(); class MD  \n{ static public void Hello()  \n{  \nConsole.WriteLine(―Hello‖);  \n}  \nstatic public void Show()  \n{ \nConsole.WriteLine(― Hi‖);  \n} \n} \n \n \n48 "" metadata={'source': 'dotnet.pdf', 'page': 47}
"
"page_content=""class Test   \n{ \npublic static void Main()  \n{ \n//delegate instances   \nMultiDel M1 = new MultiDel(MD.Display); \nMultiDel M2 = new MultiDel(MD.Show);  \n \n//combine the deleg ates \nMultiDel M3 = M1 + M2; \nMultiDel M4 = M2 + M1;  \n \n//extracting the delegates \nMultiDel M5 = M3 – M2; \nMultiDel M6 = M4 – M1; \n \n//invoking \ndelegates M3();  \nM4();  \nM5();  \nM6();  \n} \n} \n \nOUTPUT:   \nHello  \nHi \n \nHi  \nHello  \n \nHello  \n \nHi \n \nEvents   \nIn object -oriented languages, o bjects expose encapsulated functions called methods. Methods are \nencapsulated functions which run when they are invoked.   \nSometimes, however, we think of the process of method invocation more grandly. In such a case, \nthe method invocation is termed an 'eve nt', and the running of the method is the 'handling' of the \nevent. An archetypal example of an event is a user's selection of a button on a graphical user \ninterface; this action may trigger a number of methods to 'handle' it.   \nWhat distinguishes events fro m other method invocations is not, however, that they must be \ngenerated externally. Any internal change in the state of a program can be used as an event. Rather, \nwhat distinguishes events is that they are backed by a particular 'subscription -notification'  model. An \narbitrary class must be able to 'subscribe to' (or declare its interest in) a particular event, and then \nreceive a 'notification' (ie. have one of its methods run) whenever the event occurs.   \nDelegates (in particular multicast delegates) are ess ential in realizing this subscription -notification \nmodel. The following example describes how Class 2 subscribes to an event issued by Class 1.  \n1. Class 1 is an issuer of E -events. It maintains a public multicast delegate D.  \n \n49 "" metadata={'source': 'dotnet.pdf', 'page': 48}
"
"page_content='2. Class 2 wants to respond t o E-events with its event -handling method M. It therefore adds onto \nD a reference to M.  \n3. When Class 1 wants to issue an E -event, it calls D. This invokes all of the methods which \nhave subscribed to the event, including M.  \nThe \'event\' keyword is used to de clare a particular multicast delegate (in fact, it is usual in the \nliterature to just identify the event with this delegate). The code below shows a class EventIssuer, \nwhich maintains an event field myEvent. We could instead have declared the event to be a  \nproperty instead of a field . To raise the myEvent event, the method onMyEvent is called (note \nthat we are checking in this method to see if myEvent is null - trying to trigger a null event gives \na run -time error).   \npublic class EventIssuer   \n{  \npublic d elegate void EventDelegate(object from, EventArgs \nargs); public event EventDelegate myEvent;  \nprotected virtual void onMyEvent(EventArgs args)  \n{ \nif (myEvent!=null) \nmyEvent(this, args);   \n}  \nA class which wanted to handle the events issued by an EventIssuer e i with its method \nhandleEvents would then subscribe to these events with the code:   \nei.myEvent += new EventIssuer.EventDelegate(handleEvents);  \n \nTips For Events   \nThe code above demonstrates some points about event -handling which are not enforced by \nthe lang uage architecture, but are used throughout the .Net framework as good practice.   \n1. When you want to raise an event in code, you don\'t tend to trigger the class\'s event \nobject directly. Rather, you call a \'protected, virtual\' method to trigger it (cf. the \nonM yEvent method above).   \n2. By convention, when events are raised they pass two objects to their subscribers. The first is \na reference to the class raising the event; the second is an instance of the System.EventArgs \nclass which contains any arbitrary data abo ut the event.  \n3. If an event is not interested in passing data to subscribers, then its defining delegate will still \nreference an EventArgs object (but a null value will be passed by the event). If an event should \npass data to its subscribers, however, then it is standard to use a specific class which derives \nfrom the EventArgs class to hold this data.   \n4. When you write a class which inherits from an event -raising base class, you can \'intercept\' \nan event by overriding the method used to raise it. The following  code illustrates such an \nintercept - classes which subscribe to the event will never receive notifications about it.  \n \nprotected override void onMyEvent(EventArgs args)   \n{ \nConsole.WriteLine(""hello"");  }  \nIf you want subscribers to continue to receive notif ications despite such an \'intercepting\' \nmethod, however, then you can call the base class method as in the following:  \n \nprotected override void onMyEvent(EventArgs \nargs) { Console.WriteLine(""hello"");  \nbase.onMyEvent(args);  }  \n \n50 ' metadata={'source': 'dotnet.pdf', 'page': 49}
"
"page_content=' \n2.8 Type conversion   \nThere  are two types of conversions:  \n1. Implicit Conversion  \n2. Explicit Conversion  \n \nImplicit Conversion : In implicit conversion the compiler will make conversion for us \nwithout  asking.   \nchar -> int -> float is an example of data compatibility. Complier checks for t ype compatibility \nat compilation.  \nExplicit Conversion: In explicit conversion we specifically ask the compiler to convert the \nvalue  into another data type.CLR checks for data compatibility at runtime.Explicit conversion is \ncarried out using casts. When we cast one type to another, we deliberately force the compiler to \nmake the transformation.Casting of big data type into small may lead to loosing of data.  \n \nMicrosoft .NET provides three ways of type conversion:   \n1. Parsing(int.Parse()  \n2. Convert Class(Convert.ToI nt32())  \n3. Explicit Cast Operator ()  \n \nParsing   \nParsing is used to convert string type data to primitive value type. For this we use parse \nmethods with value types.  \n \nConvert Class : One primitive type to another primitive type.   \nThis class contains different static methods like ToInt32(), ToInt16(), ToString(), \nToDateTime() etc used in type conversion.  \n \nBoxing and unboxing   \nBoxing and unboxing is an important concept in C# type system. With Boxing and unboxing \none can link between value -types and reference -types by allowing any value of a value -type to \nbe converted to and from type object.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nBoxing   \n• Boxing is a mechanism in which value type is converted into reference type.   \n• It is implicit conversion process in which object type (super type) is u sed.  \n• In this process type and value both are stored in object type  \n \n \n \n51 ' metadata={'source': 'dotnet.pdf', 'page': 50}
"
"page_content='Unboxing   \n• Unboxing is a mechanism in which reference type is converted into value.   \n• It is explicit conversion process.  \nExample    \nint i, j; \nobject  obj; \nstring  s; \ni  = 32;  \nobj = i; // boxed copy!  \ni = 19;  \nj = (int) obj; // unboxed!  \ns = j.ToString();  // boxed!  \ns = 99.ToString(); // boxed!  \nDifference Between Int32.Parse(), Convert.ToInt32(), and Int32.TryParse(),(int)   \nInt32.Parse (string s) method converts the string representati on of a number to its 32 -bit \nsigned integer equivalent.   \n–   When s is a null reference, it will throw ArgumentNullException.   \n–  If s is other than integer value, it will throw FormatException.   \n– When s represents a number less than MinValue or greater  than MaxValue, it will \nthrow OverflowException.  \n• (int) will only convert types that can be represented as an integer (ie double, long, \nfloat, etc) although some data loss may occur.  \n• string s1 = ""1234"";   \n• string s2 = ""1234.65"";   \n• string s3 = null;   \n• string s4 =123456789123456789123456789123456789123456789"";   \n• int result;   \n• bool success;   \n• result = Int32.Parse(s1); //-- 1234    \n• result = Int32.Parse(s2); //-- FormatException    \n• result = Int32.Parse(s3); //-- ArgumentNullException    \n• result = Int32.Parse(s4); //-- OverflowException    \nConvert.ToInt32(string):This method converts the specified string representation of 32 -\nbit signed integer equivalent. This calls in turn Int32.Parse  () method.   \n– When s is a null reference, it will return 0 rather than \nthrow Argumen tNullException.  \n–  If s is other than integer value, it will throwFormatException.   \n– When s represents a number less than MinValue or greater than MaxValue, it will \nthrow OverflowException. For example:  \n• result = Convert.ToInt32(s1); //-- 1234    \n• result = Convert.ToInt32(s2); //-- FormatException    \n• result = Convert.ToInt32(s3); //-- 0   \n• result = Convert.ToInt32(s4); //-- OverflowException    \nInt32.TryParse(string, out int): This method converts the specified string representation of \n32-bit signed integer e quivalent to out variable, and returns true if it is parsed  \nsuccessfully, false otherwise.  \n \n52 ' metadata={'source': 'dotnet.pdf', 'page': 51}
"
"page_content='– When s is a null reference, it will return 0 rather than \nthrowArgumentNullException.  \n– If s is other than an integer value, the out variable will have 0 rath er \nthanFormatException.  \n– When s represents a number less than MinValue or greater than MaxValue, \nthe outvariable will have 0 rather than OverflowException.  \n–  success = Int32.TryParse(s1, out result); //-- success => true; result => 1234    \n• success = Int 32.TryParse(s2, out result); //-- success => false; result => 0    \n• success = Int32.TryParse(s3, out result); //-- success => false; result => 0    \n• success = Int32.TryParse(s4, out result); //-- success => false; result => 0    \n• Convert.ToInt32 is better than Int32.Parse  since it returns 0 rather than an exception. \nBut again, according to the requirement, this can be used. TryParse will be the best \nsince it always handles exceptions by itself.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n53 ' metadata={'source': 'dotnet.pdf', 'page': 52}
"
"page_content='Unit -III  \nC# Using  Libraries  \n3.1 Namespace - System   \nSystem Namespace in fundamental namespace for c# application. It contain all the fundamental \nclasses and base classes which are required in simple C# application. These classes and sub \nclasses defines reference data type, method and interfaces. Some classes provide some other \nfeature like data type conversion, mathematical function.  \nSome functionality provided by System namespace  \n\uf0b7 Commonly -used value \uf020\n\uf0b7 Mathematics \uf020\n\uf0b7 Remote and local program invocation \uf020\n\uf0b7 Application environment management \uf020\n\uf0b7 Reference data types \uf020\n\uf0b7 Events and event handlers \uf020\n\uf0b7 Interfaces Attributes Processing exceptions \uf020\n\uf0b7 Data type conversion \uf020\n\uf0b7 Method parameter manipulation \uf020\nSome Classes provide by System namespace  \n\uf0b7 AccessViolationException \uf020\n\uf0b7 Array \uf020\n\uf0b7 ArgumentNullException \uf020\n\uf0b7 AttributeUsageAttribute \uf020\n\uf0b7 Buffer \uf020\n\uf0b7 Console \uf020\n\uf0b7 Convert \uf020\n\uf0b7 Delegate \uf020\n\uf0b7 Exception \uf020\n\uf0b7 InvalidCastException \uf020\nSome interfaces provided by System namespace  \n\uf0b7 Public interface ICloneable \uf020\n\uf0b7 Public interface IComparable \uf020\n\uf0b7 Public interface IComparable<T> \uf020\n\uf0b7 Public interface IConvert ible \uf020\n\uf0b7 Public interface ICustomFormatter \uf020\n\uf0b7 Public interface IDisposable \uf020\n\uf0b7 Public interface IEquatable<T> \uf020\n\uf0b7 Public interface \nIFormatProvider MATH EXAMPLE \uf020\nusing System; class \nPythagorean { static \nvoid Main() { \ndouble s1; \uf020\uf020\ndouble s2; \ndouble hypot; \nstring str; \uf020\uf020\nConsole.WriteLine(""Enter length of first side: \n""); str = Console.ReadLine(); \uf020\ns1 = Double.Parse(str); \uf020\nConsole.WriteLine(""Enter length of second side: ""); \uf020\n \n54 ' metadata={'source': 'dotnet.pdf', 'page': 53}
"
"page_content='str = Console.ReadLine(); \ns2 = Double.Parse(str);  \nhypot = Math.Sqrt(s1*s1 + s2*s2); \nConsole.Wr iteLine(""Hypotenuse is "" + hypot);  \n} \n} \nSorting and Searching,Reverse,Copy Arrays   \nUsing Sort( ), you can sort an entire array, a range within an array, or a pair of arrays that contain \ncorresponding key/value pairs. Once an array has been sorted, you can e fficiently search it using \nBinarySearch( ).  \n \nusing System; class \nSortDemo { static \nvoid Main() {   \nint[] nums = { 5, 4, 6, 3, 14, 9, 8, 17, 1, 24, -1, 0 \n}; Console.Write(""Original order: "");  \nforeach(int i in nums)  \nConsole.Write(i + "" "");  Console.WriteLine( ); \nArray.Sort(nums);  \nConsole.Write(""Sorted order: "");  \nforeach(int i in nums)  \nConsole.Write(i + "" "");   Console.WriteLine();  \nint idx = Array.BinarySearch(nums, 14); \nConsole.WriteLine(""Index of 14 is "" + idx); } }  \n \nThe IComparable and IComparable<T> Interfac es  \n• Many classes will need to implement either the IComparable or IComparable<T> \ninterface because they enable one object to be compared to another (for the purpose of \nordering) by various methods defined by the .NET Framework  \n• IComparable is especially ea sy to implement because it consists of just this one \nmethod:  \n• int CompareTo(object obj)  \n• This method compares the invoking object against the value in obj. It returns greater than  \nzero if the invoking object is greater than  obj, zero if the two objects are  equal, and less \nthan zero if the invoking object is less than  obj.  \n \nStringBuilder in C#   \nOnce created a string cannot be changed. A StringBuilder can be changed as many times as \nnecessary. It yields astonishing performance improvements. It eliminates mil lions of string \ncopies. Many C# programs append or replace strings in loops. There the StringBuilder type \nbecomes a necessary optimization. It uses the new keyword for StringBuilder. Use the new \nkeyword to make your StringBuilder. This is different from re gular strings. StringBuilder has \nmany overloaded constructors. continuing on it calls the instance Append method. This method \nadds the contents of its arguments to the buffer in the StringBuilder. Every argument to \nStringBuilder will automatically have its  ToString method called. It calls AppendLine, which \ndoes the exact same thing as Append, except with a new line on the end. Next, Append and \nAppend Line call themselves. This shows terse syntax with StringBuilder. Finally ToString \nreturns the buffer. You w ill almost always want ToString. It will return the contents as a string.  \n \n \n \n55 ' metadata={'source': 'dotnet.pdf', 'page': 54}
"
"page_content='Example \nusing System;   \nusing System.Text; \nclass Program  \n{ \nstatic void Main()  \n{  \nStringBuilder builder = new StringBuilder(); \n// Append to StringBuilder.  \nfor (int i = 0; i < 10 ; i++)  \n{ \nbuilder.Append(i).Append("" "");  \n} \nConsole.WriteLine(builder);  \n} \n} \n \n3.2 Input -Output   \nC# programs perform I/O through streams. A stream  is an abstraction that either produces or \nconsumes information. A stream is linked to a physical device by the I/ O system. All streams \nbehave in the same manner, even if the actual physical devices they are linked to differ. Thus, \nthe I/O classes and methods can be applied to many types of devices. For example, the same \nmethods that you use to write to the console ca n also be used to write to a disk file.  \n \nByte Streams and Character Streams   \nAt the lowest level, all C# I/O operates on bytes. This makes sense because many devices are \nbyte oriented when it comes to I/O operations. Frequently, though, we humans prefer to  \ncommunicate using characters. Recall that in C#, char  is a 16 -bit type, and byte is an 8 -bit type. \nIf you are using the ASCII character set, then it is easy to convert between char  and byte; just \nignore the high -order byte of the char  value. But this won‘ t work for the rest of the Unicode \ncharacters, which need both bytes (and possibly more). Thus, byte streams are not perfectly \nsuited to handling character -based I/O. To solve this problem, the .NET Framework defines \nseveral classes that convert a byte str eam into a character stream, handling the translation of \nbyte-to-char  and char -to-byte for you automatically.  \nThe Predefined Streams   \nThree predefined streams, which are exposed by the properties called Console.In , Console.Out , \nand Console.Error , are avail able to all programs that use the System  namespace. Console.Out  \nrefers to the standard output stream. By default, this is the console. When you call \nConsole.WriteLine( ) , for example, it automatically sends information to  Console.Out . \nConsole.In refers to standard input, which is, by default, the keyboard.  Console.Error refers to  \nthe standard error stream, which is also the console by default. However, these streams can be \nredirected to any compatible I/O device. The standard streams are character streams. Thus, these \nstreams read and write characters.  \n \nSystem.IO Namespace   \n–  BinaryReader Class:  Reads primitive data types as binary values in a specific encoding.   \n– BinaryWriter Class :  Writes primitive types in binary to a stream and supports writing \nstrings in a specific encoding.  \n– BufferedStream Class :  Adds a buffering layer to read and write operations on another \nstream. This class cannot be inherited.  \n \n56 ' metadata={'source': 'dotnet.pdf', 'page': 55}
"
"page_content='– Directory Class:  Exposes static methods for creating, moving, and enumerating through \ndirect ories and subdirectories. This class cannot be inherited.   \n– DirectoryInfo Class:  Exposes instance methods for creating, moving, and enumerating \nthrough directories and subdirectories. This class cannot be inherited.  \n– File Class: Provides static methods for the creation, copying, deletion, moving, and opening \nof files, and aids in the creation of FileStream  objects.  \n– FileInfo : Provides properties and instance methods for the creation, copying, deletion, \nmoving, and opening of files, and aids in the crea tion of FileStream objects. This class \ncannot be inherited.   \n– FileStream : Exposes a Stream around a file, supporting both synchronous and \nasynchronous read and write operations.  \n–  IOException  Class  \n–  Path  Class  \n–  Stream  Class: Provides a generic vi ew of a sequence of bytes.  \n– StreamReader:  Implements a TextReader that reads characters from a byte stream in a \nparticular encoding.  \n– StreamWriter :  Implements a TextWriter for writing characters to a stream in a particular \nencoding.  \n–  StringReader : Implements a TextReader that reads from a string.  \n– StringWriter:  Implements a TextWriter for writing information to a string. The \ninformation is stored in an underlying StringBuilder.  \n–  TextReader:  Represents a reader that can read a sequential series of characters.  \n– TextWriter: Represents a writer that can write a sequential series of characters. This class \nis abstract.  \n–  \nCreating and writing text on a File  \nnamespace IOTest{  \nclass Program  {  \nstatic void Main(string[] args)  { \nStreamWriter sw;  \nsw= Fil e.CreateText(""d:/workspace/Hello.txt""); \nsw.WriteLine(""Hello Mca Students This is your basic \nIO""); //sw.Flush();  \n//sw.Close();  \nConsole.WriteLine(""Please show the file in d drive "");  \n} } } \n \nclass TextFileWriter  {   \nstatic void Main(string[] args)  { \nTextWrite r tw = new StreamWriter(""date.txt"");  \ntw.WriteLine(DateTime.Now);  \ntw.Close();  \n}  } \nclass TextFileReader  {  \nstatic void Main(string[] args)  {  \nTextreader tr = new StreamReader(""date.txt""); \nConsole.WriteLine(tr.ReadLine()); tr.Close();  \n \n} \n} \n \n57 ' metadata={'source': 'dotnet.pdf', 'page': 56}
"
"page_content='Listing A Dir ectory \nclass DirTest1{ \nstatic void Main(){   \nSystem.Console.WriteLine(""sub directries in this directory \n""); string[] dirs = Directory.GetDirectories(""C: \\\\"");  \nint count = dirs.Length; \nfor (int i=0; i<count; i++)  \nSystem.Console.WriteLine(dirs[i]); \nSystem.Con sole.WriteLine(""Files in this dierectory are"");   \nstring[] files = Directory.GetFiles(""C: \\\\""); \nint count1 = files.Length;  \nfor (int i=0; i<count1; i++) \nSystem.Console.WriteLine(files[i]);   \n}} \n \nFormatted Strings in C#   \nThe parameter placeholder {0}, {1} etc i n Console.Write is handled by the string formatting. \nThe placeholder has to have the index of the parameter but can also include formatting \ninformation. This is used in Console.WriteLine and also string.format hence its inclusion here.  \nLayout of the PlaceH older  \nThe three parts are  \nindex, alignment : format  \n \nSo {0:X} (x means Hexadecimal) or {0,10} meaning output in a width of 10. The alignment \nvalue specifies teh width and left or right alignment by using - (left aligned) or + (right aligned) \nnumbers. 10 Me ans right aligned in a width of 10, -6 means left aligned in a width of 6. \nAlignment is ignored if the output exceeds the width.   \nThis provides a large number of formatting examples.  \nList of Numeric Formats  \n\uf0b7 C or C - For Currency. Uses the cultures currency  symbol. \uf020\n\uf0b7 D or D - Integer types. Add a number for 0 padding eg D5. \uf020\n\uf0b7 E or e - Scientific notation. \uf020\n\uf0b7 F or f - Fixed Point. \uf020\n\uf0b7 G or g - Compact fixed -point/scientific notation. \uf020\n\uf0b7 N or n - Number. This can be enhanced by a NumberFormatInfo object. \uf020\n\uf0b7 P or p - Percentage. \uf020\n\uf0b7 R or r - Round -trip. Keeps exact digits when converted to string and back. \uf020\n\uf0b7 X or x - Hexadecimal. x - uses abcdef, X use ABCDEF. \uf020\nDates can also be specified either using Standard Format strings  \n\uf0b7 O or o - YYYY -MM-dd:mm:ss:ffffffffzz \uf020\n\uf0b7 R or r - RFC11 23 eg ddd, dd MMM yyyy HH:ss GMT \uf020\n\uf0b7 s - sortable . yyyy -MM-ddTHH:mm:ss \uf020\n\uf0b7 u - Universal Sort Date - yyyy -MM-dd \nHH:mm:ssZ or Format specifiers. \uf020\n \nExample \nusing System;  \nusing System.Text;   \nusing System.Globalization;  \n \n \n58 ' metadata={'source': 'dotnet.pdf', 'page': 57}
"
"page_content='namespace ex6   \n{ \nclass Program  \n{ \nstatic  void Main(string[] args)  \n{ \n// Numeric Formatting Examples  \n// integer  \nint i = 5678;  \nstring s = string.Format(""{0,10:D}"", i); // Into a string right aligned 10 width  \nConsole.WriteLine(""{0,10:D}"", i);  // or output direct  \nConsole.WriteLine(""{0,10:D7}"", i);  // or output direct with leading 0  \n \n// double and currency in various \nformats double d=47.5;  \ndouble bigd = 19876543.6754;  \nConsole.WriteLine(""{0,15:C2}"", d); // In Uk = £47.50 right aligned in 15 width  \n \nConsole.WriteLine(""{0,15:N10}"", bigd); // Number \nConsole .WriteLine(""{0,15:E3}"", d); // Scientific 4.750E+001 \nConsole.WriteLine(""{0,15:F5}"", d); // Fixed Point 47.50000 \nConsole.WriteLine(""{0,15:G4}"", d); // Compact 47.5 \nConsole.WriteLine(""{0,10:P2}"", d/100.0); // % \nConsole.WriteLine(""{0,15:R}"", bigd); // Roundtr ip - not a digit lost  \n \n// Hex-a-diddly -decimal \nConsole.WriteLine(""{0,10:x8}"", i); // lowercase 0000162e \nConsole.WriteLine(""{0,10:X8}"", i); // uppercase 0000162E  \n \n \n// Date formats   \nDateTime dt = DateTime.Now; \n// Standards   \nConsole.WriteLine(""{0:O}"", dt); // O o r o yyyy\' -\'MM\' -\'dd\'T\'HH\':\'mm\':\'ss\'.\'fffffffzz \nConsole.WriteLine(""{0:R}"", dt); // R or r ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\' \nConsole.WriteLine(""{0:s}"", dt); // s yyyy\' -\'MM\' -\'dd\'T\'HH\':\'mm\':\'ss \nConsole.WriteLine(""{0:u}"", dt); // u yyyy\' -\'MM\' -\'dd HH\':\'mm\':\'ss\' Z\' \n \n// Using date/time specifiers \nConsole.WriteLine(""{0:t}"", dt); // short time \nConsole.WriteLine(""{0:T}"", dt); // long time \nConsole.WriteLine(""{0:d}"", dt); // short date \nConsole.WriteLine(""{0:D}"", dt); // long date \nConsole.WriteLine(""{0:f}"", dt); // long date / short time \nConsole.WriteLine(""{0:F}"", dt); // long date / long time \nConsole.WriteLine(""{0:g}"", dt); // short date / short time \nConsole.WriteLine(""{0:G}"", dt); // short date / long time \nConsole.WriteLine(""{0:o}"", dt); // Round Trip  \n \n// roll your own. .. \n \n59 ' metadata={'source': 'dotnet.pdf', 'page': 58}
"
"page_content='Console.WriteLine(""{0:dd/mm/yyyy HH:MM:ss}"", dt);//custom - what most people use (UK)! \nConsole.WriteLine(""{0:mm/dd/yyyy HH:MM:ss}"", dt);//custom - what most people use (US)! \nConsole.WriteLine(""{0:yyyy/mm/dd HH:MM:ss}"", dt);//custom - (Japan) Good f or sorting!  \n \nConsole.WriteLine(""{0:dd MMM yyyy HH:MM:ss}"", dt); // custom - month (UK) \nConsole.WriteLine(""{0:MMM dd yyyy HH:MM:ss}"", dt); // custom - month (US) \nConsole.WriteLine(""{0:yyyy MMM dd HH:MM:ss}"", dt); // custom - (Japan)  \nConsole.ReadKey();  \n} \n} \n} \n \n3.3 Multi -Threading   \nThread :   \n\uf0b7 A thread  is defined as the execution path of a program. Each thread defines a unique flow of \ncontrol. If your application involves complicated and time consuming operations then it is \noften helpful to set different executio n paths or threads, with each thread performing a \nparticular job. \uf020 \uf020\n\uf0b7 Threads are lightweight processes . One common example of use of thread is implementation \nof concurrent programming by modern operating systems. Use of threads saves wastage of \nCPU cycle an d increase efficiency of an application. \uf020\n \nThread Life Cycle   \nThe life cycle of a thread starts when an object of the System.Threading.Thread class is \ncreated and ends when the thread is terminated or completes execution.  \nFollowing are the various states i n the life cycle of a thread:   \n\uf0b7 The Unstarted State : it is the situation when the instance of the thread is created but \nthe Start method has not been called. \uf020\n\uf0b7 The Ready State : it is the situation when the thread is ready to run and waiting CPU cycle.  \uf020\uf020\n\uf0b7 The Not Runnable State : a thread is not runnable, when:  \uf020\no Sleep method has been called  \no Wait method has been called  \no Blocked by I/O operations  \n\uf0b7 The Dead State : it is the situation when the thread has completed execution or has \nbeen  aborted. \uf020\nThe Main Thread   \nIn C#, the System.Threading.Thread  class is used for working with threads. It allows creating \nand accessing individual threads in a multithreaded application. The first thread to be executed \nin a process is called the main  thread.   \nWhen a C# program starts  execution, the main thread is automatically created. The threads \ncreated using the Thread  class are called the child threads of the main thread. You can access a \nthread using the CurrentThread  property of the Thread class.   \nThe following program demonstra tes main thread \nexecution: using System;  \nusing System.Threading;  \n \nnamespace MultithreadingApplication   \n{ \nclass MainThreadProgram  \n{ \n \n60 ' metadata={'source': 'dotnet.pdf', 'page': 59}
"
"page_content='static void Main(string[] args)   \n{  \nThread th = Thread.CurrentThread; \nth.Name = ""MainThread""; \nConsole.WriteLine(""This is  {0}"", \nth.Name); Console.ReadKey();  \n} \n} \n} \nOUTPUT:   \nThis is MainThread  \n \nCreating Threads: Threads are created by creating the object of Thread. The extended Thread  \nclass then calls the Start() method to begin the child thread execution. The following program \ndemonstrates the concept:  \n \nusing System;   \nusing System.Threading;  \n \nnamespace MultithreadingApplication   \n{ \nclass ThreadCreationProgram  \n{ \npublic static void CallToChildThread()  \n{ \nConsole.WriteLine(""Child thread starts"");  \n} \n \nstatic void Main(string[] args)   \n{ \nThreadStart childref = new \nThreadStart(CallToChildThread); Console.WriteLine(""In \nMain: Creating the Child thread""); Thread childThread = \nnew Thread(childref); childThread.Start();  \nConsole.ReadKey();  \n} \n}  \n} \nOUTPUT:   \nIn Main: Creating the Child \nthread Child  thread starts  \n \nManaging Threads   \nThe Thread class provides various methods for managing threads.   \nThe following example demonstrates the use of the sleep()  method for making a thread pause for \na specific period of time.  \nusing System;   \nusing System.Threadi ng; \n \nnamespace MultithreadingApplication  \n \n61 ' metadata={'source': 'dotnet.pdf', 'page': 60}
"
"page_content='{  \nclass ThreadCreationProgram  \n{ \npublic static void CallToChildThread()  \n{  \nConsole.WriteLine(""Child thread starts""); \n// the thread is paused for 5000 \nmilliseconds int sleepfor = 5000;   \nConsole.WriteLine(""Child Thread Paused for {0} \nseconds"", sleepfor / 1000);   \nThread.Sleep(sleepfor); \nConsole.WriteLine(""Child thread resumes"");   \n} \n \nstatic void Main(string[] args)   \n{  \nThreadStart childref = new \nThreadStart(CallToChildThread); Console.WriteLine(""In \nMain: Creating th e Child thread""); Thread childThread = \nnew Thread(childref); childThread.Start();  \nConsole.ReadKey();  \n} \n} \n} \nOUTPUT:  \nIn Main: Creating the Child \nthread Child thread starts  \nChild Thread Paused for 5 \nseconds Child thread resumes   \nDestroying Threads  \n \nThe Abort( ) method is used for destroying threads. The runtime aborts the thread by throwing a \nThreadAbortException . This exception cannot be caught, the control is sent to the finally  \nblock, if any.  \n \nThe following program illustrates this:  \n \nusing System;   \nusing Sys tem.Threading;  \n \nnamespace MultithreadingApplication   \n{ \nclass ThreadCreationProgram  \n{ \npublic static void CallToChildThread()  \n{ \ntry \n{ \n \nConsole.WriteLine(""Child thread starts"");  \n \n62 ' metadata={'source': 'dotnet.pdf', 'page': 61}
"
"page_content='// do some work, like counting to 10   \nfor (int counter = 0; counter <= 10; c ounter++)  \n{ \nThread.Sleep(500);  \nConsole.WriteLine(counter);  \n} \nConsole.WriteLine(""Child Thread Completed"");  \n \n}  \ncatch (ThreadAbortException e)  \n{ \nConsole.WriteLine(""Thread Abort Exception"");  \n} \nfinally  \n{ \nConsole.WriteLine(""Couldn\'t catch the Thread Exception"") ; \n} \n \n} \n \nstatic void Main(string[] args)   \n{ \nThreadStart childref = new \nThreadStart(CallToChildThread); Console.WriteLine(""In \nMain: Creating the Child thread""); Thread childThread = \nnew Thread(childref); childThread.Start();   \n//stop the main thread for some \ntime Thread.Sleep(2000);  \n//now abort the child   \nConsole.WriteLine(""In Main: Aborting the Child \nthread""); childThread.Abort();  \nConsole.ReadKey();  \n} \n} \n}  \nWhen the above code is compiled and executed, it produces the following \nresult: In Main: Creating the Ch ild thread  \nChild thread \nstarts 0 1 2  \n \n \nIn Main: Aborting the Child \nthread Thread Abort Exception  \nCouldn\'t catch the Thread Exception  \n \n \nThreadPriority and ThreadState:   \nA thread‘s Priority property determines how much execution time it gets relative to othe r active \nthreads in the operating system, on the following scale:  \n \n \n63 ' metadata={'source': 'dotnet.pdf', 'page': 62}
"
"page_content=""This becomes relevant only when multiple threads are simultaneously active.Think carefully \nbefore elevating a thread‘s priority — it can lead to problems such as resource starvation fo r \nother threads.Elevating a thread‘s priority doesn‘t make it capable of performing real -time work, \nbecause it‘s still throttled by the application‘s process priority. To perform real -time work, you \nmust also elevate the process priority using the Process class in System.Diagnostics (we didn‘t \ntell you how to do this):   \npublic enum ThreadPriority \n{ Highest, \nAboveNormal, \nNormal, \nBelowNormal, \nLowest,   \n} \n \nThread States: You can query a thread's execution status via its  ThreadState property. This  \nreturns a flag s enum of type ThreadState , which combines three ―layers‖ of data in a bitwise \nfashion. Most values, however, are redundant, unused, or deprecated. The following diagram \nshows one ―layer‖  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \npublic enum ThreadState { \nBackground, \nUnstarted, \nRunning, \nWaitSleepJoin, \nSuspendRequested, \nSuspended, \nAbortRequested, \nStopped   \n} \n \nThe following code strips a ThreadState to one of the four most useful values: Unstarted, \nRunning, WaitSleepJoin, and Stopped:  \npublic static ThreadState SimpleThreadState (Threa dState ts)  \n{  \nreturn ts & (ThreadState.Unstarted | \nThreadState.WaitSleepJoin \n| ThreadState.Stopped);   \n} \n \n64 "" metadata={'source': 'dotnet.pdf', 'page': 63}
"
"page_content='The ThreadState property is useful for diagnostic purposes, but unsuitable for synchronization, \nbecause a thread‘s state may change in between test ing ThreadState and acting on that information.  \n \nForeground and Background Threads   \nA foreground thread  runs indefinitely, whereas a background thread  stops as soon as the last \nforeground thread has stopped. You can use the IsBackground  property to determi ne or change \nthe background status of a thread.  \n \nMultithreading with Forms and Controls   \nWhile multithreading is best suited to running procedures and class methods, you can also use it \nwith forms and controls. If you do so, be aware of the following point s:  \n\uf0b7 Whenever possible, execute the methods of a control only on the thread with which it was \ncreated. If you must call a method of a control from another thread, you must use Invoke  \nto call the method. \uf020\uf020\n\uf0b7 Do not use the SyncLock  (Visual Basic) or lock (C#) statement to lock threads that \nmanipulate controls or forms. Because the methods of controls and forms sometimes call back \nto a calling procedure, you can end up inadvertently creating a deadlock —a situation in which \ntwo threads wait for each other to rele ase the lock, causing the application to halt. \uf020\nSynchronizing threads  \nSynchronization constructs can be divided into four categories:   \n1. Simple blocking methods: These wait for another thread to finish or for a period of time to \nelapse. Sleep, Join, and T ask.Wait are simple blocking methods.   \n2.Locking constructs: These limit the number of threads that can perform some activity or \nexecute a section of code at a time. Exclusive  locking constructs are most common —these allow \njust one thread in at a time, and  allow competing threads to access common data without \ninterfering with each other. The standard exclusive locking constructs are lock \n(Monitor.Enter/Monitor.Exit), Mutex, and SpinLock. The nonexclusive locking constructs are \nSemaphore, SemaphoreSlim, and the reader/writer locks.   \n3. Signaling constructs: These allow a thread to pause until receiving a notification from another, \navoiding the need for inefficient polling. There are two commonly used signaling devices: event \nwait handles and Monitor‘s Wait/Pulse  methods. Framework 4.0 introduces the CountdownEvent \nand Barrier classes.   \n4. Nonblocking synchronization constructs: These protect access to a common field by calling \nupon processor primitives. The CLR and C# provide the following nonblocking constructs: \nThread.MemoryBarrier, Thread.VolatileRead, Thread.VolatileWrite, the volatile keyword, and \nthe Interlocked class.  \n \nThe lock   \nThe lock (C#) and SyncLock  (Visual Basic) statements can be used to ensure that a block of \ncode runs to completion without interrup tion by other threads. This is accomplished by obtaining \na mutual -exclusion lock for a given object for the duration of the code block.   \nA lock or SyncLock  statement is given an object as an argument, and is followed by a code \nblock that is to be executed by only one thread at a time. For example:  \npublic class TestThreading  \n{ \nprivate System.Object lockThis = new System.Object();  \n \npublic void Process()   \n{ \n \n \n65 ' metadata={'source': 'dotnet.pdf', 'page': 64}
"
"page_content='lock (lockThis)   \n{ \n// Access thread -sensitive resources.  \n}  \n} \n \n}  \nThe argument provided to the lock keyword must be an object based on a reference type, and is \nused to define the scope of the lock.  \n \nMonitors   \nLike the lock and SyncLock  keywords, monitors prevent blocks of code from simultaneous \nexecution by multiple threads. The Enter  method allows one  and only one thread to proceed into \nthe following statements; all other threads are blocked until the executing thread calls Exit. This \nis just like using the lock keyword. For example:  \nlock (x)  \n{ \nDoSomething();  \n} \nThis is equivalent to:  \nSystem.Object obj =  (System.Object)x; \nSystem.Threading.Monitor.Enter(obj); \ntry \n{ \nDoSomething();  \n} \nfinally  \n{ \nSystem.Threading.Monitor.Exit(obj);  \n}  \nUsing the lock (C#) keyword is generally preferred over using the Monitor class directly, both \nbecause lock is more concise, and because lock insures that the underlying monitor is released, \neven if the protected code throws an exception. This is accomplished with the finally  keyword, \nwhich executes its associated code block regardless of whether an exception is thrown.  \n \nSynchroniza tion Events and Wait Handles   \nUsing a lock or monitor is useful for preventing the simultaneous execution of thread -sensitive \nblocks of code, but these constructs do not allow one thread to communicate an event to another. \nThis requiressynchronization even ts, which are objects that have one of two states, signaled and \nun-signaled, that can be used to activate and suspend threads. Threads can be suspended by being \nmade to wait on a synchronization event that is unsignaled, and can be activated by changing th e \nevent state to signaled. If a thread attempts to wait on an event that is already signaled, then the \nthread continues to execute without delay.   \nThere are two kinds of synchronization events: AutoResetEvent, and ManualResetEvent. They \ndiffer only in that  AutoResetEvent changes from signaled to unsignaled automatically any time it \nactivates a thread. Conversely, a ManualResetEvent allows any number of threads to be activated \nby its signaled state, and will only revert to an unsignaled state when its Reset method is called.   \nThreads can be made to wait on events by calling one of the wait methods, such as WaitOne, \nWaitAny, orWaitAll. WaitHandle.WaitOne() causes the thread to wait until a single event becomes \nsignaled,WaitHandle.WaitAny() blocks a thread unti l one or more indicated events become  \n \n66 ' metadata={'source': 'dotnet.pdf', 'page': 65}
"
"page_content='signaled, andWaitHandle.WaitAll() blocks the thread until all of the indicated events become \nsignaled. An event becomes signaled when its Set method is called.  \nIn the following example, a thread is created and sta rted by the Main function. The new thread \nwaits on an event using the WaitOne method. The thread is suspended until the event becomes \nsignaled by the primary thread that is executing the Main function. Once the event becomes \nsignaled, the auxiliary thread returns. In this case, because the event is only used for one thread \nactivation, either the AutoResetEventor ManualResetEvent classes could be used.using System; \nusing System.Threading;  \n \nclass ThreadingExample   \n{  \nstatic AutoResetEvent autoEvent;  \n \nstatic v oid DoWork()   \n{  \nConsole.WriteLine("" worker thread started, now waiting on event...""); \nautoEvent.WaitOne();  \nConsole.WriteLine(""  worker thread reactivated, now exiting..."");   \n} \n \nstatic void Main()   \n{ \nautoEvent = new AutoResetEvent(false);  \n \nConsole.WriteLin e(""main thread starting worker \nthread...""); Thread t = new Thread(DoWork);  \nt.Start();  \n \nConsole.WriteLine(""main thread sleeping for 1 second..."");   \nThread.Sleep(1000);  \n \nConsole.WriteLine(""main thread signaling worker \nthread...""); autoEvent.Set();  \n} \n} \nMutex Object  \nA mutex is similar to a monitor; it prevents the simultaneous execution of a block of code by \nmore than one thread at a time. In fact, the name ""mutex"" is a shortened form of the term \n""mutually exclusive."" Unlike monitors, however, a mutex can be us ed to synchronize threads \nacross processes. A mutex is represented by the Mutex class.   \nWhen used for inter -process synchronization, a mutex is called a named mutex because it is to be \nused in another application, and therefore it cannot be shared by means  of a global or static \nvariable. It must be given a name so that both applications can access the same mutex object.   \nAlthough a mutex can be used for intra -process thread synchronization, using Monitor is \ngenerally preferred, because monitors were designe d specifically for the .NET Framework and \ntherefore make better use of resources. In contrast, the Mutex class is a wrapper to a Win32 \nconstruct. While it is more powerful than a monitor, a mutex requires interop transitions that are \nmore computationally e xpensive than those required by the Monitor class  \n \n \n \n67 ' metadata={'source': 'dotnet.pdf', 'page': 66}
"
"page_content='Interlocked Class   \nYou can use the methods of the Interlocked class to prevent problems that can occur when \nmultiple threads attempt to simultaneously update or compare the same value. The methods of  \nthis class let you safely increment, decrement, exchange, and compare values from any thread.  \nReaderWriter Locks  \nIn some cases, you may want to lock a resource only when data is being written and permit \nmultiple clients to simultaneously read data when da ta is not being updated. The \nReaderWriterLock class enforces exclusive access to a resource while a thread is modifying the \nresource, but it allows non -exclusive access when reading the resource. ReaderWriter locks are a \nuseful alternative to exclusive loc ks, which cause other threads to wait, even when those threads \ndo not need to update data.  \nDeadlocks   \nThread synchronization is invaluable in multithreaded applications, but there is always the \ndanger of creating a deadlock, where multiple threads are wait ing for each other and the \napplication comes to a halt. A deadlock is analogous to a situation in which cars are stopped at a \nfour-way stop and each person is waiting for the other to go. Avoiding deadlocks is important; \nthe key is careful planning. You ca n often predict deadlock situations by diagramming \nmultithreaded applications before you start coding.  \n \n3.4 Networking and sockets   \nThe .NET framework provides two namespaces, System.Net  and System.Net.Sockets  for \nnetwork programming. The classes and metho ds of these namespaces help us to write programs, \nwhich can communicate across the network. The communication can be either connection \noriented or connectionless. They can also be either stream oriented or data -gram based. The \nmost widely used protocol TCP  is used for stream -based communication and UDP is used for \ndata-grams based applications.   \nThe System.Net.Sockets.Socket  is an important class from the System.Net.Sockets  namespace. \nA Socket instance has a local and a remote end -point associated with it. The local end -point \ncontains the connection information for the current socket instance.   \nThere are some other helper classes like IPEndPoint , IPADdress , SocketException  etc, \nwhich we can use for Network programming. The .NET framework supports both synchr onous \nand asynchronous communication between the client and server. There are different methods \nsupporting for these two types of communication. A synchronous method is operating in \nblocking mode, in which the method waits until the operation is complete b efore it returns. But \nan asynchronous method is operating in non -blocking mode, where it returns immediately, \npossibly before the operation has completed.  \nDns Class  \nThe System.net namespace provides this class, which can be used to creates and send queries  to \nobtain information about the host server from the Internet Domain Name Service (DNS). \nRemember that in order to access DNS, the machine executing the query must be connected to a \nnetwork. If the query is executed on a machine, that does not have access  to a domain name \nserver, a System.Net.SocketException is thrown. All the members of this class are static in \nnature. The important methods of this class are given below.  \n \npublic static IPHostEntry GetHostByAddress(string address);  \n \n \nWhere address shoul d be in a dotted -quad format like ""202.87.40.193"". This method returns an \nIPHostEntry instance containing the host information. If DNS server is not available, the \nmethod returns a SocketException.  \n \n68 ' metadata={'source': 'dotnet.pdf', 'page': 67}
"
"page_content='public static string GetHostName();   \nThis method returns the DNS host name of the local machine.   \nIn my machine Dns.GetHostName() returns Arora  which is the DNS name of my \nmachine. public static IPHostEntry Resolve(string hostname);  \n \nThis method resolves a DNS host name or IP address to a IPHostEntr y instance. The host \nname should be in a dotted -quad format like 127.0.01 or www.microsoft.com . \nIPHostEntry Class  \nThis is a container class for Internet host address information. This class makes no thread \nsafety guarantees. The following are the important  members of this class.   \n\uf0b7 AddressList property: Gives an IPAddress array containing IP addresses that resolve to \nthe host name. \uf020\n\uf0b7 Aliases property: Gives a string array containing DNS name that resolves to the \nIP addresses in AddressList property. \uf020  \nThe foll owing program shows the application of the above two classes.   \nusing System; \nusing System.Net;   \nusing System.Net.Sockets;  \n \nclass MyClient   \n{ \npublic static void Main()  \n{ \n \nIPHostEntry IPHost = Dns.Resolve("" www.hotmail.com "");  \nConsole.WriteLine(IPHost.Host Name);  \n \nstring []aliases = IPHost.Aliases; \nConsole.WriteLine(aliases.Length);   \nIPAddress[] addr = IPHost.AddressList; \nConsole.WriteLine(addr.Length);  \n \nfor(int i= 0; i < addr.Length ; i++)   \n{ \nConsole.WriteLine(addr[i]);  \n} \n}  \n}  \nIPEndPoint Class   \nThis class  is a concrete derived class of the abstract class EndPoint. The IPEndPoint class \nrepresents a network end point as an IP address and a port number. There is couple of \nuseful constructors in this class:   \nIPEndPoint(long addresses, int port); \nIPEndPoint  (IPAddress addr, int port);  \nIPHostEntry IPHost = Dns.Resolve("" www.c -\nsharpcorner.com ""); Console.WriteLine(IPHost.HostName);   \nstring []aliases = IPHost.Aliases; \nIPAddress[] addr = IPHost.AddressList; \nConsole.WriteLine(addr[0]);   \n69 ' metadata={'source': 'dotnet.pdf', 'page': 68}
"
"page_content='EndPoint ep = new IP EndPoint(addr[0],80);  \n \nSocket Programming: Synchronous Clients   \nThe steps for creating a simple synchronous client are as follows.  \n1. Create a Socket instance.  \n2. Connect the above socket instance to an end -point.  \n3. Send or Receive information.  \n4. Shutdown the soc ket  \n5. Close the socket  \nThe Socket class provides a constructor for creating a Socket instance.   \npublic Socket (AddressFamily af, ProtocolType pt, SocketType st)  \n \nWhere AddressFamily, ProtocolType and SocketTYpe are the enumeration types declared \ninside  the Socket class.  \nThe AddressFamily member specifies the addressing scheme that a socket instance must use \nto resolve an address. For example AddressFamily.InterNetwork indicates that an IP version \n4 addresses is expected when a socket connects to an end point.   \nThe SocketType parameter specifies the socket type of the current instance. For example \nSocketType.Stream indicates a connection -oriented stream and SocketType.Dgram indicates \na connectionless stream.   \nThe ProtocolType parameter specifies the ptoto col to be used for the communication. For \nexample ProtocolType.Tcp indicates that the protocol used is TCP and ProtocolType.Udp \nindicates that the protocol using is UDP.  \n \npublic Connect (EndPoint ep);  \n \nThe Connect() method is used by the local end -point to connect to the remote end -point. This \nmethod is used only in the client side. Once the connection has been established the Send() and \nReceive() methods can be used for sending and receiving the data across the network.   \nThe Connected property defined inside the class Socket can be used for checking the \nconnection. We can use the Connected property of the Socket class to know whether the \ncurrent Socket instance is connected or not. A property value of true indicates that the current \nSocket instance is c onnected.   \nIPHostEntry IPHost = Dns.Resolve("" www.yahoo.com ""); \nConsole.WriteLine(IPHost.HostName);  \nstring []aliases = IPHost.Aliases; \nIPAddress[] addr = IPHost.AddressList; \nConsole.WriteLine(addr[0]);   \nEndPoint ep = new IPEndPoint(addr[0],80);  \n \nSocket so ck = new Socket(AddressFamily.InterNetwork,SocketType.Stream,ProtocolType.Tcp); \nsock.Connect(ep);  \nif(sock.Connected)   \nConsole.WriteLine(""OK"");   \nThe Send() method of the socket class can be used to send data to a connected remote socket.  \n \npublic int Send ( byte[] buffer, int size, SocketFlags flags);   \nWhere byte[] parameter storing the data to send to the socket, size parameter containing the \nnumber of bytes to send across the network. The SocketFlags parameter can be a bitwise  \n \n70 ' metadata={'source': 'dotnet.pdf', 'page': 69}
"
"page_content='combination of any on e of the following values defined in the \nSystem.Net.Sockets.SocketFlags enumerator.  \nSocketFlags.None  \nSocketFlags.DontRoute  \nSocketFlags.OutOfBnd   \nThe method Send() returns a System.Int32 containing the number of bytes send.Remember \nthat there are other o verloaded versions of Send() method as follows.   \npublic int Send (byte[] buffer, SocketFlags \nflags); public int Send (byte[] buffer);  \npublic int Send (byte[] buffer,int offset, int size, SocketFlags flags);   \nThe Receive() method can be used to receive data from a socket. \npublic int Receive(byte[] buffer, int size, SocketFlags flags);  \n \nWhere byte[] parameter storing the data to send to the socket, size parameter containing the \nnumber of bytes to send across the network. The SocketFlags parameter can be a bitwise \ncombination of any one of the following values defined in the \nSystem.Net.Sockets.SocketFlags enumerator explained above.   \nThe overloaded versions of Receive() methods are shown \nbelow. public int Receive (byte[] buffer, SocketFlags \nflags); pub lic int Receive (byte[] buffer);  \npublic int Receive (byte[] buffer,int offset, int size, SocketFlags flags);  \n \nWhen the communication across the sockets is over, the connection between the sockets can \nbe terminated by invoking the method ShutDown()   \npublic void ShutDown(SocketShutdown how);  \n \nWhere ‗how‘ is one of the values defined in the SocketSHutdown enumeration. The value \nSoketShutdown.Send means that the socket on the other end of the connection is notified that \nthe current instance would not sen d any more data. The value SoketShutdown.Receive means \nthat the socket on the other end of the connection is notified that the current instance will not \nreceive any more data and the value SoketShutdown.Both means that both the action are not \npossible. Rem ember that the ShutDown() method must be called before the Close(0 method to \nensure that all pending data is sent or received.   \nA socket can be closed by invoking the method \nClose(). public void Close();  \nThis method closes the current instance and rel eases all managed and un -managed resources \nallocated by the current instance. This method internally calls the Dispose() method with an \nargument of ‗true‘ value, which frees both managed and un -managed resources used by the \ncurrent instance.   \nprotected virtual void Dispose(bool);   \nThe above method closes the current instance and releases the un -managed resources allocated \nby the current instance and exceptionally release the managed resources also. An argument \nvalue of ‗true‘ releases both managed and un -managed resources and a value of ‗false‘ releases \nonly un -managed resources.   \nThe following program can send an HTTP request to a web server and can read the response \nfrom the web server.  \n \n \n \n \n71 ' metadata={'source': 'dotnet.pdf', 'page': 70}
"
"page_content='Example \nusing System;  \nusing System.Net;   \nusing System.Net. Sockets; \nusing System.Text;  \nclass MyClient{  \npublic static void Main(){   \nIPHostEntry IPHost = Dns.Resolve("" www.google.com ""); \nConsole.WriteLine(IPHost.HostName);  \n \nstring []aliases = IPHost.Aliases; \nIPAddress[] addr = IPHost.AddressList; \nConsole.WriteLine(add r[0]);  \n \nEndPoint ep = new IPEndPoint(addr[0],80);   \nSocket sock = new Socket(AddressFamily.InterNetwork,SocketType.Stream,ProtocolType.Tcp); \nsock.Connect(ep);  \nif(sock.Connected)  \nConsole.WriteLine(""OK""); \nEncoding ASCII = Encoding.ASCII;   \nstring Get = ""GET / HTTP/1.1 \\r\\nHost: "" + ""www. google.com"" + "" \\r\\nConnection: \nClose \\r\\n\\r\\n""; Byte[] ByteGet = ASCII.GetBytes(Get);   \nByte[] RecvBytes = new Byte[256]; \nsock.Send(ByteGet, ByteGet.Length, 0);  \nInt32 bytes = sock.Receive(RecvBytes, RecvBytes.Length, 0);  \n \nConsole. WriteLine(bytes); \nString strRetPage = null;   \nstrRetPage = strRetPage + ASCII.GetString(RecvBytes, 0, \nbytes); while (bytes > 0) {  \nbytes = sock.Receive(RecvBytes, RecvBytes.Length, 0); \nstrRetPage = strRetPage + ASCII.GetString(RecvBytes, 0, \nbytes); Console.W riteLine(strRetPage );  \n} \nsock.ShutDown(SocketShutdown.Both);  \nsock.Close();  \n}} \n \n \n3.5 Managing Console I/O Operations   \nConsole Input   \nIn previous Chapters, we saw that the Console  class allows using the Write()  and the \nWriteLine()  functions to display things  on the screen. While the Console.Write()  method is \nused to display something on the screen, the Console  class provides the Read()  method to get a \nvalue from the user. To use it, the name of a variable can be assigned to it. The syntax used is:  \n \nVariableNa me = Console.Read();   \nThis simply means that, when the user types something and presses Enter, what the user had \ntyped would be given (the word is assigned ) to the variable specified on the left side of the \nassignment operator.   \n72 ' metadata={'source': 'dotnet.pdf', 'page': 71}
"
"page_content='Read() doesn\'t alwa ys have to assign its value to a variable. For example, it can be used on its \nown line, which simply means that the user is expected to type something but the value typed by \nthe user would not be used for any significant purpose. For example some versions of C# (even \nincluding Microsoft\'s C# and Borland C#Builder) would display the DOS window briefly and \ndisappear. You can use the Read()  function to wait for the user to press any key in order to close \nthe DOS window.   \nBesides Read() , the Console  class also provides the ReadLine()  method. Like the \nWriteLine()  member function, after performing its assignment, the ReadLine()  method sends \nthe caret to the next line. Otherwise, it plays the same role as the Read()  function.  \n \nstring FirstName; \nConsole.Write(""Enter  First Name: ""); \nFirstName = Console.ReadLine();   \nIn C#, everything the user types is a string and the compiler would hardly analyze it without your \nexplicit asking it to do so. Therefore, if you want to get a number from the user, first request a \nstring. After getting the string, you must convert it to a number. To perform this conversion, each \ndata type of the .NET Framework provides a mechanism called Parse . To use Parse() , type the \ndata type, followed by a period, followed by Parse, and followed by parentheses. In the \nparentheses of Parse, type the string that you requested from the user. Here is an example:  \n \n \nusing System;   \nnamespace GeorgetownCleaningServices  \n{ \nclass OrderProcessing  \n{ \nstatic void Main()  \n{ \nint Number; \nstring strNumber;  \nstrNumber = Console.ReadLine(); \nNumber = int.Parse(strNumber);  \n} \n} \n} \n \nConsole Output   \nInstead of using two Write()  or a combination of Write()  and WriteLine()  to display data, you \ncan convert a value to a string and display it directly. To do this, you can provide two strings to \nthe Write() or WriteLine() and separate them with a comma:   \n1. The first part of the string provided to Write()  or WriteLine()  is the complete string \nthat would display to the user. This first string itself can be made of different sections:  \na. One section is a string in any way you want it to display  \nb. Another section is a number included between an opening curly bracket ""{"" and \na closing curly bracket ""}"". This combination of ""{"" and ""}"" is referred to as a \nplaceholder   \nc. You can put the placehold er anywhere inside of the string. The first placeholder must \nhave number 0. The second must have number 1, etc. With this technique, you can create \nthe string anyway you like and use the placeholders anywhere inside of the string  \n \n73 ' metadata={'source': 'dotnet.pdf', 'page': 72}
"
"page_content='The second part of t he string provided to Write()  or WriteLine()  is the value that you want \nto display. It can be one value if you used only one placeholder with 0 in the first string. If \nyou used different placeholders, you can then provide a different value for each one of them \nin this second part, separating the values with a comma  \n \nExample using \nSystem; class \nExercise{  \nstatic void Main()  {   \nString FullName = ""Anselme \nBogos""; int Age = 15;   \ndouble HSalary = 22.74;  \n \nConsole.WriteLine( ""Full Name: {0}"", FullName );  \nConsole.Wr iteLine( ""Age: {0}"", Age );  \nConsole.WriteLine( ""Distance: {0}"", HSalary ); \n \nConsole.WriteLine();   \n}} \nOUTPUT:  \nFull Name: Anselme \nBogos Age: 15  \nDistance: 22.74   \nAs mentioned already, the numeric value typed in the curly brackets of the first part is an ordered \nnumber. If you want to display more than one value, provide each incremental value in its curly \nbrackets. The syntax used is:  \nWrite(""To Display {0} {1} {2} {n}"", First, Second, Third, nth);  \nYou can use the sections between a closing curly bracket and an opening curly bracket to create a \nmeaningful sentence.   \nThe System  namespace provides a specific letter that you can use in the Write()  or WriteLine() \'s \nplaceholder for each category of data to display. To format a value, in the placeholder of the varia ble \nor value, after the number, type a colon and one of the appropriate letter from the following table. If \nyou are using ToString() , then, in the parentheses of ToString() , you can include a specific letter or \ncombination inside of double -quotes. The lett ers and their meanings are:  \nCharacter  Used For  \nc C Currency values  \nd D Decimal numbers  \ne E Scientific numeric display such as 1.45e5 \nf F Fixed decimal numbers  \ng G General and most common type of numbers  \nn N Natural numbers  \nr R Roundtrip formatting  \nx X Hexadecimal formatting  \np P Percentages  \nExample \nusing System; \nclass Exercise  \n{ \nstatic void Main()  \n{  \n74 ' metadata={'source': 'dotnet.pdf', 'page': 73}
"
"page_content='double Distance = \n248.38782; int Age = 15;  \nint NewColor = 3478;  \ndouble HSal = 22.74, HrsWork = 35.5018473; \ndouble WeeklySal = HSal * HrsWork;  \n \nConsole.WriteLine(""Distance: {0}"", Distance.ToString(""E"")); \nConsole.WriteLine(""Age: {0}"", Age.ToString()); \nConsole.WriteLine(""Color: {0}"", NewColor.ToString(""X""));   \nConsole.WriteLine(""Weekly Salary: {0} for {1} hours"", \nWeekSal.ToString(""c""), HrsWork.ToString( ""F""));  \nConsole.WriteLine();  \n} \n} \nOUTPUT:   \nDistance: \n2.483878E+002 Age: 15  \nColor: D96   \nWeekly Salary: $807.31 for 35.50 hours  \n \nTo specify the amount of space used to display a string, you can use its placeholder in Write()  or \nWriteLine() . To do this, in the placeholder, type the 0 or the incrementing number of the placer  \nand its formatting character if necessary and if any. Then, type a comma followed by the number \nof characters equivalent to the desired width. Here are examples:   \nusing System; \nclass Exercise { \nstatic void Main() {  \n String FullName = ""Anselme Bogos"";  \n \n int Age = 15;  \n \n double Marks = 22.74;  \n \n Console.WriteLine(""Full Name: {0,20}"", FullName);  \n \n Console.WriteLine(""Age:{0,14}"", Age.ToString());  \n \n Console.WriteLine(""Marks:{0:C,8}"", Marks.ToStri ng());  \n \n} Console.WriteLine();  \n \n \n \n}  \n \nOUTPUT:   \n \nFull Name:  Anselme Bogos  \n \nAge: 15 \n \nMarks: 22.74  \nThe sign you provide for the width is very important. If it is positive, the line of text is aligned to \nthe right. This should be your preferred alignme nt for numeric values. If the number is negative, \nthen the text is aligned to the left.  \n \n3.6 Windows Forms   \nThe Windows Forms is a collection of classes and types that encapsulate and extend the Win32 \nAPI in an organized object model. In other words, the c omponents used to create Windows GUI \napplications are provided as .NET classes and types that form part of an orderly hierarchy.  \n \n \n \n75 ' metadata={'source': 'dotnet.pdf', 'page': 74}
"
"page_content='This hierarchy is defined by inheritance: Simple reusable classes such as Component  are \nprovided, and then used as a bas e from which more sophisticated classes are derived. We can \ndraw a useful overview by representing the inheritance hierarchy in a treelike diagram. Figure \n8.1 summarizes at a high level the classes that include Windows Forms and GDI+.  \n \n \n \n \n \n \n Figure : A Sum mary of Window Forms and GDI+ Classes    \n   Object      \n   Components      \n  Control      \nContainer  Windows  Windows  GDI+ Classes  \nHosting Child  Forms  Forms  \uf0b7 Graphics  \nControl  Control  Component  \uf0b7 Pen \n\uf0b7 Forms  \uf0b7 Lable \uf0b7 Timer  \uf0b7 Brush  \n\uf0b7 Panels  \uf0b7 Button  \uf0b7 Main Menu  \uf0b7 Bitmap  \n\uf0b7 TabPage  \uf0b7 Text Box  \uf0b7 Image List  \uf0b7 ….. \n\uf0b7 GroupBox  \uf0b7 Check Box  \uf0b7 …..   \n\uf0b7 UserControl  \uf0b7 List Box      \n\uf0b7 ……. \uf0b7 …..     \n   System.Window.F orms  System.Drawing  \n Sub Classes   Custom Controls      \n Forms        \n &  Drawn with GDI+      \n User Controls        \n \n \n76 ' metadata={'source': 'dotnet.pdf', 'page': 75}
"
"page_content=' \n \n \n \n \n \nThe arrows represent inheritance: Control  assumes all the functionality of Component , which \nassumes all the functionality of Object . Following Table provides a quick and practical \nsummary of the four essential classes on which the Windows Forms types are based.  \n \nClass  Role Why We Need It  \nObject  Acts as a base class for all types in  For a tidy unified type system, and to provide  \n the .NET Framework.  core functionality available to all types (such as  \n  ToString ). \nComponent  Provides the basics of  So Visual Studio‘s Designer can host a wide  \n containership, facilitates hosting  variety of controls and components in a generic  \n in a visual designer, and defines a  way, to provide a base from which you can  \n protocol for resource disposal.  write nonvisual components, and to allow the  \n  cleanup of Windows handles and file handles in  \n  a timely and reliable manner.  \nControl  Provides th e core functionality for  As a common superclass for all controls, such  \n a visual control that responds to  as textboxes, labels, and buttons, allowing them  \n mouse and keyboard messages,  to be treated in a consistent manner, as well as  \n accepts focus, and  can participate  providing a base from which you can derive  \n in drag -and-drop operations.  your own custom controls.  \nForm  Defines a class representing a  To provide a base class with standard  \n window to which you can add  windowing and containership functi onality that  \n controls.  you can subclass to create forms in your  \n  application.  \nTable : Core Classes   \nCreating a Windows Forms application is largely just a matter of instantiating and extending the \nWindows Forms and GDI+ classes. In a nutshell, you typ ically complete the following steps:  \n1. Create a new project defining the structure of a Windows Forms application.   \n2. Define one or more Forms (classes derived from the Form  class) for the windows \nin your application.  \n3. Use the Designer to add controls to your  forms (such as textboxes and checkboxes), and \nthen configure the controls by setting their properties and attaching event handlers.  \n4. Add other Designer -managed components, such as menus or image lists.  \n5. Add code to your form classes to provide functionali ty.  \n6. Write custom controls to meet special requirements, using GDI+ classes to handle \nlow-level graphics.  \nCreating Windows Forms Application   \nThe first step to building a Windows Forms application is creating a project. A Windows Forms \nproject is just lik e any other type of project in that it consists of a grouping of source code files, \na list of references to required .NET code libraries, and an appropriate configuration of \ncompilation and debugging options. When you use Visual Studio to create a project from a \ntemplate, it sets all of this up for you, providing a ―skeleton‖ appropriate to the template you‘ve \nselected. In the case of Windows Forms, this consists of the following:   \n\uf0b7 A project of Output Type Windows Application . You can view or change this in  the \uf020 \uf020\nProject | Properties dialog box.  \uf020\n \n \n77 ' metadata={'source': 'dotnet.pdf', 'page': 76}
"
"page_content='\uf0b7 References to the .NET assemblies required for typical Windows Forms applications \n(covering most of the types in the Windows Forms  namespace). You can see a list of \nthe project references in the Solution Explo rer. \uf020 \uf020\n\uf0b7 A blank form, called Form1  (a C# class with the structure required for a visually \neditable form). \uf020\n\uf0b7 A Main  method in Form1  that instantiates and displays the form. \uf020  \nLet‘s start the walkthrough by creating a new Windows Forms project. From the main m enu, \nchoose File | New | Project , click Visual C# Projects  , and choose the Windows Application  \ntemplate (see Figure 8.2). Change the project name to SimpleApp  and click OK. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 8.2 Creating a New Windows Forms Project   \nAdding  Controls  \nOnce we‘ve created the project, Visual Studio opens the main form ( Form1 ) in the Designer —the \nvisual editor for our C# form class. Basically, a form created in Visual Studio is just a C# file, \ndefining a class based on System.Windows.Forms.Form , containing code to add and configure the \ncontrols created visually. Visual Studio is a ―two -way tool‖ meaning that we can work with the \nsame code either visually (using the Designer) or programmatically (in the Code Editor).  \n \nLet‘s use the Designer to add a few controls to Form1 . We can add controls and components \nfrom the toolbox window and then configure them using the Properties window.  \n1. From the toolbox, add a Label control to the form. By default, Visual Studio will \nname the control Label1 .  \n2. From the Pr operties Window (F4) change label1 ‘s Text property to Favorite CD , \nand change its AutoSize  property to True  .This tells the control to size itself \naccording to the metrics of the font and width of the text.   \n3. Now add a TextBox  from the toolbox onto the for m, and position it below the \nlabel. Enlarge it horizontally and clear its Text property.  \n4. Add another label to the form, setting its Text property to Favorite Style , and \nAutoSize  property to True .  \n \n \n \n78 ' metadata={'source': 'dotnet.pdf', 'page': 77}
"
"page_content='5. Add a ComboBox  and position it below the Favorite S tyle label. Clear its \nText property.   \n6. Select the combo‘s Items  property, and then click the ellipses on the right to open \nthe String Collection Editor. Type in a few styles of music —each on a separate line  \n7. Click OK, and then press F5 to save, compile, an d run the application.  \nAdding an Event Handler  \nLet‘s add some functionality to the form.  \n1. Add a Button  and ListBox  to the form.  \n2. Select the button, and change its Text property to Update . Then click the \nlightning  icon in the Properties window to switch to the Events View.   \n \nThink of these events as ―hooks‖ into which we can attach our own methods. You \ncan either double -click on an event to create a new event -handling method, or use the \ndrop-down list to connect into an existing compatible method.   \n3. Double -click on the Click  event. Visual Studio will write a skeleton event -handling \nmethod, wiring it to the event. It will then place you in the Code Editor, inside the empty \nmethod definition:  \nprivate void button1_Click(object sender, System.EventArgs e)   \n{ \n \n} \n \nThe .NET convention for event handling requires two parameters: a sender parameter of type \nobject , and an event arguments parameter of type  EventArgs —or a descendant of  EventArgs . \nThe sender parameter tells us which control fired the event (this is us eful when many \ncontrols have been wired to the same event -handling method). The second parameter is \ndesigned to supply special data about the event. In the case of Click , we have a standard \nEventArgs  object, and this contains no useful information —it‘s jus t there to meet the \nprotocol required to support more sophisticated events (such as KeyPress  or MouseDown ). \n \nThe actual name for this method ( button1_Click  ) is just a convenient identifier generated \nby Visual Studio; Windows Forms doesn‘t impose any parti cular naming convention.   \n4. Add the following code to the event handler:   \nprivate void button1_Click(object sender, System.EventArgs e)  \n{  \nlistBox1.Items.Clear();  \nlistBox1.Items.Add (""Fav CD: "" + textBox1.Text); \nlistBox1.Items.Add (""Fav Style: "" + comboBo x1.Text);  \n}   \nHere we‘re manipulating our list box through its Items  property. Items  returns a \ncollection object, having methods to add and remove items from its list. Note how we \naccess each control through its name —this is possible because the Designer creates \nclass fields matching the names of each control. You can see these declarations at the \ntop of the class definition.   \n5. Press F5 to compile and run the program  \nAdding Controls at Runtime   \nSometimes it‘s necessary to add controls without the help  of the Designer. For instance, you \nmight want some controls to appear on a form only when a particular button is clicked.   \nIn reading how to programmatically add controls, it‘s very helpful to examine a visually created \nform in the Code Editor. If you exp and the Designer Generated Code region, you‘ll see a method  \n \n79 ' metadata={'source': 'dotnet.pdf', 'page': 78}
"
"page_content='called InitializeComponent  containing all the code that creates and configures each of the \nform‘s visual components.  \nHere are the four steps to programmatically adding a control or component:  \n1. Add a class field declaration for the new control.  \n2. Instantiate the control.  \n3. Configure the control by setting its properties and adding event handlers, if required.  \n4. Add the control to the form‘s Controls  collection (or alternatively, to the Controls col lection \nof a container control, such as a GroupBox ).  \n \n \nExample: Create a new form, add a button, and then have a textbox appear when the user clicks \nthe button:  \n1. Create a new Windows Forms project called SimpleApp2  and add a Button  control from \nthe toolbox  onto the new form.  \n2. Press F7 to open the Code Editor, and locate button1 ‘s declaration. Below this, add a similar \ndeclaration for our new textbox, as follows (you can exclude the System.Windows.Forms  \nprefix if your form has the appropriate using  statement ):   \nprivate System.Windows.Forms.Button button1;   \nprivate System.Windows.Forms.TextBox myTextBox;  \nYou need to understand that this declaration doesn‘t actually create a textbox. All it does \nis instruct the compiler, once our form is instantiated, to cre ate a field that can reference  \n(point to) a textbox object —one that does not yet exist. This declaration exists so as to \nprovide a convenient way to refer to the control throughout the lifetime of the form. In the \ncases where we don‘t need to explicitly re ference the control after its been created, we can \ndo away with this declaration.   \n3. Return to the Designer, and double -click on the button. This is a quick way to attach an \nevent handler to the button‘s default event (Click).  \n4. Add the following code to the  button‘s event handler:   \nprivate void button1_Click(object sender, System.EventArgs e)  \n{  \n// Create the actual textbox and assign its reference to \nmyTextBox this.myTextBox = new TextBox();  \n \n// Position the control   \nmyTextBox.Location = new Point (30, 20);  \n \n// Put the control on the form. \nthis.Controls.Add (myTextBox);   \n}  \n5.  Press F5 to test the application  \n \nAttaching an Event Handler at Runtime   \nLet‘s suppose we want to set up our newly created textbox so that when it‘s right -clicked, a \nmessage box appe ars. We need to add an event handler to the textbox at runtime, and there are \ntwo steps to this:   \n\uf0b7 Writing the event -handling method. \uf020 \uf020\n\uf0b7 Attaching the method to the control‘s event. \uf020\n\uf0b7 In our case, we‘ll need to attach to the textbox‘s MouseDown  event (because  there‘s \nno specific right -click event). First, we need to write the event -handling method, with \uf020\n \n \n80 ' metadata={'source': 'dotnet.pdf', 'page': 79}
"
"page_content='parameters of the correct type for a MouseDown  event. You can determine an \nevent‘s signature in two ways:   \n\uf0b7 Look for the event in the Microsoft documenta tion, and then click on its delegate (in our case, \uf020 \uf020\nMouseEventHandler ). \uf020 \uf020\n\uf0b7 Using the Designer, add a dummy control of the type we‘re attaching to, create an \nappropriate event handler, and then delete the dummy control. The event -handling method \nwill still be there —with the correct signature. All we need to do is rename it. \uf020\n \n \n \n \n1.  \nvoid myTextBox_MouseDown (object sender, MouseEventArgs e)  \n{ \nif (e.Buttons == MouseButtons.Right)  \n// Show is a static method of System.Windows.Forms.MessageBox \nMessageBox.Show  (""Right Click!"");  \n} \n \n2. Next, we attach this method to myTextBox ‘s MouseDown  event. Return to the \nbutton1_Click  method and add the following line of code:  \n \nmyTextBox.MouseDown += new MouseEventHandler (myTextBox_MouseDown) \nOn the left -hand side, myTextBox. MouseDown  is the event to which we‘re attaching, using \nthe += operator. On the right -hand side, we‘re creating a new MouseEventHandler  delegate \ninstance: in other words, an object containing a pointer to a method ( myTextBox_MouseDown ) \nconforming to MouseEv entHandler ‘s signature.   \n3.  Test the application.  \n \n3.7 Error Handling   \nThere are no exceptions in C and in C++ one can get away from using them with error handling \nfunctions such as exit() and terminate(). In C# these functions are absent and we intro duce \nexceptions which take their place. The exception handling in C#, and Java is quite similar. When \na program has a bug we can intercept it in the flow of execution by inserting an error handling \nstatement. To catch a particular type of exception in a pi ece of code, you have to first wrap it in a \n\'try\' block and then specify a \'catch\' block matching that type of exception. When an   \nexception occurs in code within the \'try\' block, the code execution moves to the end of the try \nbox and looks for an appropri ate exception handler. For instance, the following piece of code \ndemonstrates catching an exception specifically generated by division by zero:   \ntry{  \nint zero = 0;  \nres = (num / zero);  \n}  \ncatch (System.DivideByZeroException e){ \nConsole.WriteLine(""Error:  an attempt to divide by zero"");   \n}  \nYou can specify multiple catch blocks (following each other), to catch different types of exception. A \ncomplication results, however, from the fact that exceptions form an object hierarchy, so a particular \nexception mig ht match more than one catch box. What you have to do here is put catch boxes for the \nmore specific exceptions before those for the more general exceptions. At most one  \n \n81 ' metadata={'source': 'dotnet.pdf', 'page': 80}
"
"page_content='catch box will be triggered by an exception, and this will be the first (and thus  more specific) \ncatch box reached.  \n. \nExample   \n//first exception handling \nprogram using System;  \nclass OutOfRange: Exception  \n{ \n} \n \nclass Demo \n{ int n;  \npublic int []array;  \n \npublic Demo ( int n)   {   \nthis.array = new int[n];  \nthis.n = n;  \n} \n \npublic void show_elem ent (int i)   {   \ntry { \nif (i == 0) throw ( new OutOfRange());  } \ncatch (Exception e)  { \nConsole.WriteLine(""Exception : {0}"", e);  } \nConsole.WriteLine (array [i]);  \n} \n} \nclass Test {   \npublic static void Main() { \nDemo test = new Demo (3); \ntest.array [1] = 2;   \ntest.array [2] = 3; \ntest.show_element (0);  \n} \n} \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n82 ' metadata={'source': 'dotnet.pdf', 'page': 81}
"
"page_content='Exception  When Occured  \nSystem.ArithmeticExcepti  A base class for exceptions that occur during arithmetic operations,  \non such as System.DivideByZeroException and  \n System.OverflowExceptio n. \nSystem.ArrayTypeMismat  Thrown when a store into an array fails because the actual type of  \nchException  the stored element is incompatible with the actual type of the array.  \nSystem.DivideByZeroExc  Thrown when an attempt to divide an integral value by z ero occurs.  \neption   \nSystem.IndexOutOfRange  Thrown when an attempt to index an array via an index that is less  \nException  than zero or outside the bounds of the array.  \nSystem.InvalidCastExcept  Thrown when an explicit conversion from a base type or interf ace \nion to a derived type fails at run time.  \nSystem.NullReferenceExc  Thrown when a null reference is used in a way that causes the  \neption  referenced object to be required.  \nSystem.OutOfMemoryExc  Thrown when an attempt to allocate memory (via new) fails.  \neption   \nSystem.OverflowExceptio  Thrown when an arithmetic operation in a checked context  \nn overflows.  \nSystem.StackOverflowEx  Thrown when the execution stack is exhausted by having too many  \nception  pending method calls; typically indicative of very de ep or  \n unbounded recursion.  \nSystem.TypeInitialization  Thrown when a static constructor throws an exception, and no  \nException  catch clauses exists to catch it.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n83 ' metadata={'source': 'dotnet.pdf', 'page': 82}
"
"page_content="" \n \n \nUnit -4:  \nAdvance Features using C#  \n4.1 Web Services   \nWeb service is simply an application that exposes a Web -accessible API. That means you \ncan invoke this application programmatically over the Web. Using SOAP Protocol \nXML+HTTP =SOAP (Simple Object Access protocol)   \nWeb services allow applications to share  data. Web services can be called across platforms \nand operating systems regardless of programming language. .NET is Microsoft's platform for \nXML Web services.  \nWeb Service Application  \nLike Pay per view T.V. Channel we can make Software as pay per use, usin g Web service. \nFor example, let say Infovision Inc developed Expensive Software for 3D Virtual Modeling. \nLot of company does not want acquire the licensee because it is expensive and they need to \npay for Support etc… instead of this if Infovision makes thi s software as a WebService, most \nof the company will use as pay per use.   \nAnother example Credit card validation we can expose as a webservice. (Good example \nfor webService)   \nUsing VisualStudio.NET we can easily create WebServices. ASP.NET WebService this \nproject type will be used to create WebService.  \n \nThe client of a Web service can be a rich Windows application created using Windows Forms, \nWPF, Silverlight, or an ASP.NET application using Web Forms. A Windows PC, a UNIX \nsystem, or a mobile device can be used to consume (use) the Web service. With the .NET \nFramework, Web services can be consumed in every application type.  \nThere are several web service available with .Net Framework, such as:  \n1) Validation Controls such as:   \n1. E-mail address validator,  \n2. Regular e xpression validator,  \n3. Range Validator, etc.  \n2) Login Controls such as:   \n1. Create user  \n2. Delete user  \n3. Manage users, etc.  \nSome Web services are also available on internet , which are free and offer \napplication -components like:   \n\uf0b7 Currency Conversion, \uf020 \uf020\n\uf0b7 Weather Rep orts, \uf020\n\uf0b7 Language Translation, \uf020\n\uf0b7 Search Engines, \uf020\n\uf0b7 Document Convertor, etc. \uf020\nSome are paid and can be use by authorised sites, such as:  \n\uf0b7 Credit and Debit card payment \uf020 \uf020\n\uf0b7 Net Banking, etc. \uf020\n \n \n \n \n84 "" metadata={'source': 'dotnet.pdf', 'page': 83}
"
"page_content=' \n \n \n \nWeb Services Architecture   \n   WEB SERVER  \n \nIE Browser        \n \n    \n Web Service    \n    \n \n      \n \nWindows Apps    \nSOAP     \n \n    Web Service   \n \n   Request    \n \n       \n   \nHandler      \nJava Platform       \n \n      \n \n       \n \n     Web Service   \n \nOther Platform        \n \n      \n \n       \n \n       \n  \nWeb Service Architec ture  \nCreating Web Service  \nTo create and expose ASP.NET Web Servies by authoring and saving text files with the \nfile extension ―asmx‖ within the virtual path of an ASP.NET Web Application.  \nTo understand the concept of Web Services we have given an example of Web Service, \nwhich provides the current time of day on its machine.  \nDeclaring WebMethod methods  \nA WebMethod represents a method for web. WebMethod has six properties they are :  \n1) Description  \n2) MessageName  \n3) EnableSession  \n4) CacheDuration  \n5) TransactionOption  \n6) BufferResponse  \n \n[WebMethod]   \nPublic string SayHello ()  \n{ \nreturn ""Hello \nNeeraj Tripathi"";   \n} \n \nDescription   \nBoth the [WebService], and [WebMethod] attributes have a Description Property. With \nthis property we can associate documentation with our web Serv ice and WebMethod.   \nFor example you can use Description Attribute to describe the Webmethod.  \n \n \n \n \n \n \n \n85 ' metadata={'source': 'dotnet.pdf', 'page': 84}
"
"page_content='[WebMethod (Description=""This method will add three \ninteger"")] Public int Add (int a, int b, int c)  \n{ \nreturn a+b+c;  \n} \n \nMessageName   \nThis is property  useful, when we want to overload the WebMethod.   \nFor Example   \n[WebMethod]  \nPublic int Add (int a, int b, int c)  \n{ \nreturn a+b+c;  \n} \n[WebMwthod (MessageName=‖Add‖)] \npublic int Add(int a)  \n{ \nint s = 0 ;  \nfor(int i = 1; i <= a; \ni++) s = s + i;  \nreturn s;   \n} \n \nEnableSession   \nThis Property used for to enable the session in WebServices.   \n(Remember WebServiecs uses HTTP protocol this is stateless) .if we want to maintain the \nstate between client and server  we need to use this property. Default Enablesession is false   \n[WebMethod (EnableSession=true)] \nPublic string SayHiToMS ()  \n{ \nreturn "" Hello to .NET "";   \n} \n \nCacheDuration   \nWhen we cache the previously accessed result. Next time the same user or different user asks \nwe can serve from cache. Here result cached 60 mil liseconds. if we invoke this method with in \n60 milliseconds it will print same time . This will increase the Web Service performance.   \n[WebMethod (CacheDuration = \n60)] Public string ShowTime()  \n{  \nreturn \nDateTime.Now.ToShortTimeString();  \n} \n \nTransactionO ption   \nTransactionOption Can be one of five modes:   \n\uf0b7 Disabled \uf020 \uf020\n\uf0b7 NotSupported \uf020\n \n86 ' metadata={'source': 'dotnet.pdf', 'page': 85}
"
"page_content=""\uf0b7 Supported \uf020 \uf020\n\uf0b7 Required \uf020\n\uf0b7 RequiresNew \uf020  \nEven though there are five modes, web methods can only participate as the root object in a \ntransaction. This means both Required and Requi resNew result in a new transaction being \ncreated for the web method. The Disabled, NotSupported, and Supported settings result in no \ntransaction being used for the web method. The TransactionOption property of a web method is \nset to Disabled by default.  \n \nBufferResponse   \nThis property is boolean control. WebMethod whether or not to buffer the method's response.  \n \n4.2 Window Service  \n \nWindows Services is previously called as NT Service. The Idea of creating a windows service \napplication is two fold one is to c reate a long running application and the other is service \napplications are the application that run directly in the windows session itself (This can be \nverified by accessing the current or home directory of the service application which default to   \n.winnt \\system32). One more advantage of the Windows Service Application, which makes it \nmore useful, compared to other application is that, Service application can be made to run in the \nsecurity context of a specific user account.  \n \nThere are basically two types o f Services that can be created in .NET Framework. Services that \nare only service in a process are assigned the type Win32OwnProcess. Services that share a \nprocess with another service are assigned the type Win32ShareProcess.The type of the service \ncan be q ueried. There are other types of services which are occasionally used they are mostly for \nhardware, Kernel, File System.  \n \nLifecycle of the Service Application.  \n \nIn a typical application the Main method is the entry pointand for what ever instantiation has to \nhappen will happen here matters. In Caseof Service, the Main method remains to the entry \nmodule by the actual functionality of the service application start only in the Main method by \ntriggering a overridden method called OnStart() which actually starts  the Service. Prior to \nOnStart() method another significant variance is compared to the other application is service \nshould be installed onto the system on which it will run. This process executes the installers for \nthe service project and loads the servic e into the Services Control Manager for that computer. \nThe Services Control Manager is the central utility provided by Windows to administer services \nfollowing which the main and Onstart() is followed to fall inline.  \n \nA Service application can be in any on e of the states listed they are viz., Running, Paused or \nStopped. The Services also has the capability to queue the commands and also remain in those \nstates. Such states can be queried, some of the significant states are like ContinuePending, \nwhich means c ontinue command is in queue and yet to get executed. Similarly StartPending, \nStopPending, PausePending.  \n \nWindow SERVICE application development can be divided to two phases. One is the \ndevelopment of Service functionality and the last phases is about the d evelopment. The 3 Main \nclasses involved in Service development are:  \n \n87 "" metadata={'source': 'dotnet.pdf', 'page': 86}
"
"page_content='\uf0b7 System.ServiceProcess.ServiceBase \uf020\uf020\n\uf0b7 System.ServiceProcess.ServiceProcessInstaller \uf020\n\uf0b7 ServiceController \uf020\n \nSystem.ServiceProcess.ServiceBase , is the class in which we override the method s \nfor implementation, Table 9.1 shows some methods which are provide for override.  \n \nMethod  Override to  \nOnStart  Indicate what actions should be taken when your service starts running.  \n You must write code in this procedure for your service to perform usef ul \n work.  \nOnPause  Indicate what should happen when your service is paused.  \nOnStop  Indicate what should happen when your service stops running.  \nOnContinue  Indicate what should happen when your service resumes normal  \n functioning after being paused.  \nOnShutDown  Indicate what should happen just prior to your system shutting down, if  \n your service is running at that time.  \nOnCustomCommand  Indicate what should happen when your service receives a custom  \n command. For more information on custom commands.  \nOnPowerEvent  Indicate how the service should respond when a power management event  \n is received, such as a low battery or suspended operation.  \nRun The main entry point for the service, u sally in the Main method  \n \nDeveloping Window Service   \nTo develop and  run a Window Service application on .NET frame, you have to follow \nthe following steps.  \n \nStep 1: Create Skeleton of the Service  \n \nStep 2: Add functionality to your service  \n \nStep 3: Install and Run the Service  \n \nStep 4: Start and Stop the Service  \n \nCreate Ske leton of the Service  \n \nTo create a new Window Service, pick Windows Service option from your Visual \nC# Projects, give your service a name, and click OK, see figure 9.2.  \n \n \n \n \n \n \n \n \n \n \n88 ' metadata={'source': 'dotnet.pdf', 'page': 87}
"
"page_content=' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 9.2 Create New Window Service  \n \n \n \n \n \nThe r esult looks like figure 9.3. The Wizard adds WinService1.cs class to your project.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n89 ' metadata={'source': 'dotnet.pdf', 'page': 88}
"
"page_content='Figure 9.3 WinService1.cs  \n \nSet your ServiceName  to your own name so it would be easier to recognize your service \nduring testing see figur e 9.4, OR you can set this property programmatically using this line \nthis.ServiceName = ""mcWinService""; (This is the name you will be looking for later  ). \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 9.4 Setting the name of Service  \n \nThe default code of WinSer vice1.cs added by the Wizard looks like here  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n90 ' metadata={'source': 'dotnet.pdf', 'page': 89}
"
"page_content='namespace mcWebService   \n{ \nusing System;  \nusing System.Collections; \nusing System.Core;  \nusing System.ComponentModel; \nusing System.Configuration; \nusing System.Data;  \nusing System.Web.Services ; \nusing System.Diagnostics; \nusing System.ServiceProcess;  \n \npublic class WinService1 : System.ServiceProcess.ServiceBase   \n{ \n// <summary>  \n// Required designer variable.  \n// </summary>   \nprivate System.ComponentModel.Container components;  \n \npublic WinService1()   \n{  \n// This call is required by the WinForms Component \nDesigner. InitializeComponent();  \n// TODO: Add any initialization after the InitComponent call  \n}  \n \n// The main entry point for the \nprocess static void Main()  \n{  \nSystem.ServiceProcess.ServiceBase[] ServicesToRun;  \n \n// More than one user Service may run within the same process. To add   \n// another service to this process, change the following line to  \n// create a second service object. For example,  \n//  \n// ServicesToRun = New System.ServiceProcess.ServiceBase[] {new \nWinService1(),  new MySecondUserService()};  \n//  \nServicesToRun = new System.ServiceProcess.ServiceBase[] { new WinService1() \n}; System.ServiceProcess.ServiceBase.Run(ServicesToRun);  \n}  \n \n// <summary>   \n// Required method for Designer support - do not modify  \n// the contents of this method with the code editor.  \n// </summary>  \n \nprivate void InitializeComponent()   \n{  \ncomponents = new System.ComponentModel.Container(); \nthis.ServiceName = ""WinService1"";   \n} \n \n// <summary>   \n// Set things in motion so your service can do its work.  \n// </summary>  \n \n \n91 ' metadata={'source': 'dotnet.pdf', 'page': 90}
"
"page_content='protected override void OnStart(string[] args)   \n{ \n// TODO: Add code here to start your service.  \n}  \n \n// <summary>   \n// Stop this service.  \n// </summary>  \n \nprotected override void OnStop()   \n{ \n// TODO: Add code here to perform any tear -down necessary to stop your s ervice.   \n} \n}  \n} \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n92 ' metadata={'source': 'dotnet.pdf', 'page': 91}
"
"page_content='Add functionality to your service  \n \nAs you saw WebService1.cs, there are two overridden functions OnStart and OnStop. \nThe OnStart function executes when you start your service and the OnS top function \ngets execute when you stop a service. I write some text to a text file when you start \nand stop the service.  \n \nprotected override void OnStart(string[] args)   \n{ \nFileStream fs = new FileStream(@""c: \\temp\\mcWindowsService.txt"" , \nFileMode.O penOrCreate, FileAccess.Write);   \nStreamWriter m_streamWriter = new StreamWriter(fs); \nm_streamWriter.BaseStream.Seek(0, SeekOrigin.End); \nm_streamWriter.WriteLine("" mcWindowsService: Service Started \n\\n""); m_streamWriter.Flush();   \nm_streamWriter.Close();  \n \n} \n \n// <summary>   \n// Stop this service.  \n// </summary>  \nprotected override void OnStop()  \n{  \nFileStream fs = new FileStream(@""c: \\temp\\mcWindowsService.txt"" , \nFileMode.OpenOrCreate, FileAccess.Write);  \nStreamWriter m_streamWriter = new StreamWriter(fs); \nm_streamWriter.Ba seStream.Seek(0, SeekOrigin.End); \nm_streamWriter.WriteLine("" mcWindowsService: Service Stopped \n\\n""); m_streamWriter.Flush();  \nm_streamWriter.Close();   \n} \n \n \n \nInstall and Run the Service  \n \nBuild of this application makes one exe, mcWinService.exe . You need to call installutil \nto register this service from command line.  \n \n \n \ninstallutil C: \\mcWebService \\bin\\Debug \\mcWebService.exe  \n \n \n \nYou can use /u option to uninstall the service.  \n \n \n \n \n93 ' metadata={'source': 'dotnet.pdf', 'page': 92}
"
"page_content='installutil /u \nC:\\mcWebService \\bin\\Debug \\mcWebService.exe  \n \n \n \nNow R un the application.  \n \nStart and Stop the Service  \n \nFor start and stop the service you need to go to the Computer Management. You can \nuse Manage menu item by right clicking on My Computer, see figure 9.5.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 9.5 Computer Management  \n \nUnder Services and Applications , you will see the service mcWinService . Start and \nStop menu item starts and stops the service, see figure 9.6.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n94 ' metadata={'source': 'dotnet.pdf', 'page': 93}
"
"page_content=' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 9.6 Start the Service  \n \n4.3ASP.NET and Web contr ols  \nASP.NET is a compiled, .NET -based environment; you can author applications in any .NET \ncompatible language, including Visual Basic .NET, C#, and JScript .NET. Additionally, the entire  \n.NET Framework is available to any ASP.NET application. Developers can easily access \nthe benefits of   \nthese technologies, which include the managed common language runtime environment, \ntype safety, inheritance, and so on.  \nFEATURES OF ASP.NET  \nASP.NET has better language support, a large set of new controls, XML -based compo nents, \nand better user authentication. ASP.NET provides increased performance by running compiled \ncode. ASP.NET code is not fully backward compatible with ASP. Instead of that ASP.NET \nhaving following major features:  \n• Better language support   \n• Programmable controls  \n• Event -driven programming  \n• XML -based components  \n• User authentication, with accounts and roles  \n• Higher scalability  \n• Increased performance - Compiled code  \n• Easier configuration and deployment  \n• Not fully ASP compatible  \n \n95 ' metadata={'source': 'dotnet.pdf', 'page': 94}
"
"page_content=""Language Support   \nASP.NET  uses ADO.NET.   \nASP.NET supports full Visual Basic, not \nVBScript. ASP.NET supports C# (C sharp) and \nC++. ASP.NET supports JScript.  \nASP.NET Controls  \nASP.NET contains a large set of HTML controls. Almost all HTML elements on a page can \nbe defined as ASP.NET control objects that can be controlled by scripts.   \nASP.NET also contains a new set of object -oriented input controls, like programmable list -\nboxes and validation controls.  \nA new data grid control supports sorting, data paging, and everything you can expec t from \na dataset control.  \nASP.NET EXECUTION MODEL  \nWhen the client requests a Web page for the first time, the following set of events take place:  \n1. The client browser issues a GET HTTP request to the server.  \n2. The ASP.NET parser interprets the source code.  \n3. If the code was not already compiled into a dynamic -link library (DLL), ASP.NET invokes \nthe compiler.  \n4. Runtime loads and executes the Microsoft intermediate language (MSIL) code.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nWhen the user requests the same Web page for the second tim e, the following set of events \ntake place:  \n1. The client browser issues a GET HTTP request to the server.  \n2. Runtime loads and immediately executes the MSIL code that was already \ncompiled during the user's first access attempt.  \nASP.NET PAGE LIFE CYCLE   \nThe lif etime of an ASP.NET page is filled with events. A .NET technical interview might \nbegin with this question. A series of processing steps takes place during this page life cycle. \nFollowing tasks are performed:  \n• Initialization   \n• Instantiation of controls  \n• Restoration and Maintainance of State  \n• Running Event Handlers  \n• Rendering of data to the browser  \nThe life cycle may be broken down into Stages and Events. The stages reflect the broad \nspectrum of tasks performed. The following stages take place:  \n \n \n \n96 "" metadata={'source': 'dotnet.pdf', 'page': 95}
"
"page_content=""1. Page Re quest: This is the first stage, before the page life cycle starts. Whenever a page is  \nrequested, ASP.NET detects whether the page is to be requested, parsed and compiled or \nwhether the page can be cached from the system.  \n2. Start: In this stage, properties s uch as Request and Response are set. Its also determined at \nthis stage whether the request is a new request or old, and thus it sets the IsPostBack property in \nthe Start stage of the page life cycle.   \n3. Page Initialization: Each control of the page is assig ned a unique identification ID. If there \nare themes, they are applied. Note that during the Page Initialization stage, neither postback \ndata is loaded, nor any viewstate data is retrieved.   \n4. Load: If current request is a postback, then control values are r etrieved from their viewstate.   \n5. Validation: The validate method of the validation controls is invoked. This sets the \nIsValid  property of the validation control.  \n6. PostBack Event Handling: Event handlers are invoked, in case the request is a postback.   \n7. Rende ring: Viewstate for the page is saved. Then render method for each control is called. \nA textwriter writes the output of the rendering stage to the output stream of the page's \nResponse property.   \n8. Unload: This is the last stage in the page life cycle stages . It is invoked when the page \nis completely rendered. Page properties like Respone and Request are unloaded.  \nNote that each stage has its own events within it. These events may be used by developers \nto handle their code. Listed below are page events that are used more frequently.  \n• PreInit:  Checks the IsPostBack property. To create or recreate dynamic controls. To set \nmaster pages dynamically. Gets and Sets profile propety values.  \n• Init:  Raised after all controls are initialized, and skin properties are  set.  \n• InitComplete:  This event may be used, when we need to be sure that all initialization tasks \nare complete.  \n• PreLoad:  If processing on a control or a page is required before the Load event.  \n• Load:  invokes the OnLoad event on the page. The same i s done for each child control on \nthe page. May set properties of controls, create database connections.  \n• Control Events:  These are the control specific events, such as button clicks, listbox item \nselects etc.  \n• LoadComplete:  To execute tasks that requir e that the complete page has been loaded.  \n• PreRender:  Some methods are called before the PreRenderEvent takes place, like \nEnsureChildControls, data bound controls that have a dataSourceId set also call the DataBind \nmethod. Each control of the page has a PreRender event. Developers may use the prerender \nevent to make final changes to the controls before it is rendered to the page.   \n• SaveStateComplete:  ViewState is saved before this event occurs. However, if any changes \nto the viewstate of a control is ma de, then this is the event to be used. It cannot be used to \nmake changes to other properties of a control.   \n• Render:  This is a stage, not an event. The page object invokes this stage on each control of the \npage. This actually means that the ASP.NET serve r control's HTML markup is sent to the browser.   \n• Unload:  This event occurs for each control. It takes care of cleanup activities like wiping \nthe database connectivities.  \nWEB FORM  \nWeb Forms are the heart and soul of ASP.NET. Web Forms are the User Inter face (UI) elements \nthat give your Web applications their look and feel. Web Forms are similar to Windows Forms in \nthat they provide properties, methods, and events for the controls that are placed onto them.   \nHowever, these UI elements render themselves in  the appropriate markup language required by the \nrequest, e.g., HTML. If you use Microsoft Visual Studio® .NET, you will also get the familiar drag -\nand drop interface used to create your UI for your Web application. Web Forms are made up  \n \n \n97 "" metadata={'source': 'dotnet.pdf', 'page': 96}
"
"page_content='of two compo nents: the visual portion (the ASPX file), and the code behind the form, \nwhich resides in a separate class file.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nThe Purpose of Web Forms   \nWeb Forms and ASP.NET were created to overcome some of the limitations of ASP. These \nnew strengths include:  \n• Separation of HTML interface from application logic  \n• A rich set of server -side controls that can detect the browser and send out appropriate \nmarkup language such as HTML  \n• Less code to write due to the data binding capabilities of the new server -side .NET controls  \n• Event -based programming model that is familiar to Microsoft Visual Basic programmers  \n• Compiled code and support for multiple languages, as opposed to ASP which was interpreted \nas Microsoft Visual Basic Scripting (VBScript) or Microsoft Js cript.  \n•Allows third parties to create controls that provide additional functionality  \n \nThe categories of controls available are as follows:   \n• Standard: Common controls that make up 90 percent of all pages.   \n• Data: Controls used to connect to data sources ( databases or XML files).   \n• Validation: Controls that can be added to a page to validate user input (for example, to \nensure  that certain text boxes contain data or that data has been entered in the correct format).  \n• Navigation: Controls used to provide a sim ple and quick solution to making a site navigable \n(for example, dynamic menus and breadcrumbs of hyperlinks).  \n• Login: A set of controls that make it simple to move from a completely open site to one that \nhas personalized areas.  \n• WebParts: Controls that mak e it possible to create Sharepoint -style sites with dragand -\ndroppable sections, known as Web Parts, which enable the user to rearrange their view of a site.   \n• HTML: Simple HTML elements.   \n12.2. STANDARD CONTROLS   \nStandard Controls are basic controls which are used for designing user interface for \nwebpages. User can input data through various controls on a user interface at the client \nbrowser and can display output through these controls received from the server.   \nHere are some of the most commonly used cont rols which are grouped under the standard \ntab Toolbox:   \n• TextBox control: Used for entering text on a page, commonly seen on order forms on \nshopping  sites, or for logging in to a site.  \n \n \n \n98 ' metadata={'source': 'dotnet.pdf', 'page': 97}
"
"page_content='• Button control: From submitting an order to changing preference s on a web site, clicking \na button on a page normally causes information to be sent to the server, which reacts to that \ninformation and displays a result.  \n• Label control: Used for displaying simple text in a specified position on a page. The Label  \ncontrol is an easy way to change the text on part of a page in response to user interaction.  \n• Hyperlink control: Used for providing hyperlink functionality on a page that enables \nnavigation  to other parts of a site, or to other resources on the Internet.  \n• Image co ntrol: Used for displaying images on a page. The server can change the image that \nis displayed in the control programmatically in response to user input.  \n• DropDown List control: Used for offering the user a list of options to choose from; \ncollapses  when no t in use to save space.  \n• Listbox control: Used for offering a fixed -size list of items to choose from.   \n• CheckBox and Radio Button controls: Used for selecting options with either a yes/no or \n―this  one out of many‖ style, respectively.  \nVALIDATION CONTROLS   \nThese controls make page validation much easier and reduce the amount of code that the \ndeveloper must write to perform page validation. The ASP.NET team reviewed numerous Web \nsites to determine the most common types of validation that were taking place on  the Web. Most \ndevelopers were reinventing the wheel to perform validation, so the ASP.NET team decided that \nWeb developers needed a set of validation controls to add to their toolbox. From the start, these \ncontrols were designed to detect the version of t he browser when used in client -side validation \nand then render the correct version of HTML for that client browser. These research efforts lead \nto the development of the six controls covered in this chapter. The examples in this chapter will \ntake a look at  each control and explain the most commonly used properties for each control. \nHowever, keep in mind that all of the controls share basic properties, such as font, fore color, \nback color, and so on, so this chapter won‘t discuss those properties in detail. Everything in the \n.NET Framework is a class, and the validation controls are no exception.   \nAll validation controls in the .NET Framework are derived from the BaseValidator class. This \nclass serves as the base abstract class for the validation controls and  provides the core \nimplementation for all validation controls that derive from this class. Validation controls \nalways perform validation checking on the server. Validation controls also have complete \nclient -side implementation that allows browsers that sup port DHTML to perform validation \non the client. Client -side validation enhances the validation scheme by checking user input as \nthe user enters data. This allows errors to be detected on the client before the form is \nsubmitted, preventing the round trip ne cessary for server -side validation. In addition, more \nthan one validator may be used on a page to validate different aspects.  \n1. RequiredFieldValidator Control  \nUse the RequiredFieldValidator control when a value is required for an input element \non the Web p age. This control checks whether the value of the associated input control \nis different from its initial value.   \n2. CompareValidator Control  \nUse the CompareValidator control to make sure that a value matches a specified value. \nThis control compares the valu e of an input control to another input control or a constant \nvalue using a variety of operators and types. You can also use this control to make sure \nthat your input value is of a specific type: integer, string, and so on.   \n3. RangeValidator Control  \nUse the  RangeValidator control to determine whether a value falls within the specified \nrange. It checks whether the value of the associated input control is within some \nminimum and maximum, which can be a constant value or the value of another control.   \n4. RegularE xpressionValidator Control  \n \n99 ' metadata={'source': 'dotnet.pdf', 'page': 98}
"
"page_content='Use the RegularExpressionValidator control to check a value against a regular \nexpression. It checks whether the value of the associated input control matches the \npattern of a regular expression.  \n5. CustomValidator Control  \nUse the CustomValidator control to perform user -defined custom validation. This \ncontrol allows custom code to perform validation on the client and/or server.   \n6. ValidationSummary Control  \nUse the ValidationSummary control to capture all the validation errors f rom the other \ncontrols and display them on the page as a list, a bulleted list, or in single paragraph \nformat. The errors can be displayed inline and/or in a pop -up message box.   \n4.4 ADO.NET   \nADO.NET is the new database technology used in .NET platform. ADO. NET is the next step in \nthe evolution of Microsoft ActiveX Data Objects (ADO). It does not share the same \nprogramming model, but shares much of the ADO functionality. The ADO.NET as a marketing \nterm that covers the classes in the System.Data namespace. ADO .NET is a set of classes that \nexpose the data access services of the .NET Framework. ADO.NET is a natural evolution of \nADO and is built around N -Tier  \napplication development. ADO.NET has been created with XML at its core.  \nCONNECTED VS DISCONNECTED  \nFor muc h of the history of computers, the only environment available was the connected \nenvironment. With the advent of the Internet, disconnected work scenarios have become \ncommonplace, and with the increasing use of handheld devices, disconnected scenarios are \nbecoming nearly universal. Laptop, notebook, and other portable computers allow you to use \napplications when you are disconnected from servers or databases. In many situations, people \ndo not work entirely in a connected or disconnected environment, but rath er in an environment \nthat combines the two approaches.  \nConnected   \nA connected environment is one in which a user or an application is constantly connected to a \ndata source. A connected scenario offers the following advantages:  \n• A secure environment is easie r to maintain.  \n• Concurrency is easier to control.  \n• Data is more likely to be current than in other scenarios. \nA connected scenario has the following disadvantages:   \n• It must have a constant network connection.  \n• Scalability   \nDisconnected  \nA disconnected en vironment is one in which a user or an application is not constantly connected \nto a source of data. Mobile users who work with laptop computers are the primary users in \ndisconnected environments. Users can take a subset of data with them on a disconnected \ncomputer, and then merge changes back into the central data store.   \nA disconnected environment provides the following advantages:  \n• You can work at any time that is convenient for you, and can connect to a data source at any \ntime to process requests.  \n• Othe r users can use the connection.  \n• A disconnected environment improves the scalability and performance of applications.  \nA disconnected environment has the following disadvantages:  \n• Data is not always up to date.  \n• Change conflicts can occur and must be resolv ed.  \nADVANTAGES OF ADO.NET   \nADO.NET provides the following advantages over other data access models and components:   \n100 ' metadata={'source': 'dotnet.pdf', 'page': 99}
"
"page_content='Interoperability . ADO.NET uses XML as the format for transmitting data from a data source to \na local in -memory copy of the data.   \nMain tainability . When an increasing number of users work with an application, the increased \nuse can strain resources. By using n -tier applications, you can spread application logic across \nadditional tiers. ADO.NET architecture uses local in -memory caches to ho ld copies of data, \nmaking it easy for additional tiers to trade information.   \nProgrammability . The ADO.NET programming model uses strongly typed data. Strongly typed  \ndata makes code more concise and easier to write because Microsoft Visual Studio .NET \nprovides statement completion.   \nPerformance . ADO.NET helps you to avoid costly data type conversions because of its use \nof strongly typed data.   \nScalability . The ADO.NET programming model encourages programmers to conserve system  \nresources for applications tha t run over the Web. Because data is held locally in in memory \ncaches, there is no need to retain database locks or maintain active database connections for \nextended periods.  \n.NET DATA PROVIDER  \nA .NET data provider is used for connecting to a database, exec uting commands, and retrieving \nresults. Those results are either processed directly, or placed in an ADO.NET DataSet  in order \nto be exposed to the user in an ad -hoc manner, combined with data from multiple sources, or \nremoted between tiers. The .NET data p rovider is designed to be lightweight, creating a minimal \nlayer between the data source and your code, increasing performance without sacrificing \nfunctionality. The ADO.NET object model includes the following data provider classes:   \n1. SQL Server .NET Data Pr ovider  \n2. OLE DB .NET Data Provider  \n3. Oracle .NET Data Provider  \n4. ODBC .NET Data Provider  \n5. Other Native .NET Data Provider  \n1. SQL Server Data Provider: To use the SQL Server .NET Data Provider, you need to \ninclude  the System.Data.SqlClient  namespace in your appl ications. Using this provider is more \nefficient than using the OLE DB .NET Data Provider because it does not pass through an OLE \nDB or Open Database Connectivity (ODBC) layer. It provides optimized access to SQL Server \n2000 and SQL Server 7.0 databases.   \n2. OLE DB Data Provider: To use the OLE DB .NET Data Provider, you need to include \nthe System.Data.OleDb namespace in your applications. .NET Provides access to SQL \nServer  versions 6.5 and earlier. It also provides access to other databases, such as Oracle, \nSybase, DB2/400, and Microsoft Access.   \n3. Oracle .NET Data Provider: To use the Oracle Database, a native Oracle .NET data driver is  \nthe best choice . To use the Oracle .NET Data Provider, you need to include the \nSystem.Data.OracleClient namespace in your app lications. Oracle itself also provides a .NET  \ndata provider, referenced as Oracle.DataAccess.Client. This is a separate download that you \nhave to get from Oracle. Whether you use a .NET data provider from the database vendor or just \nuse the one provided wi th the .NET framework is your choice.   \n4. ODBC .NET Data Provider: If you have a data source for which no native or OLE DB  \nprovider is available, the ODBC .NET data provider is good alternative because most database \nprovide an ODBC interface. It is reference d with this using  directive: System.Data.Odbc    \n5. Other Native .NET Data Provider: If there is a native .NET data provider available  \nspecifically for your database, then you may want to use that .NET data provider instead. \nMany other database vendors and thi rd-party companies provide native   \n.NET data providers; the choice between using the native providers and using something generic \nlike the ODBC provider will depend on your circumstances. If you value portability over  \n \n101 ' metadata={'source': 'dotnet.pdf', 'page': 100}
"
"page_content='performance, then go generic. If you want to get the best performance or make the best use of \na particular database‘s features, go native.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nProgram to Display the content of \nDatabase using System;  \nusing System.Data;  \nusing System.Data.OleDb; \nclass test  \n{ \npublic s tatic void Main()  \n{  \nOleDbConnection conn = new OleDbConnection(@‖Provider = \nMicrosoft.Jet.OLEDB.4.0; Data Source=c: \\lalit\\data.mdb‖);   \nOleDbDataAdapter adp= new OleDbDataAdapter(―Select * from \nemp‖,conn); DataTable tbl =new DataTable();  \nadp.Fill(tbl);   \nforeach(DataRow row in tbl.Rows) \nConsole.WriteLine(―{0,10}{1,10}{2,10}‖,row[0],row[1],row[2]);  \n} \n} \n \n4.5 Distributed Applications   \nDistributed applications are those applications which uses distributed components. Distributed \ncomponents can be accessed across  the network, even thogh it may be different types of \napplication (Web, standalone, PDA‘s etc.). You can increase the scalability of your application \nby making component distributed. Commonly, we have three steps to construct a simple \ndistributed applicati on using C#:  \n \n1. Create remoting  objects, which will either inherit MarshalByRefObject or be serialized.   \n2. Make a host (server) who will provide remoting server using channel for remoting client to \ncall for.  \n3. Make clients  who will call the remote objects on s erver, which will establish a connection \nchannel to the appointed port on server and then using the Well - Known objects.  \n \n102 ' metadata={'source': 'dotnet.pdf', 'page': 101}
"
"page_content=' \nRemote Object   \nA remote object is implemented in a class that derives from System.MarshalByRefObject. A \nclient doesn‘t call the  methods directly; instead a proxy object is used to invoke methods on the \nremote object. Every public method that we define in the remote object class is available to be \ncalled from clients. All the objects passed by value must be serializable.   \nTo create  MyRemoteObject.dll Take .NET IDE New Project ->YourName.Samples (for \nexample, RemotingSamples.cs). (By Default.,Class1.cs will come. Change that file name \nMyRemoteObject.cs.)   \nusing System;   \nusing System.Runtime.Remoting;   \nusing System.Runtime.Remoting.Cha nnels; \nusing System.Runtime.Remoting.Channels.Tcp; \nnamespace RemotingSamples  \n{ \npublic class RemoteObject : MarshalByRefObject  \n{ \n///////////////////////////////////////////////////constructor  \npublic RemoteObject()  \n{ \nConsole.writeline(―Remote object activate d‖); \n}  \n////////////////////////////////////////////////return message \nreply public String ReplyMessage(String msg)  \n{  \nConsole.WriteLine(―Client : ―+msg); \n//print given message on console \nreturn ―Server : Yeah! I‘m here‖;  \n} \n} \n} \n \nThe remote object must be c ompiled as follows to generate remoteobject.dll which is used \nto generate server and client executable.  \n \ncsc /t:library /debug /r:System.Runtime.Remoting.dll RemotingSamples.cs  \n \nServer   \nThe remote object needs a server process where it will be instantiated . This server has to create \na channel and put it into listening mode so that clients can connect to this channel. For creating \nserver, Take .NET IDE -> New Project named ―server‖. This is console application is the \nserver application used to register remote  object to be access by client application. First, of all \nchoose channel to use and register it, supported channels are HTTP, TCP and SMTP. We have \nused here TCP. Then register the remote object specifying its type.  \n \nusing System;   \nusing System.Runtime.Rem oting;  \nusing System.Runtime.Remoting.Channels; \nusing System.Runtime.Remoting.Channels.Tcp; \nnamespace RemotingSamples   \n103 ' metadata={'source': 'dotnet.pdf', 'page': 102}
"
"page_content='{  \npublic class Server  \n{ \n//////////////////////////////////////////////////////////  \n///constructor  \npublic Server()  \n{ \n} \n////////////// ////////////////////////////////////////////  \n///main method  \npublic static int Main(string [] args)  \n{  \n//select channel to communicate TcpChannel \nchan = new TcpChannel(8085);  \nChannelServices.RegisterChannel(chan); //register channel //register remote object  \nRemotingConfiguration.RegisterWellKnownServiceType( Type.GetType(―RemotingSamples.RemoteObject,object‖), \n―RemotingServer‖, WellKnownObjectMode.SingleCall); //inform console  \nConsole.WriteLine(―Server \nActivated‖); return 0;  \n} \n} \n} \nThe server must be compiled  as follows to produce server.exe.   \ncsc /debug /r:remoteobject.dll /r:System.Runtime.Remoting.dll server.cs  \n \nClient   \nThis is the client application and it will call remote object method. First, of all client must \nselect the channel on which the remote obje ct is available, activate the remote object and then \ncall proxy‘s object method return by remote object activation.  \nusing System;  \nusing System.Runtime.Remoting;  \nusing System.Runtime.Remoting.Channels; \nusing System.Runtime.Remoting.Channels.Tcp; \nusing Remot ingSamples;  \nnamespace RemotingSamples  \n{ \npublic class Client  \n{ \n///////////////////////////////////////////////////////////  \n///constructor  \npublic Client()  \n{ \n} \n//////////////////////////////////////////////////////////  \n///main method  \npublic static int Main(st ring [] args)   \n{ \n \n104 ' metadata={'source': 'dotnet.pdf', 'page': 103}
"
"page_content='//select channel to communicate with server \nTcpChannel chan = new TcpChannel(); \nChannelServices.RegisterChannel(chan); \nRemoteObject remObject = (RemoteObject)  \nActivator.GetObject(typeof(RemotingSamples.RemoteObject),   \n―tcp://localhos t:8085/RemotingServer‖); \nif (remObject==null)  \nConsole.WriteLine(―cannot locate \nserver‖); else  \nremObject.ReplyMessage(―You \nthere?‖); return 0;  \n} \n} \n} \nThe client must be compiled as follows in order to produce client.exe \ncsc/debug/r:remoteobject.dll /r:System .Runtime.Remoting.dll client.cs  \n \nAdvantage and Disadvantage of Remoting  \n \nLease -Based Lifetime   \nDistributed garbage collection of objects is managed by a system called ‗leased based lifetime‘. \nEach object has a lease time, and when that time expires the obj ect is disconnected from the \n.NET runtime remoting infrastructure. Net remoting takes a lease -base lifetime of the object \nthat is scalable.  \nCall Context  \nAdditional information can be passed with every method call that is not part of the argument \nwith the h elp of SOAP Header.  \nDistributed Identities   \nIf we pass a reference to a remote object, we will access the same object using this reference.  \nAdvantage Over Web Services  \n1. It works using purely Common Type System.  \n2. It supports high speed binary over top/ip com munication.   \nAdvantage Over COM/DCOM  \n1. It does no have extra interface language (IDL)  \n2. It works using purely managed code  \n3. It‘s using Common Type System. No Safearrays etc  \nDisadvantages  \n1. It is not an open standard like web services.  \n2. It is not as widesprea d and established ad DCOM.  \n3. Less support for transactions, load balancing compared with DCOM.  \n4.6 Unsafe Mode   \nWhen you want to compile program using command line switch you type the program name after \nthe compiler name; for example if your program name i s prog1.cs then you will compile this:  \ncsc prog1.cs   \nThis works fine for safe code while you are programming. Microsft added one more switch to \ncommand line compiler of C# for writing unsafe code. Now if you want to write unsafe code \nthen you have to speci fy the /unsafe command line switch with command line compiler \notherwise the compiler gives an error. if you want to write unsafe code in your program then \nyou compile your programas follows:  \n \n105 ' metadata={'source': 'dotnet.pdf', 'page': 104}
"
"page_content=""csc /unsafe prog1.cs   \nHere prog1.cs  is the name of the prog ram. If you compile your program which has unsafe \ncode without using the /unsafe switch then compiler gives error.  \n \nTo set this compiler option in the Visual Studio development environment following steps \nare required :   \n\uf0b7 Open the project's Properties  page.  \uf020\uf020\n\uf0b7 Click the Build  property page. \uf020\uf020\n\uf0b7 Select the Allow Unsafe Code  check box. \uf020\n\uf020\n4.7 GDI APPLICATIONS   \nUsing Graphical Device Interface (GDI) objects in earlier versions of Visual Studio was a pain. \nIn Visual Studio .NET, Microsoft has taken care of most of the GDI problems and have made it \neasy to use. GDI+ is the next evolution of GDI in .NET Visual Studio. GDI+ resides in  \nSystem.Drawing.dll assembly. All GDI+ classes are reside in the  System.Drawing , \nSystem.Text , System.Printing , System.Internal , System.Imagin g, System.Drawing2D and \nSystem.Design namespaces.   \nThe first class we must discuss is the Graphics  class. After the Graphics class, we will \ndiscuss other useful GDI+ classes and structures such as Pen, Brush, and Rectangle.  \nThe Graphics Class   \nThe Graphics  class encapsulates GDI+ drawing surfaces. Before drawing any object ( for example \ncircle, or rectangle ) we have to create a surface using Graphics class. Generally we use Paint event of \na Form to get the reference of the graphics. Another way is to overr ide OnPaint  method.   \nHere is how you get a reference of the Graphics object:   \nprivate void form1_Paint(object sender, PaintEventArgs e)   \n{ \nGraphics g = e.Graphics;  \n} \nOR \nprotected override void OnPaint(PaintEventArgs e)  \n{ \nGraphics g = e.Graphics;  \n} \n \nOnce yo u have the Graphics reference, you can call any of this class‘s members to draw \nvarious objects. Here are some of Graphics class‘s methods:  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n106 "" metadata={'source': 'dotnet.pdf', 'page': 105}
"
"page_content=' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nAfter creating a Graphics  object, you can use it draw lines , fill shapes, draw text and so on. \nThe major objects are:  \n \n \n \n \n \n \n \n \n \n \n \n \nExample of Drawing an Arc   \nDrawArc function draws an arc. This function takes four arguments. First is the Pen. You \ncreate a  pen by using the Pen class. The Pen constructor takes at le ast one argument, the color \nor the brush of the pen. Second argument width of the pen or brush is optional.  \n \nPen pn = new Pen(Color.Blue); or Pen pn = new Pen(Color.Blue, 100);  \n \n \n \n \n \n107 ' metadata={'source': 'dotnet.pdf', 'page': 106}
"
"page_content=' The second argument is a rectangle. You can create a rectangle by u sing Rectangle structure. \nThe Rectangle constructor takes four int type arguments and they are left and right corners of \nthe rectangle.  \nRectangle rect = new Rectangle(50, 50, 200, 100); \nprotected override void OnPaint(PaintEventArgs pe)  \n{ \nGraphics g = pe.G raphics ;  \nPen pn = new Pen( Color.Blue );  \nRectangle rect = new Rectangle(50, 50, 200, 100); \ng.DrawArc( pn, rect, 12, 84 );  \n} The output looks like figure  \n108 ' metadata={'source': 'dotnet.pdf', 'page': 107}
"
"page_content="" \nUNIT -5  \nAssemblies and Attributes  \n \n5.1 Assemblies   \nWhat is an assembly?   \n\uf0b7 An Assembly is a logica l unit of code \uf020 \uf020\n\uf0b7 Assembly physically exist as DLLs or EXEs \uf020\n\uf0b7 One assembly can contain one or more files \uf020\n\uf0b7 The constituent files can include any file types like image files, text files etc. along \nwith DLLs or EXEs \uf020\n\uf0b7 When you compile your source code by default  the exe/dll generated is actually \nan assembly \uf020\n\uf0b7 Unless your code is bundled as assembly it can not be used in any other application \uf020\n\uf0b7 When you talk about version of a component you are actually talking about version of \nthe assembly to which the component be longs. \uf020\n\uf0b7 Every assembly file contains information about itself. This information is called \nas Assembly Manifest. \uf020\nWhat is assembly manifest?   \n\uf0b7 Assembly manifest is a data structure which stores information about an assembly \uf020 \uf020\n\uf0b7 This information is stored withi n the assembly file(DLL/EXE) itself \uf020\n\uf0b7 The information includes version information, list of constituent files etc. \uf020\nWhat is private and shared assembly?   \nThe assembly which is used only by a single application is called as private assembly. Suppose \nyou crea ted a DLL which encapsulates your business logic. This DLL will be used by your \nclient application only and not by any other application. In order to run the application properly \nyour DLL must reside in the same folder in which the client application is in stalled. Thus the \nassembly is private to your application.   \nSuppose that you are creating a general purpose DLL which provides functionality which will \nbe used by variety of applications. Now, instead of each client application having its own copy \nof DLL y ou can place the DLL in 'global assembly cache'. Such assemblies are called as \nshared assemblies.  \nWhat is Global Assembly Cache?  \nGlobal assembly cache is nothing but a special disk folder where all the shared assemblies will \nbe kept. It is located under <d rive>: \\WinNT \\Assembly folder.  \nHow assemblies avoid DLL Hell?   \nAs stated earlier most of the assemblies are private. Hence each client application refers \nassemblies from its own installation folder. So, even though there are multiple versions of same \nassemb ly they will not conflict with each other. Consider following example :   \n\uf0b7 You created assembly Assembly1 \uf020 \uf020\n\uf0b7 You also created a client application which uses Assembly1 say Client1 \uf020\n\uf0b7 You installed the client in C:\\MyApp1  and also placed Assembly1 in this folder  \uf020\n\uf0b7 After some days you changed Assembly1 \uf020\n\uf0b7 You now created another application Client2 which uses this changed Assembly1 \uf020\n\uf0b7 You installed Client2 in C:\\MyApp2  and also placed changed Assembly1 in this folder \uf020\n\uf0b7 Since both the clients are referring to their own v ersions of Assembly1 everything goes \non smoothly \uf020\n \n109 "" metadata={'source': 'dotnet.pdf', 'page': 108}
"
"page_content='Now consider the case when you develop assembly that is shared one. In this case it is important \nto know how assemblies are versioned. All assemblies has a version number in the form:  \nmajor.minor.buil d.revision  \nIf you change the original assembly the changed version will be considered compatible \nwith existing one if the major and minor versions of both the assemblies match.   \nWhen the client application requests assembly the requested version number is matched \nagainst available versions and the version matching major and minor version numbers and \nhaving most latest build and revision number are supplied.  \nHow do I create shared assemblies?  \nFollowing steps are involved in creating shared assemblies :  \n3) Creat e your DLL/EXE source code   \n4) Generate unique assembly name using SN utility   \n5) Sign your DLL/EXE with the private key by modifying AssemblyInfo  file  \n6) Compile your DLL/EXE   \n7) Place the resultant DLL/EXE in global assembly cache using GAC utility    \nHow do I creat e unique assembly name?  \nMicrosoft now uses a public -private key pair to uniquely identify an assembly. These keys are  \ngenerated using a utility called SN.exe (SN stands for shared name). The most common syntax \nof is :  \nsn -k mykeyfile.snk   \nWhere k represe nts that we want to generate a key and the file name followed is the file in \nwhich the keys will be stored.  \nHow do I sign my DLL/EXE?   \nBefore placing the assembly into shared cache you need to sign it using the keys we just \ngenerated. You mention the signi ng information in a special file called AssemblyInfo. Open the \nfile from VS.NET solution explorer and change it to include following lines :  \n[assembly:AssemblyKeyFile(""file_path"")]  \nNow recompile the project and the assembly will be signed for you.  \nNote : Y ou can also supply the key file information during command line compilation via \n/a.keyfile switch.  \nHow do I place the assembly in shared cache?   \nMicrosoft has provided a utility called AL.exe to actually place your assembly in shared cache.  \nGACUtil /i my_d ll.dll \nNow your dll will be placed at proper location by the utility.  \nHands On...   \nNow, that we have understood the basics of assemblies let us apply our knowledge by \ndeveloping a simple shared assembly.  \nIn this example we will create a C#.NET component ca lled SampleGAC  ( GAC stands for \nGlobal Assembly Cache). We will also create a key file named sample.snk.  We will sign our \ncomponent with this key file and place it in Global Assembly Cache.  \n\uf0b7 Step 1 : Creating our sample component   \nHere is the code for the  component. It just includes one method which returns a \nstring. using System;  \nnamespace BAJComponents  \n{ \npublic class Sample  \n{ \npublic string GetData()  \n{ \nreturn ""hello world"";  \n \n110 ' metadata={'source': 'dotnet.pdf', 'page': 109}
"
"page_content='}  \n} \n} \n\uf0b7 Step 2 : Generate a key file  \nTo generate the key file issue followi ng command at command \nprompt. sn -k sample.snk  \nThis will generate the key file in the same folder  \n\uf0b7 Step 3 : Sign your component with the key \nusing System; \n[assembly:AssemblyKeyFile(―C: \\Sample.snk‖)] \nnamespace BAJComponents  \n{ \npublic class Sample  \n{ \npublic s tring GetData()  \n{ \nreturn ""hello world"";  \n} \n} \n} \n\uf0b7 Step 4 : Compile your file again  \ncsc /out:sampleGAC.dll /target:library sampleGAC.cs  \n\uf0b7 Step 4 : Host the signed assembly in Global Assembly Cache  \nWe will use GAC utility to place the assembly in Global Assemb ly \nCache. GACUtil /i sampleGAC.dll  \nAfter hosting the assembly just go to WINNT \\Assembly folder and you will find your \nassembly listed there. Note how the assembly folder is treated differently that normal folders.  \n\uf0b7 Step 5 : Test that our assembly works   \nNow, we will create a sample client application which uses our shared assembly. Just create \na sample code as listed below :  \nusing System;   \nusing BAJComponents; \npublic class SampleTest  \n{ \npublic static void Main()  \n{  \nSample x = new sample() \nstring s =x.GetDat a() \nConsole.WriteLine(s)  \n}  \n} \n \nCompile above code using :   \ncsc sampletest.cs /t:exe /r:<assembly_dll_path_here>   \nNow, copy the resulting EXE in any other folder and run it. It will display ""Hello \nWorld"" indicating that it is using our shared assembly.  \n \n \n \n \n \n \n111 ' metadata={'source': 'dotnet.pdf', 'page': 110}
"
"page_content='5.2 GENERICS   \nGenerics are a new feature in the .Net framework 2.0+ which make it possible to design classes \nand methods that do not specify data types until the class or method is declared and instantiated \nby client code.   \nGenerics are supplied by  the System.Collection.Generics namesapce.  \nNullable Types  \nSystem.Nullable<int> a;   \n―a‖ can have an int value as well as ―null‖ value. \nMeans: a = null; // valid statement.  \nYou can test nullable types like \nas: if( a == null) \n{ \n} \nOR \nif( a. HasValue ) \n{ \n} \nThe sh ort hand of System.Nullable<int>  is simply int? .  So you can use like \nas: int? a; instead of  System.Nullable<int> a;  \nSome problem with \ncode: int? op1 = 5;   \nint result = op1 * 2; \nwill not compile.   \nTo get result use following \ncode: int? op1 = 5;   \nint result  = (int) op1 * \n2; or \nint result = op1.Value * 2;  \n-----------------------------------  \nint? op1 = null; \nint? op2 = 5;  \nint? result = op1 * op2; \nresult = null  \nBy using a generic type parameter you can write a single class that other client code can \nuse without  incurring the cost or risk of casts or boxing operations.  \nThe ?? Operator ( null coalescing operator )  \nit is a binary operator that enables you to supply an alternative value to use for expresions \nthat might evaluate null   \nop1 ?? op2; \nequivalent   \nop1 == nu ll ? op2 : op1 ;  \n \nint? op1 = null;   \nint result = op1 * 2 ?? \n5; result = 10  \n \nGENERIC METHOD \nusing System;   \nusing System.Collections.Generic;  \n \n \n112 ' metadata={'source': 'dotnet.pdf', 'page': 111}
"
"page_content='class Generics   \n{ \nstatic void Main(string[] args)  \n{  \n// create arrays of various types \nint[] intArray = { 1, 2, 3, 4, 5, 6 };   \ndouble[] doubleArray = { 1.0, 2.0, 3.0, 4.0, 5.0 \n}; char[] charArray = { \'A\', \'B\', \'C\', \'D\', \'E\' };  \n \nDisplayArray(intArray);   \nDisplayArray(doubleArray);   \nDisplayArray(charArray);  \n \nConsole.ReadLine();   \n} \n \n// generic method displays array o f any type \nstatic void DisplayArray<E>(E[] array)  \n{  \nConsole.WriteLine(""Display array of type "" + array.GetType() + \n"":""); foreach (E element in array)  \nConsole.Write(element + "" "");  \n} \n} \n \nGENERIC CLASS \nusing System;   \nusing System.Collections.Generic;  \n \nclass Generics   \n{ \nstatic void Main(string[] args)  \n{ \nMyGeneric<int> mygenericint = new \nMyGeneric<int>(); mygenericint.GenericField = 13; \nmygenericint.GenericMethod(42);  \n \nMyGeneric<string> mygenericstring = new \nMyGeneric<string>(); mygenericstring.GenericField = "" xxx""; \nmygenericstring.GenericMethod(""xxx"");  \n \n// These lines will cause a compile error   \nMyGeneric<int> mygenericint2 = new \nMyGeneric<int>(); mygenericint2.GenericField = ""xxx""; \nmygenericint2.GenericMethod(""xxx"");  \n} \n} \n \npublic class MyGeneric<T>   \n{ \n \n113 ' metadata={'source': 'dotnet.pdf', 'page': 112}
"
"page_content='public T GenericField;   \npublic void GenericMethod(T t)  \n{ \nConsole.WriteLine(""GenericMethod parameter type: "" + t.GetType());  \n}  \n} \n \n \n \n5.3 Attributes   \nIntroduction   \nUsinng an attribute is a way to add special meaning to our method and cause it to act in a certa in \nway. Before this was available, developers didn\'t have a way to define their own attributes. \nDotNet paved the way for developers and opened new horizons to conquer. Attributes are like \nadding behaviours to methods, classes, properties structures, events , modules, and so forth. It \nmeans we can enforce certain constraints on those methods, classes, properties and vice -versa to \nbehave in the way specify to them.   \nOne more added feature is that, before DotNet, if we made a class or DLL and a newer version \ncame along, the older version that should be removed or should not be used still exists. This \ncauses a problem called DLL Hell. DotNet solved this problem by the concept of versioning. \nThis means that the same DLL with the same name, containing some new meth ods with older \nmethods can co -exist with a different version number.  \nLet us start to learn to use attributes in C# code:  \nCase 1  \nI had a method in my old DLL. Now, I have updated my DLL and added two new methods \nand one new method that is the upgraded versi on of previous DLL.  \n \nWhat should happen is that my previous programs that use this DLL should work properly. Or, \nif I intend to use the old method in the new program, it should tell me that the old method is \nobsolete and I should use the new method.   \nBefor e DotNet, this wasn\'t possible. DotNet has removed this hurdle from the path of \ndevelopers. Let us see how can we do this stuff:   \nUsing System; \nNamespace MyExample  \n{ \nClass MyAttribute  \n{ \n[Obsolete()]  \npublic static void SaySomething(string str)  \n{ \nConsole.Wri teLine(str);  \n} \npublic static void Talk(string str)  \n{ \nConsole.WriteLine(str);   \n} \n \nstatic void Main()   \n{ \nSaySomething(""Hello to Sufyan"");  \n \n114 ' metadata={'source': 'dotnet.pdf', 'page': 113}
"
"page_content='Console.ReadLine();   \n} \n} \n}  \nHere, when we call SaySomething(""Hello to Sufyan""), it will execute the code but in th e \noutput window a warning message will be displayed, showing us that the SaySomething \nmethod is obsolete.   \nStill, it doesn\'t ask us to use the new talk method SaySomething instead. To display a \ncustomized message, we will customize the obsolete attribute l ike this:  \n[Obsolete(""SaySomething() method is now \nObsolete. Please use Talk()"")]  \nBy using this approach, we can add additional meaning to our attribute.   \nNote: We can have multiple attribute statements before a method or class. In such  \ncases, if one of the  statements is true, it will allow access to that particular method.  \nThere are many attributes that come with DotNet.  \n\uf0b7 Conditional \uf020 \uf020\n\uf0b7 DllImport \uf020\n\uf0b7 Obsolete \uf020\n\uf0b7 Serializable \uf020 \uf020\nConditional attribute \uf020\nBy using the Conditional attribute, we are following a scenario t hat if a particular condition is \ntrue, the user will have access to that specific method. Suppose you wanted your specific method \nto run only if Internet Explorer is found on the system. Applying this type of security on a \nmethod was not easy in the past. Now, it is possible by applying conditional attributes. \uf020 \uf020\nCase 2 \uf020\nSuppose you want a method to run if program is in Debug mode. We will write the conditional \uf020\nstatement as follows: \n[Conditional(.DEBUG.)]  \npublic static void Help(String str)  \n{ \nConsole.WriteL ine(str);  \n}  \nIf one calls this method in Main(), it will run only if the program is in Debug mode. If you turn \nit off in the release mode, it will not run.  \nDLL Import   \nBefore DotNet, if one wanted to access the core Windows API, he could add a reference an d use \nthe library provided by Windows SDK. In DotNet, if we want to access those core features of \nDotNet, we use DllImport. Component DLLs aren\'t accessed this way. They are accessed by \nmaking a reference to them. Normal DLLs are accessed by using the DllI mport attribute.  \nCase 3   \nusing System; \nSystem.Runtime.InteropServices; \nclass Beeper  \n{ \n[DllImport(.kernel32.dll.)]  \nPublic static extern bool Beep(int frequency,int \nduration); static void Main()  \n{ \nBeep(1000,111);  \n} \n \n115 ' metadata={'source': 'dotnet.pdf', 'page': 114}
"
"page_content='}  \nSo far, we have learned how to use  attributes in DotNet. Still, we haven\'t learn how to create \nour own custom attributes with specified behaviour that we assign.  \nSteps in Creating a Custom Attribute  \n1. Define the attribute\'s usage.  \n2. Extend our class with AttributeClass.  \n3. Define the behaviours  to the class. \nAttribute behaviours can be of these types:   \n\uf0b7 All—Any application element \uf020 \uf020\n\uf0b7 Assembly —Attribute can be applied to an assembly \uf020\n\uf0b7 Class —Attribute can be applied to a class \uf020\n\uf0b7 Constructor —Attribute can be applied to a constructor \uf020\n\uf0b7 Delegate —Attribut e can be applied to a delegate \uf020\n\uf0b7 Enum —Attribute can be applied to an enumeration \uf020\n\uf0b7 Event —Attribute can be applied to an event \uf020\n\uf0b7 Field —Attribute can be applied to a field \uf020\n\uf0b7 Interface —Attribute can be applied to an interface \uf020\n\uf0b7 Method —Attribute can be applied to a  method \uf020\n\uf0b7 Module —Attribute can be applied to a module \uf020\n\uf0b7 Parameter —Attribute can be applied to a parameter \uf020\n\uf0b7 Property —Attribute can be applied to a property \uf020\n\uf0b7 ReturnValue —Attribute can be applied to a return value \uf020\n\uf0b7 Struct —Attribute can be applied to a structure  \uf020  \nThe second step is to extend the class with the Attribute class. Basically, our attribute is a class \nthat defines the behaviours of our attribute. For example:  \n...  \npublic class \nMySpecialAttribute:Attribute {...   \nA point to be noted here is that the nam e of Attribute we are going to make is MySpecial. \nWe didn\'t suffix the word Attribute after MySpecial. DotNet automatically suffixed it.  \nLet us create a sample custom attribute that will execute the method if the regKey provided to \nthe Attribute parameter is correct:  \nusing System;  \nnamespace RegKeyAttributeTestor  \n{ \n[AttributeUsage(AttributeTargets.Method|AttributeTargets.Struct,   \nAllowMultiple=false,Inherited=false] \npublic class MyAttribute:Attribute  \n{ \nprivate string regKey=""a12nf""; \npublic MyAttribute(string  regKey)  \n{ \nif(this.regKey==regKey)  \n{ \nConsole.WriteLine(""Permitted to use this App"");  \n} \nelse \n{  \nConsole.WriteLine(""Not registered to use this \nApp""); 116  ' metadata={'source': 'dotnet.pdf', 'page': 115}
"
"page_content='}  \n}  \n} //End Attribute class code \nclass useAttrib  \n{ \n[MyAttribute(""hello"")]  \npublic static string SayHello(string str)  \n{ \nreturn str;  \n} \nstatic void Main()  \n{  \nConsole.WriteLine(SayHello(""Hello to \nSufyan"")); Console.ReadLine();  \n}  \n} \n \n}  \nAttributeUsage(AttributeTargets.Method|AttributeTargets.Struct, \nAllowMultiple=false, Inherited=fals e)]  \nHere, multiple Attribute targets are declared by using ""|"" between different targets. Allows \nmultiple=false means multiple attributes can be used with this attribute. Inherited=false shows \nthat if some class extends a class that uses this attribute an d calls a method that is bound to this \nattribute, that class has no access to this attribute unless this property is set to true.  \nReading Metadata from Assemblies  \nWe first write our custom \nattribute: using System;  \n \nnamespace Sufyan   \n{ \n[AttributeUsage(Attri buteTargets.Method,AllowMultiple=false,  \nInherited=false)]  \npublic class RegKeyAttribute : Attribute  \n{ \nprivate string regKey;  \n \npublic RegKeyAttribute(string VRegKey)   \n{  \nthis.regKey = VRegKey; \nif (this.regKey==.hello.)  \n{ \nConsole.WriteLine(""Aha! You\'re Regist ered"");  \n} \nelse \n{ \nConsole.WriteLine(""Oho! You\'re not Registered"");  \n} \n} \n} \n} \n \n117 ' metadata={'source': 'dotnet.pdf', 'page': 116}
"
"page_content='Now, we shall write our code to reference it through Assembly;.   \nSteps   \nFirst, compile the first example as a Class library; it will generate a .dll file. We will place this \n.dll file in the bin folder of our second example we are going to make now.  \nusing System;   \nusing System.Reflection; \nusing Sufyan;  \n \nnamespace AdvancedDotNet1   \n{ \nclass Classic  \n{ \nstatic void Main(string[] args)  \n{ \nAssembly suf = Assembly.Load(""RegKey""); \nType KIA =suf.GetType(); \n[]KO=Attribute.GetCustomAttributes(KIA); \nObject Regist =KO[0]; \nConsole.WriteLine(""Registeration Code is :""+   \nRegist.ToString() ); \nConsole.ReadLine();  \n} \n} \n} \nSystem.Reflection is used to retrieve info from the assembly metadata.  \nTo use this i n another class, verify that a specific method will execute if that particular developer \nis registered with me and I have issued him the license key to use.  \nclass useAttrib  \n{ \n[RegKeyAttribute (""hello"")]  \npublic static string SayHello(string str)  \n{ \nreturn st r; \n} \nstatic void Main()  \n{  \nConsole.WriteLine(SayHello(""Hello to \nSufyan"")); Console.ReadLine();  \n} \n} \nHave a close look at this code. I have provided the Hello string as a parameter to the \nattribute. When we run this application, if we pass a string other the n ""hello"", it will say that \nyou are not registered. We can further modify it according to our need.  \n \n \n \n \n \n \n \n \n \n \n118 \n ' metadata={'source': 'dotnet.pdf', 'page': 117}
"
